From oka.ayumi@po.ntt-tx.co.jp Tue Jun 25 15:50:31 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTN002MC708Y6F0@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Tue, 25 Jun 2019 15:50:32 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTN00W16708WT00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Tue,
 25 Jun 2019 15:50:32 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTN00TQD708WC10@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Tue,
 25 Jun 2019 15:50:32 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf101.ddreams.local (Postfix) with ESMTP id B55827E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Tue, 25 Jun 2019 15:50:32 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id B2CAA8E6055	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Tue, 25 Jun 2019 15:50:32 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id B128B8E605C	for <yamashita.hideyuki@ntt-tx.co.jp>; Tue,
 25 Jun 2019 15:50:32 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 561A38E6058	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Tue, 25 Jun 2019 15:50:32 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf101.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Tue,
 25 Jun 2019 15:50:32 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5P6oWeC032550;	Tue,
 25 Jun 2019 15:50:32 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5P6oWhE032549;	Tue, 25 Jun 2019 15:50:32 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5P6oWNh032539;	Tue, 25 Jun 2019 15:50:32 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5P6oVK1007842; Tue,
 25 Jun 2019 15:50:31 +0900
Received: from tdcweb2.localdomain ([10.107.201.92])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5P6oVfG007835; Tue,
 25 Jun 2019 15:50:31 +0900
Received: by tdcweb2.localdomain (Postfix, from userid 48)	id 8FDEAC1EAE; Tue,
 25 Jun 2019 15:50:31 +0900 (JST)
Date: Tue, 25 Jun 2019 15:50:31 +0900
From: oka.ayumi@po.ntt-tx.co.jp
To: takahashi.yusuke@po.ntt-tx.co.jp, ogura.hiroyuki@po.ntt-tx.co.jp,
 morohoshi.takasuke@po.ntt-tx.co.jp, oono.yuichi@po.ntt-tx.co.jp,
 mitsuhashi.masaru@po.ntt-tx.co.jp, adachi.toshimasa@po.ntt-tx.co.jp,
 tobe.yutaro@po.ntt-tx.co.jp, katoh.tatsuo@po.ntt-tx.co.jp,
 kokubo.yuichi@po.ntt-tx.co.jp, nomura.yukihiro@po.ntt-tx.co.jp,
 tajima.tsuneyasu@po.ntt-tx.co.jp, gotoh.koyu@po.ntt-tx.co.jp,
 ohtsuka.kazuki@po.ntt-tx.co.jp, ishii.hiroyuki@po.ntt-tx.co.jp,
 watanabe.naoto@po.ntt-tx.co.jp, uzawa.toshio@po.ntt-tx.co.jp,
 mizutani.yuma@po.ntt-tx.co.jp, yamashita.hideyuki@po.ntt-tx.co.jp,
 fujiwara.ryuki@po.ntt-tx.co.jp, uda.youichi@po.ntt-tx.co.jp,
 isahai.yuta@po.ntt-tx.co.jp, goto.kazuyuki@po.ntt-tx.co.jp,
 nakayama.koji@po.ntt-tx.co.jp, ito.eiji@po.ntt-tx.co.jp,
 osanai.hitoshi@po.ntt-tx.co.jp, nakajima.shinya@po.ntt-tx.co.jp,
 hirakawa.yuya@po.ntt-tx.co.jp, fukazu.satsuki@po.ntt-tx.co.jp,
 yasuda.wataru@po.ntt-tx.co.jp, oohara.kenji@po.ntt-tx.co.jp,
 fukuda.yasuhito@po.ntt-tx.co.jp, takeuchi.mitsuharu@po.ntt-tx.co.jp,
 miki.ryo@po.ntt-tx.co.jp, uehara.yasuyoshi@po.ntt-tx.co.jp,
 koyanagi.tatsuya@po.ntt-tx.co.jp, takemura.akio@po.ntt-tx.co.jp,
 jincho.takahiro@po.ntt-tx.co.jp, kumagai.hiroyuki@po.ntt-tx.co.jp,
 mizutani.keisuke@po.ntt-tx.co.jp, kimura.yoshihisa@po.ntt-tx.co.jp,
 watanabe.yohei@po.ntt-tx.co.jp, iyama.takahiro@po.ntt-tx.co.jp,
 morikawa.takeshi@po.ntt-tx.co.jp, nishizono.naoto@po.ntt-tx.co.jp,
 murai.wataru@po.ntt-tx.co.jp, nagae.akihiko@po.ntt-tx.co.jp,
 hino.tatsuya@po.ntt-tx.co.jp, suzuki.kazuho@po.ntt-tx.co.jp,
 nishioka.kou@po.ntt-tx.co.jp, kawasaki.keiichiro@po.ntt-tx.co.jp,
 iijima.daichi@po.ntt-tx.co.jp, ishizaka.norihira@po.ntt-tx.co.jp,
 kawada.kazuhisa@po.ntt-tx.co.jp, uekado.takahiro@po.ntt-tx.co.jp,
 mori.masaki@po.ntt-tx.co.jp, suzuki.akira@po.ntt-tx.co.jp
Message-id: <redmine.issue-1502.20190625065029.48b387f7596e8522@po.ntt-tx.co.jp>
References: <redmine.issue-1502.20190625065029@po.ntt-tx.co.jp>
Subject: =?UTF-8?Q?[=E7=AE=A1=E7=90=86=E7=B0=BF_-?=
 =?UTF-8?Q?_=E6=94=AF=E6=8F=B4=E4=BE=9D=E9=A0=BC_#1502]?=
 =?UTF-8?Q?_=28=E6=96=B0=E8=A6=8F=29?=
 =?UTF-8?Q?_PostgreSQL=E3=81=AE=E3=83=81=E3=83=A5=E3=83=BC=E3=83=8B=E3=83=B3=E3=82=B0=E3=81=AB=E3=81=A4=E3=81=84=E3=81=A6?=
MIME-version: 1.0
Content-type: text/plain; charset=UTF-8
X-Redmine-Project: techpro-support
X-Redmine-Issue-Id: 1502
X-Redmine-Issue-Author: Redmine
X-Redmine-Sender: Redmine
X-Mailer: Redmine
X-Redmine-Host: www.tdc.ntt-tx.co.jp/techpro_contact
X-Redmine-Site:
 =?UTF-8?Q?=E3=82=88=E3=82=8D=E3=81=9A=E7=9B=B8=E8=AB=87=E3=83=81=E3=82=B1=E3=83=83=E3=83=88=E7=AE=A1=E7=90=86=28=E6=97=A7?=
 =?UTF-8?Q?_=E3=83=86=E3=82=AF=E3=83=8B=E3=82=AB=E3=83=AB=E3=83=97=E3=83=AD=E3=83=95=E3=82=A7=E3=83=83=E3=82=B7=E3=83=A7=E3=83=8A=E3=83=AB=29?=
X-Auto-Response-Suppress: OOF
Auto-submitted: auto-generated
List-Id: <oka.ayumi.po.ntt-tx.co.jp>
X-TM-AS-MML: No
Content-transfer-encoding: 8bit
X-MIME-Autoconverted: from base64 to 8bit by pomail01.silk.ntt-tx.co.jp id
 x5P6oWNh032539
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

チケット #1502 が チケット作成 自動化 によって報告されました。

----------------------------------------
支援依頼 #1502: PostgreSQLのチューニングについて
http://www.tdc.ntt-tx.co.jp/techpro_contact/issues/1502

* 作成者: チケット作成 自動化
* ステータス: 新規
* 優先度: 高め
* 担当者: 
* 対象バージョン: 2019年度
* 相談元BU: WS2BU
* 相談元氏名: 豊田範哲
* 相談元メールアドレス: toyoda.noriaki@po.ntt-tx.co.jp
* PJ名称: CNW13次1期投資開発（フレームワーク更改）
* PJコード: 501006001
* PJの現在の工程: 総合試験
* 分野: 
* 守秘に配慮すべきこと: 
* 支援のまとめ（報告用）: 
* 稼働負担: 可能
* システム名: CNW
* 製品名・OS・バージョン: PostgreSQL(9.5.6)
* お客様: NTT西日本
* 　　対応者　　: 
* 参照: 
* 助かり時間（H）: 
* 迅速性: 
* 適切性: 
* 役立ち度: 
* お助かり時間以外の効果: 
* 支援をうけた感想: 
* 改善要望、提案、コメントなど: 
* お助かり時間(OSSC): 
* 対応稼働: 
----------------------------------------
Apache - Tomcat(9.0.6)（Macchinetta） - PostgreSQL(9.5.6)
の構成のWebシステムで、現在性能試験を実施しています。
PostgreSQLのメモリの使用量について少し疑問があるので、教えてください。

【現象】
PostgreSQL側の設定は、
　work_mem = 20MB
　shared_buffers = 3277MB
としており、実際には32GBのメモリを搭載しています。
Spring側のDB接続の設定値は
　　<property name=\"maxTotal\" value=\"15\" />
　　<property name=\"maxIdle\" value=\"15\" />
　　<property name=\"minIdle\" value=\"0\" />
　　…
　　<property name=\"timeBetweenEvictionRunsMillis\" value=\"30000\" />
　　<property name=\"minEvictableIdleTimeMillis\" value=\"60000\" />
としております。

Jmeterで負荷をかけると、DBサーバのメモリがPostgreSQLのプロセスによって消費されるのですが、最大で1.3GB×15プロセス程度になり、この状態がJmeterを実行している間ずっと続きます。（Jmeterは2～3秒毎にアクセス×100ユーザの負荷をかけています。）

【質問】
1.PostgreSQLの個々プロセスが、1.3GBも消費するのはどこかの設定で避けられないのでしょうか？

2.Jmeterのシナリオの最初のほうにだけ複雑なSQLを実行する機能があります。このとき一時的にメモリを消費するのは理解するのですが、この機能が終わった後もメモリが確保され続けているように見えます。この挙動は正しい挙動でしょうか？

3.Springからのコネクション数を増やすと、複雑なSQLを実行する機能が同時に実行されたときにswapを使ってしまうため、DBサーバのレスポンスが急激に悪化します。しかし、これを回避するためにswapしないコネクション数まで減らすと、複雑なSQLを実行しない大半の機能を実行しているときにコネクション数の上限がボトルネックとなってDBサーバのリソースが使えないのではないかと思っています。（あくまで感覚ですが）
DBサーバでswapが使われないようにAPサーバのコネクション数を調整するというのは正しいやり方でしょうか？



-- 
よろず問合せ管理Redmineからの自動通知メールです。
http://www.tdc.ntts.co.jp/techpro_contact/


From yasufum.o@gmail.com Thu Jun 27 13:39:53 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd106.ddreams.local
 (zssg-mailmd106.ddreams.local [10.160.123.101])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTQ018EGQBBMX00@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Thu, 27 Jun 2019 13:40:23 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd106.ddreams.local by
 zssg-mailmd106.ddreams.local (dDREAMS) id <0PTQ01D0WQBBBZ00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Thu,
 27 Jun 2019 13:40:23 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd106.ddreams.local
 (dDREAMS) with ESMTP id <0PTQ00UNWQBB3OA0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Thu,
 27 Jun 2019 13:40:23 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id 9623F7E6038	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Thu, 27 Jun 2019 13:40:23 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 952768E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Thu, 27 Jun 2019 13:40:23 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 93EDC8E6052	for <yamashita.hideyuki@ntt-tx.co.jp>; Thu,
 27 Jun 2019 13:40:23 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 283F58E6052	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Thu, 27 Jun 2019 13:40:23 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Thu,
 27 Jun 2019 13:40:23 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4eMZs030310;	Thu,
 27 Jun 2019 13:40:23 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5R4eMJG030309;	Thu, 27 Jun 2019 13:40:22 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5R4eMHY030306	for unknown; Thu,
 27 Jun 2019 13:40:22 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4eMcb030081 for
 unknown; Thu, 27 Jun 2019 13:40:22 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4eMX4030078; Thu,
 27 Jun 2019 13:40:22 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4eMpB012277;	Thu,
 27 Jun 2019 13:40:22 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5R4eMQA012273	for unknown; Thu, 27 Jun 2019 13:40:22 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4eLqQ016835 for
 unknown; Thu, 27 Jun 2019 13:40:21 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4eLNB016829 for
 unknown; Thu, 27 Jun 2019 13:40:21 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5R4eE0q010270	for unknown; Thu,
 27 Jun 2019 13:40:20 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 5EE3B316B;	Thu, 27 Jun 2019 06:40:13 +0200 (CEST)
Received: from mail-pl1-f195.google.com
 (mail-pl1-f195.google.com [209.85.214.195]) by dpdk.org (Postfix)
 with ESMTP id 986672BA7 for <spp@dpdk.org>; Thu,
 27 Jun 2019 06:40:12 +0200 (CEST)
Received: by mail-pl1-f195.google.com with SMTP id bh12so559231plb.4 for
 <spp@dpdk.org>; Wed, 26 Jun 2019 21:40:12 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id j14sm935835pfe.10.2019.06.26.21.40.09
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Wed,
 26 Jun 2019 21:40:10 -0700 (PDT)
Date: Thu, 27 Jun 2019 13:39:53 +0900
From: yasufum.o@gmail.com
Subject: [spp 04447] [spp] [PATCH] shared/sec: move del_comp_info to
 cmd_runner.c
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190627043953.14876-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04447
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=tdyqkGB7rK0aC8aRhLjTkvr1D5BjXHUzcfhJUoAeEC8=;
 b=A/Fb+/vbHCYX2h5sevztPYcVCjZq5BYJ60dRmIAqqHSuhyyjzbt9ZmciZ7ikzXyV4J
 en53pQLxhxAX3o8BYq/iNXMkMQawRTirPY8rHlYjvWGsJBqY/1l4dJ6m0yW/S/NGJtQq
 zVoFuUnSU4RBI72agZ80SleuwrhLKk5O9Uj82uJe7yZaf/NIT9KxrdaaXpPVN1VG8vZw
 soOSXeLBi552eu41OX6YEI6MeukD58mfpaOCCmTJ+nel3xJ1V8QTiz9KfZmRpA1Q5+bi
 AhCkWUAYj5KWWKXDhiZDkuKMyktJMKBY3lBmLKaA25uhn/X0xD9K1IzzGmdccDYjyhr7 As6Q==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=tdyqkGB7rK0aC8aRhLjTkvr1D5BjXHUzcfhJUoAeEC8=;
 b=eOxsi4aw/Ol3oOVJ+K+PDc86LHluSSwZgRgwnN1mPaIJk4IAk4apShYO7O8PcbygR4
 9LTwGLq4GM6hZbXdCxgex+WtBLBgZ7HKpRfn7PinRE9Sl0BOA4xaIYf5RSdt350GSzt8
 GsbJMJHW3D1HovMku/FjjO6bt7wwJeOnXndAxQ8iqsq27oBV7kwZMiaCcWqJCOKS8AZu
 9P7trnMAhKcWllygpBahtOXUdhPlr6MGoBv45mfvPOrDUrDeHidpO9JNuoZ0ZQBsZCQi
 q0cp6ld5xvMlaXgOE3K2sOOl89LABHJHi36iWBhlYCokIVlKHNx4jHWvpslO5mbphwW4 4LmA==
X-Gm-Message-State: APjAAAVIJWIOq74UhtxO+F3bhx2wQD8mFSv2EKB0/QiqZRJk7cVANFBA
 zrN1b9XQeNL8T9bZsdThLX5hSa1C
X-Google-Smtp-Source:
 APXvYqz5TgQuxfWAF6gVxz23cm5yTZawK5Xb2okvIiulLWM+Oj9eEJM9makQBxwajjZd4kcx/fJ27A==
X-Received: by 2002:a17:902:8a87:: with SMTP id
 p7mr2220138plo.124.1561610411486; Wed, 26 Jun 2019 21:40:11 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 166
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Function del_comp_info() is called for `stop` command by which running
worker thread is terminated. It should be included in `cmd_runner.c` for
considering this behavior. This update is to move this function from
`cmd_utils.c` to `cmd_runner.c`, and also its header files.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/cmd_runner.c      | 26 ++++++++++++++++
 .../secondary/spp_worker_th/cmd_runner.h      | 13 ++++++++
 .../secondary/spp_worker_th/cmd_utils.c       | 30 -------------------
 .../secondary/spp_worker_th/cmd_utils.h       | 26 ++--------------
 4 files changed, 42 insertions(+), 53 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 3ab69f9..4e43fe6 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -405,3 +405,29 @@ sppwk_run_cmd(void)
 
 	return ret;
 }
+
+/* Delete component information */
+int
+del_comp_info(int lcore_id, int nof_comps, int *comp_ary)
+{
+	int idx = 0;  /* The index of comp_ary to be deleted. */
+	int cnt;
+
+	/* Find the index. */
+	for (cnt = 0; cnt < nof_comps; cnt++) {
+		if (lcore_id == comp_ary[cnt])
+			idx = cnt;
+	}
+	if (idx < 0)
+		return SPP_RET_NG;
+
+	/* Overwrite the deleted entry, and shift the remained. */
+	nof_comps--;
+	for (cnt = idx; cnt < nof_comps; cnt++)
+		comp_ary[cnt] = comp_ary[cnt + 1];
+
+	/* Clean the unused last entry. */
+	comp_ary[cnt] = 0;
+
+	return SPP_RET_OK;
+}
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.h b/src/shared/secondary/spp_worker_th/cmd_runner.h
index 3a71e3e..e13e936 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.h
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.h
@@ -43,4 +43,17 @@ sppwk_cmd_runner_conn(const char *ctl_ipaddr, int ctl_port);
 int
 sppwk_run_cmd(void);
 
+/**
+ *  Delete component information.
+ *
+ * @param[in] lcore_id The lcore ID of deleted comp.
+ * @param[in] nof_comps The num of elements in comp_ary.
+ * @param[in] *comp_ary Set of comps from which an comp is deleted.
+ *
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
+ */
+int
+del_comp_info(int lcore_id, int nof_comps, int *comp_ary);
+
 #endif  /* _SPPWK_CMD_RUNNER_H_ */
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 6072186..894f559 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -628,36 +628,6 @@ sppwk_get_lcore_id(const char *comp_name)
 	return SPP_RET_NG;
 }
 
-/* Delete component information */
-/**
- * TODO(yasufum) consider to move to cmd_runner because this func is only
- * used in.
- */
-int
-del_comp_info(int lcore_id, int nof_comps, int *comp_ary)
-{
-	int idx = 0;  /* The index of comp_ary to be deleted. */
-	int cnt;
-
-	/* Find the index. */
-	for (cnt = 0; cnt < nof_comps; cnt++) {
-		if (lcore_id == comp_ary[cnt])
-			idx = cnt;
-	}
-	if (idx < 0)
-		return SPP_RET_NG;
-
-	/* Overwrite the deleted entry, and shift the remained. */
-	nof_comps--;
-	for (cnt = idx; cnt < nof_comps; cnt++)
-		comp_ary[cnt] = comp_ary[cnt + 1];
-
-	/* Clean the unused last entry. */
-	comp_ary[cnt] = 0;
-
-	return SPP_RET_OK;
-}
-
 /**
  * Get index of given entry in given port info array. It returns the index,
  * or NG code if the entry is not found.
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index ff363f5..7e5cda3 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -384,7 +384,7 @@ void print_ring_latency_stats(void);
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 
 /* Remove sock file if spp is not running */
-void  del_vhost_sockfile(struct sppwk_port_info *vhost);
+void del_vhost_sockfile(struct sppwk_port_info *vhost);
 
 /**
  * Get core ID of target component
@@ -423,11 +423,8 @@ int spp_check_used_port(
 /**
  * Set component update flag for given port.
  *
- * @param port
- *  sppwk_port_info address
- * @param rxtx
- *  enum spp_port_rxtx
- *
+ * @param port Pointer of sppwk_port_info.
+ * @param rxtx Enum spp_port_rxtx.
  */
 void
 set_component_change_port(struct sppwk_port_info *port,
@@ -450,23 +447,6 @@ int get_free_lcore_id(void);
  */
 int sppwk_get_lcore_id(const char *comp_name);
 
-/**
- *  Delete component information.
- *
- * @param[in] lcore_id The lcore ID of deleted comp.
- * @param[in] nof_comps The num of elements in comp_ary.
- * @param[in] *comp_ary Set of comps from which an comp is deleted.
- *
- * @retval SPP_RET_OK If succeeded.
- * @retval SPP_RET_NG If failed.
- */
-/**
- * TODO(yasufum) consider to move to cmd_runner because this func is only
- * used in.
- */
-int
-del_comp_info(int lcore_id, int nof_comps, int *comp_ary);
-
 /**
  * Get index of given entry in given port info array. It returns the index,
  * or NG code if the entry is not found.
-- 
2.17.1



From yasufum.o@gmail.com Thu Jun 27 13:41:05 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd101.ddreams.local
 (zssg-mailmd101.ddreams.local [10.160.123.96]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTQ018S5QCZMX00@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Thu, 27 Jun 2019 13:41:23 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd101.ddreams.local by
 zssg-mailmd101.ddreams.local (dDREAMS) id <0PTQ0172WQCZ7M00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Thu,
 27 Jun 2019 13:41:23 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd101.ddreams.local
 (dDREAMS) with ESMTP id <0PTQ00RT8QCZL480@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Thu,
 27 Jun 2019 13:41:23 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id 77CDC7E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Thu, 27 Jun 2019 13:41:23 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 76B038E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Thu, 27 Jun 2019 13:41:23 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 6BFA68E605D	for <yamashita.hideyuki@ntt-tx.co.jp>; Thu,
 27 Jun 2019 13:41:23 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id BE3CE8E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Thu, 27 Jun 2019 13:41:22 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Thu,
 27 Jun 2019 13:41:22 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fMhb030440;	Thu,
 27 Jun 2019 13:41:22 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5R4fMU3030439;	Thu, 27 Jun 2019 13:41:22 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5R4fMgP030436	for unknown; Thu,
 27 Jun 2019 13:41:22 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fMmp030417 for
 unknown; Thu, 27 Jun 2019 13:41:22 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fMq9030414; Thu,
 27 Jun 2019 13:41:22 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fLQT012353;	Thu,
 27 Jun 2019 13:41:21 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5R4fLjV012349	for unknown; Thu, 27 Jun 2019 13:41:21 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fLVm017133 for
 unknown; Thu, 27 Jun 2019 13:41:21 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fLMJ017127 for
 unknown; Thu, 27 Jun 2019 13:41:21 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5R4fE6E010451	for unknown; Thu,
 27 Jun 2019 13:41:20 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 83E27316B;	Thu, 27 Jun 2019 06:41:14 +0200 (CEST)
Received: from mail-pf1-f195.google.com
 (mail-pf1-f195.google.com [209.85.210.195]) by dpdk.org (Postfix)
 with ESMTP id 489F92BF2 for <spp@dpdk.org>; Thu,
 27 Jun 2019 06:41:13 +0200 (CEST)
Received: by mail-pf1-f195.google.com with SMTP id p184so554586pfp.7 for
 <spp@dpdk.org>; Wed, 26 Jun 2019 21:41:13 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id m6sm7518448pjl.18.2019.06.26.21.41.10
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Wed,
 26 Jun 2019 21:41:11 -0700 (PDT)
Date: Thu, 27 Jun 2019 13:41:05 +0900
From: yasufum.o@gmail.com
Subject: [spp 04448] [spp] [PATCH] shared/sec: rename func
 spp_format_port_string
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190627044105.15058-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04448
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=fhED/0iWevz/gljqkfRt/raANl7zMNjXDuGWvfY0wNU=;
 b=dwnnfWs8PKkfEWKGem7ol7w0OZZITl4zfu2ZMnWm9H48ht4RO1ZBa653UZEUAtA48S
 bx9iLgUDDjYPxeYgSirRcPErKDbS6m+WZTcVnbIWZnTCS1fLnSLOfSwOthhHKNI+4bp8
 Ys88RYukjuOmWNuz2X99Ur8oVxyaMTevrSsu7bIkUGVN96Tvq+xqAJQCjV5FS+jSj131
 GDVfGeK3aA0bn3xExbovTnIUKB3aEjoAhZG8yDWDgH7p+Dx3KxgWY6OF1hVitbk1uc7m
 gsWNnUsREGZGcvDV0htLismajHYyhCZRGLft/xsle7337r4ASC9W2P4ebhEetYctncK9 /xug==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=fhED/0iWevz/gljqkfRt/raANl7zMNjXDuGWvfY0wNU=;
 b=mMM/kgKovw+y64s1aQJcMg19EDcNQqH8f7tbsAjuiMQfMw3G+A6WoFe5mYOc2QyjYj
 918O578eyJQswVqE5E1JibwclkrycEOBw+GC7X+xWI4WuSw1icMoBw2/0p0RE9reO5b2
 dqv8ysks4dZIxjEQ4KE9N1CPuWTOZUa4Tw66Hx4RUct9MCl/4APu8d9rVJ9J+jEcQdjV
 mrKsT2ImiJL6NgJ67AQVK8ULuoEz/zk6iVGWJ2WKeOyfHtNRtfA0VEz9Gwcf8rit+rO2
 daJGGu6RB1BvH1tEMMrtc15eEhAS/Av+exDXJ3gSBBB5CCcSOqT3cV6fdnS+1jxIzCCX 0Inw==
X-Gm-Message-State: APjAAAXvcJVPDpPTizIcZF9+HIWNUuRuzbSgvAwaI4vuBY00EnkETEbM
 J8JSDlHiUBPnZ4v5d91/3wDsloeI
X-Google-Smtp-Source:
 APXvYqxIOkaZSRQb2/m0fXjbY4cRdpa8EsNPsXHbUC77oOkffajnS/+H2WuBOls03PhRXhQEZRBd+w==
X-Received: by 2002:a63:1243:: with SMTP id 3mr1767847pgs.235.1561610472311;
 Wed, 26 Jun 2019 21:41:12 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 198
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Rename spp_format_port_string() used for making string of resource UID
such as "ring:0" to sppwk_port_uid().

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/cmd_parser.c      | 18 +++++++++---------
 .../spp_worker_th/cmd_res_formatter.c         |  8 ++++----
 .../secondary/spp_worker_th/cmd_utils.c       | 19 ++++++++-----------
 .../secondary/spp_worker_th/cmd_utils.h       | 19 +++++++++----------
 src/vf/classifier_mac.c                       |  5 ++---
 src/vf/vf_cmd_runner.c                        |  2 +-
 6 files changed, 33 insertions(+), 38 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.c b/src/shared/secondary/spp_worker_th/cmd_parser.c
index 32903c3..7933ed2 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.c
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.c
@@ -152,18 +152,18 @@ parse_resource_uid(const char *res_uid,
 	 * TODO(yasufum) consider this checking of zero value is recommended
 	 * way, or should be changed.
 	 */
-	if (strncmp(res_uid, SPP_IFTYPE_NIC_STR ":",
-			strlen(SPP_IFTYPE_NIC_STR)+1) == 0) {
+	if (strncmp(res_uid, SPPWK_PHY_STR ":",
+			strlen(SPPWK_PHY_STR)+1) == 0) {
 		ptype = PHY;
-		iface_no_str = &res_uid[strlen(SPP_IFTYPE_NIC_STR)+1];
-	} else if (strncmp(res_uid, SPP_IFTYPE_VHOST_STR ":",
-			strlen(SPP_IFTYPE_VHOST_STR)+1) == 0) {
+		iface_no_str = &res_uid[strlen(SPPWK_PHY_STR)+1];
+	} else if (strncmp(res_uid, SPPWK_VHOST_STR ":",
+			strlen(SPPWK_VHOST_STR)+1) == 0) {
 		ptype = VHOST;
-		iface_no_str = &res_uid[strlen(SPP_IFTYPE_VHOST_STR)+1];
-	} else if (strncmp(res_uid, SPP_IFTYPE_RING_STR ":",
-			strlen(SPP_IFTYPE_RING_STR)+1) == 0) {
+		iface_no_str = &res_uid[strlen(SPPWK_VHOST_STR)+1];
+	} else if (strncmp(res_uid, SPPWK_RING_STR ":",
+			strlen(SPPWK_RING_STR)+1) == 0) {
 		ptype = RING;
-		iface_no_str = &res_uid[strlen(SPP_IFTYPE_RING_STR)+1];
+		iface_no_str = &res_uid[strlen(SPPWK_RING_STR)+1];
 	} else {
 		RTE_LOG(ERR, WK_CMD_PARSER, "Unexpected port type in '%s'.\n",
 				res_uid);
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index 820df8f..c18f8e5 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -226,7 +226,7 @@ append_port_block(char **output, const struct sppwk_port_idx *port,
 		return SPP_RET_NG;
 	}
 
-	spp_format_port_string(port_str, port->iface_type, port->iface_no);
+	sppwk_port_uid(port_str, port->iface_type, port->iface_no);
 	ret = append_json_str_value(&tmp_buff, "port", port_str);
 	if (unlikely(ret < SPP_RET_OK))
 		return SPP_RET_NG;
@@ -534,13 +534,13 @@ add_interface(const char *name, char **output,
 		return SPP_RET_NG;
 	}
 
-	if (strcmp(name, SPP_IFTYPE_NIC_STR) == 0)
+	if (strcmp(name, SPPWK_PHY_STR) == 0)
 		ret = append_interface_array(&tmp_buff, PHY);
 
-	else if (strcmp(name, SPP_IFTYPE_VHOST_STR) == 0)
+	else if (strcmp(name, SPPWK_VHOST_STR) == 0)
 		ret = append_interface_array(&tmp_buff, VHOST);
 
-	else if (strcmp(name, SPP_IFTYPE_RING_STR) == 0)
+	else if (strcmp(name, SPPWK_RING_STR) == 0)
 		ret = append_interface_array(&tmp_buff, RING);
 
 	if (unlikely(ret < SPP_RET_OK)) {
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 894f559..a4d8031 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -733,29 +733,26 @@ update_lcore_info(void)
 	}
 }
 
-/**
- * Generate a formatted string of combination from interface type and
- * number and assign to given 'port'
- */
-int spp_format_port_string(char *port, enum port_type iface_type, int iface_no)
+/* Return port uid such as `phy:0`, `ring:1` or so. */
+int sppwk_port_uid(char *port_uid, enum port_type p_type, int iface_no)
 {
-	const char *iface_type_str;
+	const char *p_type_str;
 
-	switch (iface_type) {
+	switch (p_type) {
 	case PHY:
-		iface_type_str = SPP_IFTYPE_NIC_STR;
+		p_type_str = SPPWK_PHY_STR;
 		break;
 	case RING:
-		iface_type_str = SPP_IFTYPE_RING_STR;
+		p_type_str = SPPWK_RING_STR;
 		break;
 	case VHOST:
-		iface_type_str = SPP_IFTYPE_VHOST_STR;
+		p_type_str = SPPWK_VHOST_STR;
 		break;
 	default:
 		return SPP_RET_NG;
 	}
 
-	sprintf(port, "%s:%d", iface_type_str, iface_no);
+	sprintf(port_uid, "%s:%d", p_type_str, iface_no);
 
 	return SPP_RET_OK;
 }
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 7e5cda3..69e0a69 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -27,9 +27,9 @@
 #define SPPWK_TYPE_NONE_STR "unuse"
 
 /** Identifier string for each interface */
-#define SPP_IFTYPE_NIC_STR   "phy"
-#define SPP_IFTYPE_VHOST_STR "vhost"
-#define SPP_IFTYPE_RING_STR  "ring"
+#define SPPWK_PHY_STR "phy"
+#define SPPWK_VHOST_STR "vhost"
+#define SPPWK_RING_STR "ring"
 
 /** Waiting time for checking update (not used for spp_pcap). */
 #define SPP_CHANGE_UPDATE_INTERVAL 10  /* micro sec */
@@ -484,16 +484,15 @@ int update_port_info(void);
 void update_lcore_info(void);
 
 /**
- * Port type to string.
+ * Return port uid such as `phy:0`, `ring:1` or so.
  *
- * @param port String of port type to be converted.
- * @param iface_type Interface type.
- * @param iface_no Interface number.
- * @retval SPP_RET_OK If succeeded.
- * @retval SPP_RET_NG If failed.
+ * @param[in,out] port_uid String of port type to be converted.
+ * @param[in] iface_type Interface type such as PHY or so.
+ * @param[in] iface_no Interface number.
+ * @return SPP_RET_OK If succeeded, or SPP_RET_NG if failed.
  */
 int
-spp_format_port_string(char *port, enum port_type iface_type, int iface_no);
+sppwk_port_uid(char *port_uid, enum port_type iface_type, int iface_no);
 
 /**
  * Change string of MAC address to int64.
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 9c4bedf..a1d6ba4 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -211,7 +211,7 @@ log_classification(
 	if (clsd_idx < 0)
 		snprintf(iface_str, sizeof(iface_str), "%ld", clsd_idx);
 	else
-		spp_format_port_string(iface_str,
+		sppwk_port_uid(iface_str,
 				clsd_data[clsd_idx].iface_type,
 				clsd_data[clsd_idx].iface_no_global);
 
@@ -248,8 +248,7 @@ log_entry(
 	if (clsd_idx < 0)
 		snprintf(iface_str, sizeof(iface_str), "%ld", clsd_idx);
 	else
-		spp_format_port_string(
-				iface_str,
+		sppwk_port_uid(iface_str,
 				clsd_data[clsd_idx].iface_type,
 				clsd_data[clsd_idx].iface_no_global);
 
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index bab04ed..e9388e0 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -572,7 +572,7 @@ append_classifier_element_value(
 		return ret;
 	}
 
-	spp_format_port_string(port_str, port->iface_type, port->iface_no);
+	sppwk_port_uid(port_str, port->iface_type, port->iface_no);
 
 	ret = append_json_str_value(&tmp_buff, "type",
 			CLS_TYPE_A_LIST[cls_type]);
-- 
2.17.1



From yasufum.o@gmail.com Thu Jun 27 13:41:22 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd106.ddreams.local
 (zssg-mailmd106.ddreams.local [10.160.123.101])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTQ018WKQDEMX00@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Thu, 27 Jun 2019 13:41:38 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd106.ddreams.local by
 zssg-mailmd106.ddreams.local (dDREAMS) id <0PTQ00042QDEKJ00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Thu,
 27 Jun 2019 13:41:38 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd106.ddreams.local
 (dDREAMS) with ESMTP id <0PTQ00UPTQDE3OB0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Thu,
 27 Jun 2019 13:41:38 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf106.ddreams.local (Postfix) with ESMTP id 85E487E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Thu, 27 Jun 2019 13:41:38 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 83EAB8E6057	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Thu, 27 Jun 2019 13:41:38 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 743D48E6055	for <yamashita.hideyuki@ntt-tx.co.jp>; Thu,
 27 Jun 2019 13:41:38 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id CABD58E6066	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Thu, 27 Jun 2019 13:41:37 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf106.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Thu,
 27 Jun 2019 13:41:37 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fbiD030636;	Thu,
 27 Jun 2019 13:41:37 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5R4fb2a030635;	Thu, 27 Jun 2019 13:41:37 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5R4fbav030632	for unknown; Thu,
 27 Jun 2019 13:41:37 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fbcS030690 for
 unknown; Thu, 27 Jun 2019 13:41:37 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fbYO030687; Thu,
 27 Jun 2019 13:41:37 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4far8012391;	Thu,
 27 Jun 2019 13:41:37 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5R4faW5012386	for unknown; Thu, 27 Jun 2019 13:41:36 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fauH017188 for
 unknown; Thu, 27 Jun 2019 13:41:36 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fa1r017182 for
 unknown; Thu, 27 Jun 2019 13:41:36 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5R4fT58010505	for unknown; Thu,
 27 Jun 2019 13:41:35 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 96D7B316B;	Thu, 27 Jun 2019 06:41:29 +0200 (CEST)
Received: from mail-pl1-f175.google.com
 (mail-pl1-f175.google.com [209.85.214.175]) by dpdk.org (Postfix)
 with ESMTP id E9F702BA7 for <spp@dpdk.org>; Thu,
 27 Jun 2019 06:41:27 +0200 (CEST)
Received: by mail-pl1-f175.google.com with SMTP id t7so548755plr.11 for
 <spp@dpdk.org>; Wed, 26 Jun 2019 21:41:27 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id a21sm1062591pfi.27.2019.06.26.21.41.25
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Wed,
 26 Jun 2019 21:41:26 -0700 (PDT)
Date: Thu, 27 Jun 2019 13:41:22 +0900
From: yasufum.o@gmail.com
Subject: [spp 04449] [spp] [PATCH] recipes: reorganize direcories
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190627044122.15112-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04449
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=bQj2LIp+FshF48WpCq58BNpYcOEBhtQsQ8smH507JWo=;
 b=r09Aw2KxIWzbA8AOZl6KBEZnv/dt3Y8FhDHsZyYlO0Oc8tCri13kW225VsdHNIksJT
 mo1Hgrng2uzID8zrn24UFfLtcRPOdapI6h00GFQuYuUv9QS5dRIdvjVGudGRKs2xybBZ
 y21wPlwOuG0izvnaiZJEmEnzKPQAU+2NPFF3VJS+vxuSWlkYUT2t9487ALGHiT8h8BTX
 6cSURfd1t9VRlkVSuNTI2w/NMwFL2bYhnxCWMq1y5tAR/MPGPy74NcPc4z9ztVTRArmf
 d1y7jApltPXlYZIR5tR8gkknlbNWnSL/sKwi/TXk7HvpCqSACbezpcMtaaT7/X46nnkh veKw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=bQj2LIp+FshF48WpCq58BNpYcOEBhtQsQ8smH507JWo=;
 b=FhGz9MUnhYhuChmkgc+pHSJKQ+R8zgrcsJvcvhOyfrKX6UOXdk+o1wF00tczvHjsWZ
 ZszUDjG2w3dC3NumqUvKTdKKIhF+awMuFubSOqmgPHlOO8scCkAXZs3as0QluosG/aso
 PKHrFhIVhZ/cJdCkHCXiCFDxn3L6xEih47xEFUAwQ1mi4M1AVVb74TvVAe2ciOyOSF4D
 j211/SQXGzAaMBHoPQUWHGfr/R4sNeSeTHi/XKXITWXp5HnjlHWRZB2/Zp/l3/pTm+oy
 EAQsf/m5zCPIhkOePKKSaz+KA0ZMUg9cMkof3dpmvxDsy3fKPxsO7+/j9lKSr3fnip9i VaCQ==
X-Gm-Message-State: APjAAAUtKp9eAsF6EOtML72PNJ2ynJ33OxODCyRIWh2KHaB2HnhxSaKS
 djac+Lgy7oB+5+oMSrtK9Sax1OSm
X-Google-Smtp-Source:
 APXvYqzLl1/fKjbGhCIsWS+B6nQ+3+IAZqR2P7BbGF7ty5TrGqr1WG+9icLqxHgmvNF1VZMiIQUFxA==
X-Received: by 2002:a17:902:e287:: with SMTP id
 cf7mr2218412plb.32.1561610486710; Wed, 26 Jun 2019 21:41:26 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 182
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Recipe scripts are provided for some usecases in SPP documents, but
directory structure is messed up. This update is to reorganize them as
following in order to be easy to find each of recipes.

  recipes/
     |-- usecases/
             |-- spp_nfv/
             |       |-- dual_bidir.rcps
             |       |-- dual_loopback.rcps
             |       |-- ...
             |-- spp_vf/
             |       |-- ssh_login/
             |       |        |-- setup/
             |       |        |      |-- 1-start_components.rcps
             |       |        |      |-- 2-add_ports_path1.rcps
             |       |        |      |-- ...

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../{sppc/samples/l2fwd.rcp => usecases/spp_container/l2fwd.rcps} | 0
 .../{sppc/samples/lb_pg.rcp => usecases/spp_container/lb_pg.rcps} | 0
 .../spp_container/load_balancer.rcps}                             | 0
 .../samples/pg_l2fwd.rcp => usecases/spp_container/pg_l2fwd.rcps} | 0
 .../spp_container/pg_l2fwd_less.rcps}                             | 0
 .../test_ring.rcp => usecases/spp_container/test_ring.rcps}       | 0
 recipes/{spp/usecases => usecases/spp_nfv}/dual_bidir.rcps        | 0
 recipes/{spp/usecases => usecases/spp_nfv}/dual_loopback.rcps     | 0
 recipes/{spp/usecases => usecases/spp_nfv}/ring_dual_bidir.rcps   | 0
 recipes/{spp/usecases => usecases/spp_nfv}/ring_dual_unidir.rcps  | 0
 recipes/{spp/usecases => usecases/spp_nfv}/single_bidir.rcps      | 0
 recipes/{spp/usecases => usecases/spp_nfv}/vhost_unidir.rcps      | 0
 .../spp_vf/ssh_login}/setup/1-start_components.rcps               | 0
 .../spp_vf/ssh_login}/setup/2-add_ports_path1.rcps                | 0
 .../spp_vf/ssh_login}/setup/3-reg_mac_path1.rcps                  | 0
 .../spp_vf/ssh_login}/setup/4-start_components.rcps               | 0
 .../spp_vf/ssh_login}/setup/5-add_ports_path2.rcps                | 0
 .../spp_vf/ssh_login}/setup/6-reg_mac_path2.rcps                  | 0
 .../usecase1 => usecases/spp_vf/ssh_login}/setup/7-flush.rcps     | 0
 .../spp_vf/ssh_login}/shutdown/1-del_mac_path1.rcps               | 0
 .../spp_vf/ssh_login}/shutdown/2-del_ports_path1.rcps             | 0
 .../spp_vf/ssh_login}/shutdown/3-stop_components.rcps             | 0
 .../spp_vf/ssh_login}/shutdown/4-del_mac_path2.rcps               | 0
 .../spp_vf/ssh_login}/shutdown/5-del_ports_path2.rcps             | 0
 .../spp_vf/ssh_login}/shutdown/6-stop_components.rcps             | 0
 .../usecase1 => usecases/spp_vf/ssh_login}/shutdown/7-flush.rcps  | 0
 26 files changed, 0 insertions(+), 0 deletions(-)
 rename recipes/{sppc/samples/l2fwd.rcp => usecases/spp_container/l2fwd.rcps} (100%)
 rename recipes/{sppc/samples/lb_pg.rcp => usecases/spp_container/lb_pg.rcps} (100%)
 rename recipes/{sppc/samples/load_balancer.rcp => usecases/spp_container/load_balancer.rcps} (100%)
 rename recipes/{sppc/samples/pg_l2fwd.rcp => usecases/spp_container/pg_l2fwd.rcps} (100%)
 rename recipes/{sppc/samples/pg_l2fwd_less.rcp => usecases/spp_container/pg_l2fwd_less.rcps} (100%)
 rename recipes/{sppc/samples/test_ring.rcp => usecases/spp_container/test_ring.rcps} (100%)
 rename recipes/{spp/usecases => usecases/spp_nfv}/dual_bidir.rcps (100%)
 rename recipes/{spp/usecases => usecases/spp_nfv}/dual_loopback.rcps (100%)
 rename recipes/{spp/usecases => usecases/spp_nfv}/ring_dual_bidir.rcps (100%)
 rename recipes/{spp/usecases => usecases/spp_nfv}/ring_dual_unidir.rcps (100%)
 rename recipes/{spp/usecases => usecases/spp_nfv}/single_bidir.rcps (100%)
 rename recipes/{spp/usecases => usecases/spp_nfv}/vhost_unidir.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/setup/1-start_components.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/setup/2-add_ports_path1.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/setup/3-reg_mac_path1.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/setup/4-start_components.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/setup/5-add_ports_path2.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/setup/6-reg_mac_path2.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/setup/7-flush.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/shutdown/1-del_mac_path1.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/shutdown/2-del_ports_path1.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/shutdown/3-stop_components.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/shutdown/4-del_mac_path2.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/shutdown/5-del_ports_path2.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/shutdown/6-stop_components.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/shutdown/7-flush.rcps (100%)

diff --git a/recipes/sppc/samples/l2fwd.rcp b/recipes/usecases/spp_container/l2fwd.rcps
similarity index 100%
rename from recipes/sppc/samples/l2fwd.rcp
rename to recipes/usecases/spp_container/l2fwd.rcps
diff --git a/recipes/sppc/samples/lb_pg.rcp b/recipes/usecases/spp_container/lb_pg.rcps
similarity index 100%
rename from recipes/sppc/samples/lb_pg.rcp
rename to recipes/usecases/spp_container/lb_pg.rcps
diff --git a/recipes/sppc/samples/load_balancer.rcp b/recipes/usecases/spp_container/load_balancer.rcps
similarity index 100%
rename from recipes/sppc/samples/load_balancer.rcp
rename to recipes/usecases/spp_container/load_balancer.rcps
diff --git a/recipes/sppc/samples/pg_l2fwd.rcp b/recipes/usecases/spp_container/pg_l2fwd.rcps
similarity index 100%
rename from recipes/sppc/samples/pg_l2fwd.rcp
rename to recipes/usecases/spp_container/pg_l2fwd.rcps
diff --git a/recipes/sppc/samples/pg_l2fwd_less.rcp b/recipes/usecases/spp_container/pg_l2fwd_less.rcps
similarity index 100%
rename from recipes/sppc/samples/pg_l2fwd_less.rcp
rename to recipes/usecases/spp_container/pg_l2fwd_less.rcps
diff --git a/recipes/sppc/samples/test_ring.rcp b/recipes/usecases/spp_container/test_ring.rcps
similarity index 100%
rename from recipes/sppc/samples/test_ring.rcp
rename to recipes/usecases/spp_container/test_ring.rcps
diff --git a/recipes/spp/usecases/dual_bidir.rcps b/recipes/usecases/spp_nfv/dual_bidir.rcps
similarity index 100%
rename from recipes/spp/usecases/dual_bidir.rcps
rename to recipes/usecases/spp_nfv/dual_bidir.rcps
diff --git a/recipes/spp/usecases/dual_loopback.rcps b/recipes/usecases/spp_nfv/dual_loopback.rcps
similarity index 100%
rename from recipes/spp/usecases/dual_loopback.rcps
rename to recipes/usecases/spp_nfv/dual_loopback.rcps
diff --git a/recipes/spp/usecases/ring_dual_bidir.rcps b/recipes/usecases/spp_nfv/ring_dual_bidir.rcps
similarity index 100%
rename from recipes/spp/usecases/ring_dual_bidir.rcps
rename to recipes/usecases/spp_nfv/ring_dual_bidir.rcps
diff --git a/recipes/spp/usecases/ring_dual_unidir.rcps b/recipes/usecases/spp_nfv/ring_dual_unidir.rcps
similarity index 100%
rename from recipes/spp/usecases/ring_dual_unidir.rcps
rename to recipes/usecases/spp_nfv/ring_dual_unidir.rcps
diff --git a/recipes/spp/usecases/single_bidir.rcps b/recipes/usecases/spp_nfv/single_bidir.rcps
similarity index 100%
rename from recipes/spp/usecases/single_bidir.rcps
rename to recipes/usecases/spp_nfv/single_bidir.rcps
diff --git a/recipes/spp/usecases/vhost_unidir.rcps b/recipes/usecases/spp_nfv/vhost_unidir.rcps
similarity index 100%
rename from recipes/spp/usecases/vhost_unidir.rcps
rename to recipes/usecases/spp_nfv/vhost_unidir.rcps
diff --git a/recipes/spp_vf/usecase1/setup/1-start_components.rcps b/recipes/usecases/spp_vf/ssh_login/setup/1-start_components.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/setup/1-start_components.rcps
rename to recipes/usecases/spp_vf/ssh_login/setup/1-start_components.rcps
diff --git a/recipes/spp_vf/usecase1/setup/2-add_ports_path1.rcps b/recipes/usecases/spp_vf/ssh_login/setup/2-add_ports_path1.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/setup/2-add_ports_path1.rcps
rename to recipes/usecases/spp_vf/ssh_login/setup/2-add_ports_path1.rcps
diff --git a/recipes/spp_vf/usecase1/setup/3-reg_mac_path1.rcps b/recipes/usecases/spp_vf/ssh_login/setup/3-reg_mac_path1.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/setup/3-reg_mac_path1.rcps
rename to recipes/usecases/spp_vf/ssh_login/setup/3-reg_mac_path1.rcps
diff --git a/recipes/spp_vf/usecase1/setup/4-start_components.rcps b/recipes/usecases/spp_vf/ssh_login/setup/4-start_components.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/setup/4-start_components.rcps
rename to recipes/usecases/spp_vf/ssh_login/setup/4-start_components.rcps
diff --git a/recipes/spp_vf/usecase1/setup/5-add_ports_path2.rcps b/recipes/usecases/spp_vf/ssh_login/setup/5-add_ports_path2.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/setup/5-add_ports_path2.rcps
rename to recipes/usecases/spp_vf/ssh_login/setup/5-add_ports_path2.rcps
diff --git a/recipes/spp_vf/usecase1/setup/6-reg_mac_path2.rcps b/recipes/usecases/spp_vf/ssh_login/setup/6-reg_mac_path2.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/setup/6-reg_mac_path2.rcps
rename to recipes/usecases/spp_vf/ssh_login/setup/6-reg_mac_path2.rcps
diff --git a/recipes/spp_vf/usecase1/setup/7-flush.rcps b/recipes/usecases/spp_vf/ssh_login/setup/7-flush.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/setup/7-flush.rcps
rename to recipes/usecases/spp_vf/ssh_login/setup/7-flush.rcps
diff --git a/recipes/spp_vf/usecase1/shutdown/1-del_mac_path1.rcps b/recipes/usecases/spp_vf/ssh_login/shutdown/1-del_mac_path1.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/shutdown/1-del_mac_path1.rcps
rename to recipes/usecases/spp_vf/ssh_login/shutdown/1-del_mac_path1.rcps
diff --git a/recipes/spp_vf/usecase1/shutdown/2-del_ports_path1.rcps b/recipes/usecases/spp_vf/ssh_login/shutdown/2-del_ports_path1.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/shutdown/2-del_ports_path1.rcps
rename to recipes/usecases/spp_vf/ssh_login/shutdown/2-del_ports_path1.rcps
diff --git a/recipes/spp_vf/usecase1/shutdown/3-stop_components.rcps b/recipes/usecases/spp_vf/ssh_login/shutdown/3-stop_components.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/shutdown/3-stop_components.rcps
rename to recipes/usecases/spp_vf/ssh_login/shutdown/3-stop_components.rcps
diff --git a/recipes/spp_vf/usecase1/shutdown/4-del_mac_path2.rcps b/recipes/usecases/spp_vf/ssh_login/shutdown/4-del_mac_path2.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/shutdown/4-del_mac_path2.rcps
rename to recipes/usecases/spp_vf/ssh_login/shutdown/4-del_mac_path2.rcps
diff --git a/recipes/spp_vf/usecase1/shutdown/5-del_ports_path2.rcps b/recipes/usecases/spp_vf/ssh_login/shutdown/5-del_ports_path2.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/shutdown/5-del_ports_path2.rcps
rename to recipes/usecases/spp_vf/ssh_login/shutdown/5-del_ports_path2.rcps
diff --git a/recipes/spp_vf/usecase1/shutdown/6-stop_components.rcps b/recipes/usecases/spp_vf/ssh_login/shutdown/6-stop_components.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/shutdown/6-stop_components.rcps
rename to recipes/usecases/spp_vf/ssh_login/shutdown/6-stop_components.rcps
diff --git a/recipes/spp_vf/usecase1/shutdown/7-flush.rcps b/recipes/usecases/spp_vf/ssh_login/shutdown/7-flush.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/shutdown/7-flush.rcps
rename to recipes/usecases/spp_vf/ssh_login/shutdown/7-flush.rcps
-- 
2.17.1



From spp-request@dpdk.org Thu Jun 27 13:41:29 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd103.ddreams.local
 (zssg-mailmd103.ddreams.local [10.160.123.98]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTQ018WMQDFMX00@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Thu, 27 Jun 2019 13:41:39 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd103.ddreams.local by
 zssg-mailmd103.ddreams.local (dDREAMS) id <0PTQ0130YQDFRF00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Thu,
 27 Jun 2019 13:41:39 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd103.ddreams.local
 (dDREAMS) with ESMTP id <0PTQ00MESQDFCT90@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Thu,
 27 Jun 2019 13:41:39 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id 022B67E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Thu, 27 Jun 2019 13:41:39 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 0116A8E605D	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Thu, 27 Jun 2019 13:41:39 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id EA8118E605E	for <yamashita.hideyuki@ntt-tx.co.jp>; Thu,
 27 Jun 2019 13:41:38 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 3130A8E605E	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Thu, 27 Jun 2019 13:41:38 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Thu,
 27 Jun 2019 13:41:38 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fbDf030643;	Thu,
 27 Jun 2019 13:41:38 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5R4fbUY030642;	Thu, 27 Jun 2019 13:41:37 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5R4fbBm030639	for unknown; Thu,
 27 Jun 2019 13:41:37 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fb0L017204 for
 unknown; Thu, 27 Jun 2019 13:41:37 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fbqS017201 for
 unknown; Thu, 27 Jun 2019 13:41:37 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5R4fVXB010508	for unknown; Thu,
 27 Jun 2019 13:41:36 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id A0EE73237	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Thu,
 27 Jun 2019 06:41:30 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 28
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Thu, 27 Jun 2019 06:41:29 +0200
Message-id: <mailman.23735.1561610489.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH] shared/sec: move del_comp_info to cmd_runner.c
      (yasufum.o@gmail.com)
   2. [PATCH] shared/sec: rename func spp_format_port_string
      (yasufum.o@gmail.com)
   3. [PATCH] recipes: reorganize direcories (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Thu, 27 Jun 2019 13:39:53 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] shared/sec: move del_comp_info to cmd_runner.c
Message-ID: <20190627043953.14876-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Function del_comp_info() is called for `stop` command by which running
worker thread is terminated. It should be included in `cmd_runner.c` for
considering this behavior. This update is to move this function from
`cmd_utils.c` to `cmd_runner.c`, and also its header files.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/cmd_runner.c      | 26 ++++++++++++++++
 .../secondary/spp_worker_th/cmd_runner.h      | 13 ++++++++
 .../secondary/spp_worker_th/cmd_utils.c       | 30 -------------------
 .../secondary/spp_worker_th/cmd_utils.h       | 26 ++--------------
 4 files changed, 42 insertions(+), 53 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 3ab69f9..4e43fe6 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -405,3 +405,29 @@ sppwk_run_cmd(void)
 
 	return ret;
 }
+
+/* Delete component information */
+int
+del_comp_info(int lcore_id, int nof_comps, int *comp_ary)
+{
+	int idx = 0;  /* The index of comp_ary to be deleted. */
+	int cnt;
+
+	/* Find the index. */
+	for (cnt = 0; cnt < nof_comps; cnt++) {
+		if (lcore_id == comp_ary[cnt])
+			idx = cnt;
+	}
+	if (idx < 0)
+		return SPP_RET_NG;
+
+	/* Overwrite the deleted entry, and shift the remained. */
+	nof_comps--;
+	for (cnt = idx; cnt < nof_comps; cnt++)
+		comp_ary[cnt] = comp_ary[cnt + 1];
+
+	/* Clean the unused last entry. */
+	comp_ary[cnt] = 0;
+
+	return SPP_RET_OK;
+}
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.h b/src/shared/secondary/spp_worker_th/cmd_runner.h
index 3a71e3e..e13e936 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.h
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.h
@@ -43,4 +43,17 @@ sppwk_cmd_runner_conn(const char *ctl_ipaddr, int ctl_port);
 int
 sppwk_run_cmd(void);
 
+/**
+ *  Delete component information.
+ *
+ * @param[in] lcore_id The lcore ID of deleted comp.
+ * @param[in] nof_comps The num of elements in comp_ary.
+ * @param[in] *comp_ary Set of comps from which an comp is deleted.
+ *
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
+ */
+int
+del_comp_info(int lcore_id, int nof_comps, int *comp_ary);
+
 #endif  /* _SPPWK_CMD_RUNNER_H_ */
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 6072186..894f559 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -628,36 +628,6 @@ sppwk_get_lcore_id(const char *comp_name)
 	return SPP_RET_NG;
 }
 
-/* Delete component information */
-/**
- * TODO(yasufum) consider to move to cmd_runner because this func is only
- * used in.
- */
-int
-del_comp_info(int lcore_id, int nof_comps, int *comp_ary)
-{
-	int idx = 0;  /* The index of comp_ary to be deleted. */
-	int cnt;
-
-	/* Find the index. */
-	for (cnt = 0; cnt < nof_comps; cnt++) {
-		if (lcore_id == comp_ary[cnt])
-			idx = cnt;
-	}
-	if (idx < 0)
-		return SPP_RET_NG;
-
-	/* Overwrite the deleted entry, and shift the remained. */
-	nof_comps--;
-	for (cnt = idx; cnt < nof_comps; cnt++)
-		comp_ary[cnt] = comp_ary[cnt + 1];
-
-	/* Clean the unused last entry. */
-	comp_ary[cnt] = 0;
-
-	return SPP_RET_OK;
-}
-
 /**
  * Get index of given entry in given port info array. It returns the index,
  * or NG code if the entry is not found.
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index ff363f5..7e5cda3 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -384,7 +384,7 @@ void print_ring_latency_stats(void);
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 
 /* Remove sock file if spp is not running */
-void  del_vhost_sockfile(struct sppwk_port_info *vhost);
+void del_vhost_sockfile(struct sppwk_port_info *vhost);
 
 /**
  * Get core ID of target component
@@ -423,11 +423,8 @@ int spp_check_used_port(
 /**
  * Set component update flag for given port.
  *
- * @param port
- *  sppwk_port_info address
- * @param rxtx
- *  enum spp_port_rxtx
- *
+ * @param port Pointer of sppwk_port_info.
+ * @param rxtx Enum spp_port_rxtx.
  */
 void
 set_component_change_port(struct sppwk_port_info *port,
@@ -450,23 +447,6 @@ int get_free_lcore_id(void);
  */
 int sppwk_get_lcore_id(const char *comp_name);
 
-/**
- *  Delete component information.
- *
- * @param[in] lcore_id The lcore ID of deleted comp.
- * @param[in] nof_comps The num of elements in comp_ary.
- * @param[in] *comp_ary Set of comps from which an comp is deleted.
- *
- * @retval SPP_RET_OK If succeeded.
- * @retval SPP_RET_NG If failed.
- */
-/**
- * TODO(yasufum) consider to move to cmd_runner because this func is only
- * used in.
- */
-int
-del_comp_info(int lcore_id, int nof_comps, int *comp_ary);
-
 /**
  * Get index of given entry in given port info array. It returns the index,
  * or NG code if the entry is not found.
-- 
2.17.1



------------------------------

Message: 2
Date: Thu, 27 Jun 2019 13:41:05 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] shared/sec: rename func spp_format_port_string
Message-ID: <20190627044105.15058-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Rename spp_format_port_string() used for making string of resource UID
such as "ring:0" to sppwk_port_uid().

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/cmd_parser.c      | 18 +++++++++---------
 .../spp_worker_th/cmd_res_formatter.c         |  8 ++++----
 .../secondary/spp_worker_th/cmd_utils.c       | 19 ++++++++-----------
 .../secondary/spp_worker_th/cmd_utils.h       | 19 +++++++++----------
 src/vf/classifier_mac.c                       |  5 ++---
 src/vf/vf_cmd_runner.c                        |  2 +-
 6 files changed, 33 insertions(+), 38 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.c b/src/shared/secondary/spp_worker_th/cmd_parser.c
index 32903c3..7933ed2 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.c
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.c
@@ -152,18 +152,18 @@ parse_resource_uid(const char *res_uid,
 	 * TODO(yasufum) consider this checking of zero value is recommended
 	 * way, or should be changed.
 	 */
-	if (strncmp(res_uid, SPP_IFTYPE_NIC_STR ":",
-			strlen(SPP_IFTYPE_NIC_STR)+1) == 0) {
+	if (strncmp(res_uid, SPPWK_PHY_STR ":",
+			strlen(SPPWK_PHY_STR)+1) == 0) {
 		ptype = PHY;
-		iface_no_str = &res_uid[strlen(SPP_IFTYPE_NIC_STR)+1];
-	} else if (strncmp(res_uid, SPP_IFTYPE_VHOST_STR ":",
-			strlen(SPP_IFTYPE_VHOST_STR)+1) == 0) {
+		iface_no_str = &res_uid[strlen(SPPWK_PHY_STR)+1];
+	} else if (strncmp(res_uid, SPPWK_VHOST_STR ":",
+			strlen(SPPWK_VHOST_STR)+1) == 0) {
 		ptype = VHOST;
-		iface_no_str = &res_uid[strlen(SPP_IFTYPE_VHOST_STR)+1];
-	} else if (strncmp(res_uid, SPP_IFTYPE_RING_STR ":",
-			strlen(SPP_IFTYPE_RING_STR)+1) == 0) {
+		iface_no_str = &res_uid[strlen(SPPWK_VHOST_STR)+1];
+	} else if (strncmp(res_uid, SPPWK_RING_STR ":",
+			strlen(SPPWK_RING_STR)+1) == 0) {
 		ptype = RING;
-		iface_no_str = &res_uid[strlen(SPP_IFTYPE_RING_STR)+1];
+		iface_no_str = &res_uid[strlen(SPPWK_RING_STR)+1];
 	} else {
 		RTE_LOG(ERR, WK_CMD_PARSER, "Unexpected port type in '%s'.\n",
 				res_uid);
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index 820df8f..c18f8e5 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -226,7 +226,7 @@ append_port_block(char **output, const struct sppwk_port_idx *port,
 		return SPP_RET_NG;
 	}
 
-	spp_format_port_string(port_str, port->iface_type, port->iface_no);
+	sppwk_port_uid(port_str, port->iface_type, port->iface_no);
 	ret = append_json_str_value(&tmp_buff, "port", port_str);
 	if (unlikely(ret < SPP_RET_OK))
 		return SPP_RET_NG;
@@ -534,13 +534,13 @@ add_interface(const char *name, char **output,
 		return SPP_RET_NG;
 	}
 
-	if (strcmp(name, SPP_IFTYPE_NIC_STR) == 0)
+	if (strcmp(name, SPPWK_PHY_STR) == 0)
 		ret = append_interface_array(&tmp_buff, PHY);
 
-	else if (strcmp(name, SPP_IFTYPE_VHOST_STR) == 0)
+	else if (strcmp(name, SPPWK_VHOST_STR) == 0)
 		ret = append_interface_array(&tmp_buff, VHOST);
 
-	else if (strcmp(name, SPP_IFTYPE_RING_STR) == 0)
+	else if (strcmp(name, SPPWK_RING_STR) == 0)
 		ret = append_interface_array(&tmp_buff, RING);
 
 	if (unlikely(ret < SPP_RET_OK)) {
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 894f559..a4d8031 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -733,29 +733,26 @@ update_lcore_info(void)
 	}
 }
 
-/**
- * Generate a formatted string of combination from interface type and
- * number and assign to given 'port'
- */
-int spp_format_port_string(char *port, enum port_type iface_type, int iface_no)
+/* Return port uid such as `phy:0`, `ring:1` or so. */
+int sppwk_port_uid(char *port_uid, enum port_type p_type, int iface_no)
 {
-	const char *iface_type_str;
+	const char *p_type_str;
 
-	switch (iface_type) {
+	switch (p_type) {
 	case PHY:
-		iface_type_str = SPP_IFTYPE_NIC_STR;
+		p_type_str = SPPWK_PHY_STR;
 		break;
 	case RING:
-		iface_type_str = SPP_IFTYPE_RING_STR;
+		p_type_str = SPPWK_RING_STR;
 		break;
 	case VHOST:
-		iface_type_str = SPP_IFTYPE_VHOST_STR;
+		p_type_str = SPPWK_VHOST_STR;
 		break;
 	default:
 		return SPP_RET_NG;
 	}
 
-	sprintf(port, "%s:%d", iface_type_str, iface_no);
+	sprintf(port_uid, "%s:%d", p_type_str, iface_no);
 
 	return SPP_RET_OK;
 }
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 7e5cda3..69e0a69 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -27,9 +27,9 @@
 #define SPPWK_TYPE_NONE_STR "unuse"
 
 /** Identifier string for each interface */
-#define SPP_IFTYPE_NIC_STR   "phy"
-#define SPP_IFTYPE_VHOST_STR "vhost"
-#define SPP_IFTYPE_RING_STR  "ring"
+#define SPPWK_PHY_STR "phy"
+#define SPPWK_VHOST_STR "vhost"
+#define SPPWK_RING_STR "ring"
 
 /** Waiting time for checking update (not used for spp_pcap). */
 #define SPP_CHANGE_UPDATE_INTERVAL 10  /* micro sec */
@@ -484,16 +484,15 @@ int update_port_info(void);
 void update_lcore_info(void);
 
 /**
- * Port type to string.
+ * Return port uid such as `phy:0`, `ring:1` or so.
  *
- * @param port String of port type to be converted.
- * @param iface_type Interface type.
- * @param iface_no Interface number.
- * @retval SPP_RET_OK If succeeded.
- * @retval SPP_RET_NG If failed.
+ * @param[in,out] port_uid String of port type to be converted.
+ * @param[in] iface_type Interface type such as PHY or so.
+ * @param[in] iface_no Interface number.
+ * @return SPP_RET_OK If succeeded, or SPP_RET_NG if failed.
  */
 int
-spp_format_port_string(char *port, enum port_type iface_type, int iface_no);
+sppwk_port_uid(char *port_uid, enum port_type iface_type, int iface_no);
 
 /**
  * Change string of MAC address to int64.
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 9c4bedf..a1d6ba4 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -211,7 +211,7 @@ log_classification(
 	if (clsd_idx < 0)
 		snprintf(iface_str, sizeof(iface_str), "%ld", clsd_idx);
 	else
-		spp_format_port_string(iface_str,
+		sppwk_port_uid(iface_str,
 				clsd_data[clsd_idx].iface_type,
 				clsd_data[clsd_idx].iface_no_global);
 
@@ -248,8 +248,7 @@ log_entry(
 	if (clsd_idx < 0)
 		snprintf(iface_str, sizeof(iface_str), "%ld", clsd_idx);
 	else
-		spp_format_port_string(
-				iface_str,
+		sppwk_port_uid(iface_str,
 				clsd_data[clsd_idx].iface_type,
 				clsd_data[clsd_idx].iface_no_global);
 
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index bab04ed..e9388e0 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -572,7 +572,7 @@ append_classifier_element_value(
 		return ret;
 	}
 
-	spp_format_port_string(port_str, port->iface_type, port->iface_no);
+	sppwk_port_uid(port_str, port->iface_type, port->iface_no);
 
 	ret = append_json_str_value(&tmp_buff, "type",
 			CLS_TYPE_A_LIST[cls_type]);
-- 
2.17.1



------------------------------

Message: 3
Date: Thu, 27 Jun 2019 13:41:22 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] recipes: reorganize direcories
Message-ID: <20190627044122.15112-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Recipe scripts are provided for some usecases in SPP documents, but
directory structure is messed up. This update is to reorganize them as
following in order to be easy to find each of recipes.

  recipes/
     |-- usecases/
             |-- spp_nfv/
             |       |-- dual_bidir.rcps
             |       |-- dual_loopback.rcps
             |       |-- ...
             |-- spp_vf/
             |       |-- ssh_login/
             |       |        |-- setup/
             |       |        |      |-- 1-start_components.rcps
             |       |        |      |-- 2-add_ports_path1.rcps
             |       |        |      |-- ...

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../{sppc/samples/l2fwd.rcp => usecases/spp_container/l2fwd.rcps} | 0
 .../{sppc/samples/lb_pg.rcp => usecases/spp_container/lb_pg.rcps} | 0
 .../spp_container/load_balancer.rcps}                             | 0
 .../samples/pg_l2fwd.rcp => usecases/spp_container/pg_l2fwd.rcps} | 0
 .../spp_container/pg_l2fwd_less.rcps}                             | 0
 .../test_ring.rcp => usecases/spp_container/test_ring.rcps}       | 0
 recipes/{spp/usecases => usecases/spp_nfv}/dual_bidir.rcps        | 0
 recipes/{spp/usecases => usecases/spp_nfv}/dual_loopback.rcps     | 0
 recipes/{spp/usecases => usecases/spp_nfv}/ring_dual_bidir.rcps   | 0
 recipes/{spp/usecases => usecases/spp_nfv}/ring_dual_unidir.rcps  | 0
 recipes/{spp/usecases => usecases/spp_nfv}/single_bidir.rcps      | 0
 recipes/{spp/usecases => usecases/spp_nfv}/vhost_unidir.rcps      | 0
 .../spp_vf/ssh_login}/setup/1-start_components.rcps               | 0
 .../spp_vf/ssh_login}/setup/2-add_ports_path1.rcps                | 0
 .../spp_vf/ssh_login}/setup/3-reg_mac_path1.rcps                  | 0
 .../spp_vf/ssh_login}/setup/4-start_components.rcps               | 0
 .../spp_vf/ssh_login}/setup/5-add_ports_path2.rcps                | 0
 .../spp_vf/ssh_login}/setup/6-reg_mac_path2.rcps                  | 0
 .../usecase1 => usecases/spp_vf/ssh_login}/setup/7-flush.rcps     | 0
 .../spp_vf/ssh_login}/shutdown/1-del_mac_path1.rcps               | 0
 .../spp_vf/ssh_login}/shutdown/2-del_ports_path1.rcps             | 0
 .../spp_vf/ssh_login}/shutdown/3-stop_components.rcps             | 0
 .../spp_vf/ssh_login}/shutdown/4-del_mac_path2.rcps               | 0
 .../spp_vf/ssh_login}/shutdown/5-del_ports_path2.rcps             | 0
 .../spp_vf/ssh_login}/shutdown/6-stop_components.rcps             | 0
 .../usecase1 => usecases/spp_vf/ssh_login}/shutdown/7-flush.rcps  | 0
 26 files changed, 0 insertions(+), 0 deletions(-)
 rename recipes/{sppc/samples/l2fwd.rcp => usecases/spp_container/l2fwd.rcps} (100%)
 rename recipes/{sppc/samples/lb_pg.rcp => usecases/spp_container/lb_pg.rcps} (100%)
 rename recipes/{sppc/samples/load_balancer.rcp => usecases/spp_container/load_balancer.rcps} (100%)
 rename recipes/{sppc/samples/pg_l2fwd.rcp => usecases/spp_container/pg_l2fwd.rcps} (100%)
 rename recipes/{sppc/samples/pg_l2fwd_less.rcp => usecases/spp_container/pg_l2fwd_less.rcps} (100%)
 rename recipes/{sppc/samples/test_ring.rcp => usecases/spp_container/test_ring.rcps} (100%)
 rename recipes/{spp/usecases => usecases/spp_nfv}/dual_bidir.rcps (100%)
 rename recipes/{spp/usecases => usecases/spp_nfv}/dual_loopback.rcps (100%)
 rename recipes/{spp/usecases => usecases/spp_nfv}/ring_dual_bidir.rcps (100%)
 rename recipes/{spp/usecases => usecases/spp_nfv}/ring_dual_unidir.rcps (100%)
 rename recipes/{spp/usecases => usecases/spp_nfv}/single_bidir.rcps (100%)
 rename recipes/{spp/usecases => usecases/spp_nfv}/vhost_unidir.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/setup/1-start_components.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/setup/2-add_ports_path1.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/setup/3-reg_mac_path1.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/setup/4-start_components.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/setup/5-add_ports_path2.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/setup/6-reg_mac_path2.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/setup/7-flush.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/shutdown/1-del_mac_path1.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/shutdown/2-del_ports_path1.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/shutdown/3-stop_components.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/shutdown/4-del_mac_path2.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/shutdown/5-del_ports_path2.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/shutdown/6-stop_components.rcps (100%)
 rename recipes/{spp_vf/usecase1 => usecases/spp_vf/ssh_login}/shutdown/7-flush.rcps (100%)

diff --git a/recipes/sppc/samples/l2fwd.rcp b/recipes/usecases/spp_container/l2fwd.rcps
similarity index 100%
rename from recipes/sppc/samples/l2fwd.rcp
rename to recipes/usecases/spp_container/l2fwd.rcps
diff --git a/recipes/sppc/samples/lb_pg.rcp b/recipes/usecases/spp_container/lb_pg.rcps
similarity index 100%
rename from recipes/sppc/samples/lb_pg.rcp
rename to recipes/usecases/spp_container/lb_pg.rcps
diff --git a/recipes/sppc/samples/load_balancer.rcp b/recipes/usecases/spp_container/load_balancer.rcps
similarity index 100%
rename from recipes/sppc/samples/load_balancer.rcp
rename to recipes/usecases/spp_container/load_balancer.rcps
diff --git a/recipes/sppc/samples/pg_l2fwd.rcp b/recipes/usecases/spp_container/pg_l2fwd.rcps
similarity index 100%
rename from recipes/sppc/samples/pg_l2fwd.rcp
rename to recipes/usecases/spp_container/pg_l2fwd.rcps
diff --git a/recipes/sppc/samples/pg_l2fwd_less.rcp b/recipes/usecases/spp_container/pg_l2fwd_less.rcps
similarity index 100%
rename from recipes/sppc/samples/pg_l2fwd_less.rcp
rename to recipes/usecases/spp_container/pg_l2fwd_less.rcps
diff --git a/recipes/sppc/samples/test_ring.rcp b/recipes/usecases/spp_container/test_ring.rcps
similarity index 100%
rename from recipes/sppc/samples/test_ring.rcp
rename to recipes/usecases/spp_container/test_ring.rcps
diff --git a/recipes/spp/usecases/dual_bidir.rcps b/recipes/usecases/spp_nfv/dual_bidir.rcps
similarity index 100%
rename from recipes/spp/usecases/dual_bidir.rcps
rename to recipes/usecases/spp_nfv/dual_bidir.rcps
diff --git a/recipes/spp/usecases/dual_loopback.rcps b/recipes/usecases/spp_nfv/dual_loopback.rcps
similarity index 100%
rename from recipes/spp/usecases/dual_loopback.rcps
rename to recipes/usecases/spp_nfv/dual_loopback.rcps
diff --git a/recipes/spp/usecases/ring_dual_bidir.rcps b/recipes/usecases/spp_nfv/ring_dual_bidir.rcps
similarity index 100%
rename from recipes/spp/usecases/ring_dual_bidir.rcps
rename to recipes/usecases/spp_nfv/ring_dual_bidir.rcps
diff --git a/recipes/spp/usecases/ring_dual_unidir.rcps b/recipes/usecases/spp_nfv/ring_dual_unidir.rcps
similarity index 100%
rename from recipes/spp/usecases/ring_dual_unidir.rcps
rename to recipes/usecases/spp_nfv/ring_dual_unidir.rcps
diff --git a/recipes/spp/usecases/single_bidir.rcps b/recipes/usecases/spp_nfv/single_bidir.rcps
similarity index 100%
rename from recipes/spp/usecases/single_bidir.rcps
rename to recipes/usecases/spp_nfv/single_bidir.rcps
diff --git a/recipes/spp/usecases/vhost_unidir.rcps b/recipes/usecases/spp_nfv/vhost_unidir.rcps
similarity index 100%
rename from recipes/spp/usecases/vhost_unidir.rcps
rename to recipes/usecases/spp_nfv/vhost_unidir.rcps
diff --git a/recipes/spp_vf/usecase1/setup/1-start_components.rcps b/recipes/usecases/spp_vf/ssh_login/setup/1-start_components.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/setup/1-start_components.rcps
rename to recipes/usecases/spp_vf/ssh_login/setup/1-start_components.rcps
diff --git a/recipes/spp_vf/usecase1/setup/2-add_ports_path1.rcps b/recipes/usecases/spp_vf/ssh_login/setup/2-add_ports_path1.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/setup/2-add_ports_path1.rcps
rename to recipes/usecases/spp_vf/ssh_login/setup/2-add_ports_path1.rcps
diff --git a/recipes/spp_vf/usecase1/setup/3-reg_mac_path1.rcps b/recipes/usecases/spp_vf/ssh_login/setup/3-reg_mac_path1.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/setup/3-reg_mac_path1.rcps
rename to recipes/usecases/spp_vf/ssh_login/setup/3-reg_mac_path1.rcps
diff --git a/recipes/spp_vf/usecase1/setup/4-start_components.rcps b/recipes/usecases/spp_vf/ssh_login/setup/4-start_components.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/setup/4-start_components.rcps
rename to recipes/usecases/spp_vf/ssh_login/setup/4-start_components.rcps
diff --git a/recipes/spp_vf/usecase1/setup/5-add_ports_path2.rcps b/recipes/usecases/spp_vf/ssh_login/setup/5-add_ports_path2.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/setup/5-add_ports_path2.rcps
rename to recipes/usecases/spp_vf/ssh_login/setup/5-add_ports_path2.rcps
diff --git a/recipes/spp_vf/usecase1/setup/6-reg_mac_path2.rcps b/recipes/usecases/spp_vf/ssh_login/setup/6-reg_mac_path2.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/setup/6-reg_mac_path2.rcps
rename to recipes/usecases/spp_vf/ssh_login/setup/6-reg_mac_path2.rcps
diff --git a/recipes/spp_vf/usecase1/setup/7-flush.rcps b/recipes/usecases/spp_vf/ssh_login/setup/7-flush.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/setup/7-flush.rcps
rename to recipes/usecases/spp_vf/ssh_login/setup/7-flush.rcps
diff --git a/recipes/spp_vf/usecase1/shutdown/1-del_mac_path1.rcps b/recipes/usecases/spp_vf/ssh_login/shutdown/1-del_mac_path1.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/shutdown/1-del_mac_path1.rcps
rename to recipes/usecases/spp_vf/ssh_login/shutdown/1-del_mac_path1.rcps
diff --git a/recipes/spp_vf/usecase1/shutdown/2-del_ports_path1.rcps b/recipes/usecases/spp_vf/ssh_login/shutdown/2-del_ports_path1.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/shutdown/2-del_ports_path1.rcps
rename to recipes/usecases/spp_vf/ssh_login/shutdown/2-del_ports_path1.rcps
diff --git a/recipes/spp_vf/usecase1/shutdown/3-stop_components.rcps b/recipes/usecases/spp_vf/ssh_login/shutdown/3-stop_components.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/shutdown/3-stop_components.rcps
rename to recipes/usecases/spp_vf/ssh_login/shutdown/3-stop_components.rcps
diff --git a/recipes/spp_vf/usecase1/shutdown/4-del_mac_path2.rcps b/recipes/usecases/spp_vf/ssh_login/shutdown/4-del_mac_path2.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/shutdown/4-del_mac_path2.rcps
rename to recipes/usecases/spp_vf/ssh_login/shutdown/4-del_mac_path2.rcps
diff --git a/recipes/spp_vf/usecase1/shutdown/5-del_ports_path2.rcps b/recipes/usecases/spp_vf/ssh_login/shutdown/5-del_ports_path2.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/shutdown/5-del_ports_path2.rcps
rename to recipes/usecases/spp_vf/ssh_login/shutdown/5-del_ports_path2.rcps
diff --git a/recipes/spp_vf/usecase1/shutdown/6-stop_components.rcps b/recipes/usecases/spp_vf/ssh_login/shutdown/6-stop_components.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/shutdown/6-stop_components.rcps
rename to recipes/usecases/spp_vf/ssh_login/shutdown/6-stop_components.rcps
diff --git a/recipes/spp_vf/usecase1/shutdown/7-flush.rcps b/recipes/usecases/spp_vf/ssh_login/shutdown/7-flush.rcps
similarity index 100%
rename from recipes/spp_vf/usecase1/shutdown/7-flush.rcps
rename to recipes/usecases/spp_vf/ssh_login/shutdown/7-flush.rcps
-- 
2.17.1



End of spp Digest, Vol 31, Issue 28
***********************************


From yasufum.o@gmail.com Thu Jun 27 13:41:35 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTQ0181FQDZMX10@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Thu, 27 Jun 2019 13:41:59 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTQ00G0YQDZ9S00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Thu,
 27 Jun 2019 13:41:59 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTQ017NWQDYS3C0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Thu,
 27 Jun 2019 13:41:59 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf105.ddreams.local (Postfix) with ESMTP id 918F07E603C	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Thu, 27 Jun 2019 13:41:59 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 906088E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Thu, 27 Jun 2019 13:41:59 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 8EDA78E6052	for <yamashita.hideyuki@ntt-tx.co.jp>; Thu,
 27 Jun 2019 13:41:59 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 80AC98E6052	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Thu, 27 Jun 2019 13:41:58 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf105.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Thu,
 27 Jun 2019 13:41:58 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fwTe030687;	Thu,
 27 Jun 2019 13:41:58 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5R4fwYq030686;	Thu, 27 Jun 2019 13:41:58 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5R4fwZW030683	for unknown; Thu,
 27 Jun 2019 13:41:58 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fv2f030803 for
 unknown; Thu, 27 Jun 2019 13:41:57 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fv9h030800; Thu,
 27 Jun 2019 13:41:57 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fvDQ012414;	Thu,
 27 Jun 2019 13:41:57 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5R4fvuf012410	for unknown; Thu, 27 Jun 2019 13:41:57 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fvEs017250 for
 unknown; Thu, 27 Jun 2019 13:41:57 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fv8B017245 for
 unknown; Thu, 27 Jun 2019 13:41:57 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5R4foux010540	for unknown; Thu,
 27 Jun 2019 13:41:56 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 5CF3137A8;	Thu, 27 Jun 2019 06:41:45 +0200 (CEST)
Received: from mail-pg1-f171.google.com
 (mail-pg1-f171.google.com [209.85.215.171]) by dpdk.org (Postfix)
 with ESMTP id CB6672BA7 for <spp@dpdk.org>; Thu,
 27 Jun 2019 06:41:41 +0200 (CEST)
Received: by mail-pg1-f171.google.com with SMTP id m4so415461pgk.0 for
 <spp@dpdk.org>; Wed, 26 Jun 2019 21:41:41 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id w197sm1161728pfd.41.2019.06.26.21.41.39
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Wed,
 26 Jun 2019 21:41:40 -0700 (PDT)
Date: Thu, 27 Jun 2019 13:41:35 +0900
From: yasufum.o@gmail.com
Subject: [spp 04450] [spp] [PATCH 0/2] Update documentation
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190627044137.15165-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04450
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=buMWEg92+SdxGY53FX8C7UBSoTBygSnNoElPlmkh/Cg=;
 b=L38o6ilE1HL5B1mb0oTWSNMa6w641fN8hqJBfgo2Br98J8mIwkyxoaN57/YxnN9KZm
 EtH9Ghhm+Qe6VP21YaTyr+nUG0HDx5MVjAZUaqJBwT32nm2E0eXJufHUqzi6F0W97omw
 hq8wLXCcX52zn4dXXkeB8+gu9oYdfzmjVpPykpsO5ZLOZKIXqisWlqkPpwfiyioLCs86
 V83Alu4RrtphPgm3RT6etT8nOGsZhSL0Ql0QYfnUXhd+NrnNQEUWG3WnFwLMvr6xRfpZ
 p8KsDJ/paqda/jAvQux5szuudnJpwTiIrwxqxOtwV7Iyy9FYM1FBPRRtf6l+Pia9ppIO ywmQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=buMWEg92+SdxGY53FX8C7UBSoTBygSnNoElPlmkh/Cg=;
 b=CYmbKFPkPoszyH36C2heE5UcQKy7ZOcaXwueIz4hKtbq53wVih8xRSUaGP+nwkTU63
 aX8vv49129cB0WC46aeaaistsGJEZq/ps/04kiyz0Mh6dLPq7aKiqI+6qJ18Ewr7wudT
 NpO7z+yeCp4gD6+RjlKUxuLgsQtYZ9+WYAvrhjOU2Rc4ZmNJJJCeSSia10RUOf2x4QkR
 nX2Z9yZ+vNM1U2s3TiYF9Q4bYZRHjtj4waNYUaLzGL4b95YOFCcJrfoH9lnM/yi/NuKu
 MW/jOxNgyMghW1QZ5KHEJ8ORde6fi/+j6o/HnJ4RjX5CJHG8mSh0doBbsFPbiFHcanaM Nahw==
X-Gm-Message-State: APjAAAVnPNOjb8PuRncWVUeGflVgNDq0BTN8LXqzmU2CenM28I+rcco/
 F3Eo2ESwZoD5PlWRL+9Z6JCqgUUJ
X-Google-Smtp-Source:
 APXvYqz//kDJOl/C/C7EftDv4G/7mNqhGgNoOT22r46r6YmRnm0TOXAnpzHBBgVLTXU2aZo/faz86w==
X-Received: by 2002:a17:90a:2627:: with SMTP id
 l36mr3575533pje.71.1561610500919; Wed, 26 Jun 2019 21:41:40 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 17
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

* Fix incorrect option `-vhost-client` of spp_mirror. Correct one is
  `--vhost-client`.

* Update command example of SPP CLI because some options are updated.

Yasufumi Ogawa (2):
  docs: fix typo of command example of spp_mirror
  docs: update help message of SPP CLI

 docs/guides/gsg/howto_use.rst | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

-- 
2.17.1



From yasufum.o@gmail.com Thu Jun 27 13:41:36 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd101.ddreams.local
 (zssg-mailmd101.ddreams.local [10.160.123.96]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTQ0181HQDZMX10@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Thu, 27 Jun 2019 13:41:59 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd101.ddreams.local by
 zssg-mailmd101.ddreams.local (dDREAMS) id <0PTQ01812QDZ9P00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Thu,
 27 Jun 2019 13:41:59 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd101.ddreams.local
 (dDREAMS) with ESMTP id <0PTQ00RBQQDZL490@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Thu,
 27 Jun 2019 13:41:59 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id C8AD07E6038	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Thu, 27 Jun 2019 13:41:59 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id C791C8E6063	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Thu, 27 Jun 2019 13:41:59 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id C64548E6060	for <yamashita.hideyuki@ntt-tx.co.jp>; Thu,
 27 Jun 2019 13:41:59 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 20C0D8E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Thu, 27 Jun 2019 13:41:59 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Thu,
 27 Jun 2019 13:41:59 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fw70030694;	Thu,
 27 Jun 2019 13:41:58 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5R4fw8r030693;	Thu, 27 Jun 2019 13:41:58 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5R4fwCe030690	for unknown; Thu,
 27 Jun 2019 13:41:58 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fw7G030811 for
 unknown; Thu, 27 Jun 2019 13:41:58 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fwJV030808; Thu,
 27 Jun 2019 13:41:58 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fwQu012421;	Thu,
 27 Jun 2019 13:41:58 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5R4fwHS012417	for unknown; Thu, 27 Jun 2019 13:41:58 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fv6j017270 for
 unknown; Thu, 27 Jun 2019 13:41:57 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fvdU017264 for
 unknown; Thu, 27 Jun 2019 13:41:57 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5R4fpQj010548	for unknown; Thu,
 27 Jun 2019 13:41:57 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 6FDCA49E0;	Thu, 27 Jun 2019 06:41:45 +0200 (CEST)
Received: from mail-pg1-f194.google.com
 (mail-pg1-f194.google.com [209.85.215.194]) by dpdk.org (Postfix)
 with ESMTP id 68B09325F for <spp@dpdk.org>; Thu,
 27 Jun 2019 06:41:43 +0200 (CEST)
Received: by mail-pg1-f194.google.com with SMTP id s27so410450pgl.2 for
 <spp@dpdk.org>; Wed, 26 Jun 2019 21:41:43 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id w197sm1161728pfd.41.2019.06.26.21.41.41
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Wed,
 26 Jun 2019 21:41:42 -0700 (PDT)
Date: Thu, 27 Jun 2019 13:41:36 +0900
From: yasufum.o@gmail.com
Subject: [spp 04451] [spp] [PATCH 1/2] docs: fix typo of command example of
 spp_mirror
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190627044137.15165-2-yasufum.o@gmail.com>
In-reply-to: <20190627044137.15165-1-yasufum.o@gmail.com>
References: <20190627044137.15165-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04451
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=9Xb5Q86jJeMXHL1rOOZc0ZX1HhJfyk6QMNuWSD8mrmQ=;
 b=bOXg8TDT51TK8ME3dADyXMdrDiG7i0it/ytHx7bdDarOLPDucy2gMHUsgukdYHHu71
 OJlWGMcK4RsnDrZHVg/KUulHsiP+QLglrtEzJ1vpIkpoK2aVP89HtfpEW5N1dkyqKNO+
 ARvA68RbuwfUNJXTbRUS0naG7t/LpjJdmOFcPiD8bjkIteIMVxf/PJIxpVxQUKmBQ3j1
 kdkVrjvqiRtq+JKSPFnIqPQmieIjqD0qF5y9dwnraWvfexoYsDWi4J/e3rBuA08TZEsG
 xHxQd45//24SBugAdYzAYfPN1joTaEpe3h0aietHx0KcHgCKBqz5/gJHbkJ/+FebxEQe PJmw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=9Xb5Q86jJeMXHL1rOOZc0ZX1HhJfyk6QMNuWSD8mrmQ=;
 b=TxsHmPT1ms3oRnHGZ1P/Wv6ZckRL73R51GxXg8taXWd4lFXEsJrsHhOmcYruqsY3RG
 bkixUspZcm/MipHSmplzXd4q8vM3KxC224wU4SRdMR0bizgVjzKfdAb2idVQat0jzpwA
 0gtlFZFyEFdrICOu64CmuiyuDcDTBvbz8Hjsv0y6+BiGsSJJIUVYMv1mF62Isx5QP+yA
 3ooHpbbNZh81gzycUahQ5KLyyUHO7hY4SRem6SQ/ZoKsJzHZFSbB7HeMDnu7CRl6VaDH
 aBHfDisouDLN1eTRmF9rCTLm8zCQOiqUS+r5SlzlXVlAd1Je6RljqTfhzW0Tg4yeEIdB qeUQ==
X-Gm-Message-State: APjAAAV7b0WiPMSCT5FoDG26qZNAChEhmq/IVSlgA7CqfYBWvxd2DRMh
 hU6zrZAcjG8Caa0fh/mS7+moTXVy
X-Google-Smtp-Source:
 APXvYqxEStb/pEo34qtRbKmfxbYhZ5vKZM7j/cVMUS4/knCvO+dhl3qAbKo7x+t0dWX0AIvNgqD6UQ==
X-Received: by 2002:a63:c607:: with SMTP id w7mr1709027pgg.379.1561610502355;
 Wed, 26 Jun 2019 21:41:42 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 25
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to correct option for vhost client mode.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 docs/guides/gsg/howto_use.rst | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/docs/guides/gsg/howto_use.rst b/docs/guides/gsg/howto_use.rst
index 21633d9..c6023ee 100644
--- a/docs/guides/gsg/howto_use.rst
+++ b/docs/guides/gsg/howto_use.rst
@@ -409,7 +409,7 @@ and options are same as ``spp_vf``.
       -- \
       --client-id 1 \
       -s 192.168.1.100:6666 \
-      -vhost-client
+      --vhost-client
 
 EAL options are the same as primary process. Here is a list of application
 options of ``spp_mirror``.
-- 
2.17.1



From yasufum.o@gmail.com Thu Jun 27 13:41:37 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd105.ddreams.local
 (zssg-mailmd105.ddreams.local [10.160.123.100])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTQ0182BQE2MX10@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Thu, 27 Jun 2019 13:42:02 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd105.ddreams.local by
 zssg-mailmd105.ddreams.local (dDREAMS) id <0PTQ00N2AQE2EH00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Thu,
 27 Jun 2019 13:42:02 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd105.ddreams.local
 (dDREAMS) with ESMTP id <0PTQ00ACDQE27G70@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Thu,
 27 Jun 2019 13:42:02 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf106.ddreams.local (Postfix) with ESMTP id 559367E603B	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Thu, 27 Jun 2019 13:42:02 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 53CBB8E6042	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Thu, 27 Jun 2019 13:42:02 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 51C228E6057	for <yamashita.hideyuki@ntt-tx.co.jp>; Thu,
 27 Jun 2019 13:42:02 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 43D548E6061	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Thu, 27 Jun 2019 13:42:01 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf106.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Thu,
 27 Jun 2019 13:42:01 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4g1ao030708;	Thu,
 27 Jun 2019 13:42:01 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5R4g1Is030707;	Thu, 27 Jun 2019 13:42:01 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5R4g0Yv030704	for unknown; Thu,
 27 Jun 2019 13:42:00 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4g07q030837 for
 unknown; Thu, 27 Jun 2019 13:42:00 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4g0GP030834; Thu,
 27 Jun 2019 13:42:00 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4g0mU012428;	Thu,
 27 Jun 2019 13:42:00 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5R4g0oJ012424	for unknown; Thu, 27 Jun 2019 13:42:00 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fx8t017330 for
 unknown; Thu, 27 Jun 2019 13:42:00 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5R4fxnC017325 for
 unknown; Thu, 27 Jun 2019 13:41:59 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5R4frEt010562	for unknown; Thu,
 27 Jun 2019 13:41:59 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 8D50C4C77;	Thu, 27 Jun 2019 06:41:45 +0200 (CEST)
Received: from mail-pf1-f196.google.com
 (mail-pf1-f196.google.com [209.85.210.196]) by dpdk.org (Postfix)
 with ESMTP id 91372326D for <spp@dpdk.org>; Thu,
 27 Jun 2019 06:41:44 +0200 (CEST)
Received: by mail-pf1-f196.google.com with SMTP id m30so551646pff.8 for
 <spp@dpdk.org>; Wed, 26 Jun 2019 21:41:44 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id w197sm1161728pfd.41.2019.06.26.21.41.42
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Wed,
 26 Jun 2019 21:41:43 -0700 (PDT)
Date: Thu, 27 Jun 2019 13:41:37 +0900
From: yasufum.o@gmail.com
Subject: [spp 04452] [spp] [PATCH 2/2] docs: update help message of SPP CLI
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190627044137.15165-3-yasufum.o@gmail.com>
In-reply-to: <20190627044137.15165-1-yasufum.o@gmail.com>
References: <20190627044137.15165-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04452
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=C07w8VgekN2yNktF1ywfKdcFSqt7R9kpup2My6kdUFo=;
 b=paB2fnhJpqh5BQFukvKDBht7mBRgCZyuAxUUEaXNL8E5c1PlNeliUsT/M93Tk4Lauv
 +sfG0a3TjEbLCI/3vIvNFslO5B7puSZ12c74cCvnrEAIljzm1sJVwRxykbnL2EoxgRY0
 fClqsyWB6y8iQBVVxa2/48ce4kRJVYFuDQJi7BVrlcDqS4ZAc8Lmq3O2fmVABh6F7U5L
 Zl1Wv3fJaVeDRYbvqCKc81TwtJt1hMTnrKDCFadvybKjn9iK5YN6sOPgWHKTLZY9rlgW
 jRwpTVeFIGnreElZ3logD+IAWSC6MHPiZIMt5mto4kOdSaWF4hL0DzZ+zftN19rEQNuE w+Hw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=C07w8VgekN2yNktF1ywfKdcFSqt7R9kpup2My6kdUFo=;
 b=rhIQ58U4f7Rcjsv+aepdyMq/pD5Wp8XaleT7l4eljqngaCkuuRezwvnwYGalAuLkJO
 ILqGMkijsR0zBqFxAqX5Vh+HggdsAM/0jL7h82SPijS/LAEENCq8umXRMaphY1BW+5YM
 UkBLycNTAPRa70WiiE22VD3LziKAf3QGuJjaBSfqafRA+7EWnmOGZ2NsMzVhnkVosIBa
 784hVZCZfz0AZ3FTv2oKfOocO7m09OAft8NYIPX8zKOfqgxzd4Z4fy8vP7SzdT5aS+RJ
 aJ9HgskEgvaUNFIoa0CZHDDXcD0YZNxsBgs6y5vgl0fQJ6YuYrqkFDeAG5V7XRqJAxsJ gVdA==
X-Gm-Message-State: APjAAAV1gU2zam+SUWnUo/nDvn188Xz/ICf/mixU4S+zq1Onhxorb56f
 7Spy3eESYW9fqTE2XgvWTum1GMUS
X-Google-Smtp-Source:
 APXvYqwskpnpu3p8IshoUouPkBjuX5gyb2K89TqOWvX5ZH0Yipk3dwiId6n9OouW2rck/29rT0B7YA==
X-Received: by 2002:a17:90a:c596:: with SMTP id
 l22mr3585144pjt.46.1561610503772; Wed, 26 Jun 2019 21:41:43 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 31
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Command options of SPP CLI for getting IP address and port are updated
from getting separately, for example `-b 127.0.0.1` and `-a 7777`, to
get both with one option `-b 127.0.0.1:7777`. This patch is to update
the example of options.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 docs/guides/gsg/howto_use.rst | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

diff --git a/docs/guides/gsg/howto_use.rst b/docs/guides/gsg/howto_use.rst
index c6023ee..3579c75 100644
--- a/docs/guides/gsg/howto_use.rst
+++ b/docs/guides/gsg/howto_use.rst
@@ -186,9 +186,8 @@ All of options can be referred with help option ``-h``.
     optional arguments:
       -h, --help            show this help message and exit
       -b BIND_ADDR, --bind-addr BIND_ADDR
-                            bind address, default=127.0.0.1
-      -a API_PORT, --api-port API_PORT
-                        bind address, default=777
+                            bind address, default=127.0.0.1:7777
+
 
 All of SPP CLI commands are described in :doc:`../../commands/index`.
 
-- 
2.17.1



From spp-request@dpdk.org Thu Jun 27 19:00:02 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd101.ddreams.local
 (zssg-mailmd101.ddreams.local [10.160.123.96]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTR00Q3U54D2340@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Thu, 27 Jun 2019 19:00:13 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd101.ddreams.local by
 zssg-mailmd101.ddreams.local (dDREAMS) id <0PTR0050E54D0400@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Thu,
 27 Jun 2019 19:00:13 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd101.ddreams.local
 (dDREAMS) with ESMTP id <0PTR00VLX54CBCA0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Thu,
 27 Jun 2019 19:00:12 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf106.ddreams.local (Postfix) with ESMTP id E7D7E7E603C	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Thu, 27 Jun 2019 19:00:12 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id E745C8E6055	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Thu, 27 Jun 2019 19:00:12 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id E5A6C8E6061	for <yamashita.hideyuki@ntt-tx.co.jp>; Thu,
 27 Jun 2019 19:00:12 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id E44438E6055	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Thu, 27 Jun 2019 19:00:11 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf106.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Thu,
 27 Jun 2019 19:00:11 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5RA0BS6019874;	Thu,
 27 Jun 2019 19:00:11 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5RA0Bhe019873;	Thu, 27 Jun 2019 19:00:11 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss01.silk.ntt-tx.co.jp
 (imss01.silk.ntt-tx.co.jp [10.107.0.126])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5RA0BhA019870	for unknown; Thu,
 27 Jun 2019 19:00:11 +0900
Received: from imss01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5RA0Bh2014887 for
 unknown; Thu, 27 Jun 2019 19:00:11 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5RA0BFg014884 for
 unknown; Thu, 27 Jun 2019 19:00:11 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5RA04qY031022	for unknown; Thu,
 27 Jun 2019 19:00:10 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 7A28E2956	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Thu,
 27 Jun 2019 12:00:03 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 29
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Thu, 27 Jun 2019 12:00:02 +0200
Message-id: <mailman.3.1561629602.9385.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH 0/2] Update documentation (yasufum.o@gmail.com)
   2. [PATCH 1/2] docs: fix typo of command example of spp_mirror
      (yasufum.o@gmail.com)
   3. [PATCH 2/2] docs: update help message of SPP CLI
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Thu, 27 Jun 2019 13:41:35 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 0/2] Update documentation
Message-ID: <20190627044137.15165-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

* Fix incorrect option `-vhost-client` of spp_mirror. Correct one is
  `--vhost-client`.

* Update command example of SPP CLI because some options are updated.

Yasufumi Ogawa (2):
  docs: fix typo of command example of spp_mirror
  docs: update help message of SPP CLI

 docs/guides/gsg/howto_use.rst | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

-- 
2.17.1



------------------------------

Message: 2
Date: Thu, 27 Jun 2019 13:41:36 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 1/2] docs: fix typo of command example of
	spp_mirror
Message-ID: <20190627044137.15165-2-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to correct option for vhost client mode.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 docs/guides/gsg/howto_use.rst | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/docs/guides/gsg/howto_use.rst b/docs/guides/gsg/howto_use.rst
index 21633d9..c6023ee 100644
--- a/docs/guides/gsg/howto_use.rst
+++ b/docs/guides/gsg/howto_use.rst
@@ -409,7 +409,7 @@ and options are same as ``spp_vf``.
       -- \
       --client-id 1 \
       -s 192.168.1.100:6666 \
-      -vhost-client
+      --vhost-client
 
 EAL options are the same as primary process. Here is a list of application
 options of ``spp_mirror``.
-- 
2.17.1



------------------------------

Message: 3
Date: Thu, 27 Jun 2019 13:41:37 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 2/2] docs: update help message of SPP CLI
Message-ID: <20190627044137.15165-3-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Command options of SPP CLI for getting IP address and port are updated
from getting separately, for example `-b 127.0.0.1` and `-a 7777`, to
get both with one option `-b 127.0.0.1:7777`. This patch is to update
the example of options.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 docs/guides/gsg/howto_use.rst | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

diff --git a/docs/guides/gsg/howto_use.rst b/docs/guides/gsg/howto_use.rst
index c6023ee..3579c75 100644
--- a/docs/guides/gsg/howto_use.rst
+++ b/docs/guides/gsg/howto_use.rst
@@ -186,9 +186,8 @@ All of options can be referred with help option ``-h``.
     optional arguments:
       -h, --help            show this help message and exit
       -b BIND_ADDR, --bind-addr BIND_ADDR
-                            bind address, default=127.0.0.1
-      -a API_PORT, --api-port API_PORT
-                        bind address, default=777
+                            bind address, default=127.0.0.1:7777
+
 
 All of SPP CLI commands are described in :doc:`../../commands/index`.
 
-- 
2.17.1



End of spp Digest, Vol 31, Issue 29
***********************************


From spp-request@dpdk.org Wed Jun 26 19:00:02 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd106.ddreams.local
 (zssg-mailmd106.ddreams.local [10.160.123.101])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTP003J0AGDXF20@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Wed, 26 Jun 2019 19:00:13 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd106.ddreams.local by
 zssg-mailmd106.ddreams.local (dDREAMS) id <0PTP00R1OAGD7V00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 19:00:13 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd106.ddreams.local
 (dDREAMS) with ESMTP id <0PTP00LF1AGDO220@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 19:00:13 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id 80D697E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 19:00:13 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 7FA578E6052	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 19:00:13 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 74D498E6042	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 19:00:13 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id B69668E6052	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 19:00:12 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 19:00:12 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5QA0Cv1022624;	Wed,
 26 Jun 2019 19:00:12 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5QA0CVu022623;	Wed, 26 Jun 2019 19:00:12 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss01.silk.ntt-tx.co.jp
 (imss01.silk.ntt-tx.co.jp [10.107.0.126])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5QA0Cs4022620	for unknown; Wed,
 26 Jun 2019 19:00:12 +0900
Received: from imss01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5QA0CFV002071 for
 unknown; Wed, 26 Jun 2019 19:00:12 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5QA0CC4002065 for
 unknown; Wed, 26 Jun 2019 19:00:12 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5QA05Ho012119	for unknown; Wed,
 26 Jun 2019 19:00:11 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 51B832BA7	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Wed,
 26 Jun 2019 12:00:04 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 27
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Wed, 26 Jun 2019 12:00:02 +0200
Message-id: <mailman.3.1561543202.21391.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH] shared/sec: revise port ability (yasufum.o@gmail.com)
   2. [PATCH] controller: support multi socks to suggest lcores
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Wed, 26 Jun 2019 14:37:02 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] shared/sec: revise port ability
Message-ID: <20190626053702.40082-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to revise term of enum or struct `port ability` to
`port capability`. It also includes members of them.

* Change sppwk_port_abl_ops to sppwk_port_ops
* Change spp_port_ability to sppwk_port_attrs
* Change spp_ability_data to sppwk_port_capability

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/mir_cmd_runner.c                   | 31 +++++------
 src/pcap/cmd_utils.h                          | 31 +++++------
 .../secondary/spp_worker_th/cmd_parser.c      | 24 ++++-----
 .../secondary/spp_worker_th/cmd_parser.h      |  2 +-
 .../spp_worker_th/cmd_res_formatter.c         | 15 +++---
 .../secondary/spp_worker_th/cmd_utils.h       | 16 +++---
 src/shared/secondary/spp_worker_th/spp_port.c | 54 +++++++++----------
 src/shared/secondary/spp_worker_th/spp_port.h |  2 +-
 src/vf/vf_cmd_runner.c                        | 29 +++++-----
 9 files changed, 102 insertions(+), 102 deletions(-)

diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index 17c2c27..307b3f6 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -132,7 +132,7 @@ update_port(enum sppwk_action wk_action,
 		const struct sppwk_port_idx *port,
 		enum sppwk_port_dir dir,
 		const char *name,
-		const struct spp_port_ability *ability)
+		const struct sppwk_port_attrs *port_attrs)
 {
 	int ret = SPP_RET_NG;
 	int port_idx;
@@ -176,9 +176,9 @@ update_port(enum sppwk_action wk_action,
 		if (port_idx >= SPP_RET_OK) {
 			/* registered */
 			/* TODO(yasufum) confirm it is needed for spp_mirror. */
-			if (ability->ops == SPPWK_PORT_ABL_OPS_ADD_VLANTAG) {
+			if (port_attrs->ops == SPPWK_PORT_ABL_OPS_ADD_VLANTAG) {
 				while ((cnt < PORT_ABL_MAX) &&
-					    (port_info->ability[cnt].ops !=
+					    (port_info->port_attrs[cnt].ops !=
 					    SPPWK_PORT_ABL_OPS_ADD_VLANTAG))
 					cnt++;
 				if (cnt >= PORT_ABL_MAX) {
@@ -186,8 +186,8 @@ update_port(enum sppwk_action wk_action,
 						"Non-registratio\n");
 					return SPP_RET_NG;
 				}
-				memcpy(&port_info->ability[cnt], ability,
-					sizeof(struct spp_port_ability));
+				memcpy(&port_info->port_attrs[cnt], port_attrs,
+					sizeof(struct sppwk_port_attrs));
 
 				ret = SPP_RET_OK;
 				break;
@@ -201,19 +201,19 @@ update_port(enum sppwk_action wk_action,
 			return SPP_RET_NG;
 		}
 
-		if (ability->ops != SPPWK_PORT_ABL_OPS_NONE) {
+		if (port_attrs->ops != SPPWK_PORT_ABL_OPS_NONE) {
 			while ((cnt < PORT_ABL_MAX) &&
-					(port_info->ability[cnt].ops !=
+					(port_info->port_attrs[cnt].ops !=
 					SPPWK_PORT_ABL_OPS_NONE)) {
 				cnt++;
 			}
 			if (cnt >= PORT_ABL_MAX) {
 				RTE_LOG(ERR, MIR_CMD_RUNNER,
-						"No space of port ability.\n");
+						"No space of port port_attrs.\n");
 				return SPP_RET_NG;
 			}
-			memcpy(&port_info->ability[cnt], ability,
-					sizeof(struct spp_port_ability));
+			memcpy(&port_info->port_attrs[cnt], port_attrs,
+					sizeof(struct sppwk_port_attrs));
 		}
 
 		port_info->iface_type = port->iface_type;
@@ -225,13 +225,13 @@ update_port(enum sppwk_action wk_action,
 
 	case SPPWK_ACT_DEL:
 		for (cnt = 0; cnt < PORT_ABL_MAX; cnt++) {
-			if (port_info->ability[cnt].ops ==
+			if (port_info->port_attrs[cnt].ops ==
 					SPPWK_PORT_ABL_OPS_NONE)
 				continue;
 
-			if (port_info->ability[cnt].dir == dir)
-				memset(&port_info->ability[cnt], 0x00,
-					sizeof(struct spp_port_ability));
+			if (port_info->port_attrs[cnt].dir == dir)
+				memset(&port_info->port_attrs[cnt], 0x00,
+					sizeof(struct sppwk_port_attrs));
 		}
 
 		ret_del = delete_port_info(port_info, *nof_ports, ports);
@@ -276,7 +276,8 @@ exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
 				sppwk_action_str(cmd->spec.port.wk_action));
 		ret = update_port(cmd->spec.port.wk_action,
 				&cmd->spec.port.port, cmd->spec.port.dir,
-				cmd->spec.port.name, &cmd->spec.port.ability);
+				cmd->spec.port.name,
+				&cmd->spec.port.port_attrs);
 		if (ret == 0) {
 			RTE_LOG(INFO, MIR_CMD_RUNNER, "Exec flush.\n");
 			ret = flush_cmd();
diff --git a/src/pcap/cmd_utils.h b/src/pcap/cmd_utils.h
index 1b757f5..e3714a5 100644
--- a/src/pcap/cmd_utils.h
+++ b/src/pcap/cmd_utils.h
@@ -75,10 +75,10 @@ enum sppwk_worker_type {
  * Port ability operation which indicates vlan tag operation on the port
  * (e.g. add vlan tag or delete vlan tag)
  */
-enum spp_port_ability_ope {
-	SPP_PORT_ABILITY_OPE_NONE,        /**< none */
-	SPP_PORT_ABILITY_OPE_ADD_VLANTAG, /**< add VLAN tag */
-	SPP_PORT_ABILITY_OPE_DEL_VLANTAG, /**< delete VLAN tag */
+enum sppwk_port_ops {
+	SPPWK_PORT_ABL_OPS_NONE,
+	SPPWK_PORT_ABL_OPS_ADD_VLANTAG,
+	SPPWK_PORT_ABL_OPS_DEL_VLANTAG,
 };
 
 /* getopt_long return value for long option */
@@ -95,26 +95,23 @@ enum SPP_LONGOPT_RETVAL {
 };
 
 /** VLAN tag information */
-struct spp_vlantag_info {
+struct sppwk_vlan_tag {
 	int vid; /**< VLAN ID */
 	int pcp; /**< Priority Code Point */
 	int tci; /**< Tag Control Information */
 };
 
-/**
- * Data for each port ability which indicates vlantag related information
- * for the port
- */
-union spp_ability_data {
+/* Ability for vlantag for a port. */
+union sppwk_port_capability {
 	/** VLAN tag information */
-	struct spp_vlantag_info vlantag;
+	struct sppwk_vlan_tag vlantag;
 };
 
-/** Port ability information */
-struct spp_port_ability {
-	enum spp_port_ability_ope ope; /**< Operation */
+/* Port attributes of SPP worker processes. */
+struct sppwk_port_attrs {
+	enum sppwk_port_ops ops;  /**< Port capability Operations */
 	enum sppwk_port_dir dir;  /**< Direction of RX, TX or both */
-	union spp_ability_data data;   /**< Port ability data */
+	union sppwk_port_capability capability;   /**< Port capability */
 };
 
 /* TODO(yasufum) confirm why vlantag is required for spp_pcap. */
@@ -122,7 +119,7 @@ struct spp_port_ability {
 struct sppwk_cls_attrs {
 	uint64_t mac_addr;  /**< Mac address (binary) */
 	char mac_addr_str[STR_LEN_SHORT];  /**< Mac address (text) */
-	struct spp_vlantag_info vlantag;   /**< VLAN tag information */
+	struct sppwk_vlan_tag vlantag;   /**< VLAN tag information */
 };
 
 /* Interface information structure */
@@ -137,7 +134,7 @@ struct sppwk_port_info {
 	int iface_no;
 	int ethdev_port_id;  /**< Consistent ID of ethdev */
 	struct sppwk_cls_attrs cls_attrs;
-	struct spp_port_ability ability[PORT_ABL_MAX];
+	struct sppwk_port_attrs port_attrs[PORT_ABL_MAX];
 };
 
 /* TODO(yasufum) merge it to the same definition in shared/.../cmd_utils.h */
diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.c b/src/shared/secondary/spp_worker_th/cmd_parser.c
index 931c53b..32903c3 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.c
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.c
@@ -540,19 +540,19 @@ parse_port_vlan_ops(void *output, const char *arg_val,
 {
 	int ret;
 	struct sppwk_cmd_port *port = output;
-	struct spp_port_ability *ability = &port->ability;
+	struct sppwk_port_attrs *port_attrs = &port->port_attrs;
 
-	switch (ability->ops) {
+	switch (port_attrs->ops) {
 	case SPPWK_PORT_ABL_OPS_NONE:
 		ret = get_list_idx(arg_val, PORT_ABILITY_LIST);
 		if (unlikely(ret <= 0)) {
 			RTE_LOG(ERR, WK_CMD_PARSER,
-					"Unknown port ability. val=%s\n",
+					"Unknown port attribute. val=%s\n",
 					arg_val);
 			return SPP_RET_NG;
 		}
-		ability->ops = ret;
-		ability->dir = port->dir;
+		port_attrs->ops = ret;
+		port_attrs->dir = port->dir;
 		break;
 	case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
 		/* Nothing to do. */
@@ -572,11 +572,11 @@ parse_port_vid(void *output, const char *arg_val,
 {
 	int vlan_id;
 	struct sppwk_cmd_port *port = output;
-	struct spp_port_ability *ability = &port->ability;
+	struct sppwk_port_attrs *port_attrs = &port->port_attrs;
 
-	switch (ability->ops) {
+	switch (port_attrs->ops) {
 	case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
-		vlan_id = get_int_in_range(&ability->data.vlantag.vid,
+		vlan_id = get_int_in_range(&port_attrs->capability.vlantag.vid,
 			arg_val, 0, ETH_VLAN_ID_MAX);
 		if (unlikely(vlan_id < SPP_RET_OK)) {
 			RTE_LOG(ERR, WK_CMD_PARSER,
@@ -584,7 +584,7 @@ parse_port_vid(void *output, const char *arg_val,
 					arg_val);
 			return SPP_RET_NG;
 		}
-		ability->data.vlantag.pcp = -1;
+		port_attrs->capability.vlantag.pcp = -1;
 		break;
 	default:
 		/* Not used. */
@@ -601,11 +601,11 @@ parse_port_pcp(void *output, const char *arg_val,
 {
 	int pcp;
 	struct sppwk_cmd_port *port = output;
-	struct spp_port_ability *ability = &port->ability;
+	struct sppwk_port_attrs *port_attrs = &port->port_attrs;
 
-	switch (ability->ops) {
+	switch (port_attrs->ops) {
 	case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
-		pcp = get_int_in_range(&ability->data.vlantag.pcp,
+		pcp = get_int_in_range(&port_attrs->capability.vlantag.pcp,
 				arg_val, 0, SPP_VLAN_PCP_MAX);
 		if (unlikely(pcp < SPP_RET_OK)) {
 			RTE_LOG(ERR, WK_CMD_PARSER,
diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.h b/src/shared/secondary/spp_worker_th/cmd_parser.h
index b124dc1..e51c3a4 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.h
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.h
@@ -105,7 +105,7 @@ struct sppwk_cmd_port {
 	struct sppwk_port_idx port;   /**< port type and number */
 	enum sppwk_port_dir dir;  /**< Direction of RX, TX or both. */
 	char name[SPPWK_NAME_BUFSZ];  /**<  component name */
-	struct spp_port_ability ability;  /**< port ability */
+	struct sppwk_port_attrs port_attrs;  /**< port attrs for spp_vf. */
 };
 
 /* TODO(yasufum) Add usage and desc for members. What's command descriptors? */
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index a424fce..820df8f 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -145,24 +145,23 @@ append_vlan_block(const char *name, char **output,
 {
 	int ret = SPP_RET_NG;
 	int i = 0;
-	struct spp_port_ability *info = NULL;
+	struct sppwk_port_attrs *port_attrs = NULL;
 	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
 	if (unlikely(tmp_buff == NULL)) {
 		RTE_LOG(ERR, WK_CMD_RES_FMT,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s)\n",
+				"Failed to allocate buffer (name = %s).\n",
 				name);
 		return SPP_RET_NG;
 	}
 
-	spp_port_ability_get_info(port_id, dir, &info);
+	spp_port_ability_get_info(port_id, dir, &port_attrs);
 	for (i = 0; i < PORT_ABL_MAX; i++) {
-		switch (info[i].ops) {
+		switch (port_attrs[i].ops) {
 		case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
 		case SPPWK_PORT_ABL_OPS_DEL_VLANTAG:
-			ret = append_vlan_value(&tmp_buff, info[i].ops,
-					info[i].data.vlantag.vid,
-					info[i].data.vlantag.pcp);
+			ret = append_vlan_value(&tmp_buff, port_attrs[i].ops,
+					port_attrs[i].capability.vlantag.vid,
+					port_attrs[i].capability.vlantag.pcp);
 			if (unlikely(ret < SPP_RET_OK))
 				return SPP_RET_NG;
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index a935312..ff363f5 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -84,6 +84,7 @@ enum sppwk_lcore_status {
 };
 
 /* Type of SPP worker thread. */
+/* TODO(yasufum) it should be separated into each process. */
 enum sppwk_worker_type {
 	SPPWK_TYPE_NONE,  /**< Not used */
 	SPPWK_TYPE_CLS,  /**< Classifier_mac */
@@ -111,7 +112,7 @@ enum sppwk_port_dir {
  * Port ability operation which indicates vlan tag operation on the port
  * (e.g. add vlan tag or delete vlan tag)
  */
-enum sppwk_port_abl_ops {
+enum sppwk_port_ops {
 	SPPWK_PORT_ABL_OPS_NONE,
 	SPPWK_PORT_ABL_OPS_ADD_VLANTAG,
 	SPPWK_PORT_ABL_OPS_DEL_VLANTAG,
@@ -127,6 +128,7 @@ enum SPP_LONGOPT_RETVAL {
 };
 
 /* Flag of processing type to copy management information */
+/* TODO(yasufum) add comments for each of members. */
 enum copy_mng_flg {
 	COPY_MNG_FLG_NONE,
 	COPY_MNG_FLG_UPDCOPY,
@@ -141,16 +143,16 @@ struct sppwk_vlan_tag {
 };
 
 /* Ability for vlantag for a port. */
-union spp_ability_data {
+union sppwk_port_capability {
 	/** VLAN tag information */
 	struct sppwk_vlan_tag vlantag;
 };
 
-/* Port ability information. */
-struct spp_port_ability {
-	enum sppwk_port_abl_ops ops;   /**< Port ability Operations */
+/* Port attributes of SPP worker processes. */
+struct sppwk_port_attrs {
+	enum sppwk_port_ops ops;  /**< Port capability Operations */
 	enum sppwk_port_dir dir;  /**< Direction of RX, TX or both */
-	union spp_ability_data data;   /**< Port ability data */
+	union sppwk_port_capability capability;   /**< Port capability */
 };
 
 /* Attributes for classifying. */
@@ -175,7 +177,7 @@ struct sppwk_port_info {
 	int iface_no;
 	int ethdev_port_id;  /**< Consistent ID of ethdev */
 	struct sppwk_cls_attrs cls_attrs;
-	struct spp_port_ability ability[PORT_ABL_MAX];
+	struct sppwk_port_attrs port_attrs[PORT_ABL_MAX];
 };
 
 /* Attributes of SPP worker thread named as `component`. */
diff --git a/src/shared/secondary/spp_worker_th/spp_port.c b/src/shared/secondary/spp_worker_th/spp_port.c
index 8de8460..cc87200 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.c
+++ b/src/shared/secondary/spp_worker_th/spp_port.c
@@ -16,8 +16,8 @@
 struct port_abl_info {
 	volatile int ref_index; /* Index to reference area. */
 	volatile int upd_index; /* Index to update area. */
-	struct spp_port_ability ability[TWO_SIDES][PORT_ABL_MAX];
-				/* Port ability information. */
+	struct sppwk_port_attrs port_attrs[TWO_SIDES][PORT_ABL_MAX];
+				/* Port attributes for spp_vf. */
 };
 
 /* Port ability port information */
@@ -53,7 +53,7 @@ spp_port_ability_init(void)
 void
 spp_port_ability_get_info(
 		int port_id, enum sppwk_port_dir dir,
-		struct spp_port_ability **info)
+		struct sppwk_port_attrs **info)
 {
 	struct port_abl_info *mng = NULL;
 
@@ -68,7 +68,7 @@ spp_port_ability_get_info(
 		/* Not used. */
 		break;
 	}
-	*info = mng->ability[mng->ref_index];
+	*info = mng->port_attrs[mng->ref_index];
 }
 
 /* Calculation and Setting of FCS. */
@@ -85,12 +85,12 @@ set_fcs_packet(struct rte_mbuf *pkt)
 static inline int
 add_vlantag_packet(
 		struct rte_mbuf *pkt,
-		const union spp_ability_data *data)
+		const union sppwk_port_capability *capability)
 {
 	struct ether_hdr *old_ether = NULL;
 	struct ether_hdr *new_ether = NULL;
 	struct vlan_hdr  *vlan      = NULL;
-	const struct sppwk_vlan_tag *vlantag = &data->vlantag;
+	const struct sppwk_vlan_tag *vlantag = &capability->vlantag;
 
 	old_ether = rte_pktmbuf_mtod(pkt, struct ether_hdr *);
 	if (old_ether->ether_type == g_vlan_tpid) {
@@ -122,12 +122,12 @@ add_vlantag_packet(
 static inline int
 add_vlantag_all_packets(
 		struct rte_mbuf **pkts, int nb_pkts,
-		const union spp_ability_data *data)
+		const union sppwk_port_capability *capability)
 {
 	int ret = SPP_RET_OK;
 	int cnt = 0;
 	for (cnt = 0; cnt < nb_pkts; cnt++) {
-		ret = add_vlantag_packet(pkts[cnt], data);
+		ret = add_vlantag_packet(pkts[cnt], capability);
 		if (unlikely(ret < 0)) {
 			RTE_LOG(ERR, PORT,
 					"Failed to add VLAN tag."
@@ -142,7 +142,7 @@ add_vlantag_all_packets(
 static inline int
 del_vlantag_packet(
 		struct rte_mbuf *pkt,
-		const union spp_ability_data *data __attribute__ ((unused)))
+		const union sppwk_port_capability *cbl __attribute__ ((unused)))
 {
 	struct ether_hdr *old_ether = NULL;
 	struct ether_hdr *new_ether = NULL;
@@ -174,12 +174,12 @@ del_vlantag_packet(
 static inline int
 del_vlantag_all_packets(
 		struct rte_mbuf **pkts, int nb_pkts,
-		const union spp_ability_data *data)
+		const union sppwk_port_capability *capability)
 {
 	int ret = SPP_RET_OK;
 	int cnt = 0;
 	for (cnt = 0; cnt < nb_pkts; cnt++) {
-		ret = del_vlantag_packet(pkts[cnt], data);
+		ret = del_vlantag_packet(pkts[cnt], capability);
 		if (unlikely(ret < 0)) {
 			RTE_LOG(ERR, PORT,
 					"Failed to del VLAN tag."
@@ -246,8 +246,8 @@ port_ability_set_ability(struct sppwk_port_info *port,
 	int port_id = port->ethdev_port_id;
 	struct port_mng_info *port_mng = &g_port_mng_info[port_id];
 	struct port_abl_info *mng = NULL;
-	struct spp_port_ability *in_ability = port->ability;
-	struct spp_port_ability *out_ability = NULL;
+	struct sppwk_port_attrs *port_attrs_in = port->port_attrs;
+	struct sppwk_port_attrs *port_attrs_out = NULL;
 	struct sppwk_vlan_tag *tag = NULL;
 
 	port_mng->iface_type = port->iface_type;
@@ -265,19 +265,19 @@ port_ability_set_ability(struct sppwk_port_info *port,
 		break;
 	}
 
-	out_ability = mng->ability[mng->upd_index];
-	memset(out_ability, 0x00, sizeof(struct spp_port_ability)
+	port_attrs_out = mng->port_attrs[mng->upd_index];
+	memset(port_attrs_out, 0x00, sizeof(struct sppwk_port_attrs)
 			* PORT_ABL_MAX);
 	for (in_cnt = 0; in_cnt < PORT_ABL_MAX; in_cnt++) {
-		if (in_ability[in_cnt].dir != dir)
+		if (port_attrs_in[in_cnt].dir != dir)
 			continue;
 
-		memcpy(&out_ability[out_cnt], &in_ability[in_cnt],
-				sizeof(struct spp_port_ability));
+		memcpy(&port_attrs_out[out_cnt], &port_attrs_in[in_cnt],
+				sizeof(struct sppwk_port_attrs));
 
-		switch (out_ability[out_cnt].ops) {
+		switch (port_attrs_out[out_cnt].ops) {
 		case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
-			tag = &out_ability[out_cnt].data.vlantag;
+			tag = &port_attrs_out[out_cnt].capability.vlantag;
 			tag->tci = rte_cpu_to_be_16(SPP_VLANTAG_CALC_TCI(
 					tag->vid, tag->pcp));
 			break;
@@ -314,7 +314,7 @@ spp_port_ability_update(const struct sppwk_comp_info *component)
 /* Definition of functions that operate port abilities. */
 typedef int (*port_ability_func)(
 		struct rte_mbuf **pkts, int nb_pkts,
-		const union spp_ability_data *data);
+		const union sppwk_port_capability *capability);
 
 /* List of functions per port ability. */
 port_ability_func port_ability_function_list[] = {
@@ -332,18 +332,18 @@ port_ability_each_operation(uint16_t port_id,
 {
 	int cnt, buf;
 	int ok_pkts = nb_pkts;
-	struct spp_port_ability *info = NULL;
+	struct sppwk_port_attrs *port_attrs = NULL;
 
-	spp_port_ability_get_info(port_id, dir, &info);
-	if (unlikely(info[0].ops == SPPWK_PORT_ABL_OPS_NONE))
+	spp_port_ability_get_info(port_id, dir, &port_attrs);
+	if (unlikely(port_attrs[0].ops == SPPWK_PORT_ABL_OPS_NONE))
 		return nb_pkts;
 
 	for (cnt = 0; cnt < PORT_ABL_MAX; cnt++) {
-		if (info[cnt].ops == SPPWK_PORT_ABL_OPS_NONE)
+		if (port_attrs[cnt].ops == SPPWK_PORT_ABL_OPS_NONE)
 			break;
 
-		ok_pkts = port_ability_function_list[info[cnt].ops](
-				pkts, ok_pkts, &info->data);
+		ok_pkts = port_ability_function_list[port_attrs[cnt].ops](
+				pkts, ok_pkts, &port_attrs->capability);
 	}
 
 	/* Discard remained packets to release mbuf. */
diff --git a/src/shared/secondary/spp_worker_th/spp_port.h b/src/shared/secondary/spp_worker_th/spp_port.h
index a6fb313..81aefa7 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.h
+++ b/src/shared/secondary/spp_worker_th/spp_port.h
@@ -35,7 +35,7 @@ void spp_port_ability_init(void);
  */
 void spp_port_ability_get_info(
 		int port_id, enum sppwk_port_dir dir,
-		struct spp_port_ability **info);
+		struct sppwk_port_attrs **info);
 
 /**
  * Change index of management information.
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index 72e7b97..bab04ed 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -253,7 +253,7 @@ update_port(enum sppwk_action wk_action,
 		const struct sppwk_port_idx *port,
 		enum sppwk_port_dir dir,
 		const char *name,
-		const struct spp_port_ability *ability)
+		const struct sppwk_port_attrs *port_attrs)
 {
 	int ret = SPP_RET_NG;
 	int port_idx;
@@ -297,9 +297,9 @@ update_port(enum sppwk_action wk_action,
 		port_idx = get_idx_port_info(port_info, *nof_ports, ports);
 		if (port_idx >= SPP_RET_OK) {
 			/* registered */
-			if (ability->ops == SPPWK_PORT_ABL_OPS_ADD_VLANTAG) {
+			if (port_attrs->ops == SPPWK_PORT_ABL_OPS_ADD_VLANTAG) {
 				while ((cnt < PORT_ABL_MAX) &&
-					    (port_info->ability[cnt].ops !=
+					    (port_info->port_attrs[cnt].ops !=
 					    SPPWK_PORT_ABL_OPS_ADD_VLANTAG))
 					cnt++;
 				if (cnt >= PORT_ABL_MAX) {
@@ -307,8 +307,8 @@ update_port(enum sppwk_action wk_action,
 						"Non-registratio\n");
 					return SPP_RET_NG;
 				}
-				memcpy(&port_info->ability[cnt], ability,
-					sizeof(struct spp_port_ability));
+				memcpy(&port_info->port_attrs[cnt], port_attrs,
+					sizeof(struct sppwk_port_attrs));
 
 				ret = SPP_RET_OK;
 				break;
@@ -322,9 +322,9 @@ update_port(enum sppwk_action wk_action,
 			return SPP_RET_NG;
 		}
 
-		if (ability->ops != SPPWK_PORT_ABL_OPS_NONE) {
+		if (port_attrs->ops != SPPWK_PORT_ABL_OPS_NONE) {
 			while ((cnt < PORT_ABL_MAX) &&
-					(port_info->ability[cnt].ops !=
+					(port_info->port_attrs[cnt].ops !=
 					SPPWK_PORT_ABL_OPS_NONE)) {
 				cnt++;
 			}
@@ -333,8 +333,8 @@ update_port(enum sppwk_action wk_action,
 						"No space of port ability.\n");
 				return SPP_RET_NG;
 			}
-			memcpy(&port_info->ability[cnt], ability,
-					sizeof(struct spp_port_ability));
+			memcpy(&port_info->port_attrs[cnt], port_attrs,
+					sizeof(struct sppwk_port_attrs));
 		}
 
 		port_info->iface_type = port->iface_type;
@@ -346,13 +346,13 @@ update_port(enum sppwk_action wk_action,
 
 	case SPPWK_ACT_DEL:
 		for (cnt = 0; cnt < PORT_ABL_MAX; cnt++) {
-			if (port_info->ability[cnt].ops ==
+			if (port_info->port_attrs[cnt].ops ==
 					SPPWK_PORT_ABL_OPS_NONE)
 				continue;
 
-			if (port_info->ability[cnt].dir == dir)
-				memset(&port_info->ability[cnt], 0x00,
-					sizeof(struct spp_port_ability));
+			if (port_info->port_attrs[cnt].dir == dir)
+				memset(&port_info->port_attrs[cnt], 0x00,
+					sizeof(struct sppwk_port_attrs));
 		}
 
 		ret_del = delete_port_info(port_info, *nof_ports, ports);
@@ -410,7 +410,8 @@ exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
 				sppwk_action_str(cmd->spec.port.wk_action));
 		ret = update_port(cmd->spec.port.wk_action,
 				&cmd->spec.port.port, cmd->spec.port.dir,
-				cmd->spec.port.name, &cmd->spec.port.ability);
+				cmd->spec.port.name,
+				&cmd->spec.port.port_attrs);
 		if (ret == 0) {
 			RTE_LOG(INFO, VF_CMD_RUNNER, "Exec flush.\n");
 			ret = flush_cmd();
-- 
2.17.1



------------------------------

Message: 2
Date: Wed, 26 Jun 2019 14:37:11 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] controller: support multi socks to suggest
	lcores
Message-ID: <20190626053711.40135-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Lcore suggestion of SPP CLI does not care about layout of sockets, so it
possibly suggest a set of lcores on different sockets each other. For
considering optimization, it should be aware of the layout for
suggesting lcores on the same socket.

This update is to select lcores from the same socket if possible.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/pri.py | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

diff --git a/src/controller/commands/pri.py b/src/controller/commands/pri.py
index 654b7dd..eaf3d09 100644
--- a/src/controller/commands/pri.py
+++ b/src/controller/commands/pri.py
@@ -159,13 +159,14 @@ class SppPrimary(object):
         """Get lcore usage from spp-ctl for making launch options.
 
         Return value is a double dimension list of unsed lcores.
-          [[2,3,...], [16,17,...]]
+          [[0, 2, 4, ...], [1, 3, 5, ...]]
 
         To get the result, get CPU layout as an list first, then remove
         used lcores from the list.
         """
 
         sockets = []  # A set of CPU sockets.
+
         # Get list of CPU layout
         res = self.spp_ctl_cli.get('cpu_layout')
         if res is not None:
@@ -173,13 +174,14 @@ class SppPrimary(object):
                 try:
                     # Get layout of each of sockets as an array.
                     # [[0,1,2,3,..., 15], [16,17,18],...]]
-                    socket = []
                     for sock in res.json():
+                        socket = []
                         for ent in sock['cores']:
                             socket.append(ent['lcores'])
-                    socket.sort()
-                    socket = sum(socket, [])
-                    sockets.append(socket)
+
+                        socket = sum(socket, [])
+                        socket.sort()
+                        sockets.append(socket)
 
                 except KeyError as e:
                     print('Error: {} is not defined!'.format(e))
-- 
2.17.1



End of spp Digest, Vol 31, Issue 27
***********************************


From yasufum.o@gmail.com Wed Jun 26 14:35:44 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd101.ddreams.local
 (zssg-mailmd101.ddreams.local [10.160.123.96]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTO00QMUY82V480@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Wed, 26 Jun 2019 14:36:02 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd101.ddreams.local by
 zssg-mailmd101.ddreams.local (dDREAMS) id <0PTO00G24Y820F00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:36:02 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd101.ddreams.local
 (dDREAMS) with ESMTP id <0PTO0126MY82WUF0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:36:02 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id B8E5B7E6038	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:02 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id B80FB8E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:02 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id ABD388E6063	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:36:02 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 4243F8E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:02 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:36:02 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5a2EN018980;	Wed,
 26 Jun 2019 14:36:02 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5Q5a2ll018979;	Wed, 26 Jun 2019 14:36:02 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5Q5a1P5018976	for unknown; Wed,
 26 Jun 2019 14:36:01 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5a1F1031536 for
 unknown; Wed, 26 Jun 2019 14:36:01 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5a1Rt031532; Wed,
 26 Jun 2019 14:36:01 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5a17p015713;	Wed,
 26 Jun 2019 14:36:01 +0900
Received: from imss01.silk.ntt-tx.co.jp
 (imss01.silk.ntt-tx.co.jp [10.107.0.126])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5Q5a1RO015709	for unknown; Wed, 26 Jun 2019 14:36:01 +0900
Received: from imss01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5a1C1010731 for
 unknown; Wed, 26 Jun 2019 14:36:01 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5a15N010727 for
 unknown; Wed, 26 Jun 2019 14:36:01 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5Q5Zsui026265	for unknown; Wed,
 26 Jun 2019 14:36:00 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 4A4181B464;	Wed, 26 Jun 2019 07:35:53 +0200 (CEST)
Received: from mail-pg1-f171.google.com
 (mail-pg1-f171.google.com [209.85.215.171]) by dpdk.org (Postfix)
 with ESMTP id 402E84F98 for <spp@dpdk.org>; Wed,
 26 Jun 2019 07:35:52 +0200 (CEST)
Received: by mail-pg1-f171.google.com with SMTP id v9so613015pgr.13 for
 <spp@dpdk.org>; Tue, 25 Jun 2019 22:35:52 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id a22sm17148188pfn.173.2019.06.25.22.35.49
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Tue,
 25 Jun 2019 22:35:50 -0700 (PDT)
Date: Wed, 26 Jun 2019 14:35:44 +0900
From: yasufum.o@gmail.com
Subject: [spp 04434] [spp] [PATCH] shared/sec: add shared lib for getting vhost
 cli
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190626053544.39794-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04434
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=xi40IseHDsKLj5wJPWhcv1MenGz4C8rj1LUVJr0wx8Y=;
 b=N5EvvRFLNGw/gHE9Esaa11w+w+axMr5AY+W1kRmjfLrb/Bd07vrlATmXgyYEYmjynP
 JBFw7/71jT6a3NGgAyc/RRRvA8xv1Z8tHUn9XaorGZgd41WpFpKxvzJjtUOc/5w1oDhP
 HAIEBoXlwf2DutssC9dQ3eS2q7gEHDIOdMX4r9Mstg2UOor/hh0zbPPXy20wfKntwYQS
 4LW32/hzu+n+L/PHJ71HLFF6qkfT7nyfGVfOE5vH1OAVdxOjGAsKSWuo4KGFsYdPxpQj
 7lxXsjBTUfUstV6x+oRU+p1ImvJz2y+35IahTTAiHyijhnWfPr1bowr/aWjPLbQI3hmX AfgQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=xi40IseHDsKLj5wJPWhcv1MenGz4C8rj1LUVJr0wx8Y=;
 b=tIUaKACe2/yB3hfO3ArxAkREMy46sXDDOZAdFLMC9B8SRyues17Am+GZHKOEbgOm5O
 dPOjkw1ZzejDOwAPYuxmjSQf9URXAJ9ADgavAww0fC8z1+PYhE8//NswOgDWu0nwoRki
 wMwPweVst3Mw232eyq+3Ujd4jU175yZQ3nTOGaVX4YD8VuWD3v1ALutnbr3mhus31QWR
 At03sm48mH6ypstyVblhXU7z+zkHxcltxSs1OqwQ83UvI7no86H4YWR2SmX+GV7nJa/A
 o81ViNLUJE6SjnanrdfBGcCMeIQlWKUHgfku+7THHKzWjoA0ylxhL8fykUQlTnOegm2X xHfg==
X-Gm-Message-State: APjAAAUN0c3TqWdH6aCAaWxBphQEonLGmXz1Q0WjuDJcl3aFkAX2OIMi
 0pygQfbyHvd8wO3O2sz50xzAx8h+
X-Google-Smtp-Source:
 APXvYqzTkm1/es5G/JwJTHSZZUJR88fIzNnhcIf0zQ+lz9ZlSCYvu7Q1PbHB73O75LfDb5YXW9iEiw==
X-Received: by 2002:a17:90a:20c6:: with SMTP id
 f64mr2405012pjg.57.1561527351250; Tue, 25 Jun 2019 22:35:51 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 245
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

To remove global variable `g_enable_vhost_cli`, add functions for
getting and setting vhost clinet mode and change to use them instead of
the global variable.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/spp_mirror.c                       |  9 ++++---
 src/nfv/main.c                                |  7 +++--
 src/shared/secondary/add_port.c               |  4 +--
 src/shared/secondary/add_port.h               |  3 ---
 .../secondary/spp_worker_th/cmd_utils.c       |  2 +-
 src/shared/secondary/utils.c                  | 21 +++++++++++++++
 src/shared/secondary/utils.h                  | 27 +++++++++++++++++++
 src/vf/spp_vf.c                               |  7 +++--
 8 files changed, 66 insertions(+), 14 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index 305e977..32489ed 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -137,6 +137,9 @@ parse_app_args(int argc, char *argv[])
 	/* Clear startup parameters */
 	memset(&g_startup_param, 0x00, sizeof(g_startup_param));
 
+	/* vhost_cli is disabled as default. */
+	set_vhost_cli_mode(0);
+
 	/* Check options of application */
 	optind = 0;
 	opterr = 0;
@@ -153,7 +156,7 @@ parse_app_args(int argc, char *argv[])
 			proc_flg = 1;
 			break;
 		case SPP_LONGOPT_RETVAL_VHOST_CLIENT:
-			g_enable_vhost_cli = 1;
+			set_vhost_cli_mode(1);
 			break;
 		case 's':
 			ret = parse_server(&ctl_ip, &ctl_port, optarg);
@@ -178,8 +181,8 @@ parse_app_args(int argc, char *argv[])
 	}
 	RTE_LOG(INFO, MIRROR,
 			"Parsed app args (client_id=%d, server=%s:%d, "
-			"vhost_client=%d,)\n",
-			cli_id, ctl_ip, ctl_port, g_enable_vhost_cli);
+			"vhost_client=%d)\n",
+			cli_id, ctl_ip, ctl_port, get_vhost_cli_mode());
 	return SPP_RET_OK;
 }
 
diff --git a/src/nfv/main.c b/src/nfv/main.c
index 9cfe49a..9117d9b 100644
--- a/src/nfv/main.c
+++ b/src/nfv/main.c
@@ -69,11 +69,14 @@ parse_app_args(int argc, char *argv[])
 	int ctl_port;  /* Port num to connect spp_ctl. */
 	int ret;
 
+	/* vhost_cli is disabled as default. */
+	set_vhost_cli_mode(0);
+
 	while ((opt = getopt_long(argc, argvopt, "n:s:", lgopts,
 			&option_index)) != EOF) {
 		switch (opt) {
 		case CMD_OPT_ENABLE_VHOST_CLI:
-			g_enable_vhost_cli = 1;
+			set_vhost_cli_mode(1);
 			break;
 		case 'n':
 			if (parse_client_id(&cli_id, optarg) != 0) {
@@ -203,7 +206,7 @@ main(int argc, char *argv[])
 	if (parse_app_args(argc, argv) < 0)
 		rte_exit(EXIT_FAILURE, "Invalid command-line arguments\n");
 
-	if (g_enable_vhost_cli == 1)
+	if (get_vhost_cli_mode() == 1)
 		RTE_LOG(INFO, SPP_NFV, "vhost client mode is enabled.\n");
 
 	/* initialize port forward array*/
diff --git a/src/shared/secondary/add_port.c b/src/shared/secondary/add_port.c
index e0de36f..2981085 100644
--- a/src/shared/secondary/add_port.c
+++ b/src/shared/secondary/add_port.c
@@ -12,8 +12,6 @@
 #include "shared/secondary/add_port.h"
 #include "shared/secondary/utils.h"
 
-int g_enable_vhost_cli;
-
 char *
 get_vhost_backend_name(unsigned int id)
 {
@@ -164,7 +162,7 @@ add_vhost_pmd(int index)
 	iface = get_vhost_iface_name(index);
 
 	sprintf(devargs, "%s,iface=%s,queues=%d,client=%d",
-			name, iface, nr_queues, g_enable_vhost_cli);
+			name, iface, nr_queues, get_vhost_cli_mode());
 	RTE_LOG(DEBUG, SHARED, "Devargs for vhost: '%s'.\n", devargs);
 	ret = dev_attach_by_devargs(devargs, &vhost_port_id);
 	if (ret < 0) {
diff --git a/src/shared/secondary/add_port.h b/src/shared/secondary/add_port.h
index 943d0d6..cfae1af 100644
--- a/src/shared/secondary/add_port.h
+++ b/src/shared/secondary/add_port.h
@@ -20,9 +20,6 @@
 
 #define RTE_LOGTYPE_SHARED RTE_LOGTYPE_USER1
 
-/* TODO(yasufum) remove it after --vhost-client is retrieved from a func. */
-extern int g_enable_vhost_cli;
-
 /**
  * Get unique name used to reserve vhost interface.
  *
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index f24d1a6..8a40d92 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -488,7 +488,7 @@ del_vhost_sockfile(struct sppwk_port_info *vhost)
 	int cnt;
 
 	/* Do not remove for if it is running in vhost-client mode. */
-	if (g_enable_vhost_cli != 0)
+	if (get_vhost_cli_mode() != 0)
 		return;
 
 	for (cnt = 0; cnt < RTE_MAX_ETHPORTS; cnt++) {
diff --git a/src/shared/secondary/utils.c b/src/shared/secondary/utils.c
index 73800d3..c80a478 100644
--- a/src/shared/secondary/utils.c
+++ b/src/shared/secondary/utils.c
@@ -9,6 +9,7 @@
 #define RTE_LOGTYPE_SHARED RTE_LOGTYPE_USER1
 
 int client_id;
+int vhost_cli;
 
 int set_client_id(int cid)
 {
@@ -25,6 +26,26 @@ int get_client_id(void)
 	return client_id;
 }
 
+int set_vhost_cli_mode(int mode)
+{
+	if (mode == 0 || mode == 1)
+		vhost_cli = mode;
+	else {
+		RTE_LOG(ERR, SHARED, "Invalid value of vhost client\n");
+		return -1;
+	}
+	return 0;
+}
+
+int get_vhost_cli_mode(void)
+{
+	if (vhost_cli < 0) {
+		RTE_LOG(ERR, SHARED, "Vhost client is not initialized.\n");
+		return -1;
+	}
+	return vhost_cli;
+}
+
 /* Parse client ID from given value of string. */
 int
 parse_client_id(int *cli_id, const char *cli_id_str)
diff --git a/src/shared/secondary/utils.h b/src/shared/secondary/utils.h
index 74531b0..eba221f 100644
--- a/src/shared/secondary/utils.h
+++ b/src/shared/secondary/utils.h
@@ -9,9 +9,36 @@ int parse_resource_uid(char *str, char **port_type, int *port_id);
 
 int spp_atoi(const char *str, int *val);
 
+/**
+ * Set client ID from given command argment.
+ *
+ * @params[in] cid Client ID.
+ * @return 0 if succeeded, or -1 if failed.
+ */
 int set_client_id(int cid);
+
+/**
+ * Get client ID.
+ *
+ * @return int value of client ID if succeeded, or -1 if failed.
+ */
 int get_client_id(void);
 
+/**
+ * Set vhost client mode from given command argument.
+ *
+ * @params[in] vhost_cli Enabled if 1, or disabled if 0.
+ * @return 0 if succeeded, or -1 if failed.
+ */
+int set_vhost_cli_mode(int vhost_cli);
+
+/**
+ * Get vhost client mode.
+ *
+ * @return 1 if vhost client is enabled, or 0 if disabled.
+ */
+int get_vhost_cli_mode(void);
+
 /**
  * Parse client ID from given value of string.
  *
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index d8098f2..25997db 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -93,6 +93,9 @@ parse_app_args(int argc, char *argv[])
 	/* Clear startup parameters */
 	memset(&g_startup_param, 0x00, sizeof(g_startup_param));
 
+	/* vhost_cli is disabled as default. */
+	set_vhost_cli_mode(0);
+
 	/* Check options of application */
 	optind = 0;
 	opterr = 0;
@@ -109,7 +112,7 @@ parse_app_args(int argc, char *argv[])
 			proc_flg = 1;
 			break;
 		case SPP_LONGOPT_RETVAL_VHOST_CLIENT:
-			g_enable_vhost_cli = 1;
+			set_vhost_cli_mode(1);
 			break;
 		case 's':
 			ret = parse_server(&ctl_ip, &ctl_port, optarg);
@@ -135,7 +138,7 @@ parse_app_args(int argc, char *argv[])
 	RTE_LOG(INFO, APP,
 			"Parsed app args (client_id=%d,server=%s:%d,"
 			"vhost_client=%d)\n",
-			cli_id, ctl_ip, ctl_port, g_enable_vhost_cli);
+			cli_id, ctl_ip, ctl_port, get_vhost_cli_mode());
 	return SPP_RET_OK;
 }
 
-- 
2.17.1



From yasufum.o@gmail.com Wed Jun 26 14:35:56 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd103.ddreams.local
 (zssg-mailmd103.ddreams.local [10.160.123.98]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTO00QQZY8HV480@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Wed, 26 Jun 2019 14:36:17 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd103.ddreams.local by
 zssg-mailmd103.ddreams.local (dDREAMS) id <0PTO00A0UY8GDV00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:36:16 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd103.ddreams.local
 (dDREAMS) with ESMTP id <0PTO0084NY8G9V10@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:36:16 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf101.ddreams.local (Postfix) with ESMTP id ED50C7E603A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:16 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id EC2228E6055	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:16 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id E796D8E6058	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:36:16 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 12C058E6051	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:16 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf101.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:36:16 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aFH7019137;	Wed,
 26 Jun 2019 14:36:15 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5Q5aF6D019136;	Wed, 26 Jun 2019 14:36:15 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5Q5aFV2019133	for unknown; Wed,
 26 Jun 2019 14:36:15 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aFJ1031807 for
 unknown; Wed, 26 Jun 2019 14:36:15 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aF5x031804; Wed,
 26 Jun 2019 14:36:15 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aFIc015774;	Wed,
 26 Jun 2019 14:36:15 +0900
Received: from imss01.silk.ntt-tx.co.jp
 (imss01.silk.ntt-tx.co.jp [10.107.0.126])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5Q5aFYe015770	for unknown; Wed, 26 Jun 2019 14:36:15 +0900
Received: from imss01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aEou010834 for
 unknown; Wed, 26 Jun 2019 14:36:14 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aEid010828 for
 unknown; Wed, 26 Jun 2019 14:36:14 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5Q5a88S026332	for unknown; Wed,
 26 Jun 2019 14:36:13 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 629A01B950;	Wed, 26 Jun 2019 07:36:07 +0200 (CEST)
Received: from mail-pg1-f195.google.com
 (mail-pg1-f195.google.com [209.85.215.195]) by dpdk.org (Postfix)
 with ESMTP id BB8D74F98 for <spp@dpdk.org>; Wed,
 26 Jun 2019 07:36:05 +0200 (CEST)
Received: by mail-pg1-f195.google.com with SMTP id z19so617747pgl.12 for
 <spp@dpdk.org>; Tue, 25 Jun 2019 22:36:05 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id u1sm15315180pgr.94.2019.06.25.22.36.03
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Tue,
 25 Jun 2019 22:36:04 -0700 (PDT)
Date: Wed, 26 Jun 2019 14:35:56 +0900
From: yasufum.o@gmail.com
Subject: [spp 04435] [spp] [PATCH 0/2] Remove global g_startup_param
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190626053558.39847-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04435
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=tLLKTsEWhohnpkhU+rkIdl6h5d7aAsmzqMR5BQ5T4gA=;
 b=ste2De7rl3OYib0hmg7qSB1tve23nXanJUr8TMHaSsDFaHRC3kCFDhi/h5cV3OJ2R+
 b/D5rQ6XcZsvwvS35AN+r38Qbig8QJn82/sdhuPhjE6oAcv/quH42kK4tzXapctksD2w
 0Pud5iZHM/J4HKUNacOntmsDmHuGGMCsTTOV0/jJnKpgolsbJ1GpqrY/6glhKRiTg/5T
 8ANpyvjKqCNRjyY8uArqjKXXP2A+fYjUNvwS3+uKQwxCa4YIXs8xn7ugEPIqgpFnlyuR
 VvNNwb0onxUpVoTNiHOAtUqTq9MTBDIJP4qZBlf1piFhLb1/+mC9vIh0dHjAw+STKLq1 vszA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=tLLKTsEWhohnpkhU+rkIdl6h5d7aAsmzqMR5BQ5T4gA=;
 b=Juyaf/o+k11JyKd/4W/G53oe/MSZaeTdw/VM/hfmwphXx0VDR90TyukMzEMN00MOoF
 vpdPVmmdIQIh7tLEz0D7YM8i11Nm8QLkp8k8qxPEwLd1aakusthyutTPWpygkss4ORLf
 y3UXKrQXxBiVInxpnWlZIjqqdW81HXJDQh5WBdHBmw5FAM+9YAf0MNP8976UklgrBbEE
 UVOPQHiCaCfpSgImEK6/BUJeyvEw2hhVaT/Ta80C6zO0kEoOmR6tMg9nxcioTLRqrAXJ
 LbmwNq3txcc78tzS3uQsJ9PdHYDca6oKFZQPqt93ZRG3L71L6Hm8htj/3Lzn6yqG4dAi XuuQ==
X-Gm-Message-State: APjAAAVc5sTpOi5o/g7lMgXwRP3TC0m4edibL+BgMLEpe2OVXXoXBqt3
 89Fi4Qv9f1htIBPPnRReq0FvfJJM
X-Google-Smtp-Source:
 APXvYqyIMDlcdT5hDOsowbp4plYKLSxzk+kD6p2zmjBtA/T1Ba9gsgUC5PE8Fpou7StLBRUrBAGJYA==
X-Received: by 2002:a17:90a:2743:: with SMTP id
 o61mr2386066pje.59.1561527364955; Tue, 25 Jun 2019 22:36:04 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 35
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This series of patches is to remove global variable of command args
`g_startup_param` because many of global variables are defined and
strongly depended on each other. It makes hard to change codes.

Instead of this global variable, each of args is retrieved with
following functions.

* get_client_id()
* get_vhost_cli_mode()
* get_spp_ctl_ip()
* get_spp_ctl_port()

Yasufumi Ogawa (2):
  shared/sec: remove global var g_startup_param
  spp_pcap: remove global var g_startup_param

 src/mirror/mir_cmd_runner.c                       | 12 ++++++------
 src/mirror/spp_mirror.c                           | 14 ++++----------
 src/pcap/cmd_runner.c                             |  8 +++-----
 src/pcap/cmd_utils.c                              | 13 +++----------
 src/pcap/cmd_utils.h                              | 15 ++-------------
 src/pcap/spp_pcap.c                               | 15 +++------------
 .../secondary/spp_worker_th/cmd_res_formatter.c   |  3 +--
 src/shared/secondary/spp_worker_th/cmd_runner.c   |  4 ++--
 src/shared/secondary/spp_worker_th/cmd_utils.c    |  9 +--------
 src/shared/secondary/spp_worker_th/cmd_utils.h    | 14 ++------------
 src/vf/spp_vf.c                                   |  8 +-------
 src/vf/vf_cmd_runner.c                            | 12 ++++++------
 12 files changed, 34 insertions(+), 93 deletions(-)

-- 
2.17.1



From yasufum.o@gmail.com Wed Jun 26 14:35:57 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTO00QRBY8IV480@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Wed, 26 Jun 2019 14:36:18 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTO00Z1IY8I3400@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:36:18 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTO00WMVY8I6T10@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:36:18 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf105.ddreams.local (Postfix) with ESMTP id 22DBF7E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:18 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 212E68E6058	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:18 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 15A998E605A	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:36:18 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id C7EF08E6052	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:16 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf105.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:36:16 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aGn4019144;	Wed,
 26 Jun 2019 14:36:16 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5Q5aGFT019143;	Wed, 26 Jun 2019 14:36:16 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5Q5aGmH019140	for unknown; Wed,
 26 Jun 2019 14:36:16 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aGwR031816 for
 unknown; Wed, 26 Jun 2019 14:36:16 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aGXD031813; Wed,
 26 Jun 2019 14:36:16 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aGQv015781;	Wed,
 26 Jun 2019 14:36:16 +0900
Received: from imss01.silk.ntt-tx.co.jp
 (imss01.silk.ntt-tx.co.jp [10.107.0.126])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5Q5aF7b015777	for unknown; Wed, 26 Jun 2019 14:36:15 +0900
Received: from imss01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aF8x010855 for
 unknown; Wed, 26 Jun 2019 14:36:15 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aFm2010849 for
 unknown; Wed, 26 Jun 2019 14:36:15 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5Q5a8bw026338	for unknown; Wed,
 26 Jun 2019 14:36:14 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 700A01B954;	Wed, 26 Jun 2019 07:36:08 +0200 (CEST)
Received: from mail-pg1-f194.google.com
 (mail-pg1-f194.google.com [209.85.215.194]) by dpdk.org (Postfix)
 with ESMTP id 691D51B951 for <spp@dpdk.org>; Wed,
 26 Jun 2019 07:36:07 +0200 (CEST)
Received: by mail-pg1-f194.google.com with SMTP id m4so646492pgk.0 for
 <spp@dpdk.org>; Tue, 25 Jun 2019 22:36:07 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id u1sm15315180pgr.94.2019.06.25.22.36.05
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Tue,
 25 Jun 2019 22:36:06 -0700 (PDT)
Date: Wed, 26 Jun 2019 14:35:57 +0900
From: yasufum.o@gmail.com
Subject: [spp 04436] [spp] [PATCH 1/2] shared/sec: remove global var
 g_startup_param
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190626053558.39847-2-yasufum.o@gmail.com>
In-reply-to: <20190626053558.39847-1-yasufum.o@gmail.com>
References: <20190626053558.39847-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04436
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=QZ+TbWRHmcbk7LDuPn2pJ7jMNedwRjXiSe8d1XL+Cfk=;
 b=U4RUE4NGdf/e5zCX5RVGdwyDjdeSL84fE4XgKIAClFVg8/eNpjoV4/q43wWLJR33E1
 OFUiMgIIi/OB7tpVmU5bjj2//+LvhUWGLNNT0hOvVsMuWU06Pc85a95em+UJ0e/2phoz
 ooRMnhLqgjXpMTdheSayrb3C91f76z8IcRtFaOLZxYuXxGJcUPDnGwSUUuV8t9mviv+l
 jQXA2EPvSTmADfB4kgXBbV3WrqCgsBm756h8F7EBhzFz0wtlH2h/VDF6Er0iSC0mfAN0
 5pCH2PtvUJAsJOo9pal6UnXqXK+Gzupn/3+LT/HevU9NCJppmq2hLPQLop4XrwGY150Z aK6g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=QZ+TbWRHmcbk7LDuPn2pJ7jMNedwRjXiSe8d1XL+Cfk=;
 b=sREqHgDe14NQx3Rf4CtvThWS/nlqVFR3aexP9c/KcFfmlIqfONcU2LgM3tlFROpgy8
 IGT8lzIMvebeDlcN8T9i+KPcTAy1yIgD0xYpgDh45jrzO78LC2cvur+VWddW0t/DbpfH
 u+Vf6B4uKPS9zE2XJgAnQ1iSWA2zDgCa3FeNQy8KS1RjM7FMVCV++WJ8brIYdHuAxi3R
 yPRxWX40RIMHIe0YtSxEFWjV3bpgV300QGi81Lmcond7zyAc2IKXq8gDvg/U2KdyyaOw
 ZktAH1rgmR1DhETV52hHmtbE5rYuf42fqoPGZTIHWgaK9GwhrsQXHPuTyYR+TnCRs+dD 2O4A==
X-Gm-Message-State: APjAAAVsuoyyTsSU41vQ28xmzAB2maTEAiK0d7VP2bP6taJgT9c2qPPc
 urEpg9+3By0OYl1e16qeEz11Bwgt
X-Google-Smtp-Source:
 APXvYqwLUtmxgF8wXiltF7GZfP1zcKeKHBiH59kWUZY4BK3MMh7nktTir47xaQcxrNmODOWcY7Ru8w==
X-Received: by 2002:a17:90a:8a84:: with SMTP id
 x4mr2332420pjn.105.1561527366400; Tue, 25 Jun 2019 22:36:06 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 312
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

In SPP worker processes, command line options, such as client ID or
server's IP address, are contained as members of struct
`startup_param`. Its instance is a global variable and managed with
other global variables so that it accessible from anywhere of program.

This design enables developers to retrieve any gloval variable in same
manner with single function sppwk_get_mng_data(). However, all of this
global variables have dependency each other. In addition, this function
should take seven args for getting variables selectively. It makes
codes become hard to change.

This update is to remove one of such a global variable to ease this
issue. Each of variables can already be retrieved with functions
implemented in previous patches.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/mir_cmd_runner.c                        | 12 ++++++------
 src/mirror/spp_mirror.c                            | 14 ++++----------
 .../secondary/spp_worker_th/cmd_res_formatter.c    |  3 +--
 src/shared/secondary/spp_worker_th/cmd_runner.c    |  4 ++--
 src/shared/secondary/spp_worker_th/cmd_utils.c     |  9 +--------
 src/shared/secondary/spp_worker_th/cmd_utils.h     | 14 ++------------
 src/vf/spp_vf.c                                    |  8 +-------
 src/vf/vf_cmd_runner.c                             | 12 ++++++------
 8 files changed, 23 insertions(+), 53 deletions(-)

diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index abbd6f6..f63a84b 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -33,8 +33,8 @@ update_comp(enum sppwk_action wk_action, const char *name,
 	int *change_core = NULL;
 	int *change_component = NULL;
 
-	sppwk_get_mng_data(NULL, NULL, &comp_info_base, &core_info,
-				&change_core, &change_component, NULL);
+	sppwk_get_mng_data(NULL, &comp_info_base, &core_info, &change_core,
+			&change_component, NULL);
 
 	switch (wk_action) {
 	case SPPWK_ACT_START:
@@ -151,8 +151,8 @@ update_port(enum sppwk_action wk_action,
 				"(component = %s)\n", name);
 		return SPP_RET_NG;
 	}
-	sppwk_get_mng_data(NULL, NULL,
-			&comp_info_base, NULL, NULL, &change_component, NULL);
+	sppwk_get_mng_data(NULL, &comp_info_base, NULL, NULL,
+			&change_component, NULL);
 	comp_info = (comp_info_base + comp_lcore_id);
 	port_info = get_sppwk_port(port->iface_type, port->iface_no);
 	if (dir == SPPWK_PORT_DIR_RX) {
@@ -323,8 +323,8 @@ spp_iterate_core_info(struct spp_iterate_core_params *params)
 		}
 
 		for (cnt = 0; cnt < core->num; cnt++) {
-			sppwk_get_mng_data(NULL, NULL, &comp_info_base,
-							NULL, NULL, NULL, NULL);
+			sppwk_get_mng_data(NULL, &comp_info_base, NULL, NULL,
+					NULL, NULL);
 			comp_info = (comp_info_base + core->id[cnt]);
 			ret = get_mirror_status(lcore_id, core->id[cnt],
 					params);
diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index 32489ed..f040010 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -59,9 +59,6 @@ static uint16_t nb_txd = MIR_TX_DESC_DEFAULT;
 /* Logical core ID for main process */
 static unsigned int g_main_lcore_id = 0xffffffff;
 
-/* Execution parameter of spp_mirror */
-static struct startup_param g_startup_param;
-
 /* Interface management information */
 static struct iface_info g_iface_info;
 
@@ -134,9 +131,6 @@ parse_app_args(int argc, char *argv[])
 	for (cnt = 0; cnt < argcopt; cnt++)
 		argvopt[cnt] = argv[cnt];
 
-	/* Clear startup parameters */
-	memset(&g_startup_param, 0x00, sizeof(g_startup_param));
-
 	/* vhost_cli is disabled as default. */
 	set_vhost_cli_mode(0);
 
@@ -507,10 +501,10 @@ main(int argc, char *argv[])
 		/* Get lcore id of main thread to set its status after */
 		g_main_lcore_id = rte_lcore_id();
 
-		if (sppwk_set_mng_data(&g_startup_param, &g_iface_info,
-					g_component_info, g_core_info,
-					g_change_core, g_change_component,
-					&g_backup_info, g_main_lcore_id) < 0) {
+		if (sppwk_set_mng_data(&g_iface_info, g_component_info,
+					g_core_info, g_change_core,
+					g_change_component, &g_backup_info,
+					g_main_lcore_id) < 0) {
 			RTE_LOG(ERR, MIRROR,
 				"Failed to set management data.\n");
 			break;
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index f095b08..a424fce 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -199,8 +199,7 @@ get_ethdev_port_id(enum port_type iface_type, int iface_no)
 {
 	struct iface_info *iface_info = NULL;
 
-	sppwk_get_mng_data(NULL, &iface_info,
-				NULL, NULL, NULL, NULL, NULL);
+	sppwk_get_mng_data(&iface_info, NULL, NULL, NULL, NULL, NULL);
 	switch (iface_type) {
 	case PHY:
 		return iface_info->nic[iface_no].ethdev_port_id;
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 3684a2c..3ab69f9 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -44,8 +44,8 @@ flush_cmd(void)
 	struct sppwk_comp_info *p_comp_info;
 	struct cancel_backup_info *backup_info;
 
-	sppwk_get_mng_data(NULL, NULL, &p_comp_info,
-				NULL, NULL, &p_change_comp, &backup_info);
+	sppwk_get_mng_data(NULL, &p_comp_info, NULL, NULL, &p_change_comp,
+			&backup_info);
 
 	ret = update_port_info();
 	if (ret < SPP_RET_OK)
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 8a40d92..4f84365 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -34,7 +34,6 @@
 /* A set of pointers of management data */
 /* TODO(yasufum) change names start with `p_change` because it wrong meanig. */
 struct mng_data_info {
-	struct startup_param *p_startup_param;
 	struct iface_info *p_iface_info;
 	struct sppwk_comp_info *p_component_info;
 	struct core_mng_info *p_core_info;
@@ -839,7 +838,6 @@ sppwk_convert_mac_str_to_int64(const char *macaddr)
 
 /* Set management data of global var for given non-NULL args. */
 int sppwk_set_mng_data(
-		struct startup_param *startup_param_p,
 		struct iface_info *iface_p,
 		struct sppwk_comp_info *component_p,
 		struct core_mng_info *core_mng_p,
@@ -852,13 +850,11 @@ int sppwk_set_mng_data(
 	 * TODO(yasufum) confirm why the last `0xffffffff` is same as NULL,
 	 * although it is reserved for meaning as invalid.
 	 */
-	if (startup_param_p == NULL || iface_p == NULL ||
-			component_p == NULL || core_mng_p == NULL ||
+	if (iface_p == NULL || component_p == NULL || core_mng_p == NULL ||
 			change_core_p == NULL || change_component_p == NULL ||
 			backup_info_p == NULL || main_lcore_id == 0xffffffff)
 		return SPP_RET_NG;
 
-	g_mng_data.p_startup_param = startup_param_p;
 	g_mng_data.p_iface_info = iface_p;
 	g_mng_data.p_component_info = component_p;
 	g_mng_data.p_core_info = core_mng_p;
@@ -872,7 +868,6 @@ int sppwk_set_mng_data(
 
 /* Get management data from global var for given non-NULL args. */
 void sppwk_get_mng_data(
-		struct startup_param **startup_param_p,
 		struct iface_info **iface_p,
 		struct sppwk_comp_info **component_p,
 		struct core_mng_info **core_mng_p,
@@ -881,8 +876,6 @@ void sppwk_get_mng_data(
 		struct cancel_backup_info **backup_info_p)
 {
 
-	if (startup_param_p != NULL)
-		*startup_param_p = g_mng_data.p_startup_param;
 	if (iface_p != NULL)
 		*iface_p = g_mng_data.p_iface_info;
 	if (component_p != NULL)
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 425d3eb..e2b987f 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -191,12 +191,6 @@ struct sppwk_comp_info {
 	struct sppwk_port_info *tx_ports[RTE_MAX_ETHPORTS]; /**< tx ports */
 };
 
-/* Manage cmd arg as global variable, used for spp_vf and spp_mirror. */
-struct startup_param {
-	char server_ip[INET_ADDRSTRLEN];  /* IP address of spp-ctl */
-	int server_port;   /* Port Number of spp-ctl */
-};
-
 /* Manage number of interfaces  and port information as global variable. */
 struct iface_info {
 	int nof_phys;    /* Number of phy ports */
@@ -532,7 +526,6 @@ int64_t sppwk_convert_mac_str_to_int64(const char *macaddr);
 /**
  * Set mange data address.
  *
- * @param startup_param_p Pointer to g_startup_param address.
  * @param iface_p Pointer to g_iface_info address.
  * @param component_p Pointer to g_component_info address.
  * @param core_mng_p Pointer to g_core_info address.
@@ -543,8 +536,7 @@ int64_t sppwk_convert_mac_str_to_int64(const char *macaddr);
  * @retval SPP_RET_OK If succeeded.
  * @retval SPP_RET_NG If failed.
  */
-int sppwk_set_mng_data(struct startup_param *startup_param_p,
-		struct iface_info *iface_p,
+int sppwk_set_mng_data(struct iface_info *iface_p,
 		struct sppwk_comp_info *component_p,
 		struct core_mng_info *core_mng_p,
 		int *change_core_p,
@@ -555,7 +547,6 @@ int sppwk_set_mng_data(struct startup_param *startup_param_p,
 /**
  * Get mange data address.
  *
- * @param startup_param_p Pointer to startup params.
  * @param iface_p Pointer to g_iface_info.
  * @param component_p Pointer to g_component_info.
  * @param core_mng_p Pointer to g_core_mng_info.
@@ -563,8 +554,7 @@ int sppwk_set_mng_data(struct startup_param *startup_param_p,
  * @param change_component_p Pointer to g_change_component.
  * @param backup_info_p Pointer to g_backup_info.
  */
-void sppwk_get_mng_data(struct startup_param **startup_param_p,
-		struct iface_info **iface_p,
+void sppwk_get_mng_data(struct iface_info **iface_p,
 		struct sppwk_comp_info **component_p,
 		struct core_mng_info **core_mng_p,
 		int **change_core_p,
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index 25997db..44e39fc 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -21,9 +21,6 @@
 /* Logical core ID for main process */
 static unsigned int g_main_lcore_id = 0xffffffff;
 
-/* Execution parameter of spp_vf */
-static struct startup_param g_startup_param;
-
 /* Interface management information */
 static struct iface_info g_iface_info;
 
@@ -90,9 +87,6 @@ parse_app_args(int argc, char *argv[])
 	for (cnt = 0; cnt < argcopt; cnt++)
 		argvopt[cnt] = argv[cnt];
 
-	/* Clear startup parameters */
-	memset(&g_startup_param, 0x00, sizeof(g_startup_param));
-
 	/* vhost_cli is disabled as default. */
 	set_vhost_cli_mode(0);
 
@@ -240,7 +234,7 @@ main(int argc, char *argv[])
 		/* Get lcore id of main thread to set its status after */
 		g_main_lcore_id = rte_lcore_id();
 
-		if (sppwk_set_mng_data(&g_startup_param, &g_iface_info,
+		if (sppwk_set_mng_data(&g_iface_info,
 					g_component_info, g_core_info,
 					g_change_core, g_change_component,
 					&g_backup_info,
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index 4be3188..d9adc48 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -131,8 +131,8 @@ update_comp(enum sppwk_action wk_action, const char *name,
 	int *change_core = NULL;
 	int *change_component = NULL;
 
-	sppwk_get_mng_data(NULL, NULL, &comp_info_base, &core_info,
-				&change_core, &change_component, NULL);
+	sppwk_get_mng_data(NULL, &comp_info_base, &core_info, &change_core,
+			&change_component, NULL);
 
 	switch (wk_action) {
 	case SPPWK_ACT_START:
@@ -272,8 +272,8 @@ update_port(enum sppwk_action wk_action,
 				"(component = %s)\n", name);
 		return SPP_RET_NG;
 	}
-	sppwk_get_mng_data(NULL, NULL,
-			&comp_info_base, NULL, NULL, &change_component, NULL);
+	sppwk_get_mng_data(NULL, &comp_info_base, NULL, NULL,
+			&change_component, NULL);
 	comp_info = (comp_info_base + comp_lcore_id);
 	port_info = get_sppwk_port(port->iface_type, port->iface_no);
 	if (dir == SPPWK_PORT_DIR_RX) {
@@ -457,8 +457,8 @@ spp_iterate_core_info(struct spp_iterate_core_params *params)
 		}
 
 		for (cnt = 0; cnt < core->num; cnt++) {
-			sppwk_get_mng_data(NULL, NULL, &comp_info_base,
-							NULL, NULL, NULL, NULL);
+			sppwk_get_mng_data(NULL, &comp_info_base, NULL, NULL,
+					NULL, NULL);
 			comp_info = (comp_info_base + core->id[cnt]);
 
 			if (comp_info->wk_type == SPPWK_TYPE_CLS) {
-- 
2.17.1



From yasufum.o@gmail.com Wed Jun 26 14:35:58 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTO00QRUY8JV480@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Wed, 26 Jun 2019 14:36:19 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTO00544Y8JSI00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:36:19 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTO004TIY8JZR00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:36:19 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id 427047E6038	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:19 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 40E3E8E6058	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:19 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 34CF98E605E	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:36:19 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id C80C58E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:18 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:36:18 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aIbV019168;	Wed,
 26 Jun 2019 14:36:18 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5Q5aIcs019166;	Wed, 26 Jun 2019 14:36:18 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5Q5aIRa019163	for unknown; Wed,
 26 Jun 2019 14:36:18 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aIOj031848 for
 unknown; Wed, 26 Jun 2019 14:36:18 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aIUW031845; Wed,
 26 Jun 2019 14:36:18 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aHuj015788;	Wed,
 26 Jun 2019 14:36:17 +0900
Received: from imss01.silk.ntt-tx.co.jp
 (imss01.silk.ntt-tx.co.jp [10.107.0.126])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5Q5aHaP015784	for unknown; Wed, 26 Jun 2019 14:36:17 +0900
Received: from imss01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aHmJ010880 for
 unknown; Wed, 26 Jun 2019 14:36:17 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aHGs010877 for
 unknown; Wed, 26 Jun 2019 14:36:17 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5Q5aAAD026350	for unknown; Wed,
 26 Jun 2019 14:36:16 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 7A1E61B95A;	Wed, 26 Jun 2019 07:36:10 +0200 (CEST)
Received: from mail-pg1-f196.google.com
 (mail-pg1-f196.google.com [209.85.215.196]) by dpdk.org (Postfix)
 with ESMTP id BC00B1B955 for <spp@dpdk.org>; Wed,
 26 Jun 2019 07:36:08 +0200 (CEST)
Received: by mail-pg1-f196.google.com with SMTP id z75so633132pgz.5 for
 <spp@dpdk.org>; Tue, 25 Jun 2019 22:36:08 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id u1sm15315180pgr.94.2019.06.25.22.36.06
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Tue,
 25 Jun 2019 22:36:07 -0700 (PDT)
Date: Wed, 26 Jun 2019 14:35:58 +0900
From: yasufum.o@gmail.com
Subject: [spp 04437] [spp] [PATCH 2/2] spp_pcap: remove global var
 g_startup_param
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190626053558.39847-3-yasufum.o@gmail.com>
In-reply-to: <20190626053558.39847-1-yasufum.o@gmail.com>
References: <20190626053558.39847-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04437
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=gyeGH6yJscEbrWy4gW3lASbdZ4NKKJCEOWZhMe+nyM4=;
 b=ISU9FtYe/IN6vDyuMqeX8aWC3nX8VEJEHNe7arF0Wtmjn9QERhY0e1CDGGBiYmAAsZ
 QJKa2Le9iTMaEYVlkwG51wQZfwVcukVxshH6s7AFoU5gGay1ufiyY2o/wfUPstjwNqh0
 dY8hyAKAIb7F7rwd3Fbf2CBYYJa/At7DgFX1Y/e9O+VbDyU1fCL9J4OUI6CvXjh7qg4C
 rGnyAEU/IM+tZf7vSxGSamcxHgKh5LhLkpjG3PUELM+dfL46Zq/iyeArEUhiIhsftaEZ
 e3lDM9s1t2AWP81dhsimsve9USD+3VZma3V4WhNs75ozlG5UegPEAuyqZg0UxgG9HLow /O2A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=gyeGH6yJscEbrWy4gW3lASbdZ4NKKJCEOWZhMe+nyM4=;
 b=SN2gMOqY/KHfpBg/yB7iPKNehHLBGQHL+x3fdVhXVgfdK/4W7wP2R0iIO5OndQLXh5
 a1pLLdSa8xAwhmT+gBMghKfQgpWDkfiebHSlPfR1VwTMvqjDgv7wpB7LWa3XB12pnY6+
 ngCt+MME4TlSspew4g5GPCVP6W6R4ZlFtsKjadz8ukqzYAAzS5ghkxLYyRo4lN9q8SoY
 3HVBKHE6TfZ+/mRHmNtDZeIK3pJqLjDK4OZRKhtzuJmh+J/UFlrugumYPoFsWj4/wXbM
 t2QgqhoCD3dWqClj+sno1IoAUw0QMwrfN9DOn+z9wLt/A2guHDWMDssV3Yni7L6/Mo33 8Wng==
X-Gm-Message-State: APjAAAXMEr5h+oHyVag4ORkjCA7K2nsx8FLpQxuHAiSNx8rD1Rzak2rS
 Uzj5FcR1gP4NQWLvtMdlTC+pCxj9
X-Google-Smtp-Source:
 APXvYqxT7kLHEtp33DribsRH3mL3ncXT9VywMsFQY7XIhyZ2VO6EbxR/0XWwwvPXMZSWgEzaYFaV1Q==
X-Received: by 2002:a17:90a:bd93:: with SMTP id
 z19mr2422025pjr.49.1561527367799; Tue, 25 Jun 2019 22:36:07 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 192
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update for spp_pcap is the same as previous one for removing global
`g_startup_param`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/pcap/cmd_runner.c |  8 +++-----
 src/pcap/cmd_utils.c  | 13 +++----------
 src/pcap/cmd_utils.h  | 15 ++-------------
 src/pcap/spp_pcap.c   | 15 +++------------
 4 files changed, 11 insertions(+), 40 deletions(-)

diff --git a/src/pcap/cmd_runner.c b/src/pcap/cmd_runner.c
index 4c1891e..48e8eba 100644
--- a/src/pcap/cmd_runner.c
+++ b/src/pcap/cmd_runner.c
@@ -373,7 +373,7 @@ append_capture_status_value(const char *name, char **output,
 {
 	int *capture_status = NULL;
 
-	spp_get_mng_data_addr(NULL, NULL, NULL, NULL, &capture_status);
+	spp_get_mng_data_addr(NULL, NULL, NULL, &capture_status);
 
 	return append_json_str_value(name, output,
 			CAPTURE_STATUS_STRINGS[*capture_status]);
@@ -797,15 +797,13 @@ send_command_result_response(int *sock,
 
 	/* pcap start command */
 	if (request->is_requested_start) {
-		spp_get_mng_data_addr(NULL, NULL, NULL,
-				      &capture_request, NULL);
+		spp_get_mng_data_addr(NULL, NULL, &capture_request, NULL);
 		*capture_request = SPP_CAPTURE_RUNNING;
 	}
 
 	/* pcap stop command */
 	if (request->is_requested_stop) {
-		spp_get_mng_data_addr(NULL, NULL, NULL,
-					&capture_request, NULL);
+		spp_get_mng_data_addr(NULL, NULL, &capture_request, NULL);
 		*capture_request = SPP_CAPTURE_IDLE;
 	}
 
diff --git a/src/pcap/cmd_utils.c b/src/pcap/cmd_utils.c
index d9e09e5..52ca905 100644
--- a/src/pcap/cmd_utils.c
+++ b/src/pcap/cmd_utils.c
@@ -14,7 +14,6 @@
 
 /* Manage data to addoress */
 struct mng_data_info {
-	struct startup_param	  *p_startup_param;
 	struct iface_info	  *p_iface_info;
 	struct core_mng_info	  *p_core_info;
 	int			  *p_capture_request;
@@ -258,21 +257,18 @@ int spp_format_port_string(char *port, enum port_type iface_type, int iface_no)
 }
 
 /* Set mange data address */
-int spp_set_mng_data_addr(struct startup_param *startup_param_p,
-			  struct iface_info *iface_p,
+int spp_set_mng_data_addr(struct iface_info *iface_p,
 			  struct core_mng_info *core_mng_p,
 			  int *capture_request_p,
 			  int *capture_status_p,
 			  unsigned int main_lcore_id)
 {
-	if (startup_param_p == NULL || iface_p == NULL ||
-			core_mng_p == NULL ||
+	if (iface_p == NULL || core_mng_p == NULL ||
 			capture_request_p == NULL ||
 			capture_status_p == NULL ||
 			main_lcore_id == 0xffffffff)
 		return SPPWK_RET_NG;
 
-	g_mng_data_addr.p_startup_param = startup_param_p;
 	g_mng_data_addr.p_iface_info = iface_p;
 	g_mng_data_addr.p_core_info = core_mng_p;
 	g_mng_data_addr.p_capture_request = capture_request_p;
@@ -283,15 +279,12 @@ int spp_set_mng_data_addr(struct startup_param *startup_param_p,
 }
 
 /* Get manage data address */
-void spp_get_mng_data_addr(struct startup_param **startup_param_p,
-			   struct iface_info **iface_p,
+void spp_get_mng_data_addr(struct iface_info **iface_p,
 			   struct core_mng_info **core_mng_p,
 			   int **capture_request_p,
 			   int **capture_status_p)
 {
 
-	if (startup_param_p != NULL)
-		*startup_param_p = g_mng_data_addr.p_startup_param;
 	if (iface_p != NULL)
 		*iface_p = g_mng_data_addr.p_iface_info;
 	if (core_mng_p != NULL)
diff --git a/src/pcap/cmd_utils.h b/src/pcap/cmd_utils.h
index 8281a3b..4fa2ea9 100644
--- a/src/pcap/cmd_utils.h
+++ b/src/pcap/cmd_utils.h
@@ -155,13 +155,6 @@ struct sppwk_comp_info {
 	struct sppwk_port_info *tx_ports[RTE_MAX_ETHPORTS]; /**< tx ports */
 };
 
-/* Manage given options as global variable */
-struct startup_param {
-	//int client_id;  /* Client ID */
-	char server_ip[INET_ADDRSTRLEN];  /* IP address of spp-ctl */
-	int server_port;  /* Port Number of spp-ctl */
-};
-
 /* Manage interfaces and port information as global variable */
 /* TODO(yasufum) confirm why nof_rings is required not used in anywhere. */
 struct iface_info {
@@ -327,7 +320,6 @@ spp_format_port_string(char *port, enum port_type iface_type, int iface_no);
 /**
  * Set mange data address
  *
- * @param startup_param_p Pointer to g_startup_param address.
  * @param iface_p Pointer to g_iface_info address.
  * @param core_mng_p Pointer to g_core_info address.
  * @param capture_status_p Pointer to status of pcap.
@@ -336,8 +328,7 @@ spp_format_port_string(char *port, enum port_type iface_type, int iface_no);
  * @retval SPP_RET_OK If succeeded.
  * @retval SPP_RET_NG If failed.
  */
-int spp_set_mng_data_addr(struct startup_param *startup_param_p,
-			  struct iface_info *iface_p,
+int spp_set_mng_data_addr(struct iface_info *iface_p,
 			  struct core_mng_info *core_mng_p,
 			  int *capture_request_p,
 			  int *capture_status_p,
@@ -346,14 +337,12 @@ int spp_set_mng_data_addr(struct startup_param *startup_param_p,
 /**
  * Get mange data address
  *
- * @param startup_param_p Pointer to startup params.
  * @param iface_p Pointer to g_iface_info.
  * @param core_mng_p Pointer to g_core_mng_info.
  * @param capture_request_p Pointer to status of pcap.
  * @param capture_status_p Pointer to req of pcap.
  */
-void spp_get_mng_data_addr(struct startup_param **startup_param_p,
-			   struct iface_info **iface_p,
+void spp_get_mng_data_addr(struct iface_info **iface_p,
 			   struct core_mng_info **core_mng_p,
 			   int **capture_request_p,
 			   int **capture_status_p);
diff --git a/src/pcap/spp_pcap.c b/src/pcap/spp_pcap.c
index b69ffdd..0b846f3 100644
--- a/src/pcap/spp_pcap.c
+++ b/src/pcap/spp_pcap.c
@@ -132,9 +132,6 @@ struct pcap_status_info {
 /* Lcore ID of main thread. */
 static unsigned int g_main_lcore_id = 0xffffffff;
 
-/* Arguments for spp_pcap process. */
-static struct startup_param g_startup_param;
-
 /* Interface management information */
 static struct iface_info g_iface_info;
 
@@ -273,9 +270,6 @@ parse_app_args(int argc, char *argv[])
 	for (cnt = 0; cnt < argcopt; cnt++)
 		argvopt[cnt] = argv[cnt];
 
-	/* Clear startup parameters */
-	memset(&g_startup_param, 0x00, sizeof(g_startup_param));
-
 	/* option parameters init */
 	memset(&g_pcap_option, 0x00, sizeof(g_pcap_option));
 	strcpy(g_pcap_option.compress_file_path, DEFAULT_OUTPUT_DIR);
@@ -940,12 +934,9 @@ main(int argc, char *argv[])
 		g_main_lcore_id = rte_lcore_id();
 
 		/* set manage address */
-		if (spp_set_mng_data_addr(&g_startup_param,
-					  &g_iface_info,
-					  g_core_info,
-					  &g_capture_request,
-					  &g_capture_status,
-					  g_main_lcore_id) < 0) {
+		if (spp_set_mng_data_addr(&g_iface_info, g_core_info,
+					&g_capture_request, &g_capture_status,
+					g_main_lcore_id) < 0) {
 			RTE_LOG(ERR, SPP_PCAP,
 				"manage address set is failed.\n");
 			break;
-- 
2.17.1



From spp-request@dpdk.org Wed Jun 26 14:36:09 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd101.ddreams.local
 (zssg-mailmd101.ddreams.local [10.160.123.96]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTO00QRWY8JV480@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Wed, 26 Jun 2019 14:36:19 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd101.ddreams.local by
 zssg-mailmd101.ddreams.local (dDREAMS) id <0PTO00G22Y8JP300@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:36:19 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd101.ddreams.local
 (dDREAMS) with ESMTP id <0PTO012G0Y8JWUF0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:36:19 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id 437447E603A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:19 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 41B0D8E6068	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:19 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 403C38E6061	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:36:19 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 5B0198E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:18 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:36:18 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aIp9019160;	Wed,
 26 Jun 2019 14:36:18 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5Q5aIFa019159;	Wed, 26 Jun 2019 14:36:18 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss01.silk.ntt-tx.co.jp
 (imss01.silk.ntt-tx.co.jp [10.107.0.126])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5Q5aINZ019156	for unknown; Wed,
 26 Jun 2019 14:36:18 +0900
Received: from imss01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aHbc010892 for
 unknown; Wed, 26 Jun 2019 14:36:17 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aHPY010886 for
 unknown; Wed, 26 Jun 2019 14:36:17 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5Q5aA5r026354	for unknown; Wed,
 26 Jun 2019 14:36:16 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 826D21B95C	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Wed,
 26 Jun 2019 07:36:10 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 24
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Wed, 26 Jun 2019 07:36:09 +0200
Message-id: <mailman.23612.1561527369.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH] shared/sec: add shared lib for getting vhost cli
      (yasufum.o@gmail.com)
   2. [PATCH 0/2] Remove global g_startup_param (yasufum.o@gmail.com)
   3. [PATCH 1/2] shared/sec: remove global var g_startup_param
      (yasufum.o@gmail.com)
   4. [PATCH 2/2] spp_pcap: remove global var g_startup_param
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Wed, 26 Jun 2019 14:35:44 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] shared/sec: add shared lib for getting vhost
	cli
Message-ID: <20190626053544.39794-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

To remove global variable `g_enable_vhost_cli`, add functions for
getting and setting vhost clinet mode and change to use them instead of
the global variable.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/spp_mirror.c                       |  9 ++++---
 src/nfv/main.c                                |  7 +++--
 src/shared/secondary/add_port.c               |  4 +--
 src/shared/secondary/add_port.h               |  3 ---
 .../secondary/spp_worker_th/cmd_utils.c       |  2 +-
 src/shared/secondary/utils.c                  | 21 +++++++++++++++
 src/shared/secondary/utils.h                  | 27 +++++++++++++++++++
 src/vf/spp_vf.c                               |  7 +++--
 8 files changed, 66 insertions(+), 14 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index 305e977..32489ed 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -137,6 +137,9 @@ parse_app_args(int argc, char *argv[])
 	/* Clear startup parameters */
 	memset(&g_startup_param, 0x00, sizeof(g_startup_param));
 
+	/* vhost_cli is disabled as default. */
+	set_vhost_cli_mode(0);
+
 	/* Check options of application */
 	optind = 0;
 	opterr = 0;
@@ -153,7 +156,7 @@ parse_app_args(int argc, char *argv[])
 			proc_flg = 1;
 			break;
 		case SPP_LONGOPT_RETVAL_VHOST_CLIENT:
-			g_enable_vhost_cli = 1;
+			set_vhost_cli_mode(1);
 			break;
 		case 's':
 			ret = parse_server(&ctl_ip, &ctl_port, optarg);
@@ -178,8 +181,8 @@ parse_app_args(int argc, char *argv[])
 	}
 	RTE_LOG(INFO, MIRROR,
 			"Parsed app args (client_id=%d, server=%s:%d, "
-			"vhost_client=%d,)\n",
-			cli_id, ctl_ip, ctl_port, g_enable_vhost_cli);
+			"vhost_client=%d)\n",
+			cli_id, ctl_ip, ctl_port, get_vhost_cli_mode());
 	return SPP_RET_OK;
 }
 
diff --git a/src/nfv/main.c b/src/nfv/main.c
index 9cfe49a..9117d9b 100644
--- a/src/nfv/main.c
+++ b/src/nfv/main.c
@@ -69,11 +69,14 @@ parse_app_args(int argc, char *argv[])
 	int ctl_port;  /* Port num to connect spp_ctl. */
 	int ret;
 
+	/* vhost_cli is disabled as default. */
+	set_vhost_cli_mode(0);
+
 	while ((opt = getopt_long(argc, argvopt, "n:s:", lgopts,
 			&option_index)) != EOF) {
 		switch (opt) {
 		case CMD_OPT_ENABLE_VHOST_CLI:
-			g_enable_vhost_cli = 1;
+			set_vhost_cli_mode(1);
 			break;
 		case 'n':
 			if (parse_client_id(&cli_id, optarg) != 0) {
@@ -203,7 +206,7 @@ main(int argc, char *argv[])
 	if (parse_app_args(argc, argv) < 0)
 		rte_exit(EXIT_FAILURE, "Invalid command-line arguments\n");
 
-	if (g_enable_vhost_cli == 1)
+	if (get_vhost_cli_mode() == 1)
 		RTE_LOG(INFO, SPP_NFV, "vhost client mode is enabled.\n");
 
 	/* initialize port forward array*/
diff --git a/src/shared/secondary/add_port.c b/src/shared/secondary/add_port.c
index e0de36f..2981085 100644
--- a/src/shared/secondary/add_port.c
+++ b/src/shared/secondary/add_port.c
@@ -12,8 +12,6 @@
 #include "shared/secondary/add_port.h"
 #include "shared/secondary/utils.h"
 
-int g_enable_vhost_cli;
-
 char *
 get_vhost_backend_name(unsigned int id)
 {
@@ -164,7 +162,7 @@ add_vhost_pmd(int index)
 	iface = get_vhost_iface_name(index);
 
 	sprintf(devargs, "%s,iface=%s,queues=%d,client=%d",
-			name, iface, nr_queues, g_enable_vhost_cli);
+			name, iface, nr_queues, get_vhost_cli_mode());
 	RTE_LOG(DEBUG, SHARED, "Devargs for vhost: '%s'.\n", devargs);
 	ret = dev_attach_by_devargs(devargs, &vhost_port_id);
 	if (ret < 0) {
diff --git a/src/shared/secondary/add_port.h b/src/shared/secondary/add_port.h
index 943d0d6..cfae1af 100644
--- a/src/shared/secondary/add_port.h
+++ b/src/shared/secondary/add_port.h
@@ -20,9 +20,6 @@
 
 #define RTE_LOGTYPE_SHARED RTE_LOGTYPE_USER1
 
-/* TODO(yasufum) remove it after --vhost-client is retrieved from a func. */
-extern int g_enable_vhost_cli;
-
 /**
  * Get unique name used to reserve vhost interface.
  *
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index f24d1a6..8a40d92 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -488,7 +488,7 @@ del_vhost_sockfile(struct sppwk_port_info *vhost)
 	int cnt;
 
 	/* Do not remove for if it is running in vhost-client mode. */
-	if (g_enable_vhost_cli != 0)
+	if (get_vhost_cli_mode() != 0)
 		return;
 
 	for (cnt = 0; cnt < RTE_MAX_ETHPORTS; cnt++) {
diff --git a/src/shared/secondary/utils.c b/src/shared/secondary/utils.c
index 73800d3..c80a478 100644
--- a/src/shared/secondary/utils.c
+++ b/src/shared/secondary/utils.c
@@ -9,6 +9,7 @@
 #define RTE_LOGTYPE_SHARED RTE_LOGTYPE_USER1
 
 int client_id;
+int vhost_cli;
 
 int set_client_id(int cid)
 {
@@ -25,6 +26,26 @@ int get_client_id(void)
 	return client_id;
 }
 
+int set_vhost_cli_mode(int mode)
+{
+	if (mode == 0 || mode == 1)
+		vhost_cli = mode;
+	else {
+		RTE_LOG(ERR, SHARED, "Invalid value of vhost client\n");
+		return -1;
+	}
+	return 0;
+}
+
+int get_vhost_cli_mode(void)
+{
+	if (vhost_cli < 0) {
+		RTE_LOG(ERR, SHARED, "Vhost client is not initialized.\n");
+		return -1;
+	}
+	return vhost_cli;
+}
+
 /* Parse client ID from given value of string. */
 int
 parse_client_id(int *cli_id, const char *cli_id_str)
diff --git a/src/shared/secondary/utils.h b/src/shared/secondary/utils.h
index 74531b0..eba221f 100644
--- a/src/shared/secondary/utils.h
+++ b/src/shared/secondary/utils.h
@@ -9,9 +9,36 @@ int parse_resource_uid(char *str, char **port_type, int *port_id);
 
 int spp_atoi(const char *str, int *val);
 
+/**
+ * Set client ID from given command argment.
+ *
+ * @params[in] cid Client ID.
+ * @return 0 if succeeded, or -1 if failed.
+ */
 int set_client_id(int cid);
+
+/**
+ * Get client ID.
+ *
+ * @return int value of client ID if succeeded, or -1 if failed.
+ */
 int get_client_id(void);
 
+/**
+ * Set vhost client mode from given command argument.
+ *
+ * @params[in] vhost_cli Enabled if 1, or disabled if 0.
+ * @return 0 if succeeded, or -1 if failed.
+ */
+int set_vhost_cli_mode(int vhost_cli);
+
+/**
+ * Get vhost client mode.
+ *
+ * @return 1 if vhost client is enabled, or 0 if disabled.
+ */
+int get_vhost_cli_mode(void);
+
 /**
  * Parse client ID from given value of string.
  *
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index d8098f2..25997db 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -93,6 +93,9 @@ parse_app_args(int argc, char *argv[])
 	/* Clear startup parameters */
 	memset(&g_startup_param, 0x00, sizeof(g_startup_param));
 
+	/* vhost_cli is disabled as default. */
+	set_vhost_cli_mode(0);
+
 	/* Check options of application */
 	optind = 0;
 	opterr = 0;
@@ -109,7 +112,7 @@ parse_app_args(int argc, char *argv[])
 			proc_flg = 1;
 			break;
 		case SPP_LONGOPT_RETVAL_VHOST_CLIENT:
-			g_enable_vhost_cli = 1;
+			set_vhost_cli_mode(1);
 			break;
 		case 's':
 			ret = parse_server(&ctl_ip, &ctl_port, optarg);
@@ -135,7 +138,7 @@ parse_app_args(int argc, char *argv[])
 	RTE_LOG(INFO, APP,
 			"Parsed app args (client_id=%d,server=%s:%d,"
 			"vhost_client=%d)\n",
-			cli_id, ctl_ip, ctl_port, g_enable_vhost_cli);
+			cli_id, ctl_ip, ctl_port, get_vhost_cli_mode());
 	return SPP_RET_OK;
 }
 
-- 
2.17.1



------------------------------

Message: 2
Date: Wed, 26 Jun 2019 14:35:56 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 0/2] Remove global g_startup_param
Message-ID: <20190626053558.39847-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This series of patches is to remove global variable of command args
`g_startup_param` because many of global variables are defined and
strongly depended on each other. It makes hard to change codes.

Instead of this global variable, each of args is retrieved with
following functions.

* get_client_id()
* get_vhost_cli_mode()
* get_spp_ctl_ip()
* get_spp_ctl_port()

Yasufumi Ogawa (2):
  shared/sec: remove global var g_startup_param
  spp_pcap: remove global var g_startup_param

 src/mirror/mir_cmd_runner.c                       | 12 ++++++------
 src/mirror/spp_mirror.c                           | 14 ++++----------
 src/pcap/cmd_runner.c                             |  8 +++-----
 src/pcap/cmd_utils.c                              | 13 +++----------
 src/pcap/cmd_utils.h                              | 15 ++-------------
 src/pcap/spp_pcap.c                               | 15 +++------------
 .../secondary/spp_worker_th/cmd_res_formatter.c   |  3 +--
 src/shared/secondary/spp_worker_th/cmd_runner.c   |  4 ++--
 src/shared/secondary/spp_worker_th/cmd_utils.c    |  9 +--------
 src/shared/secondary/spp_worker_th/cmd_utils.h    | 14 ++------------
 src/vf/spp_vf.c                                   |  8 +-------
 src/vf/vf_cmd_runner.c                            | 12 ++++++------
 12 files changed, 34 insertions(+), 93 deletions(-)

-- 
2.17.1



------------------------------

Message: 3
Date: Wed, 26 Jun 2019 14:35:57 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 1/2] shared/sec: remove global var
	g_startup_param
Message-ID: <20190626053558.39847-2-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

In SPP worker processes, command line options, such as client ID or
server's IP address, are contained as members of struct
`startup_param`. Its instance is a global variable and managed with
other global variables so that it accessible from anywhere of program.

This design enables developers to retrieve any gloval variable in same
manner with single function sppwk_get_mng_data(). However, all of this
global variables have dependency each other. In addition, this function
should take seven args for getting variables selectively. It makes
codes become hard to change.

This update is to remove one of such a global variable to ease this
issue. Each of variables can already be retrieved with functions
implemented in previous patches.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/mir_cmd_runner.c                        | 12 ++++++------
 src/mirror/spp_mirror.c                            | 14 ++++----------
 .../secondary/spp_worker_th/cmd_res_formatter.c    |  3 +--
 src/shared/secondary/spp_worker_th/cmd_runner.c    |  4 ++--
 src/shared/secondary/spp_worker_th/cmd_utils.c     |  9 +--------
 src/shared/secondary/spp_worker_th/cmd_utils.h     | 14 ++------------
 src/vf/spp_vf.c                                    |  8 +-------
 src/vf/vf_cmd_runner.c                             | 12 ++++++------
 8 files changed, 23 insertions(+), 53 deletions(-)

diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index abbd6f6..f63a84b 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -33,8 +33,8 @@ update_comp(enum sppwk_action wk_action, const char *name,
 	int *change_core = NULL;
 	int *change_component = NULL;
 
-	sppwk_get_mng_data(NULL, NULL, &comp_info_base, &core_info,
-				&change_core, &change_component, NULL);
+	sppwk_get_mng_data(NULL, &comp_info_base, &core_info, &change_core,
+			&change_component, NULL);
 
 	switch (wk_action) {
 	case SPPWK_ACT_START:
@@ -151,8 +151,8 @@ update_port(enum sppwk_action wk_action,
 				"(component = %s)\n", name);
 		return SPP_RET_NG;
 	}
-	sppwk_get_mng_data(NULL, NULL,
-			&comp_info_base, NULL, NULL, &change_component, NULL);
+	sppwk_get_mng_data(NULL, &comp_info_base, NULL, NULL,
+			&change_component, NULL);
 	comp_info = (comp_info_base + comp_lcore_id);
 	port_info = get_sppwk_port(port->iface_type, port->iface_no);
 	if (dir == SPPWK_PORT_DIR_RX) {
@@ -323,8 +323,8 @@ spp_iterate_core_info(struct spp_iterate_core_params *params)
 		}
 
 		for (cnt = 0; cnt < core->num; cnt++) {
-			sppwk_get_mng_data(NULL, NULL, &comp_info_base,
-							NULL, NULL, NULL, NULL);
+			sppwk_get_mng_data(NULL, &comp_info_base, NULL, NULL,
+					NULL, NULL);
 			comp_info = (comp_info_base + core->id[cnt]);
 			ret = get_mirror_status(lcore_id, core->id[cnt],
 					params);
diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index 32489ed..f040010 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -59,9 +59,6 @@ static uint16_t nb_txd = MIR_TX_DESC_DEFAULT;
 /* Logical core ID for main process */
 static unsigned int g_main_lcore_id = 0xffffffff;
 
-/* Execution parameter of spp_mirror */
-static struct startup_param g_startup_param;
-
 /* Interface management information */
 static struct iface_info g_iface_info;
 
@@ -134,9 +131,6 @@ parse_app_args(int argc, char *argv[])
 	for (cnt = 0; cnt < argcopt; cnt++)
 		argvopt[cnt] = argv[cnt];
 
-	/* Clear startup parameters */
-	memset(&g_startup_param, 0x00, sizeof(g_startup_param));
-
 	/* vhost_cli is disabled as default. */
 	set_vhost_cli_mode(0);
 
@@ -507,10 +501,10 @@ main(int argc, char *argv[])
 		/* Get lcore id of main thread to set its status after */
 		g_main_lcore_id = rte_lcore_id();
 
-		if (sppwk_set_mng_data(&g_startup_param, &g_iface_info,
-					g_component_info, g_core_info,
-					g_change_core, g_change_component,
-					&g_backup_info, g_main_lcore_id) < 0) {
+		if (sppwk_set_mng_data(&g_iface_info, g_component_info,
+					g_core_info, g_change_core,
+					g_change_component, &g_backup_info,
+					g_main_lcore_id) < 0) {
 			RTE_LOG(ERR, MIRROR,
 				"Failed to set management data.\n");
 			break;
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index f095b08..a424fce 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -199,8 +199,7 @@ get_ethdev_port_id(enum port_type iface_type, int iface_no)
 {
 	struct iface_info *iface_info = NULL;
 
-	sppwk_get_mng_data(NULL, &iface_info,
-				NULL, NULL, NULL, NULL, NULL);
+	sppwk_get_mng_data(&iface_info, NULL, NULL, NULL, NULL, NULL);
 	switch (iface_type) {
 	case PHY:
 		return iface_info->nic[iface_no].ethdev_port_id;
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 3684a2c..3ab69f9 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -44,8 +44,8 @@ flush_cmd(void)
 	struct sppwk_comp_info *p_comp_info;
 	struct cancel_backup_info *backup_info;
 
-	sppwk_get_mng_data(NULL, NULL, &p_comp_info,
-				NULL, NULL, &p_change_comp, &backup_info);
+	sppwk_get_mng_data(NULL, &p_comp_info, NULL, NULL, &p_change_comp,
+			&backup_info);
 
 	ret = update_port_info();
 	if (ret < SPP_RET_OK)
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 8a40d92..4f84365 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -34,7 +34,6 @@
 /* A set of pointers of management data */
 /* TODO(yasufum) change names start with `p_change` because it wrong meanig. */
 struct mng_data_info {
-	struct startup_param *p_startup_param;
 	struct iface_info *p_iface_info;
 	struct sppwk_comp_info *p_component_info;
 	struct core_mng_info *p_core_info;
@@ -839,7 +838,6 @@ sppwk_convert_mac_str_to_int64(const char *macaddr)
 
 /* Set management data of global var for given non-NULL args. */
 int sppwk_set_mng_data(
-		struct startup_param *startup_param_p,
 		struct iface_info *iface_p,
 		struct sppwk_comp_info *component_p,
 		struct core_mng_info *core_mng_p,
@@ -852,13 +850,11 @@ int sppwk_set_mng_data(
 	 * TODO(yasufum) confirm why the last `0xffffffff` is same as NULL,
 	 * although it is reserved for meaning as invalid.
 	 */
-	if (startup_param_p == NULL || iface_p == NULL ||
-			component_p == NULL || core_mng_p == NULL ||
+	if (iface_p == NULL || component_p == NULL || core_mng_p == NULL ||
 			change_core_p == NULL || change_component_p == NULL ||
 			backup_info_p == NULL || main_lcore_id == 0xffffffff)
 		return SPP_RET_NG;
 
-	g_mng_data.p_startup_param = startup_param_p;
 	g_mng_data.p_iface_info = iface_p;
 	g_mng_data.p_component_info = component_p;
 	g_mng_data.p_core_info = core_mng_p;
@@ -872,7 +868,6 @@ int sppwk_set_mng_data(
 
 /* Get management data from global var for given non-NULL args. */
 void sppwk_get_mng_data(
-		struct startup_param **startup_param_p,
 		struct iface_info **iface_p,
 		struct sppwk_comp_info **component_p,
 		struct core_mng_info **core_mng_p,
@@ -881,8 +876,6 @@ void sppwk_get_mng_data(
 		struct cancel_backup_info **backup_info_p)
 {
 
-	if (startup_param_p != NULL)
-		*startup_param_p = g_mng_data.p_startup_param;
 	if (iface_p != NULL)
 		*iface_p = g_mng_data.p_iface_info;
 	if (component_p != NULL)
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 425d3eb..e2b987f 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -191,12 +191,6 @@ struct sppwk_comp_info {
 	struct sppwk_port_info *tx_ports[RTE_MAX_ETHPORTS]; /**< tx ports */
 };
 
-/* Manage cmd arg as global variable, used for spp_vf and spp_mirror. */
-struct startup_param {
-	char server_ip[INET_ADDRSTRLEN];  /* IP address of spp-ctl */
-	int server_port;   /* Port Number of spp-ctl */
-};
-
 /* Manage number of interfaces  and port information as global variable. */
 struct iface_info {
 	int nof_phys;    /* Number of phy ports */
@@ -532,7 +526,6 @@ int64_t sppwk_convert_mac_str_to_int64(const char *macaddr);
 /**
  * Set mange data address.
  *
- * @param startup_param_p Pointer to g_startup_param address.
  * @param iface_p Pointer to g_iface_info address.
  * @param component_p Pointer to g_component_info address.
  * @param core_mng_p Pointer to g_core_info address.
@@ -543,8 +536,7 @@ int64_t sppwk_convert_mac_str_to_int64(const char *macaddr);
  * @retval SPP_RET_OK If succeeded.
  * @retval SPP_RET_NG If failed.
  */
-int sppwk_set_mng_data(struct startup_param *startup_param_p,
-		struct iface_info *iface_p,
+int sppwk_set_mng_data(struct iface_info *iface_p,
 		struct sppwk_comp_info *component_p,
 		struct core_mng_info *core_mng_p,
 		int *change_core_p,
@@ -555,7 +547,6 @@ int sppwk_set_mng_data(struct startup_param *startup_param_p,
 /**
  * Get mange data address.
  *
- * @param startup_param_p Pointer to startup params.
  * @param iface_p Pointer to g_iface_info.
  * @param component_p Pointer to g_component_info.
  * @param core_mng_p Pointer to g_core_mng_info.
@@ -563,8 +554,7 @@ int sppwk_set_mng_data(struct startup_param *startup_param_p,
  * @param change_component_p Pointer to g_change_component.
  * @param backup_info_p Pointer to g_backup_info.
  */
-void sppwk_get_mng_data(struct startup_param **startup_param_p,
-		struct iface_info **iface_p,
+void sppwk_get_mng_data(struct iface_info **iface_p,
 		struct sppwk_comp_info **component_p,
 		struct core_mng_info **core_mng_p,
 		int **change_core_p,
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index 25997db..44e39fc 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -21,9 +21,6 @@
 /* Logical core ID for main process */
 static unsigned int g_main_lcore_id = 0xffffffff;
 
-/* Execution parameter of spp_vf */
-static struct startup_param g_startup_param;
-
 /* Interface management information */
 static struct iface_info g_iface_info;
 
@@ -90,9 +87,6 @@ parse_app_args(int argc, char *argv[])
 	for (cnt = 0; cnt < argcopt; cnt++)
 		argvopt[cnt] = argv[cnt];
 
-	/* Clear startup parameters */
-	memset(&g_startup_param, 0x00, sizeof(g_startup_param));
-
 	/* vhost_cli is disabled as default. */
 	set_vhost_cli_mode(0);
 
@@ -240,7 +234,7 @@ main(int argc, char *argv[])
 		/* Get lcore id of main thread to set its status after */
 		g_main_lcore_id = rte_lcore_id();
 
-		if (sppwk_set_mng_data(&g_startup_param, &g_iface_info,
+		if (sppwk_set_mng_data(&g_iface_info,
 					g_component_info, g_core_info,
 					g_change_core, g_change_component,
 					&g_backup_info,
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index 4be3188..d9adc48 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -131,8 +131,8 @@ update_comp(enum sppwk_action wk_action, const char *name,
 	int *change_core = NULL;
 	int *change_component = NULL;
 
-	sppwk_get_mng_data(NULL, NULL, &comp_info_base, &core_info,
-				&change_core, &change_component, NULL);
+	sppwk_get_mng_data(NULL, &comp_info_base, &core_info, &change_core,
+			&change_component, NULL);
 
 	switch (wk_action) {
 	case SPPWK_ACT_START:
@@ -272,8 +272,8 @@ update_port(enum sppwk_action wk_action,
 				"(component = %s)\n", name);
 		return SPP_RET_NG;
 	}
-	sppwk_get_mng_data(NULL, NULL,
-			&comp_info_base, NULL, NULL, &change_component, NULL);
+	sppwk_get_mng_data(NULL, &comp_info_base, NULL, NULL,
+			&change_component, NULL);
 	comp_info = (comp_info_base + comp_lcore_id);
 	port_info = get_sppwk_port(port->iface_type, port->iface_no);
 	if (dir == SPPWK_PORT_DIR_RX) {
@@ -457,8 +457,8 @@ spp_iterate_core_info(struct spp_iterate_core_params *params)
 		}
 
 		for (cnt = 0; cnt < core->num; cnt++) {
-			sppwk_get_mng_data(NULL, NULL, &comp_info_base,
-							NULL, NULL, NULL, NULL);
+			sppwk_get_mng_data(NULL, &comp_info_base, NULL, NULL,
+					NULL, NULL);
 			comp_info = (comp_info_base + core->id[cnt]);
 
 			if (comp_info->wk_type == SPPWK_TYPE_CLS) {
-- 
2.17.1



------------------------------

Message: 4
Date: Wed, 26 Jun 2019 14:35:58 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 2/2] spp_pcap: remove global var g_startup_param
Message-ID: <20190626053558.39847-3-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update for spp_pcap is the same as previous one for removing global
`g_startup_param`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/pcap/cmd_runner.c |  8 +++-----
 src/pcap/cmd_utils.c  | 13 +++----------
 src/pcap/cmd_utils.h  | 15 ++-------------
 src/pcap/spp_pcap.c   | 15 +++------------
 4 files changed, 11 insertions(+), 40 deletions(-)

diff --git a/src/pcap/cmd_runner.c b/src/pcap/cmd_runner.c
index 4c1891e..48e8eba 100644
--- a/src/pcap/cmd_runner.c
+++ b/src/pcap/cmd_runner.c
@@ -373,7 +373,7 @@ append_capture_status_value(const char *name, char **output,
 {
 	int *capture_status = NULL;
 
-	spp_get_mng_data_addr(NULL, NULL, NULL, NULL, &capture_status);
+	spp_get_mng_data_addr(NULL, NULL, NULL, &capture_status);
 
 	return append_json_str_value(name, output,
 			CAPTURE_STATUS_STRINGS[*capture_status]);
@@ -797,15 +797,13 @@ send_command_result_response(int *sock,
 
 	/* pcap start command */
 	if (request->is_requested_start) {
-		spp_get_mng_data_addr(NULL, NULL, NULL,
-				      &capture_request, NULL);
+		spp_get_mng_data_addr(NULL, NULL, &capture_request, NULL);
 		*capture_request = SPP_CAPTURE_RUNNING;
 	}
 
 	/* pcap stop command */
 	if (request->is_requested_stop) {
-		spp_get_mng_data_addr(NULL, NULL, NULL,
-					&capture_request, NULL);
+		spp_get_mng_data_addr(NULL, NULL, &capture_request, NULL);
 		*capture_request = SPP_CAPTURE_IDLE;
 	}
 
diff --git a/src/pcap/cmd_utils.c b/src/pcap/cmd_utils.c
index d9e09e5..52ca905 100644
--- a/src/pcap/cmd_utils.c
+++ b/src/pcap/cmd_utils.c
@@ -14,7 +14,6 @@
 
 /* Manage data to addoress */
 struct mng_data_info {
-	struct startup_param	  *p_startup_param;
 	struct iface_info	  *p_iface_info;
 	struct core_mng_info	  *p_core_info;
 	int			  *p_capture_request;
@@ -258,21 +257,18 @@ int spp_format_port_string(char *port, enum port_type iface_type, int iface_no)
 }
 
 /* Set mange data address */
-int spp_set_mng_data_addr(struct startup_param *startup_param_p,
-			  struct iface_info *iface_p,
+int spp_set_mng_data_addr(struct iface_info *iface_p,
 			  struct core_mng_info *core_mng_p,
 			  int *capture_request_p,
 			  int *capture_status_p,
 			  unsigned int main_lcore_id)
 {
-	if (startup_param_p == NULL || iface_p == NULL ||
-			core_mng_p == NULL ||
+	if (iface_p == NULL || core_mng_p == NULL ||
 			capture_request_p == NULL ||
 			capture_status_p == NULL ||
 			main_lcore_id == 0xffffffff)
 		return SPPWK_RET_NG;
 
-	g_mng_data_addr.p_startup_param = startup_param_p;
 	g_mng_data_addr.p_iface_info = iface_p;
 	g_mng_data_addr.p_core_info = core_mng_p;
 	g_mng_data_addr.p_capture_request = capture_request_p;
@@ -283,15 +279,12 @@ int spp_set_mng_data_addr(struct startup_param *startup_param_p,
 }
 
 /* Get manage data address */
-void spp_get_mng_data_addr(struct startup_param **startup_param_p,
-			   struct iface_info **iface_p,
+void spp_get_mng_data_addr(struct iface_info **iface_p,
 			   struct core_mng_info **core_mng_p,
 			   int **capture_request_p,
 			   int **capture_status_p)
 {
 
-	if (startup_param_p != NULL)
-		*startup_param_p = g_mng_data_addr.p_startup_param;
 	if (iface_p != NULL)
 		*iface_p = g_mng_data_addr.p_iface_info;
 	if (core_mng_p != NULL)
diff --git a/src/pcap/cmd_utils.h b/src/pcap/cmd_utils.h
index 8281a3b..4fa2ea9 100644
--- a/src/pcap/cmd_utils.h
+++ b/src/pcap/cmd_utils.h
@@ -155,13 +155,6 @@ struct sppwk_comp_info {
 	struct sppwk_port_info *tx_ports[RTE_MAX_ETHPORTS]; /**< tx ports */
 };
 
-/* Manage given options as global variable */
-struct startup_param {
-	//int client_id;  /* Client ID */
-	char server_ip[INET_ADDRSTRLEN];  /* IP address of spp-ctl */
-	int server_port;  /* Port Number of spp-ctl */
-};
-
 /* Manage interfaces and port information as global variable */
 /* TODO(yasufum) confirm why nof_rings is required not used in anywhere. */
 struct iface_info {
@@ -327,7 +320,6 @@ spp_format_port_string(char *port, enum port_type iface_type, int iface_no);
 /**
  * Set mange data address
  *
- * @param startup_param_p Pointer to g_startup_param address.
  * @param iface_p Pointer to g_iface_info address.
  * @param core_mng_p Pointer to g_core_info address.
  * @param capture_status_p Pointer to status of pcap.
@@ -336,8 +328,7 @@ spp_format_port_string(char *port, enum port_type iface_type, int iface_no);
  * @retval SPP_RET_OK If succeeded.
  * @retval SPP_RET_NG If failed.
  */
-int spp_set_mng_data_addr(struct startup_param *startup_param_p,
-			  struct iface_info *iface_p,
+int spp_set_mng_data_addr(struct iface_info *iface_p,
 			  struct core_mng_info *core_mng_p,
 			  int *capture_request_p,
 			  int *capture_status_p,
@@ -346,14 +337,12 @@ int spp_set_mng_data_addr(struct startup_param *startup_param_p,
 /**
  * Get mange data address
  *
- * @param startup_param_p Pointer to startup params.
  * @param iface_p Pointer to g_iface_info.
  * @param core_mng_p Pointer to g_core_mng_info.
  * @param capture_request_p Pointer to status of pcap.
  * @param capture_status_p Pointer to req of pcap.
  */
-void spp_get_mng_data_addr(struct startup_param **startup_param_p,
-			   struct iface_info **iface_p,
+void spp_get_mng_data_addr(struct iface_info **iface_p,
 			   struct core_mng_info **core_mng_p,
 			   int **capture_request_p,
 			   int **capture_status_p);
diff --git a/src/pcap/spp_pcap.c b/src/pcap/spp_pcap.c
index b69ffdd..0b846f3 100644
--- a/src/pcap/spp_pcap.c
+++ b/src/pcap/spp_pcap.c
@@ -132,9 +132,6 @@ struct pcap_status_info {
 /* Lcore ID of main thread. */
 static unsigned int g_main_lcore_id = 0xffffffff;
 
-/* Arguments for spp_pcap process. */
-static struct startup_param g_startup_param;
-
 /* Interface management information */
 static struct iface_info g_iface_info;
 
@@ -273,9 +270,6 @@ parse_app_args(int argc, char *argv[])
 	for (cnt = 0; cnt < argcopt; cnt++)
 		argvopt[cnt] = argv[cnt];
 
-	/* Clear startup parameters */
-	memset(&g_startup_param, 0x00, sizeof(g_startup_param));
-
 	/* option parameters init */
 	memset(&g_pcap_option, 0x00, sizeof(g_pcap_option));
 	strcpy(g_pcap_option.compress_file_path, DEFAULT_OUTPUT_DIR);
@@ -940,12 +934,9 @@ main(int argc, char *argv[])
 		g_main_lcore_id = rte_lcore_id();
 
 		/* set manage address */
-		if (spp_set_mng_data_addr(&g_startup_param,
-					  &g_iface_info,
-					  g_core_info,
-					  &g_capture_request,
-					  &g_capture_status,
-					  g_main_lcore_id) < 0) {
+		if (spp_set_mng_data_addr(&g_iface_info, g_core_info,
+					&g_capture_request, &g_capture_status,
+					g_main_lcore_id) < 0) {
 			RTE_LOG(ERR, SPP_PCAP,
 				"manage address set is failed.\n");
 			break;
-- 
2.17.1



End of spp Digest, Vol 31, Issue 24
***********************************


From yasufum.o@gmail.com Wed Jun 26 14:36:15 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd105.ddreams.local
 (zssg-mailmd105.ddreams.local [10.160.123.100])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTO00QTUY8WV480@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Wed, 26 Jun 2019 14:36:32 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd105.ddreams.local by
 zssg-mailmd105.ddreams.local (dDREAMS) id <0PTO0194SY8WAX00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:36:32 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd105.ddreams.local
 (dDREAMS) with ESMTP id <0PTO00L6PY8WVFD0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:36:32 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf106.ddreams.local (Postfix) with ESMTP id 167777E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:32 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 153D68E6061	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:32 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 13F9F8E6057	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:36:32 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id AF5398E6042	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:31 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf106.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:36:31 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aVO8019193;	Wed,
 26 Jun 2019 14:36:31 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5Q5aVmu019192;	Wed, 26 Jun 2019 14:36:31 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5Q5aVij019189	for unknown; Wed,
 26 Jun 2019 14:36:31 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aUc9031943 for
 unknown; Wed, 26 Jun 2019 14:36:31 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aUkv031937; Wed,
 26 Jun 2019 14:36:30 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aU5T015809;	Wed,
 26 Jun 2019 14:36:30 +0900
Received: from imss01.silk.ntt-tx.co.jp
 (imss01.silk.ntt-tx.co.jp [10.107.0.126])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5Q5aUih015805	for unknown; Wed, 26 Jun 2019 14:36:30 +0900
Received: from imss01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aUoh010966 for
 unknown; Wed, 26 Jun 2019 14:36:30 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aUdr010959 for
 unknown; Wed, 26 Jun 2019 14:36:30 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5Q5aNfd026402	for unknown; Wed,
 26 Jun 2019 14:36:29 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 915B81B950;	Wed, 26 Jun 2019 07:36:23 +0200 (CEST)
Received: from mail-pl1-f181.google.com
 (mail-pl1-f181.google.com [209.85.214.181]) by dpdk.org (Postfix)
 with ESMTP id 13A664F98 for <spp@dpdk.org>; Wed,
 26 Jun 2019 07:36:22 +0200 (CEST)
Received: by mail-pl1-f181.google.com with SMTP id cl9so754119plb.10 for
 <spp@dpdk.org>; Tue, 25 Jun 2019 22:36:22 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id 201sm22719973pfz.24.2019.06.25.22.36.20
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Tue,
 25 Jun 2019 22:36:21 -0700 (PDT)
Date: Wed, 26 Jun 2019 14:36:15 +0900
From: yasufum.o@gmail.com
Subject: [spp 04438] [spp] [PATCH 0/2] Remove global variable g_main_lcore_id
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190626053617.39907-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04438
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=TJQZid5sx9k7mB8bFcHWbGTWUHX4fuqjDgX/bbxmulQ=;
 b=KseR6+utdHQf4FJYUcmpU9wnmV3xOk5fAg+FgzV4G18bojB8rzYSkeYkoihBeWaWEg
 2QJrkmLyC8c7zZHHsIDsrJUx3vLB2bUSjUW6XIUtHrO0Yko2ROzXd6qoYmSxiUu3M3Xf
 nADpkg65biDDhnxPpAGLdcH8COgOJCRw6dONNzY/d0YkRHFQkXGEx6t23Zc/XDq2M2pv
 9AxC0RfZiF/xJulQyC0La490JAJBDcIvhW4Er1dj2cS+O6uE7biqXuqBidaghgtu7LNx
 rRZbg0F9LL7UKowg0sJOAsprjdYI71Av3a+lsC1bdh5jDiJVg/Lk/j2WzYLtnfbybCAk j6Qw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=TJQZid5sx9k7mB8bFcHWbGTWUHX4fuqjDgX/bbxmulQ=;
 b=Ymr7GUcdXDJ59WLJvalqAFIDnJz9sKmKypTU8JukeilvmzV7pFPiOgV6u1PvZ3hGbN
 H6IfYG4B9sVAGftW0PZt2HpFAjgNhwiA2BSY3TImhMahInQgZ461dOW/aUf2x7jQ0Pyr
 ihie4f4x0eA9KAFHLoKaVvvsLz9bIMe3yjsXD93133oFotjdf5/wSef1wRuysaHRp1La
 Mo3OlPzgoxGLXjA9couxePJVmXLD+fzlY+Uj6DGXTx+UHkeX+ac15CL1klzydIWpj0Ut
 q5CwoT6+2bksoKqZRMputRmP/kTdEuyPvIeHKoQ0Lq+2AiyJxAzjFTyutvMj6hO9L3By JSAA==
X-Gm-Message-State: APjAAAXJSBy7eFrR8baKA+iPe7f9GeR8fhoolpDNjdLXrJLdgiMuzjw/
 CpK1mi9jFbQsUXMmQZz9MQqj98SM
X-Google-Smtp-Source:
 APXvYqx4x1pDfeJAi4dHkqtMrz+oJ5jo5E7BqWvU8GPp+F+m4/V+SfgnEV3h+QfrC83FpFw/0HzAWA==
X-Received: by 2002:a17:902:8bc1:: with SMTP id
 r1mr3198624plo.42.1561527381307; Tue, 25 Jun 2019 22:36:21 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 22
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Master lcore ID is managed in SPP worker processes, but it can be
retrieved with rte_get_master_lcore(). This series of update is to
remove global `g_main_lcore_id` and change to use this function instead.

Yasufumi Ogawa (2):
  shared/sec: remove global master lcore ID
  spp_pcap: remove global master lcore ID

 src/mirror/spp_mirror.c                       | 44 ++++++---------
 src/pcap/cmd_utils.c                          | 13 ++---
 src/pcap/cmd_utils.h                          |  4 +-
 src/pcap/spp_pcap.c                           | 51 ++++++++---------
 .../secondary/spp_worker_th/cmd_utils.c       | 13 ++---
 .../secondary/spp_worker_th/cmd_utils.h       |  4 +-
 src/vf/spp_vf.c                               | 55 ++++++++-----------
 7 files changed, 80 insertions(+), 104 deletions(-)

-- 
2.17.1



From yasufum.o@gmail.com Wed Jun 26 14:36:16 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd106.ddreams.local
 (zssg-mailmd106.ddreams.local [10.160.123.101])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTO00QUHY8YV480@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Wed, 26 Jun 2019 14:36:34 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd106.ddreams.local by
 zssg-mailmd106.ddreams.local (dDREAMS) id <0PTO00O3MY8YGW00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:36:34 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd106.ddreams.local
 (dDREAMS) with ESMTP id <0PTO00I6JY8YVX30@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:36:34 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id 563307E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:34 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 54C538E605E	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:34 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 49ACC8E6056	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:36:34 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 1687E8E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:33 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:36:33 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aWpJ019215;	Wed,
 26 Jun 2019 14:36:32 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5Q5aWxC019214;	Wed, 26 Jun 2019 14:36:32 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5Q5aWeY019211	for unknown; Wed,
 26 Jun 2019 14:36:32 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aWBx031974 for
 unknown; Wed, 26 Jun 2019 14:36:32 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aWXX031971; Wed,
 26 Jun 2019 14:36:32 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aWo9015823;	Wed,
 26 Jun 2019 14:36:32 +0900
Received: from imss01.silk.ntt-tx.co.jp
 (imss01.silk.ntt-tx.co.jp [10.107.0.126])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5Q5aWDK015819	for unknown; Wed, 26 Jun 2019 14:36:32 +0900
Received: from imss01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aV9t010992 for
 unknown; Wed, 26 Jun 2019 14:36:31 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aVcd010989 for
 unknown; Wed, 26 Jun 2019 14:36:31 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5Q5aPTd026415	for unknown; Wed,
 26 Jun 2019 14:36:31 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 9D3011B955;	Wed, 26 Jun 2019 07:36:24 +0200 (CEST)
Received: from mail-pl1-f196.google.com
 (mail-pl1-f196.google.com [209.85.214.196]) by dpdk.org (Postfix)
 with ESMTP id 96D721B951 for <spp@dpdk.org>; Wed,
 26 Jun 2019 07:36:23 +0200 (CEST)
Received: by mail-pl1-f196.google.com with SMTP id i2so773481plt.1 for
 <spp@dpdk.org>; Tue, 25 Jun 2019 22:36:23 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id 201sm22719973pfz.24.2019.06.25.22.36.21
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Tue,
 25 Jun 2019 22:36:22 -0700 (PDT)
Date: Wed, 26 Jun 2019 14:36:16 +0900
From: yasufum.o@gmail.com
Subject: [spp 04439] [spp] [PATCH 1/2] shared/sec: remove global master lcore ID
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190626053617.39907-2-yasufum.o@gmail.com>
In-reply-to: <20190626053617.39907-1-yasufum.o@gmail.com>
References: <20190626053617.39907-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04439
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=WjsG2dCngP9wxyMSqjDMfBtuLOSk1ClxnTffZ+KZm0s=;
 b=nbFJhVf6b84wQf0VE613XSF5fcsS5t4TKN+wdCgwmYVOm1Yr3kT7KWkBW/12PwnlAK
 E+gKqKS/RPliN+YURodpyWwAc1vCqDXT5/c9XvlTvR7SxQOjJJ4VRQ3zg+3hz9qW6a6E
 RCB8E4P4Uz4O1/O9VMoh3gpZRdeZuTOAQdqDVPWULmYaKzDNNLoj2TBPfl+azNmkgnZL
 kyWLewWjKhJVU9oRJ+3/1i4d9w38DToTxc+AJmA6p4KDRaligEpQCvCEhxu6ib9g8iTa
 9aYY8t8EqOLkB1k09VgjaLizbWLu5X4IZbfuJvgtb48PThJeldvaPxq2vM4Bm9z5cu7I dGIg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=WjsG2dCngP9wxyMSqjDMfBtuLOSk1ClxnTffZ+KZm0s=;
 b=RVELRcLqTx4nms0r4mxMFw8pcugjewjhzcTX8xoxMlg5t6eMaMc3S/Q7PXvVV0njm/
 V8vf+5Ud7JGX/GHjGefcjQuk4sh3iEKt+B2XpJ4ImqmE6eXw1TgpoxMhxU05w/lFNhkO
 0rGpPKWiTJZ+p+DYJMUthlnWZWqOyE12AQH+YXaAj7H6z0/JmX14WU6u7t6ar0b0sQwi
 mIVfR0jgpkERJ4GEmj0Qinbo4zwU3h1dm//U0CXZFHwyGFMAPzZ8PLA3LiTPNgas04+m
 B9BK0i7bQ4iasUgUPHr4+ClctqVmxJfZcc18CjBnGgBcIA7BlDXnw1Ye/Oitqscbkesn eWOg==
X-Gm-Message-State: APjAAAWIwzjGUa6b+XL463Z792kTn692ZTHyBiJFZ3/a/epgJY0rC7p3
 1hzhQ9EhLzDicoK0iddfF+AhnHqj
X-Google-Smtp-Source:
 APXvYqwXU85yIK+GChBJIakk6hOEh/FfEs4y8NZo/KqvIAMwsAWFaxnjFJb0+odRVZr3/xV1QQC9TA==
X-Received: by 2002:a17:902:404:: with SMTP id 4mr3201638ple.200.1561527382663;
 Tue, 25 Jun 2019 22:36:22 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 346
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

In SPP worker processes, master lcore ID is managed as a member of
global variable, but no need to this because it can be retrieved with
rte_get_master_lcore(). This update is to change to use this function.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/spp_mirror.c                       | 44 ++++++---------
 .../secondary/spp_worker_th/cmd_utils.c       | 13 ++---
 .../secondary/spp_worker_th/cmd_utils.h       |  4 +-
 src/vf/spp_vf.c                               | 55 ++++++++-----------
 4 files changed, 49 insertions(+), 67 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index f040010..898755d 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -56,9 +56,6 @@ struct mirror_info {
 static uint16_t nb_rxd = MIR_RX_DESC_DEFAULT;
 static uint16_t nb_txd = MIR_TX_DESC_DEFAULT;
 
-/* Logical core ID for main process */
-static unsigned int g_main_lcore_id = 0xffffffff;
-
 /* Interface management information */
 static struct iface_info g_iface_info;
 
@@ -421,7 +418,7 @@ slave_main(void *arg __attribute__ ((unused)))
 	struct core_mng_info *info = &g_core_info[lcore_id];
 	struct core_info *core = get_core_info(lcore_id);
 
-	RTE_LOG(INFO, MIRROR, "Core[%d] Start.\n", lcore_id);
+	RTE_LOG(INFO, MIRROR, "Slave started on lcore %d.\n", lcore_id);
 	set_core_status(lcore_id, SPP_CORE_IDLE);
 
 	while ((status = spp_get_core_status(lcore_id)) !=
@@ -446,14 +443,14 @@ slave_main(void *arg __attribute__ ((unused)))
 		}
 		if (unlikely(ret != 0)) {
 			RTE_LOG(ERR, MIRROR,
-				"Core[%d] Component Error. (id = %d)\n",
+				"Failed to forward on lcore %d (id = %d)\n",
 					lcore_id, core->id[cnt]);
 			break;
 		}
 	}
 
 	set_core_status(lcore_id, SPP_CORE_STOP);
-	RTE_LOG(INFO, MIRROR, "Core[%d] End.\n", lcore_id);
+	RTE_LOG(INFO, MIRROR, "Terminated slave on lcore %d.\n", lcore_id);
 	return ret;
 }
 
@@ -469,6 +466,7 @@ main(int argc, char *argv[])
 	char ctl_ip[IPADDR_LEN] = { 0 };
 	int ctl_port;
 	int ret_cmd_init;
+	unsigned int master_lcore;
 	unsigned int lcore_id;
 
 #ifdef SPP_DEMONIZE
@@ -498,13 +496,12 @@ main(int argc, char *argv[])
 		if (unlikely(ret_parse != 0))
 			break;
 
-		/* Get lcore id of main thread to set its status after */
-		g_main_lcore_id = rte_lcore_id();
+		master_lcore = rte_get_master_lcore();
 
 		if (sppwk_set_mng_data(&g_iface_info, g_component_info,
 					g_core_info, g_change_core,
-					g_change_component, &g_backup_info,
-					g_main_lcore_id) < 0) {
+					g_change_component,
+					&g_backup_info) < 0) {
 			RTE_LOG(ERR, MIRROR,
 				"Failed to set management data.\n");
 			break;
@@ -514,7 +511,7 @@ main(int argc, char *argv[])
 		ret = mirror_pool_create(get_client_id());
 		if (ret == SPP_RET_NG) {
 			RTE_LOG(ERR, MIRROR,
-					"mirror mnuf pool create failed.\n");
+					"Failed to create mbuf pool.\n");
 			return SPP_RET_NG;
 		}
 
@@ -547,7 +544,7 @@ main(int argc, char *argv[])
 		}
 
 		/* Set the status of main thread to idle */
-		g_core_info[g_main_lcore_id].status = SPP_CORE_IDLE;
+		g_core_info[master_lcore].status = SPP_CORE_IDLE;
 		int ret_wait = check_core_status_wait(SPP_CORE_IDLE);
 		if (unlikely(ret_wait != 0))
 			break;
@@ -569,7 +566,7 @@ main(int argc, char *argv[])
 		/* Enter loop for accepting commands */
 		int ret_do = 0;
 #ifndef USE_UT_SPP_VF
-		while (likely(g_core_info[g_main_lcore_id].status !=
+		while (likely(g_core_info[master_lcore].status !=
 				SPP_CORE_STOP_REQUEST)) {
 #else
 		{
@@ -599,24 +596,19 @@ main(int argc, char *argv[])
 	}
 
 	/* Finalize to exit */
-	if (g_main_lcore_id == rte_lcore_id()) {
-		g_core_info[g_main_lcore_id].status = SPP_CORE_STOP;
-		int ret_core_end = check_core_status_wait(SPP_CORE_STOP);
-		if (unlikely(ret_core_end != 0))
-			RTE_LOG(ERR, MIRROR, "Core did not stop.\n");
-
-		/*
-		 * Remove vhost sock file if it is not running
-		 *  in vhost-client mode
-		 */
-		del_vhost_sockfile(g_iface_info.vhost);
-	}
+	g_core_info[master_lcore].status = SPP_CORE_STOP;
+	int ret_core_end = check_core_status_wait(SPP_CORE_STOP);
+	if (unlikely(ret_core_end != 0))
+		RTE_LOG(ERR, MIRROR, "Failed to terminate master thread.\n");
+
+	 /* Remove vhost sock file if not running in vhost-client mode. */
+	del_vhost_sockfile(g_iface_info.vhost);
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
 	spp_ringlatencystats_uninit();
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 
-	RTE_LOG(INFO, MIRROR, "spp_mirror exit.\n");
+	RTE_LOG(INFO, MIRROR, "Exit spp_mirror.\n");
 	return ret;
 }
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 4f84365..32929ec 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -40,7 +40,6 @@ struct mng_data_info {
 	int *p_change_core;
 	int *p_change_component;  /* Set of flags for udpated components */
 	struct cancel_backup_info *p_backup_info;
-	unsigned int main_lcore_id;
 };
 
 /* Logical core ID for main process */
@@ -137,13 +136,15 @@ set_all_core_status(enum sppwk_lcore_status status)
 void
 stop_process(int signal)
 {
+	unsigned int master_lcore;
 	if (unlikely(signal != SIGTERM) &&
 			unlikely(signal != SIGINT)) {
 		return;
 	}
 
-	(g_mng_data.p_core_info + g_mng_data.main_lcore_id)->status =
-							SPP_CORE_STOP_REQUEST;
+	master_lcore = rte_get_master_lcore();
+	(g_mng_data.p_core_info + master_lcore)->status =
+		SPP_CORE_STOP_REQUEST;
 	set_all_core_status(SPP_CORE_STOP_REQUEST);
 }
 
@@ -843,8 +844,7 @@ int sppwk_set_mng_data(
 		struct core_mng_info *core_mng_p,
 		int *change_core_p,
 		int *change_component_p,
-		struct cancel_backup_info *backup_info_p,
-		unsigned int main_lcore_id)
+		struct cancel_backup_info *backup_info_p)
 {
 	/**
 	 * TODO(yasufum) confirm why the last `0xffffffff` is same as NULL,
@@ -852,7 +852,7 @@ int sppwk_set_mng_data(
 	 */
 	if (iface_p == NULL || component_p == NULL || core_mng_p == NULL ||
 			change_core_p == NULL || change_component_p == NULL ||
-			backup_info_p == NULL || main_lcore_id == 0xffffffff)
+			backup_info_p == NULL)
 		return SPP_RET_NG;
 
 	g_mng_data.p_iface_info = iface_p;
@@ -861,7 +861,6 @@ int sppwk_set_mng_data(
 	g_mng_data.p_change_core = change_core_p;
 	g_mng_data.p_change_component = change_component_p;
 	g_mng_data.p_backup_info = backup_info_p;
-	g_mng_data.main_lcore_id = main_lcore_id;
 
 	return SPP_RET_OK;
 }
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index e2b987f..f33bc62 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -532,7 +532,6 @@ int64_t sppwk_convert_mac_str_to_int64(const char *macaddr);
  * @param change_core_p Pointer to g_change_core address.
  * @param change_component_p Pointer to g_change_component address.
  * @param backup_info_p Pointer to g_backup_info address.
- * @param main_lcore_id Lcore ID of main thread.
  * @retval SPP_RET_OK If succeeded.
  * @retval SPP_RET_NG If failed.
  */
@@ -541,8 +540,7 @@ int sppwk_set_mng_data(struct iface_info *iface_p,
 		struct core_mng_info *core_mng_p,
 		int *change_core_p,
 		int *change_component_p,
-		struct cancel_backup_info *backup_info_p,
-		unsigned int main_lcore_id);
+		struct cancel_backup_info *backup_info_p);
 
 /**
  * Get mange data address.
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index 44e39fc..0068329 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -18,9 +18,6 @@
 #include "shared/secondary/spp_worker_th/spp_port.h"
 
 /* Declare global variables */
-/* Logical core ID for main process */
-static unsigned int g_main_lcore_id = 0xffffffff;
-
 /* Interface management information */
 static struct iface_info g_iface_info;
 
@@ -147,7 +144,7 @@ slave_main(void *arg __attribute__ ((unused)))
 	struct core_mng_info *info = &g_core_info[lcore_id];
 	struct core_info *core = get_core_info(lcore_id);
 
-	RTE_LOG(INFO, APP, "Core[%d] Start.\n", lcore_id);
+	RTE_LOG(INFO, APP, "Slave started on lcore %d.\n", lcore_id);
 	set_core_status(lcore_id, SPP_CORE_IDLE);
 
 	while ((status = spp_get_core_status(lcore_id)) !=
@@ -178,15 +175,15 @@ slave_main(void *arg __attribute__ ((unused)))
 			}
 		}
 		if (unlikely(ret != 0)) {
-			RTE_LOG(ERR, APP, "Core[%d] Component Error. "
-					"(id = %d)\n",
+			RTE_LOG(ERR, APP, "Failed to forward on lcore %d. "
+					"(id = %d).\n",
 					lcore_id, core->id[cnt]);
 			break;
 		}
 	}
 
 	set_core_status(lcore_id, SPP_CORE_STOP);
-	RTE_LOG(INFO, APP, "Core[%d] End.\n", lcore_id);
+	RTE_LOG(INFO, APP, "Terminated slave on lcore %d.\n", lcore_id);
 	return ret;
 }
 
@@ -202,7 +199,8 @@ main(int argc, char *argv[])
 	char ctl_ip[IPADDR_LEN] = { 0 };
 	int ctl_port;
 	int ret_cmd_init;
-	unsigned int lcore_id = 0;
+	unsigned int master_lcore;
+	unsigned int lcore_id;
 
 #ifdef SPP_DEMONIZE
 	/* Daemonize process */
@@ -231,14 +229,10 @@ main(int argc, char *argv[])
 		if (unlikely(ret_parse != SPP_RET_OK))
 			break;
 
-		/* Get lcore id of main thread to set its status after */
-		g_main_lcore_id = rte_lcore_id();
-
-		if (sppwk_set_mng_data(&g_iface_info,
-					g_component_info, g_core_info,
-					g_change_core, g_change_component,
-					&g_backup_info,
-					g_main_lcore_id) < SPP_RET_OK) {
+		if (sppwk_set_mng_data(&g_iface_info, g_component_info,
+					g_core_info, g_change_core,
+					g_change_component,
+					&g_backup_info) < SPP_RET_OK) {
 			RTE_LOG(ERR, APP,
 				"Failed to set management data.\n");
 			break;
@@ -276,7 +270,8 @@ main(int argc, char *argv[])
 		}
 
 		/* Set the status of main thread to idle */
-		g_core_info[g_main_lcore_id].status = SPP_CORE_IDLE;
+		master_lcore = rte_get_master_lcore();
+		g_core_info[master_lcore].status = SPP_CORE_IDLE;
 		int ret_wait = check_core_status_wait(SPP_CORE_IDLE);
 		if (unlikely(ret_wait != SPP_RET_OK))
 			break;
@@ -292,7 +287,7 @@ main(int argc, char *argv[])
 		/* Enter loop for accepting commands */
 		int ret_do = SPP_RET_OK;
 #ifndef USE_UT_SPP_VF
-		while (likely(g_core_info[g_main_lcore_id].status !=
+		while (likely(g_core_info[master_lcore].status !=
 				SPP_CORE_STOP_REQUEST)) {
 #else
 		{
@@ -322,23 +317,21 @@ main(int argc, char *argv[])
 	}
 
 	/* Finalize to exit */
-	if (g_main_lcore_id == rte_lcore_id()) {
-		g_core_info[g_main_lcore_id].status = SPP_CORE_STOP;
-		int ret_core_end = check_core_status_wait(SPP_CORE_STOP);
-		if (unlikely(ret_core_end != SPP_RET_OK))
-			RTE_LOG(ERR, APP, "Core did not stop.\n");
-
-		/*
-		 * Remove vhost sock file if it is not running
-		 *  in vhost-client mode
-		 */
-		del_vhost_sockfile(g_iface_info.vhost);
-	}
+	g_core_info[master_lcore].status = SPP_CORE_STOP;
+	int ret_core_end = check_core_status_wait(SPP_CORE_STOP);
+	if (unlikely(ret_core_end != SPP_RET_OK))
+		RTE_LOG(ERR, APP, "Failed to terminate master thread.\n");
+
+	/*
+	 * Remove vhost sock file if it is not running
+	 *  in vhost-client mode
+	 */
+	del_vhost_sockfile(g_iface_info.vhost);
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
 	spp_ringlatencystats_uninit();
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 
-	RTE_LOG(INFO, APP, "spp_vf exit.\n");
+	RTE_LOG(INFO, APP, "Exit spp_vf.\n");
 	return ret;
 }
-- 
2.17.1



From yasufum.o@gmail.com Wed Jun 26 14:36:17 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTO00QUVY90V480@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Wed, 26 Jun 2019 14:36:36 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTO00Z24Y90FQ00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:36:36 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTO00WX0Y906T10@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:36:36 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf101.ddreams.local (Postfix) with ESMTP id 150007E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:36 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 0CCB58E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:36 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id F0F058E6054	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:36:35 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id DE5F18E6051	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:34 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf101.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:36:34 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aYYF019222;	Wed,
 26 Jun 2019 14:36:34 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5Q5aYOn019221;	Wed, 26 Jun 2019 14:36:34 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5Q5aY3D019218	for unknown; Wed,
 26 Jun 2019 14:36:34 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aY6X031996 for
 unknown; Wed, 26 Jun 2019 14:36:34 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aYQU031993; Wed,
 26 Jun 2019 14:36:34 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aYuv015830;	Wed,
 26 Jun 2019 14:36:34 +0900
Received: from imss01.silk.ntt-tx.co.jp
 (imss01.silk.ntt-tx.co.jp [10.107.0.126])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5Q5aXQ8015826	for unknown; Wed, 26 Jun 2019 14:36:33 +0900
Received: from imss01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aX5d011007 for
 unknown; Wed, 26 Jun 2019 14:36:33 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aXiw011003 for
 unknown; Wed, 26 Jun 2019 14:36:33 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5Q5aR2o026421	for unknown; Wed,
 26 Jun 2019 14:36:32 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id ADD8D1B952;	Wed, 26 Jun 2019 07:36:26 +0200 (CEST)
Received: from mail-pl1-f196.google.com
 (mail-pl1-f196.google.com [209.85.214.196]) by dpdk.org (Postfix)
 with ESMTP id EF5545B34 for <spp@dpdk.org>; Wed,
 26 Jun 2019 07:36:24 +0200 (CEST)
Received: by mail-pl1-f196.google.com with SMTP id ay6so753901plb.9 for
 <spp@dpdk.org>; Tue, 25 Jun 2019 22:36:24 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id 201sm22719973pfz.24.2019.06.25.22.36.22
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Tue,
 25 Jun 2019 22:36:23 -0700 (PDT)
Date: Wed, 26 Jun 2019 14:36:17 +0900
From: yasufum.o@gmail.com
Subject: [spp 04440] [spp] [PATCH 2/2] spp_pcap: remove global master lcore ID
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190626053617.39907-3-yasufum.o@gmail.com>
In-reply-to: <20190626053617.39907-1-yasufum.o@gmail.com>
References: <20190626053617.39907-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04440
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=nGO/JIFcR/kM6EpLHzuqcwbLpONdsGYDuXEPQjPsd04=;
 b=fYnoGXAVVa5ixaBr6wYnhN1nfbEqwLH6tWF5oSTE/UbyhS9ARRNW+0kciTSgF9T2Wn
 B/47sBdOYWy8RNeGkG5uLhS5zitmFV/y7rhT+CjOhDe68PSbwL/8QuN/fCLYXHpoZ46a
 vieot15094QZfOk4x8KnQIjm8OtueumpbNFXor181fBj89Lb1Llqg5RPDO10I7XV26jk
 li9tL2+fywSdNNEg57fVrpl23lUFsu5rVeKKyn4oPe/FtjSi5EZuXVOh+fezST2TA9vk
 4yth4kE8aRh+yrse/feh4rwypWxaao3XKmDGPgWUjLxu784t1kRaPtLD9GIG5k6BejEy hqow==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=nGO/JIFcR/kM6EpLHzuqcwbLpONdsGYDuXEPQjPsd04=;
 b=QwCLpxsJSlRIyIFNLqUfqn66VdQauoLQzpLDltRESjft5IImnQo0P+wY0Ne8mvjdoS
 X/ZTPhRywKF/97xDZ2zeERCNovfnArC3hdbQFpMaludvRhgBjhMBBsvz0N7yhO0o8rAF
 o8w3Xy6vv09wgI86BwZY90ROAPyBakjORfitI2OTvC0gTjHsoQt8Zyz6TwGnNXU5bLdB
 mxFqyHjWV0h7g4fqaHn3HZ3rEi/bO/qSMKSMLTubFkqIiKJiMLZaEruWVEODjhtPhgY7
 /Fxj5zXOeQ/8f53jcUajG2OXEA1zbIuD01AwAtID1XalkGNJ4rVPWjsAeRmEo+tHPOXz 3ZUA==
X-Gm-Message-State: APjAAAUVuOzPiIM96hZ0Wsy37m7JpfgIifDUvEKDKqzXAEtvAWxatLDo
 Z3iwtVmiYEZx6TNt9vrz+T9BHDmg
X-Google-Smtp-Source:
 APXvYqyiyfX/Awf6QnM6ruon9hi6F2/v5D9WeKxwUguzCdvJPRuX84XPKBwNMI+5tb2lUilIK0QyUg==
X-Received: by 2002:a17:902:124:: with SMTP id
 33mr3191479plb.145.1561527384003; Tue, 25 Jun 2019 22:36:24 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 209
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

As previous patch, this update is to remove variable of master lcore ID
and change to use rte_get_master_lcore().

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/pcap/cmd_utils.c | 13 ++++++-----
 src/pcap/cmd_utils.h |  4 +---
 src/pcap/spp_pcap.c  | 51 +++++++++++++++++++++-----------------------
 3 files changed, 31 insertions(+), 37 deletions(-)

diff --git a/src/pcap/cmd_utils.c b/src/pcap/cmd_utils.c
index 52ca905..66e6d05 100644
--- a/src/pcap/cmd_utils.c
+++ b/src/pcap/cmd_utils.c
@@ -18,7 +18,6 @@ struct mng_data_info {
 	struct core_mng_info	  *p_core_info;
 	int			  *p_capture_request;
 	int			  *p_capture_status;
-	unsigned int		  main_lcore_id;
 };
 
 /* Declare global variables */
@@ -130,12 +129,15 @@ set_all_core_status(enum sppwk_lcore_status status)
 void
 stop_process(int signal)
 {
+	unsigned int master_lcore;
+
 	if (unlikely(signal != SIGTERM) &&
 			unlikely(signal != SIGINT)) {
 		return;
 	}
 
-	(g_mng_data_addr.p_core_info + g_mng_data_addr.main_lcore_id)->status =
+	master_lcore = rte_get_master_lcore();
+	(g_mng_data_addr.p_core_info + master_lcore)->status =
 							SPP_CORE_STOP_REQUEST;
 	set_all_core_status(SPP_CORE_STOP_REQUEST);
 }
@@ -260,20 +262,17 @@ int spp_format_port_string(char *port, enum port_type iface_type, int iface_no)
 int spp_set_mng_data_addr(struct iface_info *iface_p,
 			  struct core_mng_info *core_mng_p,
 			  int *capture_request_p,
-			  int *capture_status_p,
-			  unsigned int main_lcore_id)
+			  int *capture_status_p)
 {
 	if (iface_p == NULL || core_mng_p == NULL ||
 			capture_request_p == NULL ||
-			capture_status_p == NULL ||
-			main_lcore_id == 0xffffffff)
+			capture_status_p == NULL)
 		return SPPWK_RET_NG;
 
 	g_mng_data_addr.p_iface_info = iface_p;
 	g_mng_data_addr.p_core_info = core_mng_p;
 	g_mng_data_addr.p_capture_request = capture_request_p;
 	g_mng_data_addr.p_capture_status = capture_status_p;
-	g_mng_data_addr.main_lcore_id = main_lcore_id;
 
 	return SPPWK_RET_OK;
 }
diff --git a/src/pcap/cmd_utils.h b/src/pcap/cmd_utils.h
index 4fa2ea9..9b7ae52 100644
--- a/src/pcap/cmd_utils.h
+++ b/src/pcap/cmd_utils.h
@@ -324,15 +324,13 @@ spp_format_port_string(char *port, enum port_type iface_type, int iface_no);
  * @param core_mng_p Pointer to g_core_info address.
  * @param capture_status_p Pointer to status of pcap.
  * @param capture_request_p Pointer to req of pcap.
- * @param main_lcore_id Lcore ID of main thread.
  * @retval SPP_RET_OK If succeeded.
  * @retval SPP_RET_NG If failed.
  */
 int spp_set_mng_data_addr(struct iface_info *iface_p,
 			  struct core_mng_info *core_mng_p,
 			  int *capture_request_p,
-			  int *capture_status_p,
-			  unsigned int main_lcore_id);
+			  int *capture_status_p);
 
 /**
  * Get mange data address
diff --git a/src/pcap/spp_pcap.c b/src/pcap/spp_pcap.c
index 0b846f3..6762337 100644
--- a/src/pcap/spp_pcap.c
+++ b/src/pcap/spp_pcap.c
@@ -129,9 +129,6 @@ struct pcap_status_info {
 	int start_up_cnt;  /* thread start up count */
 };
 
-/* Lcore ID of main thread. */
-static unsigned int g_main_lcore_id = 0xffffffff;
-
 /* Interface management information */
 static struct iface_info g_iface_info;
 
@@ -855,11 +852,12 @@ slave_main(void *arg __attribute__ ((unused)))
 	struct pcap_mng_info *pcap_info = &g_pcap_info[lcore_id];
 
 	if (pcap_info->thread_no == 0) {
-		RTE_LOG(INFO, SPP_PCAP, "Core[%d] Start recive.\n", lcore_id);
+		RTE_LOG(INFO, SPP_PCAP, "Receiver started on lcore %d.\n",
+				lcore_id);
 		pcap_info->type = PCAP_RECEIVE;
 	} else {
-		RTE_LOG(INFO, SPP_PCAP, "Core[%d] Start write(%d).\n",
-					lcore_id, pcap_info->thread_no);
+		RTE_LOG(INFO, SPP_PCAP, "Writer %d started on lcore %d.\n",
+					pcap_info->thread_no, lcore_id);
 		pcap_info->type = PCAP_WRITE;
 	}
 	set_core_status(lcore_id, SPP_CORE_IDLE);
@@ -877,14 +875,16 @@ slave_main(void *arg __attribute__ ((unused)))
 		else
 			ret = pcap_proc_write(lcore_id);
 		if (unlikely(ret != SPPWK_RET_OK)) {
-			RTE_LOG(ERR, SPP_PCAP, "Core[%d] Thread Error.\n",
-								lcore_id);
+			RTE_LOG(ERR, SPP_PCAP,
+					"Failed to capture on lcore %d.\n",
+					lcore_id);
 			break;
 		}
 	}
 
 	set_core_status(lcore_id, SPP_CORE_STOP);
-	RTE_LOG(INFO, SPP_PCAP, "Core[%d] End.\n", lcore_id);
+	RTE_LOG(INFO, SPP_PCAP,
+			"Terminated slave on lcore %d.\n", lcore_id);
 	return ret;
 }
 
@@ -900,6 +900,7 @@ main(int argc, char *argv[])
 	char ctl_ip[IPADDR_LEN] = { 0 };
 	int ctl_port;
 	int ret_cmd_init;
+	unsigned int master_lcore;
 	unsigned int lcore_id;
 	unsigned int thread_no;
 
@@ -930,13 +931,10 @@ main(int argc, char *argv[])
 		if (unlikely(ret_parse != 0))
 			break;
 
-		/* Get lcore id of main thread to set its status after */
-		g_main_lcore_id = rte_lcore_id();
-
 		/* set manage address */
 		if (spp_set_mng_data_addr(&g_iface_info, g_core_info,
-					&g_capture_request, &g_capture_status,
-					g_main_lcore_id) < 0) {
+					&g_capture_request,
+					&g_capture_status) < 0) {
 			RTE_LOG(ERR, SPP_PCAP,
 				"manage address set is failed.\n");
 			break;
@@ -1025,7 +1023,8 @@ main(int argc, char *argv[])
 		}
 
 		/* Set the status of main thread to idle */
-		g_core_info[g_main_lcore_id].status = SPP_CORE_IDLE;
+		master_lcore = rte_get_master_lcore();
+		g_core_info[master_lcore].status = SPP_CORE_IDLE;
 		int ret_wait = check_core_status_wait(SPP_CORE_IDLE);
 		if (unlikely(ret_wait != 0))
 			break;
@@ -1036,7 +1035,7 @@ main(int argc, char *argv[])
 
 		/* Enter loop for accepting commands */
 		int ret_do = 0;
-		while (likely(g_core_info[g_main_lcore_id].status !=
+		while (likely(g_core_info[master_lcore].status !=
 				SPP_CORE_STOP_REQUEST)) {
 			/* Receive command */
 			ret_do = spp_command_proc_do();
@@ -1059,18 +1058,16 @@ main(int argc, char *argv[])
 	}
 
 	/* Finalize to exit */
-	if (g_main_lcore_id == rte_lcore_id()) {
-		g_core_info[g_main_lcore_id].status = SPP_CORE_STOP;
-		int ret_core_end = check_core_status_wait(SPP_CORE_STOP);
-		if (unlikely(ret_core_end != 0))
-			RTE_LOG(ERR, SPP_PCAP, "Core did not stop.\n");
-
-		/* capture write ring free */
-		if (g_pcap_option.cap_ring != NULL)
-			rte_ring_free(g_pcap_option.cap_ring);
-	}
+	g_core_info[master_lcore].status = SPP_CORE_STOP;
+	int ret_core_end = check_core_status_wait(SPP_CORE_STOP);
+	if (unlikely(ret_core_end != 0))
+		RTE_LOG(ERR, SPP_PCAP, "Failed to terminate master thread.\n");
+
+	/* capture write ring free */
+	if (g_pcap_option.cap_ring != NULL)
+		rte_ring_free(g_pcap_option.cap_ring);
 
 
-	RTE_LOG(INFO, SPP_PCAP, "spp_pcap exit.\n");
+	RTE_LOG(INFO, SPP_PCAP, "Exit spp_pcap.\n");
 	return ret;
 }
-- 
2.17.1



From spp-request@dpdk.org Wed Jun 26 14:36:39 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTO00QXOY9CV480@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Wed, 26 Jun 2019 14:36:48 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTO0070IY9C1400@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:36:48 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTO0047RY9CZR10@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:36:48 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf105.ddreams.local (Postfix) with ESMTP id 752387E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:48 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 734BF8E6066	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:48 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 67EF28E6068	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:36:48 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 4D62A8E6062	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:47 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf105.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:36:47 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5al9a019233;	Wed,
 26 Jun 2019 14:36:47 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5Q5alWo019232;	Wed, 26 Jun 2019 14:36:47 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss01.silk.ntt-tx.co.jp
 (imss01.silk.ntt-tx.co.jp [10.107.0.126])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5Q5alJ5019229	for unknown; Wed,
 26 Jun 2019 14:36:47 +0900
Received: from imss01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5akVR011095 for
 unknown; Wed, 26 Jun 2019 14:36:46 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5ak2R011091 for
 unknown; Wed, 26 Jun 2019 14:36:46 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5Q5aeaS026472	for unknown; Wed,
 26 Jun 2019 14:36:45 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id CA4921B950	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Wed,
 26 Jun 2019 07:36:39 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 25
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Wed, 26 Jun 2019 07:36:39 +0200
Message-id: <mailman.23614.1561527399.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH 0/2] Remove global variable g_main_lcore_id
      (yasufum.o@gmail.com)
   2. [PATCH 1/2] shared/sec: remove global master lcore ID
      (yasufum.o@gmail.com)
   3. [PATCH 2/2] spp_pcap: remove global master lcore ID
      (yasufum.o@gmail.com)
   4. [PATCH 0/2] Rename members of sppwk_lcore_status
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Wed, 26 Jun 2019 14:36:15 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 0/2] Remove global variable g_main_lcore_id
Message-ID: <20190626053617.39907-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Master lcore ID is managed in SPP worker processes, but it can be
retrieved with rte_get_master_lcore(). This series of update is to
remove global `g_main_lcore_id` and change to use this function instead.

Yasufumi Ogawa (2):
  shared/sec: remove global master lcore ID
  spp_pcap: remove global master lcore ID

 src/mirror/spp_mirror.c                       | 44 ++++++---------
 src/pcap/cmd_utils.c                          | 13 ++---
 src/pcap/cmd_utils.h                          |  4 +-
 src/pcap/spp_pcap.c                           | 51 ++++++++---------
 .../secondary/spp_worker_th/cmd_utils.c       | 13 ++---
 .../secondary/spp_worker_th/cmd_utils.h       |  4 +-
 src/vf/spp_vf.c                               | 55 ++++++++-----------
 7 files changed, 80 insertions(+), 104 deletions(-)

-- 
2.17.1



------------------------------

Message: 2
Date: Wed, 26 Jun 2019 14:36:16 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 1/2] shared/sec: remove global master lcore ID
Message-ID: <20190626053617.39907-2-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

In SPP worker processes, master lcore ID is managed as a member of
global variable, but no need to this because it can be retrieved with
rte_get_master_lcore(). This update is to change to use this function.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/spp_mirror.c                       | 44 ++++++---------
 .../secondary/spp_worker_th/cmd_utils.c       | 13 ++---
 .../secondary/spp_worker_th/cmd_utils.h       |  4 +-
 src/vf/spp_vf.c                               | 55 ++++++++-----------
 4 files changed, 49 insertions(+), 67 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index f040010..898755d 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -56,9 +56,6 @@ struct mirror_info {
 static uint16_t nb_rxd = MIR_RX_DESC_DEFAULT;
 static uint16_t nb_txd = MIR_TX_DESC_DEFAULT;
 
-/* Logical core ID for main process */
-static unsigned int g_main_lcore_id = 0xffffffff;
-
 /* Interface management information */
 static struct iface_info g_iface_info;
 
@@ -421,7 +418,7 @@ slave_main(void *arg __attribute__ ((unused)))
 	struct core_mng_info *info = &g_core_info[lcore_id];
 	struct core_info *core = get_core_info(lcore_id);
 
-	RTE_LOG(INFO, MIRROR, "Core[%d] Start.\n", lcore_id);
+	RTE_LOG(INFO, MIRROR, "Slave started on lcore %d.\n", lcore_id);
 	set_core_status(lcore_id, SPP_CORE_IDLE);
 
 	while ((status = spp_get_core_status(lcore_id)) !=
@@ -446,14 +443,14 @@ slave_main(void *arg __attribute__ ((unused)))
 		}
 		if (unlikely(ret != 0)) {
 			RTE_LOG(ERR, MIRROR,
-				"Core[%d] Component Error. (id = %d)\n",
+				"Failed to forward on lcore %d (id = %d)\n",
 					lcore_id, core->id[cnt]);
 			break;
 		}
 	}
 
 	set_core_status(lcore_id, SPP_CORE_STOP);
-	RTE_LOG(INFO, MIRROR, "Core[%d] End.\n", lcore_id);
+	RTE_LOG(INFO, MIRROR, "Terminated slave on lcore %d.\n", lcore_id);
 	return ret;
 }
 
@@ -469,6 +466,7 @@ main(int argc, char *argv[])
 	char ctl_ip[IPADDR_LEN] = { 0 };
 	int ctl_port;
 	int ret_cmd_init;
+	unsigned int master_lcore;
 	unsigned int lcore_id;
 
 #ifdef SPP_DEMONIZE
@@ -498,13 +496,12 @@ main(int argc, char *argv[])
 		if (unlikely(ret_parse != 0))
 			break;
 
-		/* Get lcore id of main thread to set its status after */
-		g_main_lcore_id = rte_lcore_id();
+		master_lcore = rte_get_master_lcore();
 
 		if (sppwk_set_mng_data(&g_iface_info, g_component_info,
 					g_core_info, g_change_core,
-					g_change_component, &g_backup_info,
-					g_main_lcore_id) < 0) {
+					g_change_component,
+					&g_backup_info) < 0) {
 			RTE_LOG(ERR, MIRROR,
 				"Failed to set management data.\n");
 			break;
@@ -514,7 +511,7 @@ main(int argc, char *argv[])
 		ret = mirror_pool_create(get_client_id());
 		if (ret == SPP_RET_NG) {
 			RTE_LOG(ERR, MIRROR,
-					"mirror mnuf pool create failed.\n");
+					"Failed to create mbuf pool.\n");
 			return SPP_RET_NG;
 		}
 
@@ -547,7 +544,7 @@ main(int argc, char *argv[])
 		}
 
 		/* Set the status of main thread to idle */
-		g_core_info[g_main_lcore_id].status = SPP_CORE_IDLE;
+		g_core_info[master_lcore].status = SPP_CORE_IDLE;
 		int ret_wait = check_core_status_wait(SPP_CORE_IDLE);
 		if (unlikely(ret_wait != 0))
 			break;
@@ -569,7 +566,7 @@ main(int argc, char *argv[])
 		/* Enter loop for accepting commands */
 		int ret_do = 0;
 #ifndef USE_UT_SPP_VF
-		while (likely(g_core_info[g_main_lcore_id].status !=
+		while (likely(g_core_info[master_lcore].status !=
 				SPP_CORE_STOP_REQUEST)) {
 #else
 		{
@@ -599,24 +596,19 @@ main(int argc, char *argv[])
 	}
 
 	/* Finalize to exit */
-	if (g_main_lcore_id == rte_lcore_id()) {
-		g_core_info[g_main_lcore_id].status = SPP_CORE_STOP;
-		int ret_core_end = check_core_status_wait(SPP_CORE_STOP);
-		if (unlikely(ret_core_end != 0))
-			RTE_LOG(ERR, MIRROR, "Core did not stop.\n");
-
-		/*
-		 * Remove vhost sock file if it is not running
-		 *  in vhost-client mode
-		 */
-		del_vhost_sockfile(g_iface_info.vhost);
-	}
+	g_core_info[master_lcore].status = SPP_CORE_STOP;
+	int ret_core_end = check_core_status_wait(SPP_CORE_STOP);
+	if (unlikely(ret_core_end != 0))
+		RTE_LOG(ERR, MIRROR, "Failed to terminate master thread.\n");
+
+	 /* Remove vhost sock file if not running in vhost-client mode. */
+	del_vhost_sockfile(g_iface_info.vhost);
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
 	spp_ringlatencystats_uninit();
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 
-	RTE_LOG(INFO, MIRROR, "spp_mirror exit.\n");
+	RTE_LOG(INFO, MIRROR, "Exit spp_mirror.\n");
 	return ret;
 }
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 4f84365..32929ec 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -40,7 +40,6 @@ struct mng_data_info {
 	int *p_change_core;
 	int *p_change_component;  /* Set of flags for udpated components */
 	struct cancel_backup_info *p_backup_info;
-	unsigned int main_lcore_id;
 };
 
 /* Logical core ID for main process */
@@ -137,13 +136,15 @@ set_all_core_status(enum sppwk_lcore_status status)
 void
 stop_process(int signal)
 {
+	unsigned int master_lcore;
 	if (unlikely(signal != SIGTERM) &&
 			unlikely(signal != SIGINT)) {
 		return;
 	}
 
-	(g_mng_data.p_core_info + g_mng_data.main_lcore_id)->status =
-							SPP_CORE_STOP_REQUEST;
+	master_lcore = rte_get_master_lcore();
+	(g_mng_data.p_core_info + master_lcore)->status =
+		SPP_CORE_STOP_REQUEST;
 	set_all_core_status(SPP_CORE_STOP_REQUEST);
 }
 
@@ -843,8 +844,7 @@ int sppwk_set_mng_data(
 		struct core_mng_info *core_mng_p,
 		int *change_core_p,
 		int *change_component_p,
-		struct cancel_backup_info *backup_info_p,
-		unsigned int main_lcore_id)
+		struct cancel_backup_info *backup_info_p)
 {
 	/**
 	 * TODO(yasufum) confirm why the last `0xffffffff` is same as NULL,
@@ -852,7 +852,7 @@ int sppwk_set_mng_data(
 	 */
 	if (iface_p == NULL || component_p == NULL || core_mng_p == NULL ||
 			change_core_p == NULL || change_component_p == NULL ||
-			backup_info_p == NULL || main_lcore_id == 0xffffffff)
+			backup_info_p == NULL)
 		return SPP_RET_NG;
 
 	g_mng_data.p_iface_info = iface_p;
@@ -861,7 +861,6 @@ int sppwk_set_mng_data(
 	g_mng_data.p_change_core = change_core_p;
 	g_mng_data.p_change_component = change_component_p;
 	g_mng_data.p_backup_info = backup_info_p;
-	g_mng_data.main_lcore_id = main_lcore_id;
 
 	return SPP_RET_OK;
 }
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index e2b987f..f33bc62 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -532,7 +532,6 @@ int64_t sppwk_convert_mac_str_to_int64(const char *macaddr);
  * @param change_core_p Pointer to g_change_core address.
  * @param change_component_p Pointer to g_change_component address.
  * @param backup_info_p Pointer to g_backup_info address.
- * @param main_lcore_id Lcore ID of main thread.
  * @retval SPP_RET_OK If succeeded.
  * @retval SPP_RET_NG If failed.
  */
@@ -541,8 +540,7 @@ int sppwk_set_mng_data(struct iface_info *iface_p,
 		struct core_mng_info *core_mng_p,
 		int *change_core_p,
 		int *change_component_p,
-		struct cancel_backup_info *backup_info_p,
-		unsigned int main_lcore_id);
+		struct cancel_backup_info *backup_info_p);
 
 /**
  * Get mange data address.
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index 44e39fc..0068329 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -18,9 +18,6 @@
 #include "shared/secondary/spp_worker_th/spp_port.h"
 
 /* Declare global variables */
-/* Logical core ID for main process */
-static unsigned int g_main_lcore_id = 0xffffffff;
-
 /* Interface management information */
 static struct iface_info g_iface_info;
 
@@ -147,7 +144,7 @@ slave_main(void *arg __attribute__ ((unused)))
 	struct core_mng_info *info = &g_core_info[lcore_id];
 	struct core_info *core = get_core_info(lcore_id);
 
-	RTE_LOG(INFO, APP, "Core[%d] Start.\n", lcore_id);
+	RTE_LOG(INFO, APP, "Slave started on lcore %d.\n", lcore_id);
 	set_core_status(lcore_id, SPP_CORE_IDLE);
 
 	while ((status = spp_get_core_status(lcore_id)) !=
@@ -178,15 +175,15 @@ slave_main(void *arg __attribute__ ((unused)))
 			}
 		}
 		if (unlikely(ret != 0)) {
-			RTE_LOG(ERR, APP, "Core[%d] Component Error. "
-					"(id = %d)\n",
+			RTE_LOG(ERR, APP, "Failed to forward on lcore %d. "
+					"(id = %d).\n",
 					lcore_id, core->id[cnt]);
 			break;
 		}
 	}
 
 	set_core_status(lcore_id, SPP_CORE_STOP);
-	RTE_LOG(INFO, APP, "Core[%d] End.\n", lcore_id);
+	RTE_LOG(INFO, APP, "Terminated slave on lcore %d.\n", lcore_id);
 	return ret;
 }
 
@@ -202,7 +199,8 @@ main(int argc, char *argv[])
 	char ctl_ip[IPADDR_LEN] = { 0 };
 	int ctl_port;
 	int ret_cmd_init;
-	unsigned int lcore_id = 0;
+	unsigned int master_lcore;
+	unsigned int lcore_id;
 
 #ifdef SPP_DEMONIZE
 	/* Daemonize process */
@@ -231,14 +229,10 @@ main(int argc, char *argv[])
 		if (unlikely(ret_parse != SPP_RET_OK))
 			break;
 
-		/* Get lcore id of main thread to set its status after */
-		g_main_lcore_id = rte_lcore_id();
-
-		if (sppwk_set_mng_data(&g_iface_info,
-					g_component_info, g_core_info,
-					g_change_core, g_change_component,
-					&g_backup_info,
-					g_main_lcore_id) < SPP_RET_OK) {
+		if (sppwk_set_mng_data(&g_iface_info, g_component_info,
+					g_core_info, g_change_core,
+					g_change_component,
+					&g_backup_info) < SPP_RET_OK) {
 			RTE_LOG(ERR, APP,
 				"Failed to set management data.\n");
 			break;
@@ -276,7 +270,8 @@ main(int argc, char *argv[])
 		}
 
 		/* Set the status of main thread to idle */
-		g_core_info[g_main_lcore_id].status = SPP_CORE_IDLE;
+		master_lcore = rte_get_master_lcore();
+		g_core_info[master_lcore].status = SPP_CORE_IDLE;
 		int ret_wait = check_core_status_wait(SPP_CORE_IDLE);
 		if (unlikely(ret_wait != SPP_RET_OK))
 			break;
@@ -292,7 +287,7 @@ main(int argc, char *argv[])
 		/* Enter loop for accepting commands */
 		int ret_do = SPP_RET_OK;
 #ifndef USE_UT_SPP_VF
-		while (likely(g_core_info[g_main_lcore_id].status !=
+		while (likely(g_core_info[master_lcore].status !=
 				SPP_CORE_STOP_REQUEST)) {
 #else
 		{
@@ -322,23 +317,21 @@ main(int argc, char *argv[])
 	}
 
 	/* Finalize to exit */
-	if (g_main_lcore_id == rte_lcore_id()) {
-		g_core_info[g_main_lcore_id].status = SPP_CORE_STOP;
-		int ret_core_end = check_core_status_wait(SPP_CORE_STOP);
-		if (unlikely(ret_core_end != SPP_RET_OK))
-			RTE_LOG(ERR, APP, "Core did not stop.\n");
-
-		/*
-		 * Remove vhost sock file if it is not running
-		 *  in vhost-client mode
-		 */
-		del_vhost_sockfile(g_iface_info.vhost);
-	}
+	g_core_info[master_lcore].status = SPP_CORE_STOP;
+	int ret_core_end = check_core_status_wait(SPP_CORE_STOP);
+	if (unlikely(ret_core_end != SPP_RET_OK))
+		RTE_LOG(ERR, APP, "Failed to terminate master thread.\n");
+
+	/*
+	 * Remove vhost sock file if it is not running
+	 *  in vhost-client mode
+	 */
+	del_vhost_sockfile(g_iface_info.vhost);
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
 	spp_ringlatencystats_uninit();
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 
-	RTE_LOG(INFO, APP, "spp_vf exit.\n");
+	RTE_LOG(INFO, APP, "Exit spp_vf.\n");
 	return ret;
 }
-- 
2.17.1



------------------------------

Message: 3
Date: Wed, 26 Jun 2019 14:36:17 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 2/2] spp_pcap: remove global master lcore ID
Message-ID: <20190626053617.39907-3-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

As previous patch, this update is to remove variable of master lcore ID
and change to use rte_get_master_lcore().

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/pcap/cmd_utils.c | 13 ++++++-----
 src/pcap/cmd_utils.h |  4 +---
 src/pcap/spp_pcap.c  | 51 +++++++++++++++++++++-----------------------
 3 files changed, 31 insertions(+), 37 deletions(-)

diff --git a/src/pcap/cmd_utils.c b/src/pcap/cmd_utils.c
index 52ca905..66e6d05 100644
--- a/src/pcap/cmd_utils.c
+++ b/src/pcap/cmd_utils.c
@@ -18,7 +18,6 @@ struct mng_data_info {
 	struct core_mng_info	  *p_core_info;
 	int			  *p_capture_request;
 	int			  *p_capture_status;
-	unsigned int		  main_lcore_id;
 };
 
 /* Declare global variables */
@@ -130,12 +129,15 @@ set_all_core_status(enum sppwk_lcore_status status)
 void
 stop_process(int signal)
 {
+	unsigned int master_lcore;
+
 	if (unlikely(signal != SIGTERM) &&
 			unlikely(signal != SIGINT)) {
 		return;
 	}
 
-	(g_mng_data_addr.p_core_info + g_mng_data_addr.main_lcore_id)->status =
+	master_lcore = rte_get_master_lcore();
+	(g_mng_data_addr.p_core_info + master_lcore)->status =
 							SPP_CORE_STOP_REQUEST;
 	set_all_core_status(SPP_CORE_STOP_REQUEST);
 }
@@ -260,20 +262,17 @@ int spp_format_port_string(char *port, enum port_type iface_type, int iface_no)
 int spp_set_mng_data_addr(struct iface_info *iface_p,
 			  struct core_mng_info *core_mng_p,
 			  int *capture_request_p,
-			  int *capture_status_p,
-			  unsigned int main_lcore_id)
+			  int *capture_status_p)
 {
 	if (iface_p == NULL || core_mng_p == NULL ||
 			capture_request_p == NULL ||
-			capture_status_p == NULL ||
-			main_lcore_id == 0xffffffff)
+			capture_status_p == NULL)
 		return SPPWK_RET_NG;
 
 	g_mng_data_addr.p_iface_info = iface_p;
 	g_mng_data_addr.p_core_info = core_mng_p;
 	g_mng_data_addr.p_capture_request = capture_request_p;
 	g_mng_data_addr.p_capture_status = capture_status_p;
-	g_mng_data_addr.main_lcore_id = main_lcore_id;
 
 	return SPPWK_RET_OK;
 }
diff --git a/src/pcap/cmd_utils.h b/src/pcap/cmd_utils.h
index 4fa2ea9..9b7ae52 100644
--- a/src/pcap/cmd_utils.h
+++ b/src/pcap/cmd_utils.h
@@ -324,15 +324,13 @@ spp_format_port_string(char *port, enum port_type iface_type, int iface_no);
  * @param core_mng_p Pointer to g_core_info address.
  * @param capture_status_p Pointer to status of pcap.
  * @param capture_request_p Pointer to req of pcap.
- * @param main_lcore_id Lcore ID of main thread.
  * @retval SPP_RET_OK If succeeded.
  * @retval SPP_RET_NG If failed.
  */
 int spp_set_mng_data_addr(struct iface_info *iface_p,
 			  struct core_mng_info *core_mng_p,
 			  int *capture_request_p,
-			  int *capture_status_p,
-			  unsigned int main_lcore_id);
+			  int *capture_status_p);
 
 /**
  * Get mange data address
diff --git a/src/pcap/spp_pcap.c b/src/pcap/spp_pcap.c
index 0b846f3..6762337 100644
--- a/src/pcap/spp_pcap.c
+++ b/src/pcap/spp_pcap.c
@@ -129,9 +129,6 @@ struct pcap_status_info {
 	int start_up_cnt;  /* thread start up count */
 };
 
-/* Lcore ID of main thread. */
-static unsigned int g_main_lcore_id = 0xffffffff;
-
 /* Interface management information */
 static struct iface_info g_iface_info;
 
@@ -855,11 +852,12 @@ slave_main(void *arg __attribute__ ((unused)))
 	struct pcap_mng_info *pcap_info = &g_pcap_info[lcore_id];
 
 	if (pcap_info->thread_no == 0) {
-		RTE_LOG(INFO, SPP_PCAP, "Core[%d] Start recive.\n", lcore_id);
+		RTE_LOG(INFO, SPP_PCAP, "Receiver started on lcore %d.\n",
+				lcore_id);
 		pcap_info->type = PCAP_RECEIVE;
 	} else {
-		RTE_LOG(INFO, SPP_PCAP, "Core[%d] Start write(%d).\n",
-					lcore_id, pcap_info->thread_no);
+		RTE_LOG(INFO, SPP_PCAP, "Writer %d started on lcore %d.\n",
+					pcap_info->thread_no, lcore_id);
 		pcap_info->type = PCAP_WRITE;
 	}
 	set_core_status(lcore_id, SPP_CORE_IDLE);
@@ -877,14 +875,16 @@ slave_main(void *arg __attribute__ ((unused)))
 		else
 			ret = pcap_proc_write(lcore_id);
 		if (unlikely(ret != SPPWK_RET_OK)) {
-			RTE_LOG(ERR, SPP_PCAP, "Core[%d] Thread Error.\n",
-								lcore_id);
+			RTE_LOG(ERR, SPP_PCAP,
+					"Failed to capture on lcore %d.\n",
+					lcore_id);
 			break;
 		}
 	}
 
 	set_core_status(lcore_id, SPP_CORE_STOP);
-	RTE_LOG(INFO, SPP_PCAP, "Core[%d] End.\n", lcore_id);
+	RTE_LOG(INFO, SPP_PCAP,
+			"Terminated slave on lcore %d.\n", lcore_id);
 	return ret;
 }
 
@@ -900,6 +900,7 @@ main(int argc, char *argv[])
 	char ctl_ip[IPADDR_LEN] = { 0 };
 	int ctl_port;
 	int ret_cmd_init;
+	unsigned int master_lcore;
 	unsigned int lcore_id;
 	unsigned int thread_no;
 
@@ -930,13 +931,10 @@ main(int argc, char *argv[])
 		if (unlikely(ret_parse != 0))
 			break;
 
-		/* Get lcore id of main thread to set its status after */
-		g_main_lcore_id = rte_lcore_id();
-
 		/* set manage address */
 		if (spp_set_mng_data_addr(&g_iface_info, g_core_info,
-					&g_capture_request, &g_capture_status,
-					g_main_lcore_id) < 0) {
+					&g_capture_request,
+					&g_capture_status) < 0) {
 			RTE_LOG(ERR, SPP_PCAP,
 				"manage address set is failed.\n");
 			break;
@@ -1025,7 +1023,8 @@ main(int argc, char *argv[])
 		}
 
 		/* Set the status of main thread to idle */
-		g_core_info[g_main_lcore_id].status = SPP_CORE_IDLE;
+		master_lcore = rte_get_master_lcore();
+		g_core_info[master_lcore].status = SPP_CORE_IDLE;
 		int ret_wait = check_core_status_wait(SPP_CORE_IDLE);
 		if (unlikely(ret_wait != 0))
 			break;
@@ -1036,7 +1035,7 @@ main(int argc, char *argv[])
 
 		/* Enter loop for accepting commands */
 		int ret_do = 0;
-		while (likely(g_core_info[g_main_lcore_id].status !=
+		while (likely(g_core_info[master_lcore].status !=
 				SPP_CORE_STOP_REQUEST)) {
 			/* Receive command */
 			ret_do = spp_command_proc_do();
@@ -1059,18 +1058,16 @@ main(int argc, char *argv[])
 	}
 
 	/* Finalize to exit */
-	if (g_main_lcore_id == rte_lcore_id()) {
-		g_core_info[g_main_lcore_id].status = SPP_CORE_STOP;
-		int ret_core_end = check_core_status_wait(SPP_CORE_STOP);
-		if (unlikely(ret_core_end != 0))
-			RTE_LOG(ERR, SPP_PCAP, "Core did not stop.\n");
-
-		/* capture write ring free */
-		if (g_pcap_option.cap_ring != NULL)
-			rte_ring_free(g_pcap_option.cap_ring);
-	}
+	g_core_info[master_lcore].status = SPP_CORE_STOP;
+	int ret_core_end = check_core_status_wait(SPP_CORE_STOP);
+	if (unlikely(ret_core_end != 0))
+		RTE_LOG(ERR, SPP_PCAP, "Failed to terminate master thread.\n");
+
+	/* capture write ring free */
+	if (g_pcap_option.cap_ring != NULL)
+		rte_ring_free(g_pcap_option.cap_ring);
 
 
-	RTE_LOG(INFO, SPP_PCAP, "spp_pcap exit.\n");
+	RTE_LOG(INFO, SPP_PCAP, "Exit spp_pcap.\n");
 	return ret;
 }
-- 
2.17.1



------------------------------

Message: 4
Date: Wed, 26 Jun 2019 14:36:31 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 0/2] Rename members of sppwk_lcore_status
Message-ID: <20190626053633.39963-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This series of patches is to rename members of enum
`sppwk_lcore_status` which defines each of status of worker threads,
such as idling or running or so.


Yasufumi Ogawa (2):
  shared/sec: rename members of sppwk_lcore_status
  spp_pcap: rename members of sppwk_lcore_status

 src/mirror/mir_cmd_runner.c                   |  9 +++----
 src/mirror/spp_mirror.c                       | 24 +++++++++----------
 src/pcap/cmd_runner.c                         |  2 +-
 src/pcap/cmd_utils.c                          |  6 ++---
 src/pcap/cmd_utils.h                          | 18 +++++++-------
 src/pcap/spp_pcap.c                           | 20 ++++++++--------
 .../secondary/spp_worker_th/cmd_utils.c       |  8 +++----
 .../secondary/spp_worker_th/cmd_utils.h       | 15 ++++++------
 src/vf/spp_vf.c                               | 24 +++++++++----------
 src/vf/vf_cmd_runner.c                        |  9 +++----
 10 files changed, 67 insertions(+), 68 deletions(-)

-- 
2.17.1



End of spp Digest, Vol 31, Issue 25
***********************************


From yasufum.o@gmail.com Wed Jun 26 14:36:31 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd105.ddreams.local
 (zssg-mailmd105.ddreams.local [10.160.123.100])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTO00QXNY9CV480@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Wed, 26 Jun 2019 14:36:48 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd105.ddreams.local by
 zssg-mailmd105.ddreams.local (dDREAMS) id <0PTO01A06Y9C4S00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:36:48 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd105.ddreams.local
 (dDREAMS) with ESMTP id <0PTO00LE2Y9CVFD0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:36:48 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf105.ddreams.local (Postfix) with ESMTP id 7664D7E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:48 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 74FFB8E6068	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:48 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 730B48E6064	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:36:48 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id F2D3D8E6052	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:47 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf105.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:36:47 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5alK8019242;	Wed,
 26 Jun 2019 14:36:47 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5Q5alkc019241;	Wed, 26 Jun 2019 14:36:47 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5Q5alE4019238	for unknown; Wed,
 26 Jun 2019 14:36:47 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5alVQ032073 for
 unknown; Wed, 26 Jun 2019 14:36:47 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5alFE032067; Wed,
 26 Jun 2019 14:36:47 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5alFv015883;	Wed,
 26 Jun 2019 14:36:47 +0900
Received: from imss01.silk.ntt-tx.co.jp
 (imss01.silk.ntt-tx.co.jp [10.107.0.126])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5Q5akwa015879	for unknown; Wed, 26 Jun 2019 14:36:46 +0900
Received: from imss01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5akQu011090 for
 unknown; Wed, 26 Jun 2019 14:36:46 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5akqG011087 for
 unknown; Wed, 26 Jun 2019 14:36:46 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5Q5ae71026473	for unknown; Wed,
 26 Jun 2019 14:36:45 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id C25057CBC;	Wed, 26 Jun 2019 07:36:39 +0200 (CEST)
Received: from mail-pf1-f194.google.com
 (mail-pf1-f194.google.com [209.85.210.194]) by dpdk.org (Postfix)
 with ESMTP id 8A4F94F98 for <spp@dpdk.org>; Wed,
 26 Jun 2019 07:36:38 +0200 (CEST)
Received: by mail-pf1-f194.google.com with SMTP id x15so723594pfq.0 for
 <spp@dpdk.org>; Tue, 25 Jun 2019 22:36:38 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id t29sm25684292pfq.156.2019.06.25.22.36.36
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Tue,
 25 Jun 2019 22:36:37 -0700 (PDT)
Date: Wed, 26 Jun 2019 14:36:31 +0900
From: yasufum.o@gmail.com
Subject: [spp 04441] [spp] [PATCH 0/2] Rename members of sppwk_lcore_status
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190626053633.39963-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04441
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=YsBmT0euQ3qdbCER2ubWSuj1WQNu946HsTTFPxTQh30=;
 b=OnzlpHDCEsBIQhaa7AzsQiD+dTq4NOU/Lm6fo2qiVqN1vw9aOCuAHhwNmnkmfc2C08
 JR+J6Ggun9QtTZT9qEPu/JLkJ1uuc9LgEhM5SufclNOtd14UCDh7HztpXUp5qjlwRydf
 pyP2r+aopS41vKg1P5VdhJJCuKOOy7wwkMvJBU2+/D++j/p/6kRzP1vxMm/RoOA5Zup7
 66lAVFUicf0R+Q2nEcwMvgiLKtK5c484rl8z/C0VjhS5vdWux9JTfJ5jP8O+WK86o/oh
 8i1lXtVsF+4mG5YOVsSbVnuKFTjuN7fy0GvErw6On/fD/s8d5Su9AXIECBC326GFwj9R lV2A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=YsBmT0euQ3qdbCER2ubWSuj1WQNu946HsTTFPxTQh30=;
 b=gaNBsEnq9LE4u6iEuaHEfMdiWd0bo7dH0obUcFf0D2zvRj7SEEsOTmGR42oNqqnO/4
 U+a09U7H7CZJCwdIEvwlN8qd6sOi7syBLS1AX5+5LxDXhG0pAOJE5+7AnNIFK413V7u6
 E2zDZ9mBtoCK2Ih8sEDQTLcZgW2tqSHij1S9egNUrUJIdbzK/M4Uv77wnbKGcmdYXJ+2
 sIl7WSZp3yRX8toB2MVYxqF6Crx2n9pItiVNGcE0DkygM2qgZqhIqhzfxBAt9XEq64Mk
 gjM+ixMi8Xxm2QbLorbx25mWp/ywOmOFUvkf7Xu3oePBcBeqLBdQ7spz+fQ4U7sQl4Qw jTxQ==
X-Gm-Message-State: APjAAAXEGWh8H2X6pWq4RQn+5R96Au06DVHwp8VGUMVS4s9da08s2hoW
 YIxYjhzRwkH6rI10T+oxGB8xkx9N
X-Google-Smtp-Source:
 APXvYqwDHLfFRd1DuwxXkUoBQLnX2N9uCy2glFHCyZk0uhZfMNUMN1axV0UCdfczRXQ++WuC1otRkA==
X-Received: by 2002:a65:6383:: with SMTP id h3mr1065873pgv.452.1561527397694;
 Tue, 25 Jun 2019 22:36:37 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 26
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This series of patches is to rename members of enum
`sppwk_lcore_status` which defines each of status of worker threads,
such as idling or running or so.


Yasufumi Ogawa (2):
  shared/sec: rename members of sppwk_lcore_status
  spp_pcap: rename members of sppwk_lcore_status

 src/mirror/mir_cmd_runner.c                   |  9 +++----
 src/mirror/spp_mirror.c                       | 24 +++++++++----------
 src/pcap/cmd_runner.c                         |  2 +-
 src/pcap/cmd_utils.c                          |  6 ++---
 src/pcap/cmd_utils.h                          | 18 +++++++-------
 src/pcap/spp_pcap.c                           | 20 ++++++++--------
 .../secondary/spp_worker_th/cmd_utils.c       |  8 +++----
 .../secondary/spp_worker_th/cmd_utils.h       | 15 ++++++------
 src/vf/spp_vf.c                               | 24 +++++++++----------
 src/vf/vf_cmd_runner.c                        |  9 +++----
 10 files changed, 67 insertions(+), 68 deletions(-)

-- 
2.17.1



From yasufum.o@gmail.com Wed Jun 26 14:36:32 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTO00QYBY9FV480@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Wed, 26 Jun 2019 14:36:51 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTO00Z3GY9FLO00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:36:51 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTO00W3QY9F6T20@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:36:51 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id 55CCC7E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:51 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 54C648E6058	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:51 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 4A0348E6056	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:36:51 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 12BA98E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:50 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:36:50 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5anb3019251;	Wed,
 26 Jun 2019 14:36:49 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5Q5anqV019250;	Wed, 26 Jun 2019 14:36:49 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5Q5an1e019247	for unknown; Wed,
 26 Jun 2019 14:36:49 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5anUG032103 for
 unknown; Wed, 26 Jun 2019 14:36:49 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5anAJ032099; Wed,
 26 Jun 2019 14:36:49 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5anZ1015890;	Wed,
 26 Jun 2019 14:36:49 +0900
Received: from imss01.silk.ntt-tx.co.jp
 (imss01.silk.ntt-tx.co.jp [10.107.0.126])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5Q5anIW015886	for unknown; Wed, 26 Jun 2019 14:36:49 +0900
Received: from imss01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5am4P011116 for
 unknown; Wed, 26 Jun 2019 14:36:48 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5amDH011112 for
 unknown; Wed, 26 Jun 2019 14:36:48 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5Q5agJl026488	for unknown; Wed,
 26 Jun 2019 14:36:48 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id D6FF11B954;	Wed, 26 Jun 2019 07:36:41 +0200 (CEST)
Received: from mail-pf1-f193.google.com
 (mail-pf1-f193.google.com [209.85.210.193]) by dpdk.org (Postfix)
 with ESMTP id 2A7411B951 for <spp@dpdk.org>; Wed,
 26 Jun 2019 07:36:40 +0200 (CEST)
Received: by mail-pf1-f193.google.com with SMTP id y15so704648pfn.5 for
 <spp@dpdk.org>; Tue, 25 Jun 2019 22:36:40 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id t29sm25684292pfq.156.2019.06.25.22.36.37
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Tue,
 25 Jun 2019 22:36:38 -0700 (PDT)
Date: Wed, 26 Jun 2019 14:36:32 +0900
From: yasufum.o@gmail.com
Subject: [spp 04442] [spp] [PATCH 1/2] shared/sec: rename members of
 sppwk_lcore_status
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190626053633.39963-2-yasufum.o@gmail.com>
In-reply-to: <20190626053633.39963-1-yasufum.o@gmail.com>
References: <20190626053633.39963-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04442
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=aSgb+y4qa5qDmnzLDVFegv67WxZpAFrT7acGM0xquF4=;
 b=F8/KWN+TiYkaVMN66sn/kGdE2qlDcWD+Lk/0RhNIkVq/9qFnzchc3Kk6tHgRMEKGlE
 vnfThDynljPBwkW+AVBwj8aStPUH3BxqhU7DI7UF5GLbM6BGgYcZBza7SmmHWYxoiMKp
 WdeVfFM/XGeLDX1o3cj08gnEzr7izqsu19iUyK8Q9OO4SAnCpSlsOfgS6YHs1lwe2zVM
 sr54OsxEsK4BUZnLw/xjdDvSFNFm0dNnM6mKZgWIVdwT2Qb+y0ANBjlBrRa+0Yp07sF9
 oP4Cq3GUHO4crg1WkUOrizS2tOa10tpZ5SGP5UtKO42CumX9tl8m5FIBq/INYhguiCVK BvGQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=aSgb+y4qa5qDmnzLDVFegv67WxZpAFrT7acGM0xquF4=;
 b=s/hHnJvTtj9wSRkJiiW0p66Dh1jN82eCXBbuMTaMZ7FBv67op2QIZr94nRPkKaQf4b
 1HqRjIVabxxnhfv+vdmvTPEvnGKAZD+9ppoEKsSBB/UPgmWkTWqfbomtPyJpMVZDCXgP
 /FoaHc8PswUrqktOy6w9uOJZP4c8e2124jgz8KuNET+jhbzwE/guf3BwEKW1BlsRr3zF
 dO6SlCkvjiVrg7SLrXwsGO7i7ixEUrI1F9uzS6RHzxDJQV+QfJyqnluxo09yEupNanhQ
 q1a4vukanq0EBBiNKLYYhmex2lDWV1JHvBnszeIHXBLGNrRCMUjHBZi0/4kemGMn9sPF M9Sg==
X-Gm-Message-State: APjAAAXYKroSDnKLx90N7NgXJUdv5sWpQ2k7UlYckfBhYdOdz60s7jHe
 44quP012RJiRQygHPGHu/5v0B182
X-Google-Smtp-Source:
 APXvYqyNomVDxhO6WfCRaZpSKT+tUc9KGc5NJbaOZxsgo/AQlCEoWIIvxzcFcz2Zy84nXAink8cAiA==
X-Received: by 2002:a65:480b:: with SMTP id h11mr1107881pgs.222.1561527399137;
 Tue, 25 Jun 2019 22:36:39 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 300
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to rename members of enum `sppwk_lcore_status` which
defines each of status of worker threads, such as idling or running or
so.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/mir_cmd_runner.c                   |  9 +++----
 src/mirror/spp_mirror.c                       | 24 +++++++++----------
 .../secondary/spp_worker_th/cmd_utils.c       |  8 +++----
 .../secondary/spp_worker_th/cmd_utils.h       | 15 ++++++------
 src/vf/spp_vf.c                               | 24 +++++++++----------
 src/vf/vf_cmd_runner.c                        |  9 +++----
 6 files changed, 45 insertions(+), 44 deletions(-)

diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index f63a84b..17c2c27 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -39,9 +39,10 @@ update_comp(enum sppwk_action wk_action, const char *name,
 	switch (wk_action) {
 	case SPPWK_ACT_START:
 		info = (core_info + lcore_id);
-		if (info->status == SPP_CORE_UNUSE) {
-			RTE_LOG(ERR, MIR_CMD_RUNNER, "Core %d is not available because "
-				"it is in SPP_CORE_UNUSE state.\n", lcore_id);
+		if (info->status == SPPWK_LCORE_UNUSED) {
+			RTE_LOG(ERR, MIR_CMD_RUNNER,
+					"Not available lcore %d for %s.\n",
+					lcore_id, "SPPWK_LCORE_UNUSED");
 			return SPP_RET_NG;
 		}
 
@@ -302,7 +303,7 @@ spp_iterate_core_info(struct spp_iterate_core_params *params)
 	struct sppwk_comp_info *comp_info = NULL;
 
 	RTE_LCORE_FOREACH_SLAVE(lcore_id) {
-		if (spp_get_core_status(lcore_id) == SPP_CORE_UNUSE)
+		if (spp_get_core_status(lcore_id) == SPPWK_LCORE_UNUSED)
 			continue;
 
 		core = get_core_info(lcore_id);
diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index 898755d..695f3ac 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -414,16 +414,16 @@ slave_main(void *arg __attribute__ ((unused)))
 	int ret = SPP_RET_OK;
 	int cnt = 0;
 	unsigned int lcore_id = rte_lcore_id();
-	enum sppwk_lcore_status status = SPP_CORE_STOP;
+	enum sppwk_lcore_status status = SPPWK_LCORE_STOPPED;
 	struct core_mng_info *info = &g_core_info[lcore_id];
 	struct core_info *core = get_core_info(lcore_id);
 
 	RTE_LOG(INFO, MIRROR, "Slave started on lcore %d.\n", lcore_id);
-	set_core_status(lcore_id, SPP_CORE_IDLE);
+	set_core_status(lcore_id, SPPWK_LCORE_IDLING);
 
 	while ((status = spp_get_core_status(lcore_id)) !=
-			SPP_CORE_STOP_REQUEST) {
-		if (status != SPP_CORE_FORWARD)
+			SPPWK_LCORE_REQ_STOP) {
+		if (status != SPPWK_LCORE_RUNNING)
 			continue;
 
 		if (spp_check_core_update(lcore_id) == SPP_RET_OK) {
@@ -449,7 +449,7 @@ slave_main(void *arg __attribute__ ((unused)))
 		}
 	}
 
-	set_core_status(lcore_id, SPP_CORE_STOP);
+	set_core_status(lcore_id, SPPWK_LCORE_STOPPED);
 	RTE_LOG(INFO, MIRROR, "Terminated slave on lcore %d.\n", lcore_id);
 	return ret;
 }
@@ -544,13 +544,13 @@ main(int argc, char *argv[])
 		}
 
 		/* Set the status of main thread to idle */
-		g_core_info[master_lcore].status = SPP_CORE_IDLE;
-		int ret_wait = check_core_status_wait(SPP_CORE_IDLE);
+		g_core_info[master_lcore].status = SPPWK_LCORE_IDLING;
+		int ret_wait = check_core_status_wait(SPPWK_LCORE_IDLING);
 		if (unlikely(ret_wait != 0))
 			break;
 
 		/* Start forwarding */
-		set_all_core_status(SPP_CORE_FORWARD);
+		set_all_core_status(SPPWK_LCORE_RUNNING);
 #ifdef SPP_MIRROR_SHALLOWCOPY
 		RTE_LOG(INFO, MIRROR,
 			"My ID %d start handling messagei(ShallowCopy)\n", 0);
@@ -567,7 +567,7 @@ main(int argc, char *argv[])
 		int ret_do = 0;
 #ifndef USE_UT_SPP_VF
 		while (likely(g_core_info[master_lcore].status !=
-				SPP_CORE_STOP_REQUEST)) {
+				SPPWK_LCORE_REQ_STOP)) {
 #else
 		{
 #endif
@@ -587,7 +587,7 @@ main(int argc, char *argv[])
 		}
 
 		if (unlikely(ret_do != SPP_RET_OK)) {
-			set_all_core_status(SPP_CORE_STOP_REQUEST);
+			set_all_core_status(SPPWK_LCORE_REQ_STOP);
 			break;
 		}
 
@@ -596,8 +596,8 @@ main(int argc, char *argv[])
 	}
 
 	/* Finalize to exit */
-	g_core_info[master_lcore].status = SPP_CORE_STOP;
-	int ret_core_end = check_core_status_wait(SPP_CORE_STOP);
+	g_core_info[master_lcore].status = SPPWK_LCORE_STOPPED;
+	int ret_core_end = check_core_status_wait(SPPWK_LCORE_STOPPED);
 	if (unlikely(ret_core_end != 0))
 		RTE_LOG(ERR, MIRROR, "Failed to terminate master thread.\n");
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 32929ec..6f93400 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -130,7 +130,7 @@ set_all_core_status(enum sppwk_lcore_status status)
 }
 
 /**
- * Set all of component status to SPP_CORE_STOP_REQUEST if received signal
+ * Set all of component status to SPPWK_LCORE_REQ_STOP if received signal
  * is SIGTERM or SIGINT
  */
 void
@@ -144,8 +144,8 @@ stop_process(int signal)
 
 	master_lcore = rte_get_master_lcore();
 	(g_mng_data.p_core_info + master_lcore)->status =
-		SPP_CORE_STOP_REQUEST;
-	set_all_core_status(SPP_CORE_STOP_REQUEST);
+		SPPWK_LCORE_REQ_STOP;
+	set_all_core_status(SPPWK_LCORE_REQ_STOP);
 }
 
 /**
@@ -397,7 +397,7 @@ init_core_info(void)
 	struct core_mng_info *p_core_info = g_mng_data.p_core_info;
 	memset(p_core_info, 0x00,
 			sizeof(struct core_mng_info)*RTE_MAX_LCORE);
-	set_all_core_status(SPP_CORE_STOP);
+	set_all_core_status(SPPWK_LCORE_STOPPED);
 	for (cnt = 0; cnt < RTE_MAX_LCORE; cnt++) {
 		(p_core_info + cnt)->ref_index = 0;
 		(p_core_info + cnt)->upd_index = 1;
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index f33bc62..596ba5e 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -74,14 +74,13 @@
 #define CORE_TYPE_FORWARD_STR	     "forward"
 #define CORE_TYPE_MIRROR_STR	     "mirror"
 
-/* State on component */
+/* Status of a component on lcore. */
 enum sppwk_lcore_status {
-	SPP_CORE_UNUSE,        /**< Not used */
-	SPP_CORE_STOP,         /**< Stopped */
-	SPP_CORE_IDLE,         /**< Idling */
-	SPP_CORE_FORWARD,      /**< Forwarding  */
-	SPP_CORE_STOP_REQUEST, /**< Request stopping */
-	SPP_CORE_IDLE_REQUEST /**< Request idling */
+	SPPWK_LCORE_UNUSED,
+	SPPWK_LCORE_STOPPED,
+	SPPWK_LCORE_IDLING,
+	SPPWK_LCORE_RUNNING,
+	SPPWK_LCORE_REQ_STOP  /**< Request stopping */
 };
 
 /* Type of SPP worker thread. */
@@ -336,7 +335,7 @@ void set_core_status(unsigned int lcore_id, enum sppwk_lcore_status status);
 void set_all_core_status(enum sppwk_lcore_status status);
 
 /**
- * Set all comp status to SPP_CORE_STOP_REQUEST if received SIGTERM or SIGINT.
+ * Set all comp status to SPPWK_LCORE_REQ_STOP if received SIGTERM or SIGINT.
  *
  * @param[in] signal Received signal.
  */
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index 0068329..18a3619 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -140,16 +140,16 @@ slave_main(void *arg __attribute__ ((unused)))
 	int ret = 0;
 	int cnt = 0;
 	unsigned int lcore_id = rte_lcore_id();
-	enum sppwk_lcore_status status = SPP_CORE_STOP;
+	enum sppwk_lcore_status status = SPPWK_LCORE_STOPPED;
 	struct core_mng_info *info = &g_core_info[lcore_id];
 	struct core_info *core = get_core_info(lcore_id);
 
 	RTE_LOG(INFO, APP, "Slave started on lcore %d.\n", lcore_id);
-	set_core_status(lcore_id, SPP_CORE_IDLE);
+	set_core_status(lcore_id, SPPWK_LCORE_IDLING);
 
 	while ((status = spp_get_core_status(lcore_id)) !=
-			SPP_CORE_STOP_REQUEST) {
-		if (status != SPP_CORE_FORWARD)
+			SPPWK_LCORE_REQ_STOP) {
+		if (status != SPPWK_LCORE_RUNNING)
 			continue;
 
 		if (spp_check_core_update(lcore_id) == SPP_RET_OK) {
@@ -182,7 +182,7 @@ slave_main(void *arg __attribute__ ((unused)))
 		}
 	}
 
-	set_core_status(lcore_id, SPP_CORE_STOP);
+	set_core_status(lcore_id, SPPWK_LCORE_STOPPED);
 	RTE_LOG(INFO, APP, "Terminated slave on lcore %d.\n", lcore_id);
 	return ret;
 }
@@ -271,13 +271,13 @@ main(int argc, char *argv[])
 
 		/* Set the status of main thread to idle */
 		master_lcore = rte_get_master_lcore();
-		g_core_info[master_lcore].status = SPP_CORE_IDLE;
-		int ret_wait = check_core_status_wait(SPP_CORE_IDLE);
+		g_core_info[master_lcore].status = SPPWK_LCORE_IDLING;
+		int ret_wait = check_core_status_wait(SPPWK_LCORE_IDLING);
 		if (unlikely(ret_wait != SPP_RET_OK))
 			break;
 
 		/* Start forwarding */
-		set_all_core_status(SPP_CORE_FORWARD);
+		set_all_core_status(SPPWK_LCORE_RUNNING);
 		RTE_LOG(INFO, APP, "My ID %d start handling message\n", 0);
 		RTE_LOG(INFO, APP, "[Press Ctrl-C to quit ...]\n");
 
@@ -288,7 +288,7 @@ main(int argc, char *argv[])
 		int ret_do = SPP_RET_OK;
 #ifndef USE_UT_SPP_VF
 		while (likely(g_core_info[master_lcore].status !=
-				SPP_CORE_STOP_REQUEST)) {
+				SPPWK_LCORE_REQ_STOP)) {
 #else
 		{
 #endif
@@ -308,7 +308,7 @@ main(int argc, char *argv[])
 		}
 
 		if (unlikely(ret_do != SPP_RET_OK)) {
-			set_all_core_status(SPP_CORE_STOP_REQUEST);
+			set_all_core_status(SPPWK_LCORE_REQ_STOP);
 			break;
 		}
 
@@ -317,8 +317,8 @@ main(int argc, char *argv[])
 	}
 
 	/* Finalize to exit */
-	g_core_info[master_lcore].status = SPP_CORE_STOP;
-	int ret_core_end = check_core_status_wait(SPP_CORE_STOP);
+	g_core_info[master_lcore].status = SPPWK_LCORE_STOPPED;
+	int ret_core_end = check_core_status_wait(SPPWK_LCORE_STOPPED);
 	if (unlikely(ret_core_end != SPP_RET_OK))
 		RTE_LOG(ERR, APP, "Failed to terminate master thread.\n");
 
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index d9adc48..f5854b0 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -137,9 +137,10 @@ update_comp(enum sppwk_action wk_action, const char *name,
 	switch (wk_action) {
 	case SPPWK_ACT_START:
 		info = (core_info + lcore_id);
-		if (info->status == SPP_CORE_UNUSE) {
-			RTE_LOG(ERR, VF_CMD_RUNNER, "Core %d is not available because "
-				"it is in SPP_CORE_UNUSE state.\n", lcore_id);
+		if (info->status == SPPWK_LCORE_UNUSED) {
+			RTE_LOG(ERR, VF_CMD_RUNNER,
+					"Not available lcore %d for %s.\n",
+					lcore_id, "SPPWK_LCORE_UNUSED");
 			return SPP_RET_NG;
 		}
 
@@ -436,7 +437,7 @@ spp_iterate_core_info(struct spp_iterate_core_params *params)
 	struct sppwk_comp_info *comp_info = NULL;
 
 	RTE_LCORE_FOREACH_SLAVE(lcore_id) {
-		if (spp_get_core_status(lcore_id) == SPP_CORE_UNUSE)
+		if (spp_get_core_status(lcore_id) == SPPWK_LCORE_UNUSED)
 			continue;
 
 		core = get_core_info(lcore_id);
-- 
2.17.1



From yasufum.o@gmail.com Wed Jun 26 14:36:33 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd101.ddreams.local
 (zssg-mailmd101.ddreams.local [10.160.123.96]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTO00QYNY9GV480@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Wed, 26 Jun 2019 14:36:52 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd101.ddreams.local by
 zssg-mailmd101.ddreams.local (dDREAMS) id <0PTO00H2WY9G9U00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:36:52 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd101.ddreams.local
 (dDREAMS) with ESMTP id <0PTO012V5Y9GWUF0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:36:52 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id 72F297E6038	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:52 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 715A88E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:52 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 65E188E605E	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:36:52 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 2315A8E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:51 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:36:51 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aoZn019258;	Wed,
 26 Jun 2019 14:36:50 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5Q5aokP019257;	Wed, 26 Jun 2019 14:36:50 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5Q5aoq9019254	for unknown; Wed,
 26 Jun 2019 14:36:50 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aokk032115 for
 unknown; Wed, 26 Jun 2019 14:36:50 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aoBo032112; Wed,
 26 Jun 2019 14:36:50 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5aowj015897;	Wed,
 26 Jun 2019 14:36:50 +0900
Received: from imss01.silk.ntt-tx.co.jp
 (imss01.silk.ntt-tx.co.jp [10.107.0.126])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5Q5aoCg015893	for unknown; Wed, 26 Jun 2019 14:36:50 +0900
Received: from imss01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5anse011134 for
 unknown; Wed, 26 Jun 2019 14:36:50 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5anaC011130 for
 unknown; Wed, 26 Jun 2019 14:36:49 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5Q5ah2M026498	for unknown; Wed,
 26 Jun 2019 14:36:49 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id E3C1D1B95A;	Wed, 26 Jun 2019 07:36:42 +0200 (CEST)
Received: from mail-pl1-f194.google.com
 (mail-pl1-f194.google.com [209.85.214.194]) by dpdk.org (Postfix)
 with ESMTP id 6C2101B951 for <spp@dpdk.org>; Wed,
 26 Jun 2019 07:36:41 +0200 (CEST)
Received: by mail-pl1-f194.google.com with SMTP id e5so749140pls.13 for
 <spp@dpdk.org>; Tue, 25 Jun 2019 22:36:41 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id t29sm25684292pfq.156.2019.06.25.22.36.39
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Tue,
 25 Jun 2019 22:36:40 -0700 (PDT)
Date: Wed, 26 Jun 2019 14:36:33 +0900
From: yasufum.o@gmail.com
Subject: [spp 04443] [spp] [PATCH 2/2] spp_pcap: rename members of
 sppwk_lcore_status
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190626053633.39963-3-yasufum.o@gmail.com>
In-reply-to: <20190626053633.39963-1-yasufum.o@gmail.com>
References: <20190626053633.39963-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04443
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=7SFX30sBZxeudQzG/dM0wtg84EOhPq4d7zhlv8xFo1w=;
 b=n1Y2XZ9dFX3pg7sG6MtuTz5yKbqm+CaFzrG9PTceWpxUYyzNwNExG64IUFJDpJlbkK
 Mzo9oTL3dCnk075cZ4KKfNnCeJ5z4rSH+CPmHYxUOLnhhdQGEDPpHDWFM2vDz259F/m3
 B0Y8WoScuRS5MEYr7L3PXmeGNIpAza7iHea4plzvPnfE5TsCOI/hpQQiFMI0VjSWRNtJ
 aDq6mfvueFky1LySss22gzYd6s+NTwTPstamBH4DFkH2ywdpwlXzX8WpT0fij6Lkn1RU
 QPsIqU+4Qa0ClqXlEV9HUimNf9A8PHMXB1Vx8PGtLovFpjt3gQiUKzNe0qa56xXsAHSM EgGA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=7SFX30sBZxeudQzG/dM0wtg84EOhPq4d7zhlv8xFo1w=;
 b=PnCZVl9nrc0WrkXC2rqpeiVk/Y/Sl9BmjrSj0Ba1JPdosSHCcdW7zj9+/AA2fCiFMz
 Hl9QnPuImOq3VX803fTSRORImb9GWb6/A+nQ1yCw3NOX0Eb4LgRkxtNqe0MOkhTsKRTE
 kneCO5ImfQPKriu7hYlgjalAkF03yF+KoYufZ9YHrXE4bIoYvt9H9l8fheM+dqP7lj0i
 NKQfjYQjQ/QtVgWKm/AWsHfMUeuanr06V4codiejQz7lU5bOTZkMpEcIPXtESwC8Amwg
 ypC60k7I6YpKv4EYQDnmNpZdeNlPToELtRR+mzrcNhTHzP+2ojhX6v0z6Uo+5qrnT8LT gkUQ==
X-Gm-Message-State: APjAAAXczZ8V5SHzVemNrSlc6DNImjwtWC4pTpQfD13BgQ2DGGK4Cvaq
 ivB/gwOSGBETniZcBEJX34iT6oaQ
X-Google-Smtp-Source:
 APXvYqwpQ3dP92wTKn7lk8DHMRGrH38OCU3MyfTqA8e1HzKo/vkEGIV4B5a0r7+1+XUMh9QiMK7eTg==
X-Received: by 2002:a17:902:296a:: with SMTP id
 g97mr3073046plb.115.1561527400589; Tue, 25 Jun 2019 22:36:40 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 176
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

As same as previous update, this patch is to rename members of enum
`sppwk_lcore_status` which defines each of status of worker threads,
such as idling or running or so.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/pcap/cmd_runner.c                         |  2 +-
 src/pcap/cmd_utils.c                          |  6 +++---
 src/pcap/cmd_utils.h                          | 18 ++++++++---------
 src/pcap/spp_pcap.c                           | 20 +++++++++----------
 .../secondary/spp_worker_th/cmd_utils.h       |  2 +-
 5 files changed, 23 insertions(+), 25 deletions(-)

diff --git a/src/pcap/cmd_runner.c b/src/pcap/cmd_runner.c
index 48e8eba..5754841 100644
--- a/src/pcap/cmd_runner.c
+++ b/src/pcap/cmd_runner.c
@@ -71,7 +71,7 @@ spp_iterate_core_info(struct spp_iterate_core_params *params)
 	int lcore_id;
 
 	RTE_LCORE_FOREACH_SLAVE(lcore_id) {
-		if (sppwk_get_lcore_status(lcore_id) == SPP_CORE_UNUSE)
+		if (sppwk_get_lcore_status(lcore_id) == SPPWK_LCORE_UNUSED)
 			continue;
 
 		ret = spp_pcap_get_core_status(lcore_id, params);
diff --git a/src/pcap/cmd_utils.c b/src/pcap/cmd_utils.c
index 66e6d05..69f0fa0 100644
--- a/src/pcap/cmd_utils.c
+++ b/src/pcap/cmd_utils.c
@@ -138,8 +138,8 @@ stop_process(int signal)
 
 	master_lcore = rte_get_master_lcore();
 	(g_mng_data_addr.p_core_info + master_lcore)->status =
-							SPP_CORE_STOP_REQUEST;
-	set_all_core_status(SPP_CORE_STOP_REQUEST);
+							SPPWK_LCORE_REQ_STOP;
+	set_all_core_status(SPPWK_LCORE_REQ_STOP);
 }
 
 /**
@@ -194,7 +194,7 @@ init_core_info(void)
 	struct core_mng_info *p_core_info = g_mng_data_addr.p_core_info;
 	memset(p_core_info, 0x00,
 			sizeof(struct core_mng_info)*RTE_MAX_LCORE);
-	set_all_core_status(SPP_CORE_STOP);
+	set_all_core_status(SPPWK_LCORE_STOPPED);
 	*g_mng_data_addr.p_capture_request = SPP_CAPTURE_IDLE;
 	*g_mng_data_addr.p_capture_status = SPP_CAPTURE_IDLE;
 }
diff --git a/src/pcap/cmd_utils.h b/src/pcap/cmd_utils.h
index 9b7ae52..1b757f5 100644
--- a/src/pcap/cmd_utils.h
+++ b/src/pcap/cmd_utils.h
@@ -12,10 +12,9 @@
 #define _SPPWK_CMD_UTILS_H_
 
 /**
- * @file
- * SPP process
+ * @file cmd_utils.h
  *
- * SPP component common function.
+ * Command utility functions for SPP worker thread.
  */
 
 #include <netinet/in.h>
@@ -34,14 +33,13 @@
 #define SPP_CORE_STATUS_CHECK_MAX 5
 
 /* TODO(yasufum) merge it to the same definition in shared/.../cmd_utils.h */
-/* State on core */
+/* Status of a component on lcore. */
 enum sppwk_lcore_status {
-	SPP_CORE_UNUSE,        /**< Not used */
-	SPP_CORE_STOP,         /**< Stopped */
-	SPP_CORE_IDLE,         /**< Idling */
-	SPP_CORE_FORWARD,      /**< Forwarding  */
-	SPP_CORE_STOP_REQUEST, /**< Request stopping */
-	SPP_CORE_IDLE_REQUEST  /**< Request idling */
+	SPPWK_LCORE_UNUSED,
+	SPPWK_LCORE_STOPPED,
+	SPPWK_LCORE_IDLING,
+	SPPWK_LCORE_RUNNING,
+	SPPWK_LCORE_REQ_STOP  /**< Request for stopping. */
 };
 
 /* State on capture */
diff --git a/src/pcap/spp_pcap.c b/src/pcap/spp_pcap.c
index 6762337..80e6aad 100644
--- a/src/pcap/spp_pcap.c
+++ b/src/pcap/spp_pcap.c
@@ -860,10 +860,10 @@ slave_main(void *arg __attribute__ ((unused)))
 					pcap_info->thread_no, lcore_id);
 		pcap_info->type = PCAP_WRITE;
 	}
-	set_core_status(lcore_id, SPP_CORE_IDLE);
+	set_core_status(lcore_id, SPPWK_LCORE_IDLING);
 
 	while (1) {
-		if (sppwk_get_lcore_status(lcore_id) == SPP_CORE_STOP_REQUEST) {
+		if (sppwk_get_lcore_status(lcore_id) == SPPWK_LCORE_REQ_STOP) {
 			if (pcap_info->status == SPP_CAPTURE_IDLE)
 				break;
 			if (pcap_info->type == PCAP_RECEIVE)
@@ -882,7 +882,7 @@ slave_main(void *arg __attribute__ ((unused)))
 		}
 	}
 
-	set_core_status(lcore_id, SPP_CORE_STOP);
+	set_core_status(lcore_id, SPPWK_LCORE_STOPPED);
 	RTE_LOG(INFO, SPP_PCAP,
 			"Terminated slave on lcore %d.\n", lcore_id);
 	return ret;
@@ -1024,19 +1024,19 @@ main(int argc, char *argv[])
 
 		/* Set the status of main thread to idle */
 		master_lcore = rte_get_master_lcore();
-		g_core_info[master_lcore].status = SPP_CORE_IDLE;
-		int ret_wait = check_core_status_wait(SPP_CORE_IDLE);
+		g_core_info[master_lcore].status = SPPWK_LCORE_IDLING;
+		int ret_wait = check_core_status_wait(SPPWK_LCORE_IDLING);
 		if (unlikely(ret_wait != 0))
 			break;
 
 		/* Start secondary */
-		set_all_core_status(SPP_CORE_FORWARD);
+		set_all_core_status(SPPWK_LCORE_RUNNING);
 		RTE_LOG(INFO, SPP_PCAP, "[Press Ctrl-C to quit ...]\n");
 
 		/* Enter loop for accepting commands */
 		int ret_do = 0;
 		while (likely(g_core_info[master_lcore].status !=
-				SPP_CORE_STOP_REQUEST)) {
+				SPPWK_LCORE_REQ_STOP)) {
 			/* Receive command */
 			ret_do = spp_command_proc_do();
 			if (unlikely(ret_do != SPPWK_RET_OK))
@@ -1049,7 +1049,7 @@ main(int argc, char *argv[])
 		}
 
 		if (unlikely(ret_do != SPPWK_RET_OK)) {
-			set_all_core_status(SPP_CORE_STOP_REQUEST);
+			set_all_core_status(SPPWK_LCORE_REQ_STOP);
 			break;
 		}
 
@@ -1058,8 +1058,8 @@ main(int argc, char *argv[])
 	}
 
 	/* Finalize to exit */
-	g_core_info[master_lcore].status = SPP_CORE_STOP;
-	int ret_core_end = check_core_status_wait(SPP_CORE_STOP);
+	g_core_info[master_lcore].status = SPPWK_LCORE_STOPPED;
+	int ret_core_end = check_core_status_wait(SPPWK_LCORE_STOPPED);
 	if (unlikely(ret_core_end != 0))
 		RTE_LOG(ERR, SPP_PCAP, "Failed to terminate master thread.\n");
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 596ba5e..87c9b2c 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -80,7 +80,7 @@ enum sppwk_lcore_status {
 	SPPWK_LCORE_STOPPED,
 	SPPWK_LCORE_IDLING,
 	SPPWK_LCORE_RUNNING,
-	SPPWK_LCORE_REQ_STOP  /**< Request stopping */
+	SPPWK_LCORE_REQ_STOP  /**< Request for stopping. */
 };
 
 /* Type of SPP worker thread. */
-- 
2.17.1



From spp-request@dpdk.org Wed Jun 26 14:36:51 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTO00Q0BY9OV490@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Wed, 26 Jun 2019 14:37:00 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTO0073CY9O2W00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:37:00 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTO004F8Y9OZR10@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:37:00 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id 136C47E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:37:00 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 1212E8E605C	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:37:00 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 077738E6056	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:37:00 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 8C9CD8E6058	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:36:59 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:36:59 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5axB0019331;	Wed,
 26 Jun 2019 14:36:59 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5Q5axAE019330;	Wed, 26 Jun 2019 14:36:59 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss01.silk.ntt-tx.co.jp
 (imss01.silk.ntt-tx.co.jp [10.107.0.126])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5Q5axdH019327	for unknown; Wed,
 26 Jun 2019 14:36:59 +0900
Received: from imss01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5axS8011183 for
 unknown; Wed, 26 Jun 2019 14:36:59 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5axX3011177 for
 unknown; Wed, 26 Jun 2019 14:36:59 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5Q5aqeD026549	for unknown; Wed,
 26 Jun 2019 14:36:58 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 0B9BD1B951	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Wed,
 26 Jun 2019 07:36:52 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 26
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Wed, 26 Jun 2019 07:36:51 +0200
Message-id: <mailman.23616.1561527411.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH 1/2] shared/sec: rename members of sppwk_lcore_status
      (yasufum.o@gmail.com)
   2. [PATCH 2/2] spp_pcap: rename members of sppwk_lcore_status
      (yasufum.o@gmail.com)
   3. [PATCH] shared/sec: rename enum spp_classifier_type
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Wed, 26 Jun 2019 14:36:32 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 1/2] shared/sec: rename members of
	sppwk_lcore_status
Message-ID: <20190626053633.39963-2-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to rename members of enum `sppwk_lcore_status` which
defines each of status of worker threads, such as idling or running or
so.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/mir_cmd_runner.c                   |  9 +++----
 src/mirror/spp_mirror.c                       | 24 +++++++++----------
 .../secondary/spp_worker_th/cmd_utils.c       |  8 +++----
 .../secondary/spp_worker_th/cmd_utils.h       | 15 ++++++------
 src/vf/spp_vf.c                               | 24 +++++++++----------
 src/vf/vf_cmd_runner.c                        |  9 +++----
 6 files changed, 45 insertions(+), 44 deletions(-)

diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index f63a84b..17c2c27 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -39,9 +39,10 @@ update_comp(enum sppwk_action wk_action, const char *name,
 	switch (wk_action) {
 	case SPPWK_ACT_START:
 		info = (core_info + lcore_id);
-		if (info->status == SPP_CORE_UNUSE) {
-			RTE_LOG(ERR, MIR_CMD_RUNNER, "Core %d is not available because "
-				"it is in SPP_CORE_UNUSE state.\n", lcore_id);
+		if (info->status == SPPWK_LCORE_UNUSED) {
+			RTE_LOG(ERR, MIR_CMD_RUNNER,
+					"Not available lcore %d for %s.\n",
+					lcore_id, "SPPWK_LCORE_UNUSED");
 			return SPP_RET_NG;
 		}
 
@@ -302,7 +303,7 @@ spp_iterate_core_info(struct spp_iterate_core_params *params)
 	struct sppwk_comp_info *comp_info = NULL;
 
 	RTE_LCORE_FOREACH_SLAVE(lcore_id) {
-		if (spp_get_core_status(lcore_id) == SPP_CORE_UNUSE)
+		if (spp_get_core_status(lcore_id) == SPPWK_LCORE_UNUSED)
 			continue;
 
 		core = get_core_info(lcore_id);
diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index 898755d..695f3ac 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -414,16 +414,16 @@ slave_main(void *arg __attribute__ ((unused)))
 	int ret = SPP_RET_OK;
 	int cnt = 0;
 	unsigned int lcore_id = rte_lcore_id();
-	enum sppwk_lcore_status status = SPP_CORE_STOP;
+	enum sppwk_lcore_status status = SPPWK_LCORE_STOPPED;
 	struct core_mng_info *info = &g_core_info[lcore_id];
 	struct core_info *core = get_core_info(lcore_id);
 
 	RTE_LOG(INFO, MIRROR, "Slave started on lcore %d.\n", lcore_id);
-	set_core_status(lcore_id, SPP_CORE_IDLE);
+	set_core_status(lcore_id, SPPWK_LCORE_IDLING);
 
 	while ((status = spp_get_core_status(lcore_id)) !=
-			SPP_CORE_STOP_REQUEST) {
-		if (status != SPP_CORE_FORWARD)
+			SPPWK_LCORE_REQ_STOP) {
+		if (status != SPPWK_LCORE_RUNNING)
 			continue;
 
 		if (spp_check_core_update(lcore_id) == SPP_RET_OK) {
@@ -449,7 +449,7 @@ slave_main(void *arg __attribute__ ((unused)))
 		}
 	}
 
-	set_core_status(lcore_id, SPP_CORE_STOP);
+	set_core_status(lcore_id, SPPWK_LCORE_STOPPED);
 	RTE_LOG(INFO, MIRROR, "Terminated slave on lcore %d.\n", lcore_id);
 	return ret;
 }
@@ -544,13 +544,13 @@ main(int argc, char *argv[])
 		}
 
 		/* Set the status of main thread to idle */
-		g_core_info[master_lcore].status = SPP_CORE_IDLE;
-		int ret_wait = check_core_status_wait(SPP_CORE_IDLE);
+		g_core_info[master_lcore].status = SPPWK_LCORE_IDLING;
+		int ret_wait = check_core_status_wait(SPPWK_LCORE_IDLING);
 		if (unlikely(ret_wait != 0))
 			break;
 
 		/* Start forwarding */
-		set_all_core_status(SPP_CORE_FORWARD);
+		set_all_core_status(SPPWK_LCORE_RUNNING);
 #ifdef SPP_MIRROR_SHALLOWCOPY
 		RTE_LOG(INFO, MIRROR,
 			"My ID %d start handling messagei(ShallowCopy)\n", 0);
@@ -567,7 +567,7 @@ main(int argc, char *argv[])
 		int ret_do = 0;
 #ifndef USE_UT_SPP_VF
 		while (likely(g_core_info[master_lcore].status !=
-				SPP_CORE_STOP_REQUEST)) {
+				SPPWK_LCORE_REQ_STOP)) {
 #else
 		{
 #endif
@@ -587,7 +587,7 @@ main(int argc, char *argv[])
 		}
 
 		if (unlikely(ret_do != SPP_RET_OK)) {
-			set_all_core_status(SPP_CORE_STOP_REQUEST);
+			set_all_core_status(SPPWK_LCORE_REQ_STOP);
 			break;
 		}
 
@@ -596,8 +596,8 @@ main(int argc, char *argv[])
 	}
 
 	/* Finalize to exit */
-	g_core_info[master_lcore].status = SPP_CORE_STOP;
-	int ret_core_end = check_core_status_wait(SPP_CORE_STOP);
+	g_core_info[master_lcore].status = SPPWK_LCORE_STOPPED;
+	int ret_core_end = check_core_status_wait(SPPWK_LCORE_STOPPED);
 	if (unlikely(ret_core_end != 0))
 		RTE_LOG(ERR, MIRROR, "Failed to terminate master thread.\n");
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 32929ec..6f93400 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -130,7 +130,7 @@ set_all_core_status(enum sppwk_lcore_status status)
 }
 
 /**
- * Set all of component status to SPP_CORE_STOP_REQUEST if received signal
+ * Set all of component status to SPPWK_LCORE_REQ_STOP if received signal
  * is SIGTERM or SIGINT
  */
 void
@@ -144,8 +144,8 @@ stop_process(int signal)
 
 	master_lcore = rte_get_master_lcore();
 	(g_mng_data.p_core_info + master_lcore)->status =
-		SPP_CORE_STOP_REQUEST;
-	set_all_core_status(SPP_CORE_STOP_REQUEST);
+		SPPWK_LCORE_REQ_STOP;
+	set_all_core_status(SPPWK_LCORE_REQ_STOP);
 }
 
 /**
@@ -397,7 +397,7 @@ init_core_info(void)
 	struct core_mng_info *p_core_info = g_mng_data.p_core_info;
 	memset(p_core_info, 0x00,
 			sizeof(struct core_mng_info)*RTE_MAX_LCORE);
-	set_all_core_status(SPP_CORE_STOP);
+	set_all_core_status(SPPWK_LCORE_STOPPED);
 	for (cnt = 0; cnt < RTE_MAX_LCORE; cnt++) {
 		(p_core_info + cnt)->ref_index = 0;
 		(p_core_info + cnt)->upd_index = 1;
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index f33bc62..596ba5e 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -74,14 +74,13 @@
 #define CORE_TYPE_FORWARD_STR	     "forward"
 #define CORE_TYPE_MIRROR_STR	     "mirror"
 
-/* State on component */
+/* Status of a component on lcore. */
 enum sppwk_lcore_status {
-	SPP_CORE_UNUSE,        /**< Not used */
-	SPP_CORE_STOP,         /**< Stopped */
-	SPP_CORE_IDLE,         /**< Idling */
-	SPP_CORE_FORWARD,      /**< Forwarding  */
-	SPP_CORE_STOP_REQUEST, /**< Request stopping */
-	SPP_CORE_IDLE_REQUEST /**< Request idling */
+	SPPWK_LCORE_UNUSED,
+	SPPWK_LCORE_STOPPED,
+	SPPWK_LCORE_IDLING,
+	SPPWK_LCORE_RUNNING,
+	SPPWK_LCORE_REQ_STOP  /**< Request stopping */
 };
 
 /* Type of SPP worker thread. */
@@ -336,7 +335,7 @@ void set_core_status(unsigned int lcore_id, enum sppwk_lcore_status status);
 void set_all_core_status(enum sppwk_lcore_status status);
 
 /**
- * Set all comp status to SPP_CORE_STOP_REQUEST if received SIGTERM or SIGINT.
+ * Set all comp status to SPPWK_LCORE_REQ_STOP if received SIGTERM or SIGINT.
  *
  * @param[in] signal Received signal.
  */
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index 0068329..18a3619 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -140,16 +140,16 @@ slave_main(void *arg __attribute__ ((unused)))
 	int ret = 0;
 	int cnt = 0;
 	unsigned int lcore_id = rte_lcore_id();
-	enum sppwk_lcore_status status = SPP_CORE_STOP;
+	enum sppwk_lcore_status status = SPPWK_LCORE_STOPPED;
 	struct core_mng_info *info = &g_core_info[lcore_id];
 	struct core_info *core = get_core_info(lcore_id);
 
 	RTE_LOG(INFO, APP, "Slave started on lcore %d.\n", lcore_id);
-	set_core_status(lcore_id, SPP_CORE_IDLE);
+	set_core_status(lcore_id, SPPWK_LCORE_IDLING);
 
 	while ((status = spp_get_core_status(lcore_id)) !=
-			SPP_CORE_STOP_REQUEST) {
-		if (status != SPP_CORE_FORWARD)
+			SPPWK_LCORE_REQ_STOP) {
+		if (status != SPPWK_LCORE_RUNNING)
 			continue;
 
 		if (spp_check_core_update(lcore_id) == SPP_RET_OK) {
@@ -182,7 +182,7 @@ slave_main(void *arg __attribute__ ((unused)))
 		}
 	}
 
-	set_core_status(lcore_id, SPP_CORE_STOP);
+	set_core_status(lcore_id, SPPWK_LCORE_STOPPED);
 	RTE_LOG(INFO, APP, "Terminated slave on lcore %d.\n", lcore_id);
 	return ret;
 }
@@ -271,13 +271,13 @@ main(int argc, char *argv[])
 
 		/* Set the status of main thread to idle */
 		master_lcore = rte_get_master_lcore();
-		g_core_info[master_lcore].status = SPP_CORE_IDLE;
-		int ret_wait = check_core_status_wait(SPP_CORE_IDLE);
+		g_core_info[master_lcore].status = SPPWK_LCORE_IDLING;
+		int ret_wait = check_core_status_wait(SPPWK_LCORE_IDLING);
 		if (unlikely(ret_wait != SPP_RET_OK))
 			break;
 
 		/* Start forwarding */
-		set_all_core_status(SPP_CORE_FORWARD);
+		set_all_core_status(SPPWK_LCORE_RUNNING);
 		RTE_LOG(INFO, APP, "My ID %d start handling message\n", 0);
 		RTE_LOG(INFO, APP, "[Press Ctrl-C to quit ...]\n");
 
@@ -288,7 +288,7 @@ main(int argc, char *argv[])
 		int ret_do = SPP_RET_OK;
 #ifndef USE_UT_SPP_VF
 		while (likely(g_core_info[master_lcore].status !=
-				SPP_CORE_STOP_REQUEST)) {
+				SPPWK_LCORE_REQ_STOP)) {
 #else
 		{
 #endif
@@ -308,7 +308,7 @@ main(int argc, char *argv[])
 		}
 
 		if (unlikely(ret_do != SPP_RET_OK)) {
-			set_all_core_status(SPP_CORE_STOP_REQUEST);
+			set_all_core_status(SPPWK_LCORE_REQ_STOP);
 			break;
 		}
 
@@ -317,8 +317,8 @@ main(int argc, char *argv[])
 	}
 
 	/* Finalize to exit */
-	g_core_info[master_lcore].status = SPP_CORE_STOP;
-	int ret_core_end = check_core_status_wait(SPP_CORE_STOP);
+	g_core_info[master_lcore].status = SPPWK_LCORE_STOPPED;
+	int ret_core_end = check_core_status_wait(SPPWK_LCORE_STOPPED);
 	if (unlikely(ret_core_end != SPP_RET_OK))
 		RTE_LOG(ERR, APP, "Failed to terminate master thread.\n");
 
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index d9adc48..f5854b0 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -137,9 +137,10 @@ update_comp(enum sppwk_action wk_action, const char *name,
 	switch (wk_action) {
 	case SPPWK_ACT_START:
 		info = (core_info + lcore_id);
-		if (info->status == SPP_CORE_UNUSE) {
-			RTE_LOG(ERR, VF_CMD_RUNNER, "Core %d is not available because "
-				"it is in SPP_CORE_UNUSE state.\n", lcore_id);
+		if (info->status == SPPWK_LCORE_UNUSED) {
+			RTE_LOG(ERR, VF_CMD_RUNNER,
+					"Not available lcore %d for %s.\n",
+					lcore_id, "SPPWK_LCORE_UNUSED");
 			return SPP_RET_NG;
 		}
 
@@ -436,7 +437,7 @@ spp_iterate_core_info(struct spp_iterate_core_params *params)
 	struct sppwk_comp_info *comp_info = NULL;
 
 	RTE_LCORE_FOREACH_SLAVE(lcore_id) {
-		if (spp_get_core_status(lcore_id) == SPP_CORE_UNUSE)
+		if (spp_get_core_status(lcore_id) == SPPWK_LCORE_UNUSED)
 			continue;
 
 		core = get_core_info(lcore_id);
-- 
2.17.1



------------------------------

Message: 2
Date: Wed, 26 Jun 2019 14:36:33 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 2/2] spp_pcap: rename members of
	sppwk_lcore_status
Message-ID: <20190626053633.39963-3-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

As same as previous update, this patch is to rename members of enum
`sppwk_lcore_status` which defines each of status of worker threads,
such as idling or running or so.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/pcap/cmd_runner.c                         |  2 +-
 src/pcap/cmd_utils.c                          |  6 +++---
 src/pcap/cmd_utils.h                          | 18 ++++++++---------
 src/pcap/spp_pcap.c                           | 20 +++++++++----------
 .../secondary/spp_worker_th/cmd_utils.h       |  2 +-
 5 files changed, 23 insertions(+), 25 deletions(-)

diff --git a/src/pcap/cmd_runner.c b/src/pcap/cmd_runner.c
index 48e8eba..5754841 100644
--- a/src/pcap/cmd_runner.c
+++ b/src/pcap/cmd_runner.c
@@ -71,7 +71,7 @@ spp_iterate_core_info(struct spp_iterate_core_params *params)
 	int lcore_id;
 
 	RTE_LCORE_FOREACH_SLAVE(lcore_id) {
-		if (sppwk_get_lcore_status(lcore_id) == SPP_CORE_UNUSE)
+		if (sppwk_get_lcore_status(lcore_id) == SPPWK_LCORE_UNUSED)
 			continue;
 
 		ret = spp_pcap_get_core_status(lcore_id, params);
diff --git a/src/pcap/cmd_utils.c b/src/pcap/cmd_utils.c
index 66e6d05..69f0fa0 100644
--- a/src/pcap/cmd_utils.c
+++ b/src/pcap/cmd_utils.c
@@ -138,8 +138,8 @@ stop_process(int signal)
 
 	master_lcore = rte_get_master_lcore();
 	(g_mng_data_addr.p_core_info + master_lcore)->status =
-							SPP_CORE_STOP_REQUEST;
-	set_all_core_status(SPP_CORE_STOP_REQUEST);
+							SPPWK_LCORE_REQ_STOP;
+	set_all_core_status(SPPWK_LCORE_REQ_STOP);
 }
 
 /**
@@ -194,7 +194,7 @@ init_core_info(void)
 	struct core_mng_info *p_core_info = g_mng_data_addr.p_core_info;
 	memset(p_core_info, 0x00,
 			sizeof(struct core_mng_info)*RTE_MAX_LCORE);
-	set_all_core_status(SPP_CORE_STOP);
+	set_all_core_status(SPPWK_LCORE_STOPPED);
 	*g_mng_data_addr.p_capture_request = SPP_CAPTURE_IDLE;
 	*g_mng_data_addr.p_capture_status = SPP_CAPTURE_IDLE;
 }
diff --git a/src/pcap/cmd_utils.h b/src/pcap/cmd_utils.h
index 9b7ae52..1b757f5 100644
--- a/src/pcap/cmd_utils.h
+++ b/src/pcap/cmd_utils.h
@@ -12,10 +12,9 @@
 #define _SPPWK_CMD_UTILS_H_
 
 /**
- * @file
- * SPP process
+ * @file cmd_utils.h
  *
- * SPP component common function.
+ * Command utility functions for SPP worker thread.
  */
 
 #include <netinet/in.h>
@@ -34,14 +33,13 @@
 #define SPP_CORE_STATUS_CHECK_MAX 5
 
 /* TODO(yasufum) merge it to the same definition in shared/.../cmd_utils.h */
-/* State on core */
+/* Status of a component on lcore. */
 enum sppwk_lcore_status {
-	SPP_CORE_UNUSE,        /**< Not used */
-	SPP_CORE_STOP,         /**< Stopped */
-	SPP_CORE_IDLE,         /**< Idling */
-	SPP_CORE_FORWARD,      /**< Forwarding  */
-	SPP_CORE_STOP_REQUEST, /**< Request stopping */
-	SPP_CORE_IDLE_REQUEST  /**< Request idling */
+	SPPWK_LCORE_UNUSED,
+	SPPWK_LCORE_STOPPED,
+	SPPWK_LCORE_IDLING,
+	SPPWK_LCORE_RUNNING,
+	SPPWK_LCORE_REQ_STOP  /**< Request for stopping. */
 };
 
 /* State on capture */
diff --git a/src/pcap/spp_pcap.c b/src/pcap/spp_pcap.c
index 6762337..80e6aad 100644
--- a/src/pcap/spp_pcap.c
+++ b/src/pcap/spp_pcap.c
@@ -860,10 +860,10 @@ slave_main(void *arg __attribute__ ((unused)))
 					pcap_info->thread_no, lcore_id);
 		pcap_info->type = PCAP_WRITE;
 	}
-	set_core_status(lcore_id, SPP_CORE_IDLE);
+	set_core_status(lcore_id, SPPWK_LCORE_IDLING);
 
 	while (1) {
-		if (sppwk_get_lcore_status(lcore_id) == SPP_CORE_STOP_REQUEST) {
+		if (sppwk_get_lcore_status(lcore_id) == SPPWK_LCORE_REQ_STOP) {
 			if (pcap_info->status == SPP_CAPTURE_IDLE)
 				break;
 			if (pcap_info->type == PCAP_RECEIVE)
@@ -882,7 +882,7 @@ slave_main(void *arg __attribute__ ((unused)))
 		}
 	}
 
-	set_core_status(lcore_id, SPP_CORE_STOP);
+	set_core_status(lcore_id, SPPWK_LCORE_STOPPED);
 	RTE_LOG(INFO, SPP_PCAP,
 			"Terminated slave on lcore %d.\n", lcore_id);
 	return ret;
@@ -1024,19 +1024,19 @@ main(int argc, char *argv[])
 
 		/* Set the status of main thread to idle */
 		master_lcore = rte_get_master_lcore();
-		g_core_info[master_lcore].status = SPP_CORE_IDLE;
-		int ret_wait = check_core_status_wait(SPP_CORE_IDLE);
+		g_core_info[master_lcore].status = SPPWK_LCORE_IDLING;
+		int ret_wait = check_core_status_wait(SPPWK_LCORE_IDLING);
 		if (unlikely(ret_wait != 0))
 			break;
 
 		/* Start secondary */
-		set_all_core_status(SPP_CORE_FORWARD);
+		set_all_core_status(SPPWK_LCORE_RUNNING);
 		RTE_LOG(INFO, SPP_PCAP, "[Press Ctrl-C to quit ...]\n");
 
 		/* Enter loop for accepting commands */
 		int ret_do = 0;
 		while (likely(g_core_info[master_lcore].status !=
-				SPP_CORE_STOP_REQUEST)) {
+				SPPWK_LCORE_REQ_STOP)) {
 			/* Receive command */
 			ret_do = spp_command_proc_do();
 			if (unlikely(ret_do != SPPWK_RET_OK))
@@ -1049,7 +1049,7 @@ main(int argc, char *argv[])
 		}
 
 		if (unlikely(ret_do != SPPWK_RET_OK)) {
-			set_all_core_status(SPP_CORE_STOP_REQUEST);
+			set_all_core_status(SPPWK_LCORE_REQ_STOP);
 			break;
 		}
 
@@ -1058,8 +1058,8 @@ main(int argc, char *argv[])
 	}
 
 	/* Finalize to exit */
-	g_core_info[master_lcore].status = SPP_CORE_STOP;
-	int ret_core_end = check_core_status_wait(SPP_CORE_STOP);
+	g_core_info[master_lcore].status = SPPWK_LCORE_STOPPED;
+	int ret_core_end = check_core_status_wait(SPPWK_LCORE_STOPPED);
 	if (unlikely(ret_core_end != 0))
 		RTE_LOG(ERR, SPP_PCAP, "Failed to terminate master thread.\n");
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 596ba5e..87c9b2c 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -80,7 +80,7 @@ enum sppwk_lcore_status {
 	SPPWK_LCORE_STOPPED,
 	SPPWK_LCORE_IDLING,
 	SPPWK_LCORE_RUNNING,
-	SPPWK_LCORE_REQ_STOP  /**< Request stopping */
+	SPPWK_LCORE_REQ_STOP  /**< Request for stopping. */
 };
 
 /* Type of SPP worker thread. */
-- 
2.17.1



------------------------------

Message: 3
Date: Wed, 26 Jun 2019 14:36:45 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] shared/sec: rename enum spp_classifier_type
Message-ID: <20190626053645.40019-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to refactor the name of enum `spp_classifier_type` and
its members to be more specific and short.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/shared/secondary/spp_worker_th/cmd_parser.c |  6 +++---
 src/shared/secondary/spp_worker_th/cmd_parser.h |  2 +-
 src/shared/secondary/spp_worker_th/cmd_utils.c  |  2 +-
 src/shared/secondary/spp_worker_th/cmd_utils.h  | 10 +++++-----
 src/shared/secondary/spp_worker_th/vf_deps.h    |  2 +-
 src/vf/classifier_mac.c                         | 14 +++++++-------
 src/vf/vf_cmd_runner.c                          | 17 ++++++++---------
 7 files changed, 26 insertions(+), 27 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.c b/src/shared/secondary/spp_worker_th/cmd_parser.c
index cd79bdb..931c53b 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.c
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.c
@@ -728,7 +728,7 @@ parse_cls_port(void *cls_cmd_attr, const char *arg_val,
 		return SPP_RET_NG;
 	}
 
-	if (cls_attrs->type == SPP_CLASSIFIER_TYPE_MAC)
+	if (cls_attrs->cls_type == SPPWK_CLS_TYPE_MAC)
 		cls_attrs->vid = ETH_VLAN_ID_MAX;
 
 	if (unlikely(cls_attrs->wk_action == SPPWK_ACT_ADD)) {
@@ -783,7 +783,7 @@ cmd_ops_list[][SPPWK_MAX_PARAMS] = {
 		{
 			.name = "type",
 			.offset = offsetof(struct sppwk_cmd_attrs,
-					spec.cls_table.type),
+					spec.cls_table.cls_type),
 			.func = parse_cls_type
 		},
 		{
@@ -810,7 +810,7 @@ cmd_ops_list[][SPPWK_MAX_PARAMS] = {
 		{
 			.name = "type",
 			.offset = offsetof(struct sppwk_cmd_attrs,
-					spec.cls_table.type),
+					spec.cls_table.cls_type),
 			.func = parse_cls_type
 		},
 		{
diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.h b/src/shared/secondary/spp_worker_th/cmd_parser.h
index d50e3a6..b124dc1 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.h
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.h
@@ -80,7 +80,7 @@ const char *sppwk_cmd_type_str(enum sppwk_cmd_type ctype);
 /* `classifier_table` command specific parameters. */
 struct sppwk_cls_cmd_attrs {
 	enum sppwk_action wk_action;  /**< add or del */
-	enum spp_classifier_type type;  /**< currently only for mac */
+	enum sppwk_cls_type cls_type;  /**< currently only for MAC. */
 	int vid;  /**< VLAN ID  */
 	char mac[SPPWK_VAL_BUFSZ];  /**< MAC address  */
 	struct sppwk_port_idx port;/**< Destination port type and number */
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 6f93400..6072186 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -69,7 +69,7 @@ log_hexdumped(const char *obj_name, const void *obj_addr, const size_t size)
 	}
 }
 
-/* Get core status */
+/* Get status of lcore of given ID. */
 enum sppwk_lcore_status
 spp_get_core_status(unsigned int lcore_id)
 {
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 87c9b2c..a935312 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -93,10 +93,10 @@ enum sppwk_worker_type {
 };
 
 /* Classifier Type */
-enum spp_classifier_type {
-	SPP_CLASSIFIER_TYPE_NONE, /**< Type none */
-	SPP_CLASSIFIER_TYPE_MAC,  /**< MAC address */
-	SPP_CLASSIFIER_TYPE_VLAN  /**< VLAN ID */
+enum sppwk_cls_type {
+	SPPWK_CLS_TYPE_NONE,
+	SPPWK_CLS_TYPE_MAC,
+	SPPWK_CLS_TYPE_VLAN
 };
 
 /* Direction of RX or TX on a port. */
@@ -258,7 +258,7 @@ struct spp_iterate_classifier_table_params;
  */
 typedef int (*spp_iterate_classifier_element_proc)(
 		struct spp_iterate_classifier_table_params *params,
-		enum spp_classifier_type type,
+		enum sppwk_cls_type cls_type,
 		int vid, const char *mac,
 		const struct sppwk_port_idx *port);
 
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index fd3c201..83ddf09 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -108,7 +108,7 @@ int update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp);
 
 int append_classifier_element_value(
 		struct spp_iterate_classifier_table_params *params,
-		enum spp_classifier_type type,
+		enum sppwk_cls_type cls_type,
 		int vid, const char *mac,
 		const struct sppwk_port_idx *port);
 
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index c7873e3..9c4bedf 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -878,11 +878,11 @@ iterate_adding_mac_entry(
 	uint32_t next;
 	struct sppwk_port_idx port;
 	char mac_addr_str[ETHER_ADDR_STR_BUF_SZ];
-	enum spp_classifier_type type;
+	enum sppwk_cls_type cls_type;
 
-	type = SPP_CLASSIFIER_TYPE_VLAN;
+	cls_type = SPPWK_CLS_TYPE_VLAN;
 	if (unlikely(vid == VLAN_UNTAGGED_VID))
-		type = SPP_CLASSIFIER_TYPE_MAC;
+		cls_type = SPPWK_CLS_TYPE_MAC;
 
 	if (mac_cls->default_cls_idx >= 0) {
 		port.iface_type = (port_info +
@@ -897,8 +897,8 @@ iterate_adding_mac_entry(
 		 * Append "default" entry. `element_proc` is a funciton
 		 * pointer to append_classifier_element_value().
 		 */
-		(*params->element_proc)(params, type, vid, SPPWK_TERM_DEFAULT,
-				&port);
+		(*params->element_proc)(params, cls_type, vid,
+				SPPWK_TERM_DEFAULT, &port);
 	}
 
 	next = 0;
@@ -920,8 +920,8 @@ iterate_adding_mac_entry(
 		 * Append each entry of MAC address. `element_proc` is a
 		 * funciton pointer to append_classifier_element_value().
 		 */
-		(*params->element_proc)(params, type, vid, mac_addr_str,
-				&port);
+		(*params->element_proc)(params, cls_type, vid,
+				mac_addr_str, &port);
 	}
 }
 
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index f5854b0..b28d8a6 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -28,7 +28,7 @@ const char *CLS_TYPE_A_LIST[] = {
 /* Update classifier table with given action, add or del. */
 static int
 update_cls_table(enum sppwk_action wk_action,
-		enum spp_classifier_type type __attribute__ ((unused)),
+		enum sppwk_cls_type cls_type __attribute__ ((unused)),
 		int vid, const char *mac_str,
 		const struct sppwk_port_idx *port)
 {
@@ -383,7 +383,7 @@ exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
 	case SPPWK_CMDTYPE_CLS_MAC:
 	case SPPWK_CMDTYPE_CLS_VLAN:
 		ret = update_cls_table(cmd->spec.cls_table.wk_action,
-				cmd->spec.cls_table.type,
+				cmd->spec.cls_table.cls_type,
 				cmd->spec.cls_table.vid,
 				cmd->spec.cls_table.mac,
 				&cmd->spec.cls_table.port);
@@ -555,7 +555,7 @@ update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp)
 int
 append_classifier_element_value(
 		struct spp_iterate_classifier_table_params *params,
-		enum spp_classifier_type type,
+		enum sppwk_cls_type cls_type,
 		int vid, const char *mac,
 		const struct sppwk_port_idx *port)
 {
@@ -567,23 +567,22 @@ append_classifier_element_value(
 	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
 	if (unlikely(tmp_buff == NULL)) {
 		RTE_LOG(ERR, VF_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = classifier_table)\n");
+				"Failed to allocate buffer.\n");
 		return ret;
 	}
 
 	spp_format_port_string(port_str, port->iface_type, port->iface_no);
 
-	ret = append_json_str_value(&tmp_buff, "type", CLS_TYPE_A_LIST[type]);
+	ret = append_json_str_value(&tmp_buff, "type", CLS_TYPE_A_LIST[cls_type]);
 	if (unlikely(ret < SPP_RET_OK))
 		return ret;
 
 	memset(value_str, 0x00, STR_LEN_SHORT);
-	switch (type) {
-	case SPP_CLASSIFIER_TYPE_MAC:
+	switch (cls_type) {
+	case SPPWK_CLS_TYPE_MAC:
 		sprintf(value_str, "%s", mac);
 		break;
-	case SPP_CLASSIFIER_TYPE_VLAN:
+	case SPPWK_CLS_TYPE_VLAN:
 		sprintf(value_str, "%d/%s", vid, mac);
 		break;
 	default:
-- 
2.17.1



End of spp Digest, Vol 31, Issue 26
***********************************


From yasufum.o@gmail.com Wed Jun 26 14:36:45 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd106.ddreams.local
 (zssg-mailmd106.ddreams.local [10.160.123.101])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTO00Q0GY9PV490@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Wed, 26 Jun 2019 14:37:01 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd106.ddreams.local by
 zssg-mailmd106.ddreams.local (dDREAMS) id <0PTO00O54Y9PYT00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:37:01 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd106.ddreams.local
 (dDREAMS) with ESMTP id <0PTO00IKIY9PVX30@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:37:01 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf101.ddreams.local (Postfix) with ESMTP id 16EAD7E603A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:37:01 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 107D78E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:37:01 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 0D7168E6058	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:37:01 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 344FD8E6051	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:37:00 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf101.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:37:00 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5b0l4019338;	Wed,
 26 Jun 2019 14:37:00 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5Q5axfq019337;	Wed, 26 Jun 2019 14:36:59 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5Q5axNr019334	for unknown; Wed,
 26 Jun 2019 14:36:59 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5axVK032237 for
 unknown; Wed, 26 Jun 2019 14:36:59 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5axjL032234; Wed,
 26 Jun 2019 14:36:59 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5axXq015925;	Wed,
 26 Jun 2019 14:36:59 +0900
Received: from imss01.silk.ntt-tx.co.jp
 (imss01.silk.ntt-tx.co.jp [10.107.0.126])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5Q5axiC015921	for unknown; Wed, 26 Jun 2019 14:36:59 +0900
Received: from imss01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5axHm011176 for
 unknown; Wed, 26 Jun 2019 14:36:59 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5awPL011171 for
 unknown; Wed, 26 Jun 2019 14:36:58 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5Q5aqYf026543	for unknown; Wed,
 26 Jun 2019 14:36:58 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id F407D1B464;	Wed, 26 Jun 2019 07:36:51 +0200 (CEST)
Received: from mail-pl1-f195.google.com
 (mail-pl1-f195.google.com [209.85.214.195]) by dpdk.org (Postfix)
 with ESMTP id A278F4F98 for <spp@dpdk.org>; Wed,
 26 Jun 2019 07:36:50 +0200 (CEST)
Received: by mail-pl1-f195.google.com with SMTP id t7so756191plr.11 for
 <spp@dpdk.org>; Tue, 25 Jun 2019 22:36:50 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id p2sm24298412pfb.118.2019.06.25.22.36.48
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Tue,
 25 Jun 2019 22:36:49 -0700 (PDT)
Date: Wed, 26 Jun 2019 14:36:45 +0900
From: yasufum.o@gmail.com
Subject: [spp 04444] [spp] [PATCH] shared/sec: rename enum spp_classifier_type
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190626053645.40019-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04444
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=AyXnXLgp+WoABFg8DmlA2Ur9poHtlS364uXOPUit6n4=;
 b=iFrFnl2wt11XBRGAQpBAo9QLCkJR6sNQMIqspFM05TyiwZnJ1DAoDBj0lkpChBLsxy
 RuDxmDGZjq4CbxOMQrum6arJVTu9Z7qbpM5vhycl1+znslczUkwuz34eap9ykXcbCjQ1
 Me5uPXaanAmQiHvIRiADrZhO+N2f/GsdQhx7XJ1B0auvaFLxV92DsTIFvm2baZInsi+X
 wbqrjFwybm9ceyqYCApsF+6J6r/E05iLtVxG/Jb2fXdLzW0BC7XD/32LxSocKU0zlYRc
 FljPOQQThsoWOeQnZgusNQgrrZ28Dm23ZXSYmwJoS7xC2AytGRjzfQb/qVMS4X3c9EBO J0UQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=AyXnXLgp+WoABFg8DmlA2Ur9poHtlS364uXOPUit6n4=;
 b=HMMazkwXwyxCK7RKIqxf22tnuM8uSupz96O9NId+snPjv3yXHF0HSu/QsrIOyz2DfW
 UheA//lofUICK5Z7VBOjRw21XyE6t5vHWmuuNrv281l0n6RXz4T7hO1RJ4tVo0hJppwQ
 acBZ72U9QRSmM+4zjcAi5/DxLr5n121+QFm+UUXV7J9KWcHiGKFDGPcL+7xjvHcL/HJs
 +cj/XdWvX9TxwP4gk3GSlJ+/4sFZUsS8Q9d1H7EsmNR6X6N7rqYknRjyuGAEUmTsIrej
 GMjjS5Wh4wRPBE9E7mXXkOxS4U6Ozggzjn/pwDPqVLiWoYdDBPN7+0U2EkuHgNAiL3T6 d3vw==
X-Gm-Message-State: APjAAAVeEPTBM5hoCB2UWVfHtuLVzjls2U67nAKT8V43KL3SZlOT+Rf9
 4IYoqouMYQfBrVik0Tg6aLXjTbtF
X-Google-Smtp-Source:
 APXvYqzgvHx1aUYeIaWJSVP6Ecq4g9ei9Ifx97CoGkCcGOWlS0HTPcl2C9IQDTCMB7bBy9tvC+wgVw==
X-Received: by 2002:a17:902:7d86:: with SMTP id
 a6mr3126116plm.199.1561527409393; Tue, 25 Jun 2019 22:36:49 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 218
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to refactor the name of enum `spp_classifier_type` and
its members to be more specific and short.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/shared/secondary/spp_worker_th/cmd_parser.c |  6 +++---
 src/shared/secondary/spp_worker_th/cmd_parser.h |  2 +-
 src/shared/secondary/spp_worker_th/cmd_utils.c  |  2 +-
 src/shared/secondary/spp_worker_th/cmd_utils.h  | 10 +++++-----
 src/shared/secondary/spp_worker_th/vf_deps.h    |  2 +-
 src/vf/classifier_mac.c                         | 14 +++++++-------
 src/vf/vf_cmd_runner.c                          | 17 ++++++++---------
 7 files changed, 26 insertions(+), 27 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.c b/src/shared/secondary/spp_worker_th/cmd_parser.c
index cd79bdb..931c53b 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.c
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.c
@@ -728,7 +728,7 @@ parse_cls_port(void *cls_cmd_attr, const char *arg_val,
 		return SPP_RET_NG;
 	}
 
-	if (cls_attrs->type == SPP_CLASSIFIER_TYPE_MAC)
+	if (cls_attrs->cls_type == SPPWK_CLS_TYPE_MAC)
 		cls_attrs->vid = ETH_VLAN_ID_MAX;
 
 	if (unlikely(cls_attrs->wk_action == SPPWK_ACT_ADD)) {
@@ -783,7 +783,7 @@ cmd_ops_list[][SPPWK_MAX_PARAMS] = {
 		{
 			.name = "type",
 			.offset = offsetof(struct sppwk_cmd_attrs,
-					spec.cls_table.type),
+					spec.cls_table.cls_type),
 			.func = parse_cls_type
 		},
 		{
@@ -810,7 +810,7 @@ cmd_ops_list[][SPPWK_MAX_PARAMS] = {
 		{
 			.name = "type",
 			.offset = offsetof(struct sppwk_cmd_attrs,
-					spec.cls_table.type),
+					spec.cls_table.cls_type),
 			.func = parse_cls_type
 		},
 		{
diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.h b/src/shared/secondary/spp_worker_th/cmd_parser.h
index d50e3a6..b124dc1 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.h
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.h
@@ -80,7 +80,7 @@ const char *sppwk_cmd_type_str(enum sppwk_cmd_type ctype);
 /* `classifier_table` command specific parameters. */
 struct sppwk_cls_cmd_attrs {
 	enum sppwk_action wk_action;  /**< add or del */
-	enum spp_classifier_type type;  /**< currently only for mac */
+	enum sppwk_cls_type cls_type;  /**< currently only for MAC. */
 	int vid;  /**< VLAN ID  */
 	char mac[SPPWK_VAL_BUFSZ];  /**< MAC address  */
 	struct sppwk_port_idx port;/**< Destination port type and number */
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 6f93400..6072186 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -69,7 +69,7 @@ log_hexdumped(const char *obj_name, const void *obj_addr, const size_t size)
 	}
 }
 
-/* Get core status */
+/* Get status of lcore of given ID. */
 enum sppwk_lcore_status
 spp_get_core_status(unsigned int lcore_id)
 {
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 87c9b2c..a935312 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -93,10 +93,10 @@ enum sppwk_worker_type {
 };
 
 /* Classifier Type */
-enum spp_classifier_type {
-	SPP_CLASSIFIER_TYPE_NONE, /**< Type none */
-	SPP_CLASSIFIER_TYPE_MAC,  /**< MAC address */
-	SPP_CLASSIFIER_TYPE_VLAN  /**< VLAN ID */
+enum sppwk_cls_type {
+	SPPWK_CLS_TYPE_NONE,
+	SPPWK_CLS_TYPE_MAC,
+	SPPWK_CLS_TYPE_VLAN
 };
 
 /* Direction of RX or TX on a port. */
@@ -258,7 +258,7 @@ struct spp_iterate_classifier_table_params;
  */
 typedef int (*spp_iterate_classifier_element_proc)(
 		struct spp_iterate_classifier_table_params *params,
-		enum spp_classifier_type type,
+		enum sppwk_cls_type cls_type,
 		int vid, const char *mac,
 		const struct sppwk_port_idx *port);
 
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index fd3c201..83ddf09 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -108,7 +108,7 @@ int update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp);
 
 int append_classifier_element_value(
 		struct spp_iterate_classifier_table_params *params,
-		enum spp_classifier_type type,
+		enum sppwk_cls_type cls_type,
 		int vid, const char *mac,
 		const struct sppwk_port_idx *port);
 
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index c7873e3..9c4bedf 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -878,11 +878,11 @@ iterate_adding_mac_entry(
 	uint32_t next;
 	struct sppwk_port_idx port;
 	char mac_addr_str[ETHER_ADDR_STR_BUF_SZ];
-	enum spp_classifier_type type;
+	enum sppwk_cls_type cls_type;
 
-	type = SPP_CLASSIFIER_TYPE_VLAN;
+	cls_type = SPPWK_CLS_TYPE_VLAN;
 	if (unlikely(vid == VLAN_UNTAGGED_VID))
-		type = SPP_CLASSIFIER_TYPE_MAC;
+		cls_type = SPPWK_CLS_TYPE_MAC;
 
 	if (mac_cls->default_cls_idx >= 0) {
 		port.iface_type = (port_info +
@@ -897,8 +897,8 @@ iterate_adding_mac_entry(
 		 * Append "default" entry. `element_proc` is a funciton
 		 * pointer to append_classifier_element_value().
 		 */
-		(*params->element_proc)(params, type, vid, SPPWK_TERM_DEFAULT,
-				&port);
+		(*params->element_proc)(params, cls_type, vid,
+				SPPWK_TERM_DEFAULT, &port);
 	}
 
 	next = 0;
@@ -920,8 +920,8 @@ iterate_adding_mac_entry(
 		 * Append each entry of MAC address. `element_proc` is a
 		 * funciton pointer to append_classifier_element_value().
 		 */
-		(*params->element_proc)(params, type, vid, mac_addr_str,
-				&port);
+		(*params->element_proc)(params, cls_type, vid,
+				mac_addr_str, &port);
 	}
 }
 
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index f5854b0..b28d8a6 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -28,7 +28,7 @@ const char *CLS_TYPE_A_LIST[] = {
 /* Update classifier table with given action, add or del. */
 static int
 update_cls_table(enum sppwk_action wk_action,
-		enum spp_classifier_type type __attribute__ ((unused)),
+		enum sppwk_cls_type cls_type __attribute__ ((unused)),
 		int vid, const char *mac_str,
 		const struct sppwk_port_idx *port)
 {
@@ -383,7 +383,7 @@ exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
 	case SPPWK_CMDTYPE_CLS_MAC:
 	case SPPWK_CMDTYPE_CLS_VLAN:
 		ret = update_cls_table(cmd->spec.cls_table.wk_action,
-				cmd->spec.cls_table.type,
+				cmd->spec.cls_table.cls_type,
 				cmd->spec.cls_table.vid,
 				cmd->spec.cls_table.mac,
 				&cmd->spec.cls_table.port);
@@ -555,7 +555,7 @@ update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp)
 int
 append_classifier_element_value(
 		struct spp_iterate_classifier_table_params *params,
-		enum spp_classifier_type type,
+		enum sppwk_cls_type cls_type,
 		int vid, const char *mac,
 		const struct sppwk_port_idx *port)
 {
@@ -567,23 +567,22 @@ append_classifier_element_value(
 	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
 	if (unlikely(tmp_buff == NULL)) {
 		RTE_LOG(ERR, VF_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = classifier_table)\n");
+				"Failed to allocate buffer.\n");
 		return ret;
 	}
 
 	spp_format_port_string(port_str, port->iface_type, port->iface_no);
 
-	ret = append_json_str_value(&tmp_buff, "type", CLS_TYPE_A_LIST[type]);
+	ret = append_json_str_value(&tmp_buff, "type", CLS_TYPE_A_LIST[cls_type]);
 	if (unlikely(ret < SPP_RET_OK))
 		return ret;
 
 	memset(value_str, 0x00, STR_LEN_SHORT);
-	switch (type) {
-	case SPP_CLASSIFIER_TYPE_MAC:
+	switch (cls_type) {
+	case SPPWK_CLS_TYPE_MAC:
 		sprintf(value_str, "%s", mac);
 		break;
-	case SPP_CLASSIFIER_TYPE_VLAN:
+	case SPPWK_CLS_TYPE_VLAN:
 		sprintf(value_str, "%d/%s", vid, mac);
 		break;
 	default:
-- 
2.17.1



From yasufum.o@gmail.com Wed Jun 26 14:37:02 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTO00Q3XYA5V490@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Wed, 26 Jun 2019 14:37:17 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTO00712YA5VP00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:37:17 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTO004NZYA5ZR10@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:37:17 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf105.ddreams.local (Postfix) with ESMTP id C2CA47E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:37:17 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id C0B0C8E6060	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:37:17 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id B56D68E6062	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:37:17 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 5150D8E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:37:17 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf105.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:37:17 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5bHi3019461;	Wed,
 26 Jun 2019 14:37:17 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5Q5bH8r019460;	Wed, 26 Jun 2019 14:37:17 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5Q5bGeF019457	for unknown; Wed,
 26 Jun 2019 14:37:16 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5bGuu032461 for
 unknown; Wed, 26 Jun 2019 14:37:16 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5bGOQ032458; Wed,
 26 Jun 2019 14:37:16 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5bGID015992;	Wed,
 26 Jun 2019 14:37:16 +0900
Received: from imss01.silk.ntt-tx.co.jp
 (imss01.silk.ntt-tx.co.jp [10.107.0.126])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5Q5bGmM015988	for unknown; Wed, 26 Jun 2019 14:37:16 +0900
Received: from imss01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5bGUs011320 for
 unknown; Wed, 26 Jun 2019 14:37:16 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5bG2f011314 for
 unknown; Wed, 26 Jun 2019 14:37:16 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5Q5b95q026616	for unknown; Wed,
 26 Jun 2019 14:37:15 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 1AFDF1B464;	Wed, 26 Jun 2019 07:37:09 +0200 (CEST)
Received: from mail-pl1-f195.google.com
 (mail-pl1-f195.google.com [209.85.214.195]) by dpdk.org (Postfix)
 with ESMTP id 91D4C4F98 for <spp@dpdk.org>; Wed,
 26 Jun 2019 07:37:07 +0200 (CEST)
Received: by mail-pl1-f195.google.com with SMTP id m7so762607pls.8 for
 <spp@dpdk.org>; Tue, 25 Jun 2019 22:37:07 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id t96sm815769pjb.1.2019.06.25.22.37.05
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Tue,
 25 Jun 2019 22:37:06 -0700 (PDT)
Date: Wed, 26 Jun 2019 14:37:02 +0900
From: yasufum.o@gmail.com
Subject: [spp 04445] [spp] [PATCH] shared/sec: revise port ability
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190626053702.40082-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04445
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=5yPsOb0eoztlfYnElw2qcSe+iTcSf3PpGbDO+3Gqiks=;
 b=FYngxH7oXW3vqyTRyWrRTkzmfi5MDYGir6Oe0Gxq4ETSB72SDuuBg3lk9F7K0mPhZy
 uzAF9SsMD/v1J0EpshRWYXDJ/3j2BNCsnhkHcyVoues9VQXHtfFMkNGSXlWys0HrxqVW
 DqAHh+jVdgssLkyxslXJlfa6G5HG0ELWqzv+ZdmMduGMHIFwbBjYoAwtoNG+WS0dSa4+
 T2UfJWWVwQmtwBNfO/rFLZYBaZsgHf38I/mzfBZuFhLfxAp5HsE2gbIRYfJIArG1GDva
 co8eALw4Cquq0g7HMjZ0gP1EC6KLJfHjhYHPTAht22QTO2Q9yq2sT/5oP6bur27ehT80 BS4w==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=5yPsOb0eoztlfYnElw2qcSe+iTcSf3PpGbDO+3Gqiks=;
 b=OtbHffkfnyoD4I8U9BYvHXmOLvmRQG6+P4AM8Rjpk6pnkGUiBID75iLj/Nt+SCYcSt
 SJ+E1G3AnJee+2aCswCL3cu4wi8s35vQIg17FWGytyjHbM6WuwUjrP0LOdyGePNFaxfh
 KY1/7tYJRLTaxhZm0kM97mPzj4dPKd81LvPBTXietiTig6zigfltKPrMt5wG7d7SDRSy
 pQu9vjFeFd7faHbxTIR0AOWTBp9xXly6KMPZfQKp3Fj9J67nwAL2DObu20+EZ3XaGwX2
 zoAlD1IYmPlQfHEedVxk/5xORIj87KsMz1KZUj4jwrA1k2dKFp/kGySstDKhDEUwcl3D kV5g==
X-Gm-Message-State: APjAAAU+qXf0bvAN3PwhAV4X7wbPq7G4Us71UPweyrUWV/AekKm8a3Pp
 34f2GCQouVJF1EeB2ny6ibYdUMGl
X-Google-Smtp-Source:
 APXvYqyUyGIly92CCNy52Yzt1or4+Bo5c2DqsROj8rnUGLyc2K8euxwDUwHSrj3H0KKP9nLt3BDghw==
X-Received: by 2002:a17:902:2ae6:: with SMTP id
 j93mr3270008plb.130.1561527426414; Tue, 25 Jun 2019 22:37:06 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 622
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to revise term of enum or struct `port ability` to
`port capability`. It also includes members of them.

* Change sppwk_port_abl_ops to sppwk_port_ops
* Change spp_port_ability to sppwk_port_attrs
* Change spp_ability_data to sppwk_port_capability

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/mir_cmd_runner.c                   | 31 +++++------
 src/pcap/cmd_utils.h                          | 31 +++++------
 .../secondary/spp_worker_th/cmd_parser.c      | 24 ++++-----
 .../secondary/spp_worker_th/cmd_parser.h      |  2 +-
 .../spp_worker_th/cmd_res_formatter.c         | 15 +++---
 .../secondary/spp_worker_th/cmd_utils.h       | 16 +++---
 src/shared/secondary/spp_worker_th/spp_port.c | 54 +++++++++----------
 src/shared/secondary/spp_worker_th/spp_port.h |  2 +-
 src/vf/vf_cmd_runner.c                        | 29 +++++-----
 9 files changed, 102 insertions(+), 102 deletions(-)

diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index 17c2c27..307b3f6 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -132,7 +132,7 @@ update_port(enum sppwk_action wk_action,
 		const struct sppwk_port_idx *port,
 		enum sppwk_port_dir dir,
 		const char *name,
-		const struct spp_port_ability *ability)
+		const struct sppwk_port_attrs *port_attrs)
 {
 	int ret = SPP_RET_NG;
 	int port_idx;
@@ -176,9 +176,9 @@ update_port(enum sppwk_action wk_action,
 		if (port_idx >= SPP_RET_OK) {
 			/* registered */
 			/* TODO(yasufum) confirm it is needed for spp_mirror. */
-			if (ability->ops == SPPWK_PORT_ABL_OPS_ADD_VLANTAG) {
+			if (port_attrs->ops == SPPWK_PORT_ABL_OPS_ADD_VLANTAG) {
 				while ((cnt < PORT_ABL_MAX) &&
-					    (port_info->ability[cnt].ops !=
+					    (port_info->port_attrs[cnt].ops !=
 					    SPPWK_PORT_ABL_OPS_ADD_VLANTAG))
 					cnt++;
 				if (cnt >= PORT_ABL_MAX) {
@@ -186,8 +186,8 @@ update_port(enum sppwk_action wk_action,
 						"Non-registratio\n");
 					return SPP_RET_NG;
 				}
-				memcpy(&port_info->ability[cnt], ability,
-					sizeof(struct spp_port_ability));
+				memcpy(&port_info->port_attrs[cnt], port_attrs,
+					sizeof(struct sppwk_port_attrs));
 
 				ret = SPP_RET_OK;
 				break;
@@ -201,19 +201,19 @@ update_port(enum sppwk_action wk_action,
 			return SPP_RET_NG;
 		}
 
-		if (ability->ops != SPPWK_PORT_ABL_OPS_NONE) {
+		if (port_attrs->ops != SPPWK_PORT_ABL_OPS_NONE) {
 			while ((cnt < PORT_ABL_MAX) &&
-					(port_info->ability[cnt].ops !=
+					(port_info->port_attrs[cnt].ops !=
 					SPPWK_PORT_ABL_OPS_NONE)) {
 				cnt++;
 			}
 			if (cnt >= PORT_ABL_MAX) {
 				RTE_LOG(ERR, MIR_CMD_RUNNER,
-						"No space of port ability.\n");
+						"No space of port port_attrs.\n");
 				return SPP_RET_NG;
 			}
-			memcpy(&port_info->ability[cnt], ability,
-					sizeof(struct spp_port_ability));
+			memcpy(&port_info->port_attrs[cnt], port_attrs,
+					sizeof(struct sppwk_port_attrs));
 		}
 
 		port_info->iface_type = port->iface_type;
@@ -225,13 +225,13 @@ update_port(enum sppwk_action wk_action,
 
 	case SPPWK_ACT_DEL:
 		for (cnt = 0; cnt < PORT_ABL_MAX; cnt++) {
-			if (port_info->ability[cnt].ops ==
+			if (port_info->port_attrs[cnt].ops ==
 					SPPWK_PORT_ABL_OPS_NONE)
 				continue;
 
-			if (port_info->ability[cnt].dir == dir)
-				memset(&port_info->ability[cnt], 0x00,
-					sizeof(struct spp_port_ability));
+			if (port_info->port_attrs[cnt].dir == dir)
+				memset(&port_info->port_attrs[cnt], 0x00,
+					sizeof(struct sppwk_port_attrs));
 		}
 
 		ret_del = delete_port_info(port_info, *nof_ports, ports);
@@ -276,7 +276,8 @@ exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
 				sppwk_action_str(cmd->spec.port.wk_action));
 		ret = update_port(cmd->spec.port.wk_action,
 				&cmd->spec.port.port, cmd->spec.port.dir,
-				cmd->spec.port.name, &cmd->spec.port.ability);
+				cmd->spec.port.name,
+				&cmd->spec.port.port_attrs);
 		if (ret == 0) {
 			RTE_LOG(INFO, MIR_CMD_RUNNER, "Exec flush.\n");
 			ret = flush_cmd();
diff --git a/src/pcap/cmd_utils.h b/src/pcap/cmd_utils.h
index 1b757f5..e3714a5 100644
--- a/src/pcap/cmd_utils.h
+++ b/src/pcap/cmd_utils.h
@@ -75,10 +75,10 @@ enum sppwk_worker_type {
  * Port ability operation which indicates vlan tag operation on the port
  * (e.g. add vlan tag or delete vlan tag)
  */
-enum spp_port_ability_ope {
-	SPP_PORT_ABILITY_OPE_NONE,        /**< none */
-	SPP_PORT_ABILITY_OPE_ADD_VLANTAG, /**< add VLAN tag */
-	SPP_PORT_ABILITY_OPE_DEL_VLANTAG, /**< delete VLAN tag */
+enum sppwk_port_ops {
+	SPPWK_PORT_ABL_OPS_NONE,
+	SPPWK_PORT_ABL_OPS_ADD_VLANTAG,
+	SPPWK_PORT_ABL_OPS_DEL_VLANTAG,
 };
 
 /* getopt_long return value for long option */
@@ -95,26 +95,23 @@ enum SPP_LONGOPT_RETVAL {
 };
 
 /** VLAN tag information */
-struct spp_vlantag_info {
+struct sppwk_vlan_tag {
 	int vid; /**< VLAN ID */
 	int pcp; /**< Priority Code Point */
 	int tci; /**< Tag Control Information */
 };
 
-/**
- * Data for each port ability which indicates vlantag related information
- * for the port
- */
-union spp_ability_data {
+/* Ability for vlantag for a port. */
+union sppwk_port_capability {
 	/** VLAN tag information */
-	struct spp_vlantag_info vlantag;
+	struct sppwk_vlan_tag vlantag;
 };
 
-/** Port ability information */
-struct spp_port_ability {
-	enum spp_port_ability_ope ope; /**< Operation */
+/* Port attributes of SPP worker processes. */
+struct sppwk_port_attrs {
+	enum sppwk_port_ops ops;  /**< Port capability Operations */
 	enum sppwk_port_dir dir;  /**< Direction of RX, TX or both */
-	union spp_ability_data data;   /**< Port ability data */
+	union sppwk_port_capability capability;   /**< Port capability */
 };
 
 /* TODO(yasufum) confirm why vlantag is required for spp_pcap. */
@@ -122,7 +119,7 @@ struct spp_port_ability {
 struct sppwk_cls_attrs {
 	uint64_t mac_addr;  /**< Mac address (binary) */
 	char mac_addr_str[STR_LEN_SHORT];  /**< Mac address (text) */
-	struct spp_vlantag_info vlantag;   /**< VLAN tag information */
+	struct sppwk_vlan_tag vlantag;   /**< VLAN tag information */
 };
 
 /* Interface information structure */
@@ -137,7 +134,7 @@ struct sppwk_port_info {
 	int iface_no;
 	int ethdev_port_id;  /**< Consistent ID of ethdev */
 	struct sppwk_cls_attrs cls_attrs;
-	struct spp_port_ability ability[PORT_ABL_MAX];
+	struct sppwk_port_attrs port_attrs[PORT_ABL_MAX];
 };
 
 /* TODO(yasufum) merge it to the same definition in shared/.../cmd_utils.h */
diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.c b/src/shared/secondary/spp_worker_th/cmd_parser.c
index 931c53b..32903c3 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.c
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.c
@@ -540,19 +540,19 @@ parse_port_vlan_ops(void *output, const char *arg_val,
 {
 	int ret;
 	struct sppwk_cmd_port *port = output;
-	struct spp_port_ability *ability = &port->ability;
+	struct sppwk_port_attrs *port_attrs = &port->port_attrs;
 
-	switch (ability->ops) {
+	switch (port_attrs->ops) {
 	case SPPWK_PORT_ABL_OPS_NONE:
 		ret = get_list_idx(arg_val, PORT_ABILITY_LIST);
 		if (unlikely(ret <= 0)) {
 			RTE_LOG(ERR, WK_CMD_PARSER,
-					"Unknown port ability. val=%s\n",
+					"Unknown port attribute. val=%s\n",
 					arg_val);
 			return SPP_RET_NG;
 		}
-		ability->ops = ret;
-		ability->dir = port->dir;
+		port_attrs->ops = ret;
+		port_attrs->dir = port->dir;
 		break;
 	case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
 		/* Nothing to do. */
@@ -572,11 +572,11 @@ parse_port_vid(void *output, const char *arg_val,
 {
 	int vlan_id;
 	struct sppwk_cmd_port *port = output;
-	struct spp_port_ability *ability = &port->ability;
+	struct sppwk_port_attrs *port_attrs = &port->port_attrs;
 
-	switch (ability->ops) {
+	switch (port_attrs->ops) {
 	case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
-		vlan_id = get_int_in_range(&ability->data.vlantag.vid,
+		vlan_id = get_int_in_range(&port_attrs->capability.vlantag.vid,
 			arg_val, 0, ETH_VLAN_ID_MAX);
 		if (unlikely(vlan_id < SPP_RET_OK)) {
 			RTE_LOG(ERR, WK_CMD_PARSER,
@@ -584,7 +584,7 @@ parse_port_vid(void *output, const char *arg_val,
 					arg_val);
 			return SPP_RET_NG;
 		}
-		ability->data.vlantag.pcp = -1;
+		port_attrs->capability.vlantag.pcp = -1;
 		break;
 	default:
 		/* Not used. */
@@ -601,11 +601,11 @@ parse_port_pcp(void *output, const char *arg_val,
 {
 	int pcp;
 	struct sppwk_cmd_port *port = output;
-	struct spp_port_ability *ability = &port->ability;
+	struct sppwk_port_attrs *port_attrs = &port->port_attrs;
 
-	switch (ability->ops) {
+	switch (port_attrs->ops) {
 	case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
-		pcp = get_int_in_range(&ability->data.vlantag.pcp,
+		pcp = get_int_in_range(&port_attrs->capability.vlantag.pcp,
 				arg_val, 0, SPP_VLAN_PCP_MAX);
 		if (unlikely(pcp < SPP_RET_OK)) {
 			RTE_LOG(ERR, WK_CMD_PARSER,
diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.h b/src/shared/secondary/spp_worker_th/cmd_parser.h
index b124dc1..e51c3a4 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.h
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.h
@@ -105,7 +105,7 @@ struct sppwk_cmd_port {
 	struct sppwk_port_idx port;   /**< port type and number */
 	enum sppwk_port_dir dir;  /**< Direction of RX, TX or both. */
 	char name[SPPWK_NAME_BUFSZ];  /**<  component name */
-	struct spp_port_ability ability;  /**< port ability */
+	struct sppwk_port_attrs port_attrs;  /**< port attrs for spp_vf. */
 };
 
 /* TODO(yasufum) Add usage and desc for members. What's command descriptors? */
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index a424fce..820df8f 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -145,24 +145,23 @@ append_vlan_block(const char *name, char **output,
 {
 	int ret = SPP_RET_NG;
 	int i = 0;
-	struct spp_port_ability *info = NULL;
+	struct sppwk_port_attrs *port_attrs = NULL;
 	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
 	if (unlikely(tmp_buff == NULL)) {
 		RTE_LOG(ERR, WK_CMD_RES_FMT,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s)\n",
+				"Failed to allocate buffer (name = %s).\n",
 				name);
 		return SPP_RET_NG;
 	}
 
-	spp_port_ability_get_info(port_id, dir, &info);
+	spp_port_ability_get_info(port_id, dir, &port_attrs);
 	for (i = 0; i < PORT_ABL_MAX; i++) {
-		switch (info[i].ops) {
+		switch (port_attrs[i].ops) {
 		case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
 		case SPPWK_PORT_ABL_OPS_DEL_VLANTAG:
-			ret = append_vlan_value(&tmp_buff, info[i].ops,
-					info[i].data.vlantag.vid,
-					info[i].data.vlantag.pcp);
+			ret = append_vlan_value(&tmp_buff, port_attrs[i].ops,
+					port_attrs[i].capability.vlantag.vid,
+					port_attrs[i].capability.vlantag.pcp);
 			if (unlikely(ret < SPP_RET_OK))
 				return SPP_RET_NG;
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index a935312..ff363f5 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -84,6 +84,7 @@ enum sppwk_lcore_status {
 };
 
 /* Type of SPP worker thread. */
+/* TODO(yasufum) it should be separated into each process. */
 enum sppwk_worker_type {
 	SPPWK_TYPE_NONE,  /**< Not used */
 	SPPWK_TYPE_CLS,  /**< Classifier_mac */
@@ -111,7 +112,7 @@ enum sppwk_port_dir {
  * Port ability operation which indicates vlan tag operation on the port
  * (e.g. add vlan tag or delete vlan tag)
  */
-enum sppwk_port_abl_ops {
+enum sppwk_port_ops {
 	SPPWK_PORT_ABL_OPS_NONE,
 	SPPWK_PORT_ABL_OPS_ADD_VLANTAG,
 	SPPWK_PORT_ABL_OPS_DEL_VLANTAG,
@@ -127,6 +128,7 @@ enum SPP_LONGOPT_RETVAL {
 };
 
 /* Flag of processing type to copy management information */
+/* TODO(yasufum) add comments for each of members. */
 enum copy_mng_flg {
 	COPY_MNG_FLG_NONE,
 	COPY_MNG_FLG_UPDCOPY,
@@ -141,16 +143,16 @@ struct sppwk_vlan_tag {
 };
 
 /* Ability for vlantag for a port. */
-union spp_ability_data {
+union sppwk_port_capability {
 	/** VLAN tag information */
 	struct sppwk_vlan_tag vlantag;
 };
 
-/* Port ability information. */
-struct spp_port_ability {
-	enum sppwk_port_abl_ops ops;   /**< Port ability Operations */
+/* Port attributes of SPP worker processes. */
+struct sppwk_port_attrs {
+	enum sppwk_port_ops ops;  /**< Port capability Operations */
 	enum sppwk_port_dir dir;  /**< Direction of RX, TX or both */
-	union spp_ability_data data;   /**< Port ability data */
+	union sppwk_port_capability capability;   /**< Port capability */
 };
 
 /* Attributes for classifying. */
@@ -175,7 +177,7 @@ struct sppwk_port_info {
 	int iface_no;
 	int ethdev_port_id;  /**< Consistent ID of ethdev */
 	struct sppwk_cls_attrs cls_attrs;
-	struct spp_port_ability ability[PORT_ABL_MAX];
+	struct sppwk_port_attrs port_attrs[PORT_ABL_MAX];
 };
 
 /* Attributes of SPP worker thread named as `component`. */
diff --git a/src/shared/secondary/spp_worker_th/spp_port.c b/src/shared/secondary/spp_worker_th/spp_port.c
index 8de8460..cc87200 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.c
+++ b/src/shared/secondary/spp_worker_th/spp_port.c
@@ -16,8 +16,8 @@
 struct port_abl_info {
 	volatile int ref_index; /* Index to reference area. */
 	volatile int upd_index; /* Index to update area. */
-	struct spp_port_ability ability[TWO_SIDES][PORT_ABL_MAX];
-				/* Port ability information. */
+	struct sppwk_port_attrs port_attrs[TWO_SIDES][PORT_ABL_MAX];
+				/* Port attributes for spp_vf. */
 };
 
 /* Port ability port information */
@@ -53,7 +53,7 @@ spp_port_ability_init(void)
 void
 spp_port_ability_get_info(
 		int port_id, enum sppwk_port_dir dir,
-		struct spp_port_ability **info)
+		struct sppwk_port_attrs **info)
 {
 	struct port_abl_info *mng = NULL;
 
@@ -68,7 +68,7 @@ spp_port_ability_get_info(
 		/* Not used. */
 		break;
 	}
-	*info = mng->ability[mng->ref_index];
+	*info = mng->port_attrs[mng->ref_index];
 }
 
 /* Calculation and Setting of FCS. */
@@ -85,12 +85,12 @@ set_fcs_packet(struct rte_mbuf *pkt)
 static inline int
 add_vlantag_packet(
 		struct rte_mbuf *pkt,
-		const union spp_ability_data *data)
+		const union sppwk_port_capability *capability)
 {
 	struct ether_hdr *old_ether = NULL;
 	struct ether_hdr *new_ether = NULL;
 	struct vlan_hdr  *vlan      = NULL;
-	const struct sppwk_vlan_tag *vlantag = &data->vlantag;
+	const struct sppwk_vlan_tag *vlantag = &capability->vlantag;
 
 	old_ether = rte_pktmbuf_mtod(pkt, struct ether_hdr *);
 	if (old_ether->ether_type == g_vlan_tpid) {
@@ -122,12 +122,12 @@ add_vlantag_packet(
 static inline int
 add_vlantag_all_packets(
 		struct rte_mbuf **pkts, int nb_pkts,
-		const union spp_ability_data *data)
+		const union sppwk_port_capability *capability)
 {
 	int ret = SPP_RET_OK;
 	int cnt = 0;
 	for (cnt = 0; cnt < nb_pkts; cnt++) {
-		ret = add_vlantag_packet(pkts[cnt], data);
+		ret = add_vlantag_packet(pkts[cnt], capability);
 		if (unlikely(ret < 0)) {
 			RTE_LOG(ERR, PORT,
 					"Failed to add VLAN tag."
@@ -142,7 +142,7 @@ add_vlantag_all_packets(
 static inline int
 del_vlantag_packet(
 		struct rte_mbuf *pkt,
-		const union spp_ability_data *data __attribute__ ((unused)))
+		const union sppwk_port_capability *cbl __attribute__ ((unused)))
 {
 	struct ether_hdr *old_ether = NULL;
 	struct ether_hdr *new_ether = NULL;
@@ -174,12 +174,12 @@ del_vlantag_packet(
 static inline int
 del_vlantag_all_packets(
 		struct rte_mbuf **pkts, int nb_pkts,
-		const union spp_ability_data *data)
+		const union sppwk_port_capability *capability)
 {
 	int ret = SPP_RET_OK;
 	int cnt = 0;
 	for (cnt = 0; cnt < nb_pkts; cnt++) {
-		ret = del_vlantag_packet(pkts[cnt], data);
+		ret = del_vlantag_packet(pkts[cnt], capability);
 		if (unlikely(ret < 0)) {
 			RTE_LOG(ERR, PORT,
 					"Failed to del VLAN tag."
@@ -246,8 +246,8 @@ port_ability_set_ability(struct sppwk_port_info *port,
 	int port_id = port->ethdev_port_id;
 	struct port_mng_info *port_mng = &g_port_mng_info[port_id];
 	struct port_abl_info *mng = NULL;
-	struct spp_port_ability *in_ability = port->ability;
-	struct spp_port_ability *out_ability = NULL;
+	struct sppwk_port_attrs *port_attrs_in = port->port_attrs;
+	struct sppwk_port_attrs *port_attrs_out = NULL;
 	struct sppwk_vlan_tag *tag = NULL;
 
 	port_mng->iface_type = port->iface_type;
@@ -265,19 +265,19 @@ port_ability_set_ability(struct sppwk_port_info *port,
 		break;
 	}
 
-	out_ability = mng->ability[mng->upd_index];
-	memset(out_ability, 0x00, sizeof(struct spp_port_ability)
+	port_attrs_out = mng->port_attrs[mng->upd_index];
+	memset(port_attrs_out, 0x00, sizeof(struct sppwk_port_attrs)
 			* PORT_ABL_MAX);
 	for (in_cnt = 0; in_cnt < PORT_ABL_MAX; in_cnt++) {
-		if (in_ability[in_cnt].dir != dir)
+		if (port_attrs_in[in_cnt].dir != dir)
 			continue;
 
-		memcpy(&out_ability[out_cnt], &in_ability[in_cnt],
-				sizeof(struct spp_port_ability));
+		memcpy(&port_attrs_out[out_cnt], &port_attrs_in[in_cnt],
+				sizeof(struct sppwk_port_attrs));
 
-		switch (out_ability[out_cnt].ops) {
+		switch (port_attrs_out[out_cnt].ops) {
 		case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
-			tag = &out_ability[out_cnt].data.vlantag;
+			tag = &port_attrs_out[out_cnt].capability.vlantag;
 			tag->tci = rte_cpu_to_be_16(SPP_VLANTAG_CALC_TCI(
 					tag->vid, tag->pcp));
 			break;
@@ -314,7 +314,7 @@ spp_port_ability_update(const struct sppwk_comp_info *component)
 /* Definition of functions that operate port abilities. */
 typedef int (*port_ability_func)(
 		struct rte_mbuf **pkts, int nb_pkts,
-		const union spp_ability_data *data);
+		const union sppwk_port_capability *capability);
 
 /* List of functions per port ability. */
 port_ability_func port_ability_function_list[] = {
@@ -332,18 +332,18 @@ port_ability_each_operation(uint16_t port_id,
 {
 	int cnt, buf;
 	int ok_pkts = nb_pkts;
-	struct spp_port_ability *info = NULL;
+	struct sppwk_port_attrs *port_attrs = NULL;
 
-	spp_port_ability_get_info(port_id, dir, &info);
-	if (unlikely(info[0].ops == SPPWK_PORT_ABL_OPS_NONE))
+	spp_port_ability_get_info(port_id, dir, &port_attrs);
+	if (unlikely(port_attrs[0].ops == SPPWK_PORT_ABL_OPS_NONE))
 		return nb_pkts;
 
 	for (cnt = 0; cnt < PORT_ABL_MAX; cnt++) {
-		if (info[cnt].ops == SPPWK_PORT_ABL_OPS_NONE)
+		if (port_attrs[cnt].ops == SPPWK_PORT_ABL_OPS_NONE)
 			break;
 
-		ok_pkts = port_ability_function_list[info[cnt].ops](
-				pkts, ok_pkts, &info->data);
+		ok_pkts = port_ability_function_list[port_attrs[cnt].ops](
+				pkts, ok_pkts, &port_attrs->capability);
 	}
 
 	/* Discard remained packets to release mbuf. */
diff --git a/src/shared/secondary/spp_worker_th/spp_port.h b/src/shared/secondary/spp_worker_th/spp_port.h
index a6fb313..81aefa7 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.h
+++ b/src/shared/secondary/spp_worker_th/spp_port.h
@@ -35,7 +35,7 @@ void spp_port_ability_init(void);
  */
 void spp_port_ability_get_info(
 		int port_id, enum sppwk_port_dir dir,
-		struct spp_port_ability **info);
+		struct sppwk_port_attrs **info);
 
 /**
  * Change index of management information.
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index 72e7b97..bab04ed 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -253,7 +253,7 @@ update_port(enum sppwk_action wk_action,
 		const struct sppwk_port_idx *port,
 		enum sppwk_port_dir dir,
 		const char *name,
-		const struct spp_port_ability *ability)
+		const struct sppwk_port_attrs *port_attrs)
 {
 	int ret = SPP_RET_NG;
 	int port_idx;
@@ -297,9 +297,9 @@ update_port(enum sppwk_action wk_action,
 		port_idx = get_idx_port_info(port_info, *nof_ports, ports);
 		if (port_idx >= SPP_RET_OK) {
 			/* registered */
-			if (ability->ops == SPPWK_PORT_ABL_OPS_ADD_VLANTAG) {
+			if (port_attrs->ops == SPPWK_PORT_ABL_OPS_ADD_VLANTAG) {
 				while ((cnt < PORT_ABL_MAX) &&
-					    (port_info->ability[cnt].ops !=
+					    (port_info->port_attrs[cnt].ops !=
 					    SPPWK_PORT_ABL_OPS_ADD_VLANTAG))
 					cnt++;
 				if (cnt >= PORT_ABL_MAX) {
@@ -307,8 +307,8 @@ update_port(enum sppwk_action wk_action,
 						"Non-registratio\n");
 					return SPP_RET_NG;
 				}
-				memcpy(&port_info->ability[cnt], ability,
-					sizeof(struct spp_port_ability));
+				memcpy(&port_info->port_attrs[cnt], port_attrs,
+					sizeof(struct sppwk_port_attrs));
 
 				ret = SPP_RET_OK;
 				break;
@@ -322,9 +322,9 @@ update_port(enum sppwk_action wk_action,
 			return SPP_RET_NG;
 		}
 
-		if (ability->ops != SPPWK_PORT_ABL_OPS_NONE) {
+		if (port_attrs->ops != SPPWK_PORT_ABL_OPS_NONE) {
 			while ((cnt < PORT_ABL_MAX) &&
-					(port_info->ability[cnt].ops !=
+					(port_info->port_attrs[cnt].ops !=
 					SPPWK_PORT_ABL_OPS_NONE)) {
 				cnt++;
 			}
@@ -333,8 +333,8 @@ update_port(enum sppwk_action wk_action,
 						"No space of port ability.\n");
 				return SPP_RET_NG;
 			}
-			memcpy(&port_info->ability[cnt], ability,
-					sizeof(struct spp_port_ability));
+			memcpy(&port_info->port_attrs[cnt], port_attrs,
+					sizeof(struct sppwk_port_attrs));
 		}
 
 		port_info->iface_type = port->iface_type;
@@ -346,13 +346,13 @@ update_port(enum sppwk_action wk_action,
 
 	case SPPWK_ACT_DEL:
 		for (cnt = 0; cnt < PORT_ABL_MAX; cnt++) {
-			if (port_info->ability[cnt].ops ==
+			if (port_info->port_attrs[cnt].ops ==
 					SPPWK_PORT_ABL_OPS_NONE)
 				continue;
 
-			if (port_info->ability[cnt].dir == dir)
-				memset(&port_info->ability[cnt], 0x00,
-					sizeof(struct spp_port_ability));
+			if (port_info->port_attrs[cnt].dir == dir)
+				memset(&port_info->port_attrs[cnt], 0x00,
+					sizeof(struct sppwk_port_attrs));
 		}
 
 		ret_del = delete_port_info(port_info, *nof_ports, ports);
@@ -410,7 +410,8 @@ exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
 				sppwk_action_str(cmd->spec.port.wk_action));
 		ret = update_port(cmd->spec.port.wk_action,
 				&cmd->spec.port.port, cmd->spec.port.dir,
-				cmd->spec.port.name, &cmd->spec.port.ability);
+				cmd->spec.port.name,
+				&cmd->spec.port.port_attrs);
 		if (ret == 0) {
 			RTE_LOG(INFO, VF_CMD_RUNNER, "Exec flush.\n");
 			ret = flush_cmd();
-- 
2.17.1



From yasufum.o@gmail.com Wed Jun 26 14:37:11 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd101.ddreams.local
 (zssg-mailmd101.ddreams.local [10.160.123.96]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTO00Q5FYAFV490@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Wed, 26 Jun 2019 14:37:27 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd101.ddreams.local by
 zssg-mailmd101.ddreams.local (dDREAMS) id <0PTO00I18YAFHM00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:37:27 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd101.ddreams.local
 (dDREAMS) with ESMTP id <0PTO00HIJYAEMC00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 26 Jun 2019 14:37:27 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id 578C97E603C	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:37:27 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 55A298E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:37:27 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 550558E6058	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:37:27 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 93ED98E6058	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed, 26 Jun 2019 14:37:26 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 26 Jun 2019 14:37:26 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5bQ0L019474;	Wed,
 26 Jun 2019 14:37:26 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5Q5bQ5J019473;	Wed, 26 Jun 2019 14:37:26 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5Q5bQZb019470	for unknown; Wed,
 26 Jun 2019 14:37:26 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5bPGn032511 for
 unknown; Wed, 26 Jun 2019 14:37:26 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5bPp2032508; Wed,
 26 Jun 2019 14:37:25 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5bPlh016006;	Wed,
 26 Jun 2019 14:37:25 +0900
Received: from imss01.silk.ntt-tx.co.jp
 (imss01.silk.ntt-tx.co.jp [10.107.0.126])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5Q5bP2o016002	for unknown; Wed, 26 Jun 2019 14:37:25 +0900
Received: from imss01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5bPc1011355 for
 unknown; Wed, 26 Jun 2019 14:37:25 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5Q5bPQh011348 for
 unknown; Wed, 26 Jun 2019 14:37:25 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5Q5bIO0026657	for unknown; Wed,
 26 Jun 2019 14:37:24 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 2C2911B951;	Wed, 26 Jun 2019 07:37:18 +0200 (CEST)
Received: from mail-pg1-f195.google.com
 (mail-pg1-f195.google.com [209.85.215.195]) by dpdk.org (Postfix)
 with ESMTP id 0E3334F98 for <spp@dpdk.org>; Wed,
 26 Jun 2019 07:37:16 +0200 (CEST)
Received: by mail-pg1-f195.google.com with SMTP id w10so630417pgj.7 for
 <spp@dpdk.org>; Tue, 25 Jun 2019 22:37:15 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id o32sm736340pje.9.2019.06.25.22.37.13
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Tue,
 25 Jun 2019 22:37:14 -0700 (PDT)
Date: Wed, 26 Jun 2019 14:37:11 +0900
From: yasufum.o@gmail.com
Subject: [spp 04446] [spp] [PATCH] controller: support multi socks to suggest
 lcores
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190626053711.40135-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04446
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=rvsRPLRWHolNK/KzBw425fn5Jz0JTpMOZT9feoMc2pQ=;
 b=GPUHtEcltwm0rmBxWvi6dsxAQx1nGJb/eyhXwJbfS4RlmmprhS+cjLEJXAs25P6nsW
 t4ivzcRvqvrUUppjiKSjbOHb6cKhp09e8YeJ2fvlDsfYX3pMlZmgs6V8X7PN4qa066rN
 xgV5Ay7ewT29l6r7W0fB0kmuWlbdsu7pMQ5SoiFD5jn8bwuCDRdprFGh6AT0Y7b5cZv7
 Vq8m3su5pUeNDAUY8N226IoU5MMCnqng5U3l20e2dnBTCwrBKAq9itklqQhm0eoM5bkq
 0DQ/ejo8KI6qP+2NcwJ94o8wla4jzeeeKaOtcWsg7iARRcDRdE7GwlPUXxHRGEMKVXm1 xIrg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=rvsRPLRWHolNK/KzBw425fn5Jz0JTpMOZT9feoMc2pQ=;
 b=CYcMqxfpEjzfHTzw1vXHBOoJhR/yvJzoo2q6POuWEvnDkUkhPxDp22nvIAXPG4HL3i
 AMx753SBqZpZiuZkKBS9L6fJOUBwXaT4azeT1YqmJU028nWoo+PwNDpj3ZnnMNh/wh+7
 MsH270oX4Q7Y06RgixT+F9CnA3WOrZqBdVWI541fVTA2hYjziAgNnVpEgaJlZ5r5EBnm
 ebKuwKI13b185LyG5LdLr6QWGAhVH1QfYGk7+u7nhUXttopCgH9t2hALDcWsLsLAOhtG
 nAN8jRs2a6+G5ajsynbnOknJ7AnmFNkNZoRTMgIVeuPXNdJ77DpNZOp21FSmy7K9nIJI RIpw==
X-Gm-Message-State: APjAAAWxU/aezoxHRJ0WcC4AFzkcCJeP6zn3LCXCOldgI1VFcbu0Yqa6
 DpT54dC7mFioII2OnS0fQ6mFUBgz
X-Google-Smtp-Source:
 APXvYqz+gtNAQMh676HdrwYo13pCAwLEODMGV3NCA/m8O3sGNrbrQHn8oz2de63wK+W+xSRfB/Vtfw==
X-Received: by 2002:a63:d415:: with SMTP id a21mr1018940pgh.229.1561527435115;
 Tue, 25 Jun 2019 22:37:15 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 56
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Lcore suggestion of SPP CLI does not care about layout of sockets, so it
possibly suggest a set of lcores on different sockets each other. For
considering optimization, it should be aware of the layout for
suggesting lcores on the same socket.

This update is to select lcores from the same socket if possible.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/pri.py | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

diff --git a/src/controller/commands/pri.py b/src/controller/commands/pri.py
index 654b7dd..eaf3d09 100644
--- a/src/controller/commands/pri.py
+++ b/src/controller/commands/pri.py
@@ -159,13 +159,14 @@ class SppPrimary(object):
         """Get lcore usage from spp-ctl for making launch options.
 
         Return value is a double dimension list of unsed lcores.
-          [[2,3,...], [16,17,...]]
+          [[0, 2, 4, ...], [1, 3, 5, ...]]
 
         To get the result, get CPU layout as an list first, then remove
         used lcores from the list.
         """
 
         sockets = []  # A set of CPU sockets.
+
         # Get list of CPU layout
         res = self.spp_ctl_cli.get('cpu_layout')
         if res is not None:
@@ -173,13 +174,14 @@ class SppPrimary(object):
                 try:
                     # Get layout of each of sockets as an array.
                     # [[0,1,2,3,..., 15], [16,17,18],...]]
-                    socket = []
                     for sock in res.json():
+                        socket = []
                         for ent in sock['cores']:
                             socket.append(ent['lcores'])
-                    socket.sort()
-                    socket = sum(socket, [])
-                    sockets.append(socket)
+
+                        socket = sum(socket, [])
+                        socket.sort()
+                        sockets.append(socket)
 
                 except KeyError as e:
                     print('Error: {} is not defined!'.format(e))
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 17:40:24 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd103.ddreams.local
 (zssg-mailmd103.ddreams.local [10.160.123.98]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DACHFWNO90@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 17:40:44 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd103.ddreams.local by
 zssg-mailmd103.ddreams.local (dDREAMS) id <0PTL0161MHFWPT00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 17:40:44 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd103.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00UN7HFWT460@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 17:40:44 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf106.ddreams.local (Postfix) with ESMTP id D637B7E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:40:44 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id D47888E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:40:44 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id C94168E6042	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 17:40:44 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 001CC8E6057	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:40:43 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf106.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 17:40:43 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8ehA9008061;	Mon,
 24 Jun 2019 17:40:43 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O8ehlc008060;	Mon, 24 Jun 2019 17:40:43 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O8ehWX008057	for unknown; Mon,
 24 Jun 2019 17:40:43 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8ehDs032474 for
 unknown; Mon, 24 Jun 2019 17:40:43 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8ehX1032470; Mon,
 24 Jun 2019 17:40:43 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8ehTu028594;	Mon,
 24 Jun 2019 17:40:43 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O8ehIc028590	for unknown; Mon, 24 Jun 2019 17:40:43 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8egM3025007 for
 unknown; Mon, 24 Jun 2019 17:40:42 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8egYH025001 for
 unknown; Mon, 24 Jun 2019 17:40:42 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O8eZ5b005185	for unknown; Mon,
 24 Jun 2019 17:40:41 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 6F6C31BF2F;	Mon, 24 Jun 2019 10:40:35 +0200 (CEST)
Received: from mail-pl1-f193.google.com
 (mail-pl1-f193.google.com [209.85.214.193]) by dpdk.org (Postfix)
 with ESMTP id 982841BE35 for <spp@dpdk.org>; Mon,
 24 Jun 2019 10:40:34 +0200 (CEST)
Received: by mail-pl1-f193.google.com with SMTP id t7so6468428plr.11 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 01:40:34 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id b11sm7018338pfd.18.2019.06.24.01.40.32
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 01:40:33 -0700 (PDT)
Date: Mon, 24 Jun 2019 17:40:24 +0900
From: yasufum.o@gmail.com
Subject: [spp 04410] [spp] [PATCH] spp_vf: rename spp_forward.c to forwarder.c
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624084024.23664-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04410
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=UVUyGFD1LxpEqLHLUTlbaYFXm9N7h6VOYIRyBGzekzE=;
 b=ERLfji25ZiC2zJ3qxfw6um1lOqnAX4NstQfY/GpCfUlNOPW12yogrOsvCSpjvkt/E5
 BjRnPbGz50YJI2b0aTlilUpkZwiYIS5YewdzJCH4FCaUPBKGYY8KOC9jb2lNFXd+XTCD
 7NiR+Szpd6sKCi82faPEuAm7UYny3whlhJvDdZO/rKnAt8pafzg9Uq2xwsoD/nzojdWb
 Qmp4rVvqiCs73nKtXDz+ANP/O4M0M7LSLt8vOwHQUzrxbnwCZFyGq51NPCn1iuOlKH0M
 79FPm7BR6GFGGg6O3WD/3kxPtdVAax5Tjcl98iYFLBUVtu4hdNHVaVRYP/efhGzJhOx9 LwEw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=UVUyGFD1LxpEqLHLUTlbaYFXm9N7h6VOYIRyBGzekzE=;
 b=pjTldcIl2q6Go9aCcZZ9ET8RWZ9V0nF5DP3HZccO+W6KS7wNgRB6Q1XEWdVs6og8Mj
 1av4xwO6vnzsASwrWT5mkxsTIy4vILMV87yWwKCgxUI7mQQajQRa0dSIc3H6U5sS7L1X
 yLnVO/zw5bNB5AteY7YKdNkNMRogENSQgxolxiuAORyKrbsSSJnXlCx1vBx00wfsk2l9
 Fv6gG+F4aFruey+NUYO5z0SFTOLeU5DNz1OU0F2rDYVjqOUaFfXpmAjqwAVBIcfg+2wm
 OxS3Ri2Rm0cEa/TQ9JyLXUyn0T2afLNjOpIxUll7s1ZYmxeXSR+ZrJ1cnzu39XZIf1M7 Bk9A==
X-Gm-Message-State: APjAAAXVu99DjgkyVL/zGzI81FAQjuMUNJei9CSR4S5rDk9cyK5w1v/v
 mBvGEUsFqhI2xJmJaLu8DFyRlT22
X-Google-Smtp-Source:
 APXvYqxtGrgFDye4cXUkFQp8a2wAnhnuIbFJlmACLhfFFasfUuu1NuQIH6KLE1YFqMlbtFL57czwAQ==
X-Received: by 2002:a17:902:4643:: with SMTP id
 o61mr93422858pld.101.1561365633708; Mon, 24 Jun 2019 01:40:33 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 235
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to rename files and functions defined in the files for
refactoring.

* `spp_forward.c` and `spp_forward.h` to `forwarder.c` and
  `forwarder.h`.

* spp_forward() to forward_packets().

* spp_forward_init() to init_forwarder().

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/vf/Makefile                       |  2 +-
 src/vf/{spp_forward.c => forwarder.c} | 35 +++++++++++++--------------
 src/vf/{spp_forward.h => forwarder.h} | 17 +++++++------
 src/vf/spp_vf.c                       |  6 ++---
 src/vf/vf_cmd_runner.c                |  2 +-
 5 files changed, 31 insertions(+), 31 deletions(-)
 rename src/vf/{spp_forward.c => forwarder.c} (88%)
 rename src/vf/{spp_forward.h => forwarder.h} (78%)

diff --git a/src/vf/Makefile b/src/vf/Makefile
index 83d1f14..1d6cb7c 100644
--- a/src/vf/Makefile
+++ b/src/vf/Makefile
@@ -15,7 +15,7 @@ SPP_SEC_DIR = ../shared/secondary
 SPP_WKT_DIR = ../shared/secondary/spp_worker_th
 
 # all source are stored in SRCS-y
-SRCS-y := spp_vf.c classifier_mac.c spp_forward.c
+SRCS-y := spp_vf.c classifier_mac.c forwarder.c
 SRCS-y += $(SPP_SEC_DIR)/string_buffer.c
 SRCS-y += $(SPP_SEC_DIR)/json_helper.c
 SRCS-y += $(SPP_SEC_DIR)/utils.c $(SPP_SEC_DIR)/add_port.c
diff --git a/src/vf/spp_forward.c b/src/vf/forwarder.c
similarity index 88%
rename from src/vf/spp_forward.c
rename to src/vf/forwarder.c
index 07031f7..4d99bfb 100644
--- a/src/vf/spp_forward.c
+++ b/src/vf/forwarder.c
@@ -4,7 +4,7 @@
 
 #include <rte_cycles.h>
 
-#include "spp_forward.h"
+#include "forwarder.h"
 #include "spp_vf.h"
 #include "shared/secondary/return_codes.h"
 #include "shared/secondary/spp_worker_th/vf_deps.h"
@@ -20,12 +20,11 @@ struct forward_rxtx {
 
 /* Information on the path used for forward. */
 struct forward_path {
-	char name[STR_LEN_NAME];    /* component name */
+	char name[STR_LEN_NAME];  /* Component name */
 	volatile enum sppwk_worker_type wk_type;
-	int num_rx;                     /* number of receive ports */
-	int num_tx;                     /* number of trans ports   */
-	struct forward_rxtx ports[RTE_MAX_ETHPORTS];
-					/* port used for transfer  */
+	int nof_rx;  /* Number of RX ports */
+	int nof_tx;  /* Number of TX ports */
+	struct forward_rxtx ports[RTE_MAX_ETHPORTS];  /* Set of RX and TX */
 };
 
 /* Information for forward. */
@@ -38,9 +37,9 @@ struct forward_info {
 
 struct forward_info g_forward_info[RTE_MAX_LCORE];
 
-/* Clear info */
+/* Clear g_forward_info, ref and update indices. */
 void
-spp_forward_init(void)
+init_forwarder(void)
 {
 	int cnt = 0;
 	memset(&g_forward_info, 0x00, sizeof(g_forward_info));
@@ -77,13 +76,13 @@ get_forwarder_status(unsigned int lcore_id, int id,
 		component_type = SPPWK_TYPE_FWD_STR;
 
 	memset(rx_ports, 0x00, sizeof(rx_ports));
-	for (cnt = 0; cnt < fwd_path->num_rx; cnt++) {
+	for (cnt = 0; cnt < fwd_path->nof_rx; cnt++) {
 		rx_ports[cnt].iface_type = fwd_path->ports[cnt].rx.iface_type;
 		rx_ports[cnt].iface_no = fwd_path->ports[cnt].rx.iface_no;
 	}
 
 	memset(tx_ports, 0x00, sizeof(tx_ports));
-	for (cnt = 0; cnt < fwd_path->num_tx; cnt++) {
+	for (cnt = 0; cnt < fwd_path->nof_tx; cnt++) {
 		tx_ports[cnt].iface_type = fwd_path->ports[cnt].tx.iface_type;
 		tx_ports[cnt].iface_no = fwd_path->ports[cnt].tx.iface_no;
 	}
@@ -92,7 +91,7 @@ get_forwarder_status(unsigned int lcore_id, int id,
 	ret = (*params->element_proc)(
 		params, lcore_id,
 		fwd_path->name, component_type,
-		fwd_path->num_rx, rx_ports, fwd_path->num_tx, tx_ports);
+		fwd_path->nof_rx, rx_ports, fwd_path->nof_tx, tx_ports);
 	if (unlikely(ret != SPP_RET_OK))
 		return SPP_RET_NG;
 
@@ -140,8 +139,8 @@ update_forwarder(struct sppwk_comp_info *comp_info)
 
 	memcpy(&fwd_path->name, comp_info->name, STR_LEN_NAME);
 	fwd_path->wk_type = comp_info->wk_type;
-	fwd_path->num_rx = comp_info->nof_rx;
-	fwd_path->num_tx = comp_info->nof_tx;
+	fwd_path->nof_rx = comp_info->nof_rx;
+	fwd_path->nof_tx = comp_info->nof_tx;
 	for (cnt = 0; cnt < nof_rx; cnt++)
 		memcpy(&fwd_path->ports[cnt].rx, comp_info->rx_ports[cnt],
 				sizeof(struct sppwk_port_info));
@@ -177,13 +176,13 @@ change_forward_index(int id)
 	}
 }
 /**
- * Forwarding packets as forwarder or merger
+ * Forward packets as forwarder or merger.
  *
  * Behavior of forwarding is defined as core_info->type which is given
  * as an argument of void and typecasted to spp_config_info.
  */
 int
-spp_forward(int id)
+forward_packets(int id)
 {
 	int cnt, buf;
 	int nb_rx = 0;
@@ -200,15 +199,15 @@ spp_forward(int id)
 	/* Practice condition check */
 	if (path->wk_type == SPPWK_TYPE_MRG) {
 		/* merger */
-		if (!(path->num_tx == 1 && path->num_rx >= 1))
+		if (!(path->nof_tx == 1 && path->nof_rx >= 1))
 			return SPP_RET_OK;
 	} else {
 		/* forwarder */
-		if (!(path->num_tx == 1 && path->num_rx == 1))
+		if (!(path->nof_tx == 1 && path->nof_rx == 1))
 			return SPP_RET_OK;
 	}
 
-	for (cnt = 0; cnt < path->num_rx; cnt++) {
+	for (cnt = 0; cnt < path->nof_rx; cnt++) {
 		rx = &path->ports[cnt].rx;
 		tx = &path->ports[cnt].tx;
 
diff --git a/src/vf/spp_forward.h b/src/vf/forwarder.h
similarity index 78%
rename from src/vf/spp_forward.h
rename to src/vf/forwarder.h
index 37b1e3c..54a204b 100644
--- a/src/vf/spp_forward.h
+++ b/src/vf/forwarder.h
@@ -23,19 +23,20 @@
  * is specified by port command.
  */
 
-/** Clear info */
-void spp_forward_init(void);
+/* Clear g_forward_info, ref and update indices. */
+void init_forwarder(void);
 
 /**
- * Merge/Forward
+ * Forward packets as forwarder or merger.
  *
- * @param id
- *  The unique component ID.
+ * Behavior of forwarding is defined as core_info->type which is given
+ * as an argument of void and typecasted to spp_config_info.
  *
- * @retval SPP_RET_OK succeeded.
- * @retval SPP_RET_NG failed.
+ * @param[in] id Unique component ID.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
-int spp_forward(int id);
+int forward_packets(int id);
 
 /**
  * Get forwarder status.
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index e55e3f0..7ba894e 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -9,7 +9,7 @@
 #include "spp_vf.h"
 #include "shared/secondary/spp_worker_th/cmd_utils.h"
 #include "classifier_mac.h"
-#include "spp_forward.h"
+#include "forwarder.h"
 #include "shared/secondary/return_codes.h"
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
@@ -221,7 +221,7 @@ slave_main(void *arg __attribute__ ((unused)))
 					break;
 			} else {
 				/* Component type for forward or merge. */
-				ret = spp_forward(core->id[cnt]);
+				ret = forward_packets(core->id[cnt]);
 				if (unlikely(ret != 0))
 					break;
 			}
@@ -296,7 +296,7 @@ main(int argc, char *argv[])
 		if (unlikely(ret_classifier_mac_init != SPP_RET_OK))
 			break;
 
-		spp_forward_init();
+		init_forwarder();
 		spp_port_ability_init();
 
 		/* Setup connection for accepting commands from controller */
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index 46d54b4..51f50a7 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -3,7 +3,7 @@
  */
 
 #include "classifier_mac.h"
-#include "spp_forward.h"
+#include "forwarder.h"
 #include "shared/secondary/return_codes.h"
 #include "shared/secondary/json_helper.h"
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 17:40:40 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DD1HGBNO90@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 17:40:59 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTL0100SHGB4G00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 17:40:59 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00U52HGB6530@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 17:40:59 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id 9BCD07E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:40:59 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 9A9718E6052	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:40:59 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 997678E6042	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 17:40:59 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id E81468E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:40:58 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 17:40:58 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8ewkj008088;	Mon,
 24 Jun 2019 17:40:58 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O8ewPG008087;	Mon, 24 Jun 2019 17:40:58 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O8ew8b008084	for unknown; Mon,
 24 Jun 2019 17:40:58 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8ew2b032546 for
 unknown; Mon, 24 Jun 2019 17:40:58 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8ewrc032543; Mon,
 24 Jun 2019 17:40:58 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8ewwq028616;	Mon,
 24 Jun 2019 17:40:58 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O8evXk028612	for unknown; Mon, 24 Jun 2019 17:40:57 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8ev0k025042 for
 unknown; Mon, 24 Jun 2019 17:40:57 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8ev74025038 for
 unknown; Mon, 24 Jun 2019 17:40:57 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O8eo4Y005199	for unknown; Mon,
 24 Jun 2019 17:40:56 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 857461BF2F;	Mon, 24 Jun 2019 10:40:50 +0200 (CEST)
Received: from mail-pl1-f194.google.com
 (mail-pl1-f194.google.com [209.85.214.194]) by dpdk.org (Postfix)
 with ESMTP id 5FE1E1BE35 for <spp@dpdk.org>; Mon,
 24 Jun 2019 10:40:49 +0200 (CEST)
Received: by mail-pl1-f194.google.com with SMTP id bh12so6474620plb.4 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 01:40:49 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id 30sm28759534pjk.17.2019.06.24.01.40.47
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 01:40:48 -0700 (PDT)
Date: Mon, 24 Jun 2019 17:40:40 +0900
From: yasufum.o@gmail.com
Subject: [spp 04411] [spp] [PATCH 0/3] Rename spp_port_rxtx
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624084043.23718-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04411
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=jQMYwieTebTGukmPD4jKHMlTxI7PyWQ7VJ/6J6u3Q14=;
 b=VQ7lB3qywZokuiINC0R2WL2wf4fYFaawu7P06x5Nlg+mqcv5AT/vqF8ZwG3PF2wzEA
 rDwnBxCx/kdbh2xEM7jQJMyznn5iLNjdXWszCH/JLefKxw2RdRwLGzpTH3gzAWrwtXdg
 FAL9tIKwNfr/KzG1UqmTYCepLlAxvi9lugG+VMrQMzl4VWy8lpn8LqHcw1NPbCQQ0t62
 O+bDpO237cLctd7MaOZXaOXDp0l1o2g9QlqhZ/eYQz/OjJVmFvByRnVIsZw/eEn4zkyr
 FMIR8wzyXd40E1A3gjE0cXN1lReA2zNL1nbnNnP4rmXSsGfdfGqEN3f9kO5Z3JAQ9xS/ Cftg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=jQMYwieTebTGukmPD4jKHMlTxI7PyWQ7VJ/6J6u3Q14=;
 b=JzN/D0xT4xoU4o+n5W1xEKhd6n7jkHJqKf/ZRIGTdI8yyRlcaGpJOTH64cFGKzyTQS
 FyohLf6QOApaFcwwUR8tMFsJYut+hfGi1AlZyOcvB5MWBpl64OvhliZvbQRtlNlTZgIT
 MDrtNGLl0cJqzwh3ec3yQEHVmLLUbjfpj/JyGnbp8rg8N5Sxr4t/uZUZVYHYX5BLztDw
 xf8MmMKKNJEUl+IEl9RgN8K1XRP+VA7kqjy8zLuNZOxlf6zBzvT5aY09Th3xLQAtd40a
 ozQg0xBBT/c44Gl+u/vy9XdNOvgnESFm1xtOGozyAyvL8LZhHVTffZqBpQTPVQY+qImw X1ng==
X-Gm-Message-State: APjAAAWzZV8htY2eawI1kwlixYdEhL+scq9L7d9LSqzFTRIGYjySFaFk
 65d5GHd/WWAyNnaOlqgiPTcuhY5D
X-Google-Smtp-Source:
 APXvYqxfydBcV8YnasxtKDLqDTizf80YljeoxpmSxKw7L09QBoDh7FjODBcRoRoeMJ/0QIg7A1CFCw==
X-Received: by 2002:a17:902:ba8b:: with SMTP id
 k11mr45039900pls.107.1561365648591; Mon, 24 Jun 2019 01:40:48 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 29
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Enum `spp_port_rxtx` is used as a port attribute to have a direction,
RX or TX. It is not used to have a set of RX and TX, but defines the
direction. So, It is better to be named as `port_dir` or so. This series
of patches is to rename this enum for spp_vf, spp_mirror and spp_pcap.

Yasufumi Ogawa (3):
  shared/sec: revise enum spp_port_rxtx
  shared/sec: rename members of enum sppwk_port_dir
  spp_pcap: revise enum spp_port_rxtx

 src/mirror/mir_cmd_runner.c                   | 24 +++++------
 src/pcap/cmd_runner.c                         |  8 ++--
 src/pcap/cmd_utils.h                          | 17 ++++----
 .../secondary/spp_worker_th/cmd_parser.c      | 18 ++++-----
 .../secondary/spp_worker_th/cmd_parser.h      |  4 +-
 .../spp_worker_th/cmd_res_formatter.c         | 16 ++++----
 .../spp_worker_th/cmd_res_formatter.h         |  6 +--
 .../secondary/spp_worker_th/cmd_utils.c       | 17 ++++----
 .../secondary/spp_worker_th/cmd_utils.h       | 27 ++++++-------
 src/shared/secondary/spp_worker_th/spp_port.c | 40 +++++++++----------
 src/shared/secondary/spp_worker_th/spp_port.h |  4 +-
 src/vf/vf_cmd_runner.c                        | 32 +++++++--------
 12 files changed, 104 insertions(+), 109 deletions(-)

-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 17:40:41 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd106.ddreams.local
 (zssg-mailmd106.ddreams.local [10.160.123.101])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL00DDMHGDNO90@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 17:41:01 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd106.ddreams.local by
 zssg-mailmd106.ddreams.local (dDREAMS) id <0PTL0032GHGDQ000@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 17:41:01 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd106.ddreams.local
 (dDREAMS) with ESMTP id <0PTL011PKHGDAG90@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 17:41:01 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf106.ddreams.local (Postfix) with ESMTP id D6D2C7E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:41:01 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id D4F508E6057	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:41:01 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id C9F6A8E6042	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 17:41:01 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id EC9918E6057	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:41:00 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf106.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 17:41:00 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8f0X6008095;	Mon,
 24 Jun 2019 17:41:00 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O8f0qi008094;	Mon, 24 Jun 2019 17:41:00 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O8f0Ik008091	for unknown; Mon,
 24 Jun 2019 17:41:00 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8f00Y032561 for
 unknown; Mon, 24 Jun 2019 17:41:00 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8f0fu032555; Mon,
 24 Jun 2019 17:41:00 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8f0XO028623;	Mon,
 24 Jun 2019 17:41:00 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O8f0ve028619	for unknown; Mon, 24 Jun 2019 17:41:00 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8exxB025064 for
 unknown; Mon, 24 Jun 2019 17:40:59 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8exbn025061 for
 unknown; Mon, 24 Jun 2019 17:40:59 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O8erCd005213	for unknown; Mon,
 24 Jun 2019 17:40:58 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id A302B1BF35;	Mon, 24 Jun 2019 10:40:52 +0200 (CEST)
Received: from mail-pf1-f196.google.com
 (mail-pf1-f196.google.com [209.85.210.196]) by dpdk.org (Postfix)
 with ESMTP id 3248D1BF31 for <spp@dpdk.org>; Mon,
 24 Jun 2019 10:40:51 +0200 (CEST)
Received: by mail-pf1-f196.google.com with SMTP id y15so2457742pfn.5 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 01:40:51 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id 30sm28759534pjk.17.2019.06.24.01.40.48
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 01:40:49 -0700 (PDT)
Date: Mon, 24 Jun 2019 17:40:41 +0900
From: yasufum.o@gmail.com
Subject: [spp 04412] [spp] [PATCH 1/3] shared/sec: revise enum spp_port_rxtx
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624084043.23718-2-yasufum.o@gmail.com>
In-reply-to: <20190624084043.23718-1-yasufum.o@gmail.com>
References: <20190624084043.23718-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04412
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=MEn8Sfi+77eW4zMRF2zegl6DrD5WQNnMZzL7RWM2AUE=;
 b=mF5uYoFZ4En9uSOVg4cMkefEkfidhIvg8DnyEewVwpfDxzYhofvwBBMTg9cjUbEOY4
 6Qnyf6IXxEspn45Q9flVWxDEBBexax4+J3J3tHgQ6nl3NIoS+y+8c2cLlzd4D9vBEdRw
 UzNablU4KlDaDwIZglwW/6200ued9K6iAhe3stvSAsJylzyH4zIXbZVcd+RBDsbZ2tQ7
 0/VRqDtkRLnONRhDe9INZqIit5YizVQmsrs6UEYCIVrkXvWBitoMi5uQSVmtGwLnI4ZM
 eSvXoDYjANgKwoMuBPMfdzRo3e0ffX/p/R8qmJAro6bJpTrsEiaaYMLY+HJuBB3AEo+r Nc4g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=MEn8Sfi+77eW4zMRF2zegl6DrD5WQNnMZzL7RWM2AUE=;
 b=QGbmAwL/yCCFSDdGBhj2a6B1cAWatSxMSTF9kb8casJ5soBP18dsQHoiyHFvij1aJW
 br2l8ODsJsX7DN9DxNE6CPCHnqudR7KTrqKY+7m8CKVnr9sNuLLnARwRDaSbch4Z5mXS
 zkVnmjJDWM6h0jQQjs9ZEkqMJoGYlX9lic21brBMUG6LbJQ/vhYM4k/9oHfbEDt399iB
 m4VM7FhU7n06LUD3rYCgYYemDhxsEHhGI9GYDJ0pJNzMEKRQ7qymqiYIVGPqdmDT6CFw
 M37HJLiCB9NMZkzup71+fBMrwzBPhviTqtF9ju+5vN0iaZk7pTZVKLnYJBh7UaAbn882 4ehg==
X-Gm-Message-State: APjAAAXKEz2F32emcbNsqp8Y2CjB0D7yBHRtvNhTWCn/qFQFWT4jAKCR
 VM0BxhVXnX5lJI1vxNVveP06uvk4
X-Google-Smtp-Source:
 APXvYqy9quM9muQ83qD3si9EbOZhqyWlWpX633Pc5MRf+HnNMq9OzHKbSms4ZOFoAvHLUpVbr7yWcA==
X-Received: by 2002:a17:90a:30cf:: with SMTP id
 h73mr23779464pjb.42.1561365650087; Mon, 24 Jun 2019 01:40:50 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 552
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to revise the name of enum `spp_port_rxtx` to
`sppwk_port_dir` because it is used to specify which of direction
packets are forwarded on a port. Term `rxtx` is used for a set of RX and
TX, so it should not be used for specifying the direction. This update
is also rename a member of structs using this enum from `rxtx` to `dir`.

Some error are occured while compiling spp_pcap for this update. It is
fixed by next pathces.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/mir_cmd_runner.c                   | 24 +++++++--------
 .../secondary/spp_worker_th/cmd_parser.c      | 14 ++++-----
 .../secondary/spp_worker_th/cmd_parser.h      |  4 +--
 .../spp_worker_th/cmd_res_formatter.c         | 12 ++++----
 .../spp_worker_th/cmd_res_formatter.h         |  6 ++--
 .../secondary/spp_worker_th/cmd_utils.c       | 13 ++++----
 .../secondary/spp_worker_th/cmd_utils.h       | 19 +++++-------
 src/shared/secondary/spp_worker_th/spp_port.c | 20 ++++++-------
 src/shared/secondary/spp_worker_th/spp_port.h |  4 +--
 src/vf/vf_cmd_runner.c                        | 30 +++++++++----------
 10 files changed, 72 insertions(+), 74 deletions(-)

diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index a4ca397..eda4d1a 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -107,19 +107,19 @@ update_comp(enum sppwk_action wk_action, const char *name,
 
 /* Check if over the maximum num of rx and tx ports of component. */
 static int
-check_mir_port_count(enum spp_port_rxtx rxtx, int num_rx, int num_tx)
+check_mir_port_count(enum sppwk_port_dir dir, int nof_rx, int nof_tx)
 {
 	RTE_LOG(INFO, MIR_CMD_RUNNER, "port count, port_type=%d,"
-				" rx=%d, tx=%d\n", rxtx, num_rx, num_tx);
-	if (rxtx == SPP_PORT_RXTX_RX)
-		num_rx++;
+				" rx=%d, tx=%d\n", dir, nof_rx, nof_tx);
+	if (dir == SPP_PORT_RXTX_RX)
+		nof_rx++;
 	else
-		num_tx++;
+		nof_tx++;
 	/* Add rx or tx port appointed in port_type. */
 	RTE_LOG(INFO, MIR_CMD_RUNNER, "Num of ports after count up,"
 				" port_type=%d, rx=%d, tx=%d\n",
-				rxtx, num_rx, num_tx);
-	if (num_rx > 1 || num_tx > 2)
+				dir, nof_rx, nof_tx);
+	if (nof_rx > 1 || nof_tx > 2)
 		return SPP_RET_NG;
 
 	return SPP_RET_OK;
@@ -129,7 +129,7 @@ check_mir_port_count(enum spp_port_rxtx rxtx, int num_rx, int num_tx)
 static int
 update_port(enum sppwk_action wk_action,
 		const struct sppwk_port_idx *port,
-		enum spp_port_rxtx rxtx,
+		enum sppwk_port_dir dir,
 		const char *name,
 		const struct spp_port_ability *ability)
 {
@@ -155,7 +155,7 @@ update_port(enum sppwk_action wk_action,
 			&comp_info_base, NULL, NULL, &change_component, NULL);
 	comp_info = (comp_info_base + comp_lcore_id);
 	port_info = get_sppwk_port(port->iface_type, port->iface_no);
-	if (rxtx == SPP_PORT_RXTX_RX) {
+	if (dir == SPP_PORT_RXTX_RX) {
 		nof_ports = &comp_info->nof_rx;
 		ports = comp_info->rx_ports;
 	} else {
@@ -166,7 +166,7 @@ update_port(enum sppwk_action wk_action,
 	switch (wk_action) {
 	case SPPWK_ACT_ADD:
 		/* Check if over the maximum num of ports of component. */
-		if (check_mir_port_count(rxtx, comp_info->nof_rx,
+		if (check_mir_port_count(dir, comp_info->nof_rx,
 				comp_info->nof_tx) != SPP_RET_OK)
 			return SPP_RET_NG;
 
@@ -228,7 +228,7 @@ update_port(enum sppwk_action wk_action,
 					SPPWK_PORT_ABL_OPS_NONE)
 				continue;
 
-			if (port_info->ability[cnt].rxtx == rxtx)
+			if (port_info->ability[cnt].dir == dir)
 				memset(&port_info->ability[cnt], 0x00,
 					sizeof(struct spp_port_ability));
 		}
@@ -274,7 +274,7 @@ exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
 		RTE_LOG(INFO, MIR_CMD_RUNNER, "with action `%s`.\n",
 				sppwk_action_str(cmd->spec.port.wk_action));
 		ret = update_port(cmd->spec.port.wk_action,
-				&cmd->spec.port.port, cmd->spec.port.rxtx,
+				&cmd->spec.port.port, cmd->spec.port.dir,
 				cmd->spec.port.name, &cmd->spec.port.ability);
 		if (ret == 0) {
 			RTE_LOG(INFO, MIR_CMD_RUNNER, "Exec flush.\n");
diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.c b/src/shared/secondary/spp_worker_th/cmd_parser.c
index 5a2fb82..c1b311c 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.c
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.c
@@ -480,14 +480,14 @@ parse_port(void *output, const char *arg_val, int allow_override)
 
 /* Parse port rx and tx value. */
 static int
-parse_port_rxtx(void *output, const char *arg_val, int allow_override)
+parse_port_direction(void *output, const char *arg_val, int allow_override)
 {
-	int ret = SPP_RET_OK;
+	int ret;
 	struct sppwk_cmd_port *port = output;
 
 	ret = get_list_idx(arg_val, PORT_DIR_LIST);
 	if (unlikely(ret <= 0)) {
-		RTE_LOG(ERR, WK_CMD_PARSER, "Unknown port rxtx. val=%s\n",
+		RTE_LOG(ERR, WK_CMD_PARSER, "Unknown port direction. val=%s\n",
 				arg_val);
 		return SPP_RET_NG;
 	}
@@ -504,7 +504,7 @@ parse_port_rxtx(void *output, const char *arg_val, int allow_override)
 		}
 	}
 
-	port->rxtx = ret;
+	port->dir = ret;
 	return SPP_RET_OK;
 }
 
@@ -551,8 +551,8 @@ parse_port_vlan_ops(void *output, const char *arg_val,
 					arg_val);
 			return SPP_RET_NG;
 		}
-		ability->ops  = ret;
-		ability->rxtx = port->rxtx;
+		ability->ops = ret;
+		ability->dir = port->dir;
 		break;
 	case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
 		/* Nothing to do. */
@@ -875,7 +875,7 @@ cmd_ops_list[][SPPWK_MAX_PARAMS] = {
 		{
 			.name = "port rxtx",
 			.offset = offsetof(struct sppwk_cmd_attrs, spec.port),
-			.func = parse_port_rxtx
+			.func = parse_port_direction
 		},
 		{
 			.name = "component name",
diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.h b/src/shared/secondary/spp_worker_th/cmd_parser.h
index 1018444..d50e3a6 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.h
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.h
@@ -102,8 +102,8 @@ struct sppwk_cmd_comp {
 /* `port` command parameters. */
 struct sppwk_cmd_port {
 	enum sppwk_action wk_action;  /**< add or del */
-	struct sppwk_port_idx port;  /**< port type and number */
-	enum spp_port_rxtx rxtx;  /**< rx or tx identifier */
+	struct sppwk_port_idx port;   /**< port type and number */
+	enum sppwk_port_dir dir;  /**< Direction of RX, TX or both. */
 	char name[SPPWK_NAME_BUFSZ];  /**<  component name */
 	struct spp_port_ability ability;  /**< port ability */
 };
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index fdc8675..a174890 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -164,7 +164,7 @@ append_vlan_value(char **output, const int ope, const int vid, const int pcp)
 /* append a block of vlan for JSON format */
 int
 append_vlan_block(const char *name, char **output,
-		const int port_id, const enum spp_port_rxtx rxtx)
+		const int port_id, const enum sppwk_port_dir dir)
 {
 	int ret = SPP_RET_NG;
 	int i = 0;
@@ -178,7 +178,7 @@ append_vlan_block(const char *name, char **output,
 		return SPP_RET_NG;
 	}
 
-	spp_port_ability_get_info(port_id, rxtx, &info);
+	spp_port_ability_get_info(port_id, dir, &info);
 	for (i = 0; i < SPP_PORT_ABILITY_MAX; i++) {
 		switch (info[i].ops) {
 		case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
@@ -239,7 +239,7 @@ get_ethdev_port_id(enum port_type iface_type, int iface_no)
 /* append a block of port numbers for JSON format */
 int
 append_port_block(char **output, const struct sppwk_port_idx *port,
-		const enum spp_port_rxtx rxtx)
+		const enum sppwk_port_dir dir)
 {
 	int ret = SPP_RET_NG;
 	char port_str[CMD_TAG_APPEND_SIZE];
@@ -259,7 +259,7 @@ append_port_block(char **output, const struct sppwk_port_idx *port,
 	ret = append_vlan_block("vlan", &tmp_buff,
 			get_ethdev_port_id(
 				port->iface_type, port->iface_no),
-			rxtx);
+			dir);
 	if (unlikely(ret < SPP_RET_OK))
 		return SPP_RET_NG;
 
@@ -272,7 +272,7 @@ append_port_block(char **output, const struct sppwk_port_idx *port,
 int
 append_port_array(const char *name, char **output, const int num,
 		const struct sppwk_port_idx *ports,
-		const enum spp_port_rxtx rxtx)
+		const enum sppwk_port_dir dir)
 {
 	int ret = SPP_RET_NG;
 	int i = 0;
@@ -286,7 +286,7 @@ append_port_array(const char *name, char **output, const int num,
 	}
 
 	for (i = 0; i < num; i++) {
-		ret = append_port_block(&tmp_buff, &ports[i], rxtx);
+		ret = append_port_block(&tmp_buff, &ports[i], dir);
 		if (unlikely(ret < SPP_RET_OK))
 			return SPP_RET_NG;
 	}
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
index d304e4f..66eabb5 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
@@ -40,14 +40,14 @@ int append_vlan_value(char **output, const int ope, const int vid,
 		const int pcp);
 
 int append_vlan_block(const char *name, char **output,
-		const int port_id, const enum spp_port_rxtx rxtx);
+		const int port_id, const enum sppwk_port_dir dir);
 
 int append_port_block(char **output, const struct sppwk_port_idx *port,
-		const enum spp_port_rxtx rxtx);
+		const enum sppwk_port_dir dir);
 
 int append_port_array(const char *name, char **output, const int num,
 		const struct sppwk_port_idx *ports,
-		const enum spp_port_rxtx rxtx);
+		const enum sppwk_port_dir dir);
 
 int append_core_element_value(struct spp_iterate_core_params *params,
 		const unsigned int lcore_id,
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index e61f59c..4f80b2e 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -661,7 +661,7 @@ int
 spp_check_used_port(
 		enum port_type iface_type,
 		int iface_no,
-		enum spp_port_rxtx rxtx)
+		enum sppwk_port_dir dir)
 {
 	int cnt, port_cnt, max = 0;
 	struct sppwk_comp_info *component = NULL;
@@ -678,10 +678,10 @@ spp_check_used_port(
 		if (component->wk_type == SPPWK_TYPE_NONE)
 			continue;
 
-		if (rxtx == SPP_PORT_RXTX_RX) {
+		if (dir == SPP_PORT_RXTX_RX) {
 			max = component->nof_rx;
 			port_array = component->rx_ports;
-		} else if (rxtx == SPP_PORT_RXTX_TX) {
+		} else if (dir == SPP_PORT_RXTX_TX) {
 			max = component->nof_tx;
 			port_array = component->tx_ports;
 		}
@@ -696,17 +696,18 @@ spp_check_used_port(
 
 /* Set component update flag for given port */
 void
-set_component_change_port(struct sppwk_port_info *port, enum spp_port_rxtx rxtx)
+set_component_change_port(struct sppwk_port_info *port,
+		enum sppwk_port_dir dir)
 {
 	int ret = 0;
-	if ((rxtx == SPP_PORT_RXTX_RX) || (rxtx == SPP_PORT_RXTX_ALL)) {
+	if ((dir == SPP_PORT_RXTX_RX) || (dir == SPP_PORT_RXTX_ALL)) {
 		ret = spp_check_used_port(port->iface_type, port->iface_no,
 				SPP_PORT_RXTX_RX);
 		if (ret >= 0)
 			*(g_mng_data.p_change_component + ret) = 1;
 	}
 
-	if ((rxtx == SPP_PORT_RXTX_TX) || (rxtx == SPP_PORT_RXTX_ALL)) {
+	if ((dir == SPP_PORT_RXTX_TX) || (dir == SPP_PORT_RXTX_ALL)) {
 		ret = spp_check_used_port(port->iface_type, port->iface_no,
 				SPP_PORT_RXTX_TX);
 		if (ret >= 0)
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index b0009c3..e08e4fb 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -95,11 +95,8 @@ enum spp_classifier_type {
 	SPP_CLASSIFIER_TYPE_VLAN  /**< VLAN ID */
 };
 
-/**
- * Port type (rx or tx) to indicate which direction packet goes
- * (e.g. receiving or transmitting)
- */
-enum spp_port_rxtx {
+/* Direction of RX or TX on a port. */
+enum sppwk_port_dir {
 	SPP_PORT_RXTX_NONE, /**< none */
 	SPP_PORT_RXTX_RX,   /**< rx port */
 	SPP_PORT_RXTX_TX,   /**< tx port */
@@ -155,9 +152,9 @@ union spp_ability_data {
 
 /* Port ability information. */
 struct spp_port_ability {
-	enum sppwk_port_abl_ops ops;  /**< Port ability Operations */
-	enum spp_port_rxtx rxtx;      /**< rx/tx identifier */
-	union spp_ability_data data;  /**< Port ability data */
+	enum sppwk_port_abl_ops ops;   /**< Port ability Operations */
+	enum sppwk_port_dir dir;  /**< Direction of RX, TX or both */
+	union spp_ability_data data;   /**< Port ability data */
 };
 
 /* Attributes for classifying. */
@@ -436,7 +433,7 @@ int spp_check_core_update(unsigned int lcore_id);
 int spp_check_used_port(
 		enum port_type iface_type,
 		int iface_no,
-		enum spp_port_rxtx rxtx);
+		enum sppwk_port_dir dir);
 
 /**
  * Set component update flag for given port.
@@ -448,8 +445,8 @@ int spp_check_used_port(
  *
  */
 void
-set_component_change_port(
-		struct sppwk_port_info *port, enum spp_port_rxtx rxtx);
+set_component_change_port(struct sppwk_port_info *port,
+		enum sppwk_port_dir dir);
 
 /**
  * Get ID of unused lcore.
diff --git a/src/shared/secondary/spp_worker_th/spp_port.c b/src/shared/secondary/spp_worker_th/spp_port.c
index 3163274..7ac6858 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.c
+++ b/src/shared/secondary/spp_worker_th/spp_port.c
@@ -60,12 +60,12 @@ spp_port_ability_init(void)
 /* Get information of port ability. */
 void
 spp_port_ability_get_info(
-		int port_id, enum spp_port_rxtx rxtx,
+		int port_id, enum sppwk_port_dir dir,
 		struct spp_port_ability **info)
 {
 	struct port_ability_mng_info *mng = NULL;
 
-	switch (rxtx) {
+	switch (dir) {
 	case SPP_PORT_RXTX_RX:
 		mng = &g_port_mng_info[port_id].rx;
 		break;
@@ -202,7 +202,7 @@ del_vlantag_all_packets(
 void
 spp_port_ability_change_index(
 		enum port_ability_chg_index_type type,
-		int port_id, enum spp_port_rxtx rxtx)
+		int port_id, enum sppwk_port_dir dir)
 {
 	int cnt;
 	static int num_rx;
@@ -212,7 +212,7 @@ spp_port_ability_change_index(
 	struct port_ability_mng_info *mng = NULL;
 
 	if (type == PORT_ABILITY_CHG_INDEX_UPD) {
-		switch (rxtx) {
+		switch (dir) {
 		case SPP_PORT_RXTX_RX:
 			mng = &g_port_mng_info[port_id].rx;
 			mng->upd_index = mng->ref_index;
@@ -249,7 +249,7 @@ spp_port_ability_change_index(
 static void
 port_ability_set_ability(
 		struct sppwk_port_info *port,
-		enum spp_port_rxtx rxtx)
+		enum sppwk_port_dir dir)
 {
 	int in_cnt, out_cnt = 0;
 	int port_id = port->ethdev_port_id;
@@ -263,7 +263,7 @@ port_ability_set_ability(
 	port_mng->iface_type = port->iface_type;
 	port_mng->iface_no   = port->iface_no;
 
-	switch (rxtx) {
+	switch (dir) {
 	case SPP_PORT_RXTX_RX:
 		mng = &port_mng->rx;
 		break;
@@ -279,7 +279,7 @@ port_ability_set_ability(
 	memset(out_ability, 0x00, sizeof(struct spp_port_ability)
 			* SPP_PORT_ABILITY_MAX);
 	for (in_cnt = 0; in_cnt < SPP_PORT_ABILITY_MAX; in_cnt++) {
-		if (in_ability[in_cnt].rxtx != rxtx)
+		if (in_ability[in_cnt].dir != dir)
 			continue;
 
 		memcpy(&out_ability[out_cnt], &in_ability[in_cnt],
@@ -301,7 +301,7 @@ port_ability_set_ability(
 	}
 
 	spp_port_ability_change_index(PORT_ABILITY_CHG_INDEX_UPD,
-			port_id, rxtx);
+			port_id, dir);
 }
 
 /* Update port capability. */
@@ -338,13 +338,13 @@ port_ability_func port_ability_function_list[] = {
 static inline int
 port_ability_each_operation(uint16_t port_id,
 		struct rte_mbuf **pkts, const uint16_t nb_pkts,
-		enum spp_port_rxtx rxtx)
+		enum sppwk_port_dir dir)
 {
 	int cnt, buf;
 	int ok_pkts = nb_pkts;
 	struct spp_port_ability *info = NULL;
 
-	spp_port_ability_get_info(port_id, rxtx, &info);
+	spp_port_ability_get_info(port_id, dir, &info);
 	if (unlikely(info[0].ops == SPPWK_PORT_ABL_OPS_NONE))
 		return nb_pkts;
 
diff --git a/src/shared/secondary/spp_worker_th/spp_port.h b/src/shared/secondary/spp_worker_th/spp_port.h
index 274b24b..5cde7d2 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.h
+++ b/src/shared/secondary/spp_worker_th/spp_port.h
@@ -40,7 +40,7 @@ void spp_port_ability_init(void);
  *  Port ability information.
  */
 void spp_port_ability_get_info(
-		int port_id, enum spp_port_rxtx rxtx,
+		int port_id, enum sppwk_port_dir dir,
 		struct spp_port_ability **info);
 
 /**
@@ -55,7 +55,7 @@ void spp_port_ability_get_info(
  */
 void spp_port_ability_change_index(
 		enum port_ability_chg_index_type type,
-		int port_id, enum spp_port_rxtx rxtx);
+		int port_id, enum sppwk_port_dir dir);
 
 /**
  * Update port capability.
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index 51f50a7..89cf12f 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -209,32 +209,32 @@ update_comp(enum sppwk_action wk_action, const char *name,
 
 /* Check if over the maximum num of rx and tx ports of component. */
 static int
-check_vf_port_count(int component_type, enum spp_port_rxtx rxtx, int num_rx,
-								int num_tx)
+check_vf_port_count(int component_type, enum sppwk_port_dir dir,
+		int nof_rx, int nof_tx)
 {
 	RTE_LOG(INFO, VF_CMD_RUNNER, "port count, port_type=%d,"
-				" rx=%d, tx=%d\n", rxtx, num_rx, num_tx);
-	if (rxtx == SPP_PORT_RXTX_RX)
-		num_rx++;
+				" rx=%d, tx=%d\n", dir, nof_rx, nof_tx);
+	if (dir == SPP_PORT_RXTX_RX)
+		nof_rx++;
 	else
-		num_tx++;
+		nof_tx++;
 	/* Add rx or tx port appointed in port_type. */
 	RTE_LOG(INFO, VF_CMD_RUNNER, "Num of ports after count up,"
 				" port_type=%d, rx=%d, tx=%d\n",
-				rxtx, num_rx, num_tx);
+				dir, nof_rx, nof_tx);
 	switch (component_type) {
 	case SPPWK_TYPE_FWD:
-		if (num_rx > 1 || num_tx > 1)
+		if (nof_rx > 1 || nof_tx > 1)
 			return SPP_RET_NG;
 		break;
 
 	case SPPWK_TYPE_MRG:
-		if (num_tx > 1)
+		if (nof_tx > 1)
 			return SPP_RET_NG;
 		break;
 
 	case SPPWK_TYPE_CLS:
-		if (num_rx > 1)
+		if (nof_rx > 1)
 			return SPP_RET_NG;
 		break;
 
@@ -250,7 +250,7 @@ check_vf_port_count(int component_type, enum spp_port_rxtx rxtx, int num_rx,
 static int
 update_port(enum sppwk_action wk_action,
 		const struct sppwk_port_idx *port,
-		enum spp_port_rxtx rxtx,
+		enum sppwk_port_dir dir,
 		const char *name,
 		const struct spp_port_ability *ability)
 {
@@ -276,7 +276,7 @@ update_port(enum sppwk_action wk_action,
 			&comp_info_base, NULL, NULL, &change_component, NULL);
 	comp_info = (comp_info_base + comp_lcore_id);
 	port_info = get_sppwk_port(port->iface_type, port->iface_no);
-	if (rxtx == SPP_PORT_RXTX_RX) {
+	if (dir == SPP_PORT_RXTX_RX) {
 		nof_ports = &comp_info->nof_rx;
 		ports = comp_info->rx_ports;
 	} else {
@@ -287,7 +287,7 @@ update_port(enum sppwk_action wk_action,
 	switch (wk_action) {
 	case SPPWK_ACT_ADD:
 		/* Check if over the maximum num of ports of component. */
-		if (check_vf_port_count(comp_info->wk_type, rxtx,
+		if (check_vf_port_count(comp_info->wk_type, dir,
 				comp_info->nof_rx,
 				comp_info->nof_tx) != SPP_RET_OK)
 			return SPP_RET_NG;
@@ -349,7 +349,7 @@ update_port(enum sppwk_action wk_action,
 					SPPWK_PORT_ABL_OPS_NONE)
 				continue;
 
-			if (port_info->ability[cnt].rxtx == rxtx)
+			if (port_info->ability[cnt].dir == dir)
 				memset(&port_info->ability[cnt], 0x00,
 					sizeof(struct spp_port_ability));
 		}
@@ -408,7 +408,7 @@ exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
 		RTE_LOG(INFO, VF_CMD_RUNNER, "with action `%s`.\n",
 				sppwk_action_str(cmd->spec.port.wk_action));
 		ret = update_port(cmd->spec.port.wk_action,
-				&cmd->spec.port.port, cmd->spec.port.rxtx,
+				&cmd->spec.port.port, cmd->spec.port.dir,
 				cmd->spec.port.name, &cmd->spec.port.ability);
 		if (ret == 0) {
 			RTE_LOG(INFO, VF_CMD_RUNNER, "Exec flush.\n");
-- 
2.17.1



From spp-request@dpdk.org Mon Jun 24 17:40:52 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd103.ddreams.local
 (zssg-mailmd103.ddreams.local [10.160.123.98]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DDSHGENO90@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 17:41:02 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd103.ddreams.local by
 zssg-mailmd103.ddreams.local (dDREAMS) id <0PTL0170WHGE4G00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 17:41:02 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd103.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00UUFHGET460@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 17:41:02 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf105.ddreams.local (Postfix) with ESMTP id 1BBE07E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:41:02 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 18F958E6060	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:41:02 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 0D3B48E6058	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 17:41:02 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 887458E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:41:01 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf105.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 17:41:01 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8f1VW008103;	Mon,
 24 Jun 2019 17:41:01 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O8f1jo008102;	Mon, 24 Jun 2019 17:41:01 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O8f123008098	for unknown; Mon,
 24 Jun 2019 17:41:01 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8f1ip025086 for
 unknown; Mon, 24 Jun 2019 17:41:01 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8f0K4025080 for
 unknown; Mon, 24 Jun 2019 17:41:01 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O8esV2005216	for unknown; Mon,
 24 Jun 2019 17:40:59 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id B1D191BF36	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 24 Jun 2019 10:40:53 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 17
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 24 Jun 2019 10:40:52 +0200
Message-id: <mailman.23402.1561365652.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH] spp_vf: rename spp_forward.c to forwarder.c
      (yasufum.o@gmail.com)
   2. [PATCH 0/3] Rename spp_port_rxtx (yasufum.o@gmail.com)
   3. [PATCH 1/3] shared/sec: revise enum spp_port_rxtx
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon, 24 Jun 2019 17:40:24 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] spp_vf: rename spp_forward.c to forwarder.c
Message-ID: <20190624084024.23664-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to rename files and functions defined in the files for
refactoring.

* `spp_forward.c` and `spp_forward.h` to `forwarder.c` and
  `forwarder.h`.

* spp_forward() to forward_packets().

* spp_forward_init() to init_forwarder().

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/vf/Makefile                       |  2 +-
 src/vf/{spp_forward.c => forwarder.c} | 35 +++++++++++++--------------
 src/vf/{spp_forward.h => forwarder.h} | 17 +++++++------
 src/vf/spp_vf.c                       |  6 ++---
 src/vf/vf_cmd_runner.c                |  2 +-
 5 files changed, 31 insertions(+), 31 deletions(-)
 rename src/vf/{spp_forward.c => forwarder.c} (88%)
 rename src/vf/{spp_forward.h => forwarder.h} (78%)

diff --git a/src/vf/Makefile b/src/vf/Makefile
index 83d1f14..1d6cb7c 100644
--- a/src/vf/Makefile
+++ b/src/vf/Makefile
@@ -15,7 +15,7 @@ SPP_SEC_DIR = ../shared/secondary
 SPP_WKT_DIR = ../shared/secondary/spp_worker_th
 
 # all source are stored in SRCS-y
-SRCS-y := spp_vf.c classifier_mac.c spp_forward.c
+SRCS-y := spp_vf.c classifier_mac.c forwarder.c
 SRCS-y += $(SPP_SEC_DIR)/string_buffer.c
 SRCS-y += $(SPP_SEC_DIR)/json_helper.c
 SRCS-y += $(SPP_SEC_DIR)/utils.c $(SPP_SEC_DIR)/add_port.c
diff --git a/src/vf/spp_forward.c b/src/vf/forwarder.c
similarity index 88%
rename from src/vf/spp_forward.c
rename to src/vf/forwarder.c
index 07031f7..4d99bfb 100644
--- a/src/vf/spp_forward.c
+++ b/src/vf/forwarder.c
@@ -4,7 +4,7 @@
 
 #include <rte_cycles.h>
 
-#include "spp_forward.h"
+#include "forwarder.h"
 #include "spp_vf.h"
 #include "shared/secondary/return_codes.h"
 #include "shared/secondary/spp_worker_th/vf_deps.h"
@@ -20,12 +20,11 @@ struct forward_rxtx {
 
 /* Information on the path used for forward. */
 struct forward_path {
-	char name[STR_LEN_NAME];    /* component name */
+	char name[STR_LEN_NAME];  /* Component name */
 	volatile enum sppwk_worker_type wk_type;
-	int num_rx;                     /* number of receive ports */
-	int num_tx;                     /* number of trans ports   */
-	struct forward_rxtx ports[RTE_MAX_ETHPORTS];
-					/* port used for transfer  */
+	int nof_rx;  /* Number of RX ports */
+	int nof_tx;  /* Number of TX ports */
+	struct forward_rxtx ports[RTE_MAX_ETHPORTS];  /* Set of RX and TX */
 };
 
 /* Information for forward. */
@@ -38,9 +37,9 @@ struct forward_info {
 
 struct forward_info g_forward_info[RTE_MAX_LCORE];
 
-/* Clear info */
+/* Clear g_forward_info, ref and update indices. */
 void
-spp_forward_init(void)
+init_forwarder(void)
 {
 	int cnt = 0;
 	memset(&g_forward_info, 0x00, sizeof(g_forward_info));
@@ -77,13 +76,13 @@ get_forwarder_status(unsigned int lcore_id, int id,
 		component_type = SPPWK_TYPE_FWD_STR;
 
 	memset(rx_ports, 0x00, sizeof(rx_ports));
-	for (cnt = 0; cnt < fwd_path->num_rx; cnt++) {
+	for (cnt = 0; cnt < fwd_path->nof_rx; cnt++) {
 		rx_ports[cnt].iface_type = fwd_path->ports[cnt].rx.iface_type;
 		rx_ports[cnt].iface_no = fwd_path->ports[cnt].rx.iface_no;
 	}
 
 	memset(tx_ports, 0x00, sizeof(tx_ports));
-	for (cnt = 0; cnt < fwd_path->num_tx; cnt++) {
+	for (cnt = 0; cnt < fwd_path->nof_tx; cnt++) {
 		tx_ports[cnt].iface_type = fwd_path->ports[cnt].tx.iface_type;
 		tx_ports[cnt].iface_no = fwd_path->ports[cnt].tx.iface_no;
 	}
@@ -92,7 +91,7 @@ get_forwarder_status(unsigned int lcore_id, int id,
 	ret = (*params->element_proc)(
 		params, lcore_id,
 		fwd_path->name, component_type,
-		fwd_path->num_rx, rx_ports, fwd_path->num_tx, tx_ports);
+		fwd_path->nof_rx, rx_ports, fwd_path->nof_tx, tx_ports);
 	if (unlikely(ret != SPP_RET_OK))
 		return SPP_RET_NG;
 
@@ -140,8 +139,8 @@ update_forwarder(struct sppwk_comp_info *comp_info)
 
 	memcpy(&fwd_path->name, comp_info->name, STR_LEN_NAME);
 	fwd_path->wk_type = comp_info->wk_type;
-	fwd_path->num_rx = comp_info->nof_rx;
-	fwd_path->num_tx = comp_info->nof_tx;
+	fwd_path->nof_rx = comp_info->nof_rx;
+	fwd_path->nof_tx = comp_info->nof_tx;
 	for (cnt = 0; cnt < nof_rx; cnt++)
 		memcpy(&fwd_path->ports[cnt].rx, comp_info->rx_ports[cnt],
 				sizeof(struct sppwk_port_info));
@@ -177,13 +176,13 @@ change_forward_index(int id)
 	}
 }
 /**
- * Forwarding packets as forwarder or merger
+ * Forward packets as forwarder or merger.
  *
  * Behavior of forwarding is defined as core_info->type which is given
  * as an argument of void and typecasted to spp_config_info.
  */
 int
-spp_forward(int id)
+forward_packets(int id)
 {
 	int cnt, buf;
 	int nb_rx = 0;
@@ -200,15 +199,15 @@ spp_forward(int id)
 	/* Practice condition check */
 	if (path->wk_type == SPPWK_TYPE_MRG) {
 		/* merger */
-		if (!(path->num_tx == 1 && path->num_rx >= 1))
+		if (!(path->nof_tx == 1 && path->nof_rx >= 1))
 			return SPP_RET_OK;
 	} else {
 		/* forwarder */
-		if (!(path->num_tx == 1 && path->num_rx == 1))
+		if (!(path->nof_tx == 1 && path->nof_rx == 1))
 			return SPP_RET_OK;
 	}
 
-	for (cnt = 0; cnt < path->num_rx; cnt++) {
+	for (cnt = 0; cnt < path->nof_rx; cnt++) {
 		rx = &path->ports[cnt].rx;
 		tx = &path->ports[cnt].tx;
 
diff --git a/src/vf/spp_forward.h b/src/vf/forwarder.h
similarity index 78%
rename from src/vf/spp_forward.h
rename to src/vf/forwarder.h
index 37b1e3c..54a204b 100644
--- a/src/vf/spp_forward.h
+++ b/src/vf/forwarder.h
@@ -23,19 +23,20 @@
  * is specified by port command.
  */
 
-/** Clear info */
-void spp_forward_init(void);
+/* Clear g_forward_info, ref and update indices. */
+void init_forwarder(void);
 
 /**
- * Merge/Forward
+ * Forward packets as forwarder or merger.
  *
- * @param id
- *  The unique component ID.
+ * Behavior of forwarding is defined as core_info->type which is given
+ * as an argument of void and typecasted to spp_config_info.
  *
- * @retval SPP_RET_OK succeeded.
- * @retval SPP_RET_NG failed.
+ * @param[in] id Unique component ID.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
-int spp_forward(int id);
+int forward_packets(int id);
 
 /**
  * Get forwarder status.
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index e55e3f0..7ba894e 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -9,7 +9,7 @@
 #include "spp_vf.h"
 #include "shared/secondary/spp_worker_th/cmd_utils.h"
 #include "classifier_mac.h"
-#include "spp_forward.h"
+#include "forwarder.h"
 #include "shared/secondary/return_codes.h"
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
@@ -221,7 +221,7 @@ slave_main(void *arg __attribute__ ((unused)))
 					break;
 			} else {
 				/* Component type for forward or merge. */
-				ret = spp_forward(core->id[cnt]);
+				ret = forward_packets(core->id[cnt]);
 				if (unlikely(ret != 0))
 					break;
 			}
@@ -296,7 +296,7 @@ main(int argc, char *argv[])
 		if (unlikely(ret_classifier_mac_init != SPP_RET_OK))
 			break;
 
-		spp_forward_init();
+		init_forwarder();
 		spp_port_ability_init();
 
 		/* Setup connection for accepting commands from controller */
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index 46d54b4..51f50a7 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -3,7 +3,7 @@
  */
 
 #include "classifier_mac.h"
-#include "spp_forward.h"
+#include "forwarder.h"
 #include "shared/secondary/return_codes.h"
 #include "shared/secondary/json_helper.h"
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
-- 
2.17.1



------------------------------

Message: 2
Date: Mon, 24 Jun 2019 17:40:40 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 0/3] Rename spp_port_rxtx
Message-ID: <20190624084043.23718-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Enum `spp_port_rxtx` is used as a port attribute to have a direction,
RX or TX. It is not used to have a set of RX and TX, but defines the
direction. So, It is better to be named as `port_dir` or so. This series
of patches is to rename this enum for spp_vf, spp_mirror and spp_pcap.

Yasufumi Ogawa (3):
  shared/sec: revise enum spp_port_rxtx
  shared/sec: rename members of enum sppwk_port_dir
  spp_pcap: revise enum spp_port_rxtx

 src/mirror/mir_cmd_runner.c                   | 24 +++++------
 src/pcap/cmd_runner.c                         |  8 ++--
 src/pcap/cmd_utils.h                          | 17 ++++----
 .../secondary/spp_worker_th/cmd_parser.c      | 18 ++++-----
 .../secondary/spp_worker_th/cmd_parser.h      |  4 +-
 .../spp_worker_th/cmd_res_formatter.c         | 16 ++++----
 .../spp_worker_th/cmd_res_formatter.h         |  6 +--
 .../secondary/spp_worker_th/cmd_utils.c       | 17 ++++----
 .../secondary/spp_worker_th/cmd_utils.h       | 27 ++++++-------
 src/shared/secondary/spp_worker_th/spp_port.c | 40 +++++++++----------
 src/shared/secondary/spp_worker_th/spp_port.h |  4 +-
 src/vf/vf_cmd_runner.c                        | 32 +++++++--------
 12 files changed, 104 insertions(+), 109 deletions(-)

-- 
2.17.1



------------------------------

Message: 3
Date: Mon, 24 Jun 2019 17:40:41 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 1/3] shared/sec: revise enum spp_port_rxtx
Message-ID: <20190624084043.23718-2-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to revise the name of enum `spp_port_rxtx` to
`sppwk_port_dir` because it is used to specify which of direction
packets are forwarded on a port. Term `rxtx` is used for a set of RX and
TX, so it should not be used for specifying the direction. This update
is also rename a member of structs using this enum from `rxtx` to `dir`.

Some error are occured while compiling spp_pcap for this update. It is
fixed by next pathces.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/mir_cmd_runner.c                   | 24 +++++++--------
 .../secondary/spp_worker_th/cmd_parser.c      | 14 ++++-----
 .../secondary/spp_worker_th/cmd_parser.h      |  4 +--
 .../spp_worker_th/cmd_res_formatter.c         | 12 ++++----
 .../spp_worker_th/cmd_res_formatter.h         |  6 ++--
 .../secondary/spp_worker_th/cmd_utils.c       | 13 ++++----
 .../secondary/spp_worker_th/cmd_utils.h       | 19 +++++-------
 src/shared/secondary/spp_worker_th/spp_port.c | 20 ++++++-------
 src/shared/secondary/spp_worker_th/spp_port.h |  4 +--
 src/vf/vf_cmd_runner.c                        | 30 +++++++++----------
 10 files changed, 72 insertions(+), 74 deletions(-)

diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index a4ca397..eda4d1a 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -107,19 +107,19 @@ update_comp(enum sppwk_action wk_action, const char *name,
 
 /* Check if over the maximum num of rx and tx ports of component. */
 static int
-check_mir_port_count(enum spp_port_rxtx rxtx, int num_rx, int num_tx)
+check_mir_port_count(enum sppwk_port_dir dir, int nof_rx, int nof_tx)
 {
 	RTE_LOG(INFO, MIR_CMD_RUNNER, "port count, port_type=%d,"
-				" rx=%d, tx=%d\n", rxtx, num_rx, num_tx);
-	if (rxtx == SPP_PORT_RXTX_RX)
-		num_rx++;
+				" rx=%d, tx=%d\n", dir, nof_rx, nof_tx);
+	if (dir == SPP_PORT_RXTX_RX)
+		nof_rx++;
 	else
-		num_tx++;
+		nof_tx++;
 	/* Add rx or tx port appointed in port_type. */
 	RTE_LOG(INFO, MIR_CMD_RUNNER, "Num of ports after count up,"
 				" port_type=%d, rx=%d, tx=%d\n",
-				rxtx, num_rx, num_tx);
-	if (num_rx > 1 || num_tx > 2)
+				dir, nof_rx, nof_tx);
+	if (nof_rx > 1 || nof_tx > 2)
 		return SPP_RET_NG;
 
 	return SPP_RET_OK;
@@ -129,7 +129,7 @@ check_mir_port_count(enum spp_port_rxtx rxtx, int num_rx, int num_tx)
 static int
 update_port(enum sppwk_action wk_action,
 		const struct sppwk_port_idx *port,
-		enum spp_port_rxtx rxtx,
+		enum sppwk_port_dir dir,
 		const char *name,
 		const struct spp_port_ability *ability)
 {
@@ -155,7 +155,7 @@ update_port(enum sppwk_action wk_action,
 			&comp_info_base, NULL, NULL, &change_component, NULL);
 	comp_info = (comp_info_base + comp_lcore_id);
 	port_info = get_sppwk_port(port->iface_type, port->iface_no);
-	if (rxtx == SPP_PORT_RXTX_RX) {
+	if (dir == SPP_PORT_RXTX_RX) {
 		nof_ports = &comp_info->nof_rx;
 		ports = comp_info->rx_ports;
 	} else {
@@ -166,7 +166,7 @@ update_port(enum sppwk_action wk_action,
 	switch (wk_action) {
 	case SPPWK_ACT_ADD:
 		/* Check if over the maximum num of ports of component. */
-		if (check_mir_port_count(rxtx, comp_info->nof_rx,
+		if (check_mir_port_count(dir, comp_info->nof_rx,
 				comp_info->nof_tx) != SPP_RET_OK)
 			return SPP_RET_NG;
 
@@ -228,7 +228,7 @@ update_port(enum sppwk_action wk_action,
 					SPPWK_PORT_ABL_OPS_NONE)
 				continue;
 
-			if (port_info->ability[cnt].rxtx == rxtx)
+			if (port_info->ability[cnt].dir == dir)
 				memset(&port_info->ability[cnt], 0x00,
 					sizeof(struct spp_port_ability));
 		}
@@ -274,7 +274,7 @@ exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
 		RTE_LOG(INFO, MIR_CMD_RUNNER, "with action `%s`.\n",
 				sppwk_action_str(cmd->spec.port.wk_action));
 		ret = update_port(cmd->spec.port.wk_action,
-				&cmd->spec.port.port, cmd->spec.port.rxtx,
+				&cmd->spec.port.port, cmd->spec.port.dir,
 				cmd->spec.port.name, &cmd->spec.port.ability);
 		if (ret == 0) {
 			RTE_LOG(INFO, MIR_CMD_RUNNER, "Exec flush.\n");
diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.c b/src/shared/secondary/spp_worker_th/cmd_parser.c
index 5a2fb82..c1b311c 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.c
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.c
@@ -480,14 +480,14 @@ parse_port(void *output, const char *arg_val, int allow_override)
 
 /* Parse port rx and tx value. */
 static int
-parse_port_rxtx(void *output, const char *arg_val, int allow_override)
+parse_port_direction(void *output, const char *arg_val, int allow_override)
 {
-	int ret = SPP_RET_OK;
+	int ret;
 	struct sppwk_cmd_port *port = output;
 
 	ret = get_list_idx(arg_val, PORT_DIR_LIST);
 	if (unlikely(ret <= 0)) {
-		RTE_LOG(ERR, WK_CMD_PARSER, "Unknown port rxtx. val=%s\n",
+		RTE_LOG(ERR, WK_CMD_PARSER, "Unknown port direction. val=%s\n",
 				arg_val);
 		return SPP_RET_NG;
 	}
@@ -504,7 +504,7 @@ parse_port_rxtx(void *output, const char *arg_val, int allow_override)
 		}
 	}
 
-	port->rxtx = ret;
+	port->dir = ret;
 	return SPP_RET_OK;
 }
 
@@ -551,8 +551,8 @@ parse_port_vlan_ops(void *output, const char *arg_val,
 					arg_val);
 			return SPP_RET_NG;
 		}
-		ability->ops  = ret;
-		ability->rxtx = port->rxtx;
+		ability->ops = ret;
+		ability->dir = port->dir;
 		break;
 	case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
 		/* Nothing to do. */
@@ -875,7 +875,7 @@ cmd_ops_list[][SPPWK_MAX_PARAMS] = {
 		{
 			.name = "port rxtx",
 			.offset = offsetof(struct sppwk_cmd_attrs, spec.port),
-			.func = parse_port_rxtx
+			.func = parse_port_direction
 		},
 		{
 			.name = "component name",
diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.h b/src/shared/secondary/spp_worker_th/cmd_parser.h
index 1018444..d50e3a6 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.h
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.h
@@ -102,8 +102,8 @@ struct sppwk_cmd_comp {
 /* `port` command parameters. */
 struct sppwk_cmd_port {
 	enum sppwk_action wk_action;  /**< add or del */
-	struct sppwk_port_idx port;  /**< port type and number */
-	enum spp_port_rxtx rxtx;  /**< rx or tx identifier */
+	struct sppwk_port_idx port;   /**< port type and number */
+	enum sppwk_port_dir dir;  /**< Direction of RX, TX or both. */
 	char name[SPPWK_NAME_BUFSZ];  /**<  component name */
 	struct spp_port_ability ability;  /**< port ability */
 };
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index fdc8675..a174890 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -164,7 +164,7 @@ append_vlan_value(char **output, const int ope, const int vid, const int pcp)
 /* append a block of vlan for JSON format */
 int
 append_vlan_block(const char *name, char **output,
-		const int port_id, const enum spp_port_rxtx rxtx)
+		const int port_id, const enum sppwk_port_dir dir)
 {
 	int ret = SPP_RET_NG;
 	int i = 0;
@@ -178,7 +178,7 @@ append_vlan_block(const char *name, char **output,
 		return SPP_RET_NG;
 	}
 
-	spp_port_ability_get_info(port_id, rxtx, &info);
+	spp_port_ability_get_info(port_id, dir, &info);
 	for (i = 0; i < SPP_PORT_ABILITY_MAX; i++) {
 		switch (info[i].ops) {
 		case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
@@ -239,7 +239,7 @@ get_ethdev_port_id(enum port_type iface_type, int iface_no)
 /* append a block of port numbers for JSON format */
 int
 append_port_block(char **output, const struct sppwk_port_idx *port,
-		const enum spp_port_rxtx rxtx)
+		const enum sppwk_port_dir dir)
 {
 	int ret = SPP_RET_NG;
 	char port_str[CMD_TAG_APPEND_SIZE];
@@ -259,7 +259,7 @@ append_port_block(char **output, const struct sppwk_port_idx *port,
 	ret = append_vlan_block("vlan", &tmp_buff,
 			get_ethdev_port_id(
 				port->iface_type, port->iface_no),
-			rxtx);
+			dir);
 	if (unlikely(ret < SPP_RET_OK))
 		return SPP_RET_NG;
 
@@ -272,7 +272,7 @@ append_port_block(char **output, const struct sppwk_port_idx *port,
 int
 append_port_array(const char *name, char **output, const int num,
 		const struct sppwk_port_idx *ports,
-		const enum spp_port_rxtx rxtx)
+		const enum sppwk_port_dir dir)
 {
 	int ret = SPP_RET_NG;
 	int i = 0;
@@ -286,7 +286,7 @@ append_port_array(const char *name, char **output, const int num,
 	}
 
 	for (i = 0; i < num; i++) {
-		ret = append_port_block(&tmp_buff, &ports[i], rxtx);
+		ret = append_port_block(&tmp_buff, &ports[i], dir);
 		if (unlikely(ret < SPP_RET_OK))
 			return SPP_RET_NG;
 	}
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
index d304e4f..66eabb5 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
@@ -40,14 +40,14 @@ int append_vlan_value(char **output, const int ope, const int vid,
 		const int pcp);
 
 int append_vlan_block(const char *name, char **output,
-		const int port_id, const enum spp_port_rxtx rxtx);
+		const int port_id, const enum sppwk_port_dir dir);
 
 int append_port_block(char **output, const struct sppwk_port_idx *port,
-		const enum spp_port_rxtx rxtx);
+		const enum sppwk_port_dir dir);
 
 int append_port_array(const char *name, char **output, const int num,
 		const struct sppwk_port_idx *ports,
-		const enum spp_port_rxtx rxtx);
+		const enum sppwk_port_dir dir);
 
 int append_core_element_value(struct spp_iterate_core_params *params,
 		const unsigned int lcore_id,
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index e61f59c..4f80b2e 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -661,7 +661,7 @@ int
 spp_check_used_port(
 		enum port_type iface_type,
 		int iface_no,
-		enum spp_port_rxtx rxtx)
+		enum sppwk_port_dir dir)
 {
 	int cnt, port_cnt, max = 0;
 	struct sppwk_comp_info *component = NULL;
@@ -678,10 +678,10 @@ spp_check_used_port(
 		if (component->wk_type == SPPWK_TYPE_NONE)
 			continue;
 
-		if (rxtx == SPP_PORT_RXTX_RX) {
+		if (dir == SPP_PORT_RXTX_RX) {
 			max = component->nof_rx;
 			port_array = component->rx_ports;
-		} else if (rxtx == SPP_PORT_RXTX_TX) {
+		} else if (dir == SPP_PORT_RXTX_TX) {
 			max = component->nof_tx;
 			port_array = component->tx_ports;
 		}
@@ -696,17 +696,18 @@ spp_check_used_port(
 
 /* Set component update flag for given port */
 void
-set_component_change_port(struct sppwk_port_info *port, enum spp_port_rxtx rxtx)
+set_component_change_port(struct sppwk_port_info *port,
+		enum sppwk_port_dir dir)
 {
 	int ret = 0;
-	if ((rxtx == SPP_PORT_RXTX_RX) || (rxtx == SPP_PORT_RXTX_ALL)) {
+	if ((dir == SPP_PORT_RXTX_RX) || (dir == SPP_PORT_RXTX_ALL)) {
 		ret = spp_check_used_port(port->iface_type, port->iface_no,
 				SPP_PORT_RXTX_RX);
 		if (ret >= 0)
 			*(g_mng_data.p_change_component + ret) = 1;
 	}
 
-	if ((rxtx == SPP_PORT_RXTX_TX) || (rxtx == SPP_PORT_RXTX_ALL)) {
+	if ((dir == SPP_PORT_RXTX_TX) || (dir == SPP_PORT_RXTX_ALL)) {
 		ret = spp_check_used_port(port->iface_type, port->iface_no,
 				SPP_PORT_RXTX_TX);
 		if (ret >= 0)
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index b0009c3..e08e4fb 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -95,11 +95,8 @@ enum spp_classifier_type {
 	SPP_CLASSIFIER_TYPE_VLAN  /**< VLAN ID */
 };
 
-/**
- * Port type (rx or tx) to indicate which direction packet goes
- * (e.g. receiving or transmitting)
- */
-enum spp_port_rxtx {
+/* Direction of RX or TX on a port. */
+enum sppwk_port_dir {
 	SPP_PORT_RXTX_NONE, /**< none */
 	SPP_PORT_RXTX_RX,   /**< rx port */
 	SPP_PORT_RXTX_TX,   /**< tx port */
@@ -155,9 +152,9 @@ union spp_ability_data {
 
 /* Port ability information. */
 struct spp_port_ability {
-	enum sppwk_port_abl_ops ops;  /**< Port ability Operations */
-	enum spp_port_rxtx rxtx;      /**< rx/tx identifier */
-	union spp_ability_data data;  /**< Port ability data */
+	enum sppwk_port_abl_ops ops;   /**< Port ability Operations */
+	enum sppwk_port_dir dir;  /**< Direction of RX, TX or both */
+	union spp_ability_data data;   /**< Port ability data */
 };
 
 /* Attributes for classifying. */
@@ -436,7 +433,7 @@ int spp_check_core_update(unsigned int lcore_id);
 int spp_check_used_port(
 		enum port_type iface_type,
 		int iface_no,
-		enum spp_port_rxtx rxtx);
+		enum sppwk_port_dir dir);
 
 /**
  * Set component update flag for given port.
@@ -448,8 +445,8 @@ int spp_check_used_port(
  *
  */
 void
-set_component_change_port(
-		struct sppwk_port_info *port, enum spp_port_rxtx rxtx);
+set_component_change_port(struct sppwk_port_info *port,
+		enum sppwk_port_dir dir);
 
 /**
  * Get ID of unused lcore.
diff --git a/src/shared/secondary/spp_worker_th/spp_port.c b/src/shared/secondary/spp_worker_th/spp_port.c
index 3163274..7ac6858 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.c
+++ b/src/shared/secondary/spp_worker_th/spp_port.c
@@ -60,12 +60,12 @@ spp_port_ability_init(void)
 /* Get information of port ability. */
 void
 spp_port_ability_get_info(
-		int port_id, enum spp_port_rxtx rxtx,
+		int port_id, enum sppwk_port_dir dir,
 		struct spp_port_ability **info)
 {
 	struct port_ability_mng_info *mng = NULL;
 
-	switch (rxtx) {
+	switch (dir) {
 	case SPP_PORT_RXTX_RX:
 		mng = &g_port_mng_info[port_id].rx;
 		break;
@@ -202,7 +202,7 @@ del_vlantag_all_packets(
 void
 spp_port_ability_change_index(
 		enum port_ability_chg_index_type type,
-		int port_id, enum spp_port_rxtx rxtx)
+		int port_id, enum sppwk_port_dir dir)
 {
 	int cnt;
 	static int num_rx;
@@ -212,7 +212,7 @@ spp_port_ability_change_index(
 	struct port_ability_mng_info *mng = NULL;
 
 	if (type == PORT_ABILITY_CHG_INDEX_UPD) {
-		switch (rxtx) {
+		switch (dir) {
 		case SPP_PORT_RXTX_RX:
 			mng = &g_port_mng_info[port_id].rx;
 			mng->upd_index = mng->ref_index;
@@ -249,7 +249,7 @@ spp_port_ability_change_index(
 static void
 port_ability_set_ability(
 		struct sppwk_port_info *port,
-		enum spp_port_rxtx rxtx)
+		enum sppwk_port_dir dir)
 {
 	int in_cnt, out_cnt = 0;
 	int port_id = port->ethdev_port_id;
@@ -263,7 +263,7 @@ port_ability_set_ability(
 	port_mng->iface_type = port->iface_type;
 	port_mng->iface_no   = port->iface_no;
 
-	switch (rxtx) {
+	switch (dir) {
 	case SPP_PORT_RXTX_RX:
 		mng = &port_mng->rx;
 		break;
@@ -279,7 +279,7 @@ port_ability_set_ability(
 	memset(out_ability, 0x00, sizeof(struct spp_port_ability)
 			* SPP_PORT_ABILITY_MAX);
 	for (in_cnt = 0; in_cnt < SPP_PORT_ABILITY_MAX; in_cnt++) {
-		if (in_ability[in_cnt].rxtx != rxtx)
+		if (in_ability[in_cnt].dir != dir)
 			continue;
 
 		memcpy(&out_ability[out_cnt], &in_ability[in_cnt],
@@ -301,7 +301,7 @@ port_ability_set_ability(
 	}
 
 	spp_port_ability_change_index(PORT_ABILITY_CHG_INDEX_UPD,
-			port_id, rxtx);
+			port_id, dir);
 }
 
 /* Update port capability. */
@@ -338,13 +338,13 @@ port_ability_func port_ability_function_list[] = {
 static inline int
 port_ability_each_operation(uint16_t port_id,
 		struct rte_mbuf **pkts, const uint16_t nb_pkts,
-		enum spp_port_rxtx rxtx)
+		enum sppwk_port_dir dir)
 {
 	int cnt, buf;
 	int ok_pkts = nb_pkts;
 	struct spp_port_ability *info = NULL;
 
-	spp_port_ability_get_info(port_id, rxtx, &info);
+	spp_port_ability_get_info(port_id, dir, &info);
 	if (unlikely(info[0].ops == SPPWK_PORT_ABL_OPS_NONE))
 		return nb_pkts;
 
diff --git a/src/shared/secondary/spp_worker_th/spp_port.h b/src/shared/secondary/spp_worker_th/spp_port.h
index 274b24b..5cde7d2 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.h
+++ b/src/shared/secondary/spp_worker_th/spp_port.h
@@ -40,7 +40,7 @@ void spp_port_ability_init(void);
  *  Port ability information.
  */
 void spp_port_ability_get_info(
-		int port_id, enum spp_port_rxtx rxtx,
+		int port_id, enum sppwk_port_dir dir,
 		struct spp_port_ability **info);
 
 /**
@@ -55,7 +55,7 @@ void spp_port_ability_get_info(
  */
 void spp_port_ability_change_index(
 		enum port_ability_chg_index_type type,
-		int port_id, enum spp_port_rxtx rxtx);
+		int port_id, enum sppwk_port_dir dir);
 
 /**
  * Update port capability.
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index 51f50a7..89cf12f 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -209,32 +209,32 @@ update_comp(enum sppwk_action wk_action, const char *name,
 
 /* Check if over the maximum num of rx and tx ports of component. */
 static int
-check_vf_port_count(int component_type, enum spp_port_rxtx rxtx, int num_rx,
-								int num_tx)
+check_vf_port_count(int component_type, enum sppwk_port_dir dir,
+		int nof_rx, int nof_tx)
 {
 	RTE_LOG(INFO, VF_CMD_RUNNER, "port count, port_type=%d,"
-				" rx=%d, tx=%d\n", rxtx, num_rx, num_tx);
-	if (rxtx == SPP_PORT_RXTX_RX)
-		num_rx++;
+				" rx=%d, tx=%d\n", dir, nof_rx, nof_tx);
+	if (dir == SPP_PORT_RXTX_RX)
+		nof_rx++;
 	else
-		num_tx++;
+		nof_tx++;
 	/* Add rx or tx port appointed in port_type. */
 	RTE_LOG(INFO, VF_CMD_RUNNER, "Num of ports after count up,"
 				" port_type=%d, rx=%d, tx=%d\n",
-				rxtx, num_rx, num_tx);
+				dir, nof_rx, nof_tx);
 	switch (component_type) {
 	case SPPWK_TYPE_FWD:
-		if (num_rx > 1 || num_tx > 1)
+		if (nof_rx > 1 || nof_tx > 1)
 			return SPP_RET_NG;
 		break;
 
 	case SPPWK_TYPE_MRG:
-		if (num_tx > 1)
+		if (nof_tx > 1)
 			return SPP_RET_NG;
 		break;
 
 	case SPPWK_TYPE_CLS:
-		if (num_rx > 1)
+		if (nof_rx > 1)
 			return SPP_RET_NG;
 		break;
 
@@ -250,7 +250,7 @@ check_vf_port_count(int component_type, enum spp_port_rxtx rxtx, int num_rx,
 static int
 update_port(enum sppwk_action wk_action,
 		const struct sppwk_port_idx *port,
-		enum spp_port_rxtx rxtx,
+		enum sppwk_port_dir dir,
 		const char *name,
 		const struct spp_port_ability *ability)
 {
@@ -276,7 +276,7 @@ update_port(enum sppwk_action wk_action,
 			&comp_info_base, NULL, NULL, &change_component, NULL);
 	comp_info = (comp_info_base + comp_lcore_id);
 	port_info = get_sppwk_port(port->iface_type, port->iface_no);
-	if (rxtx == SPP_PORT_RXTX_RX) {
+	if (dir == SPP_PORT_RXTX_RX) {
 		nof_ports = &comp_info->nof_rx;
 		ports = comp_info->rx_ports;
 	} else {
@@ -287,7 +287,7 @@ update_port(enum sppwk_action wk_action,
 	switch (wk_action) {
 	case SPPWK_ACT_ADD:
 		/* Check if over the maximum num of ports of component. */
-		if (check_vf_port_count(comp_info->wk_type, rxtx,
+		if (check_vf_port_count(comp_info->wk_type, dir,
 				comp_info->nof_rx,
 				comp_info->nof_tx) != SPP_RET_OK)
 			return SPP_RET_NG;
@@ -349,7 +349,7 @@ update_port(enum sppwk_action wk_action,
 					SPPWK_PORT_ABL_OPS_NONE)
 				continue;
 
-			if (port_info->ability[cnt].rxtx == rxtx)
+			if (port_info->ability[cnt].dir == dir)
 				memset(&port_info->ability[cnt], 0x00,
 					sizeof(struct spp_port_ability));
 		}
@@ -408,7 +408,7 @@ exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
 		RTE_LOG(INFO, VF_CMD_RUNNER, "with action `%s`.\n",
 				sppwk_action_str(cmd->spec.port.wk_action));
 		ret = update_port(cmd->spec.port.wk_action,
-				&cmd->spec.port.port, cmd->spec.port.rxtx,
+				&cmd->spec.port.port, cmd->spec.port.dir,
 				cmd->spec.port.name, &cmd->spec.port.ability);
 		if (ret == 0) {
 			RTE_LOG(INFO, VF_CMD_RUNNER, "Exec flush.\n");
-- 
2.17.1



End of spp Digest, Vol 31, Issue 17
***********************************


From yasufum.o@gmail.com Mon Jun 24 17:40:42 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd103.ddreams.local
 (zssg-mailmd103.ddreams.local [10.160.123.98]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DE8HGFNO90@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 17:41:03 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd103.ddreams.local by
 zssg-mailmd103.ddreams.local (dDREAMS) id <0PTL01636HGFWM00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 17:41:03 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd103.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00UV5HGFT460@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 17:41:03 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf105.ddreams.local (Postfix) with ESMTP id 432247E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:41:03 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 4286E8E6064	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:41:03 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 411A58E6052	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 17:41:03 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 3C88F8E6052	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:41:02 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf105.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 17:41:02 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8f2H1008116;	Mon,
 24 Jun 2019 17:41:02 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O8f2Dq008115;	Mon, 24 Jun 2019 17:41:02 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O8f1Hx008112	for unknown; Mon,
 24 Jun 2019 17:41:01 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8f1uD032585 for
 unknown; Mon, 24 Jun 2019 17:41:01 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8f1sK032582; Mon,
 24 Jun 2019 17:41:01 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8f1OM028630;	Mon,
 24 Jun 2019 17:41:01 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O8f1eL028626	for unknown; Mon, 24 Jun 2019 17:41:01 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8f1tZ025089 for
 unknown; Mon, 24 Jun 2019 17:41:01 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8f19W025081 for
 unknown; Mon, 24 Jun 2019 17:41:01 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O8esN0005221	for unknown; Mon,
 24 Jun 2019 17:41:00 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id BDC3D1BF3B;	Mon, 24 Jun 2019 10:40:53 +0200 (CEST)
Received: from mail-pl1-f196.google.com
 (mail-pl1-f196.google.com [209.85.214.196]) by dpdk.org (Postfix)
 with ESMTP id 82AB71BF31 for <spp@dpdk.org>; Mon,
 24 Jun 2019 10:40:52 +0200 (CEST)
Received: by mail-pl1-f196.google.com with SMTP id bi6so6472538plb.12 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 01:40:52 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id 30sm28759534pjk.17.2019.06.24.01.40.50
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 01:40:51 -0700 (PDT)
Date: Mon, 24 Jun 2019 17:40:42 +0900
From: yasufum.o@gmail.com
Subject: [spp 04413] [spp] [PATCH 2/3] shared/sec: rename members of enum
 sppwk_port_dir
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624084043.23718-3-yasufum.o@gmail.com>
In-reply-to: <20190624084043.23718-1-yasufum.o@gmail.com>
References: <20190624084043.23718-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04413
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=H+uvE74snuNmaintbLvXFvMP5b1nJuhdoZOmL4jsmTE=;
 b=E5Dzz+pAW+bVnCqoZXrw4lfkTRDYyPk5Cx9+kvqV88jnUCaRAtkKw8omkXeN3j/nCL
 SWNpRC9SVrshcAar20pPGZ6Pvpi98Vcrkw6EvtYg39y0fWZx5b/OijW3szNCQ2Mce6Pn
 X6UC3wjschaq0ixcLozpkX9TSQHnPqSdjKx9nryzLNUzSz1AC/Ym35UPNoAJJgz89V+1
 syl5dp92MFg8UQ6nJ3o73v0YkCMTovd9UV2RPA9NLiEDaggC7VcBGQ8CFSgSKcdnq8aA
 +yuarHIc+pG2Bl/rI2pY4sKFHjV/EcsFBHxbUYGeKxVf/Ez6o6ow6xozjpCyKP5BAXbl Nrwg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=H+uvE74snuNmaintbLvXFvMP5b1nJuhdoZOmL4jsmTE=;
 b=SvBk0jz41wgfNi6FpNsMv7UlGG9DJEH0MzyWz6YHRSYZ00FQPHp/l34QAgPHajXGYA
 UqGIa2sGNh65rbfTSwOoa0LuE/8CCRAReld3GyZsBRN0PyAh0yFtIFIKX51DImDAABGB
 mYFaWByla5L7pW9brw8ocklIlAo3wcLW8l04kAwn7j87ozdUgEGcG3RNdCbDFq0DJKN7
 Ir8ZKGGfsEhkNWtUB2INzPN9AjKseGrg7IwsOtjZIFWOHmGs7XEUlxlDGt55oqwPoyvI
 lzVxryQA8XjCi5tiDPC41e4xuy+eLX3ZP4Bl+SzzMynR3v2W3Kxqq8FJxszSbzEpZITw qSXA==
X-Gm-Message-State: APjAAAVCUOflSE8nIzdq5FZoxuycSdexdFF9DkdE9T1F5JnXLyn3AB0x
 I8uQG1Z98i5C3YUdLwvWfWGeix7p
X-Google-Smtp-Source:
 APXvYqwFKLktVaGZpX17D1BIILxgM+cWakR7TiYc/QaSlhG49FtBbZjzYPFWO823mJbkEhy2xX1CEg==
X-Received: by 2002:a17:902:549:: with SMTP id
 67mr87076577plf.86.1561365651573; Mon, 24 Jun 2019 01:40:51 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 243
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to rename members of enum `sppwk_port_dir` such as
`SPP_PORT_RXTX_RX` to `SPPWK_PORT_DIR_RX` or so.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/mir_cmd_runner.c                   |  4 ++--
 .../secondary/spp_worker_th/cmd_parser.c      |  4 ++--
 .../spp_worker_th/cmd_res_formatter.c         |  4 ++--
 .../secondary/spp_worker_th/cmd_utils.c       | 12 +++++------
 .../secondary/spp_worker_th/cmd_utils.h       |  8 ++++----
 src/shared/secondary/spp_worker_th/spp_port.c | 20 +++++++++----------
 src/vf/vf_cmd_runner.c                        |  6 +++---
 7 files changed, 29 insertions(+), 29 deletions(-)

diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index eda4d1a..312ded5 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -111,7 +111,7 @@ check_mir_port_count(enum sppwk_port_dir dir, int nof_rx, int nof_tx)
 {
 	RTE_LOG(INFO, MIR_CMD_RUNNER, "port count, port_type=%d,"
 				" rx=%d, tx=%d\n", dir, nof_rx, nof_tx);
-	if (dir == SPP_PORT_RXTX_RX)
+	if (dir == SPPWK_PORT_DIR_RX)
 		nof_rx++;
 	else
 		nof_tx++;
@@ -155,7 +155,7 @@ update_port(enum sppwk_action wk_action,
 			&comp_info_base, NULL, NULL, &change_component, NULL);
 	comp_info = (comp_info_base + comp_lcore_id);
 	port_info = get_sppwk_port(port->iface_type, port->iface_no);
-	if (dir == SPP_PORT_RXTX_RX) {
+	if (dir == SPPWK_PORT_DIR_RX) {
 		nof_ports = &comp_info->nof_rx;
 		ports = comp_info->rx_ports;
 	} else {
diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.c b/src/shared/secondary/spp_worker_th/cmd_parser.c
index c1b311c..10d46d8 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.c
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.c
@@ -462,10 +462,10 @@ parse_port(void *output, const char *arg_val, int allow_override)
 		if ((port->wk_action == SPPWK_ACT_ADD) &&
 				(spp_check_used_port(tmp_port.iface_type,
 						tmp_port.iface_no,
-						SPP_PORT_RXTX_RX) >= 0) &&
+						SPPWK_PORT_DIR_RX) >= 0) &&
 				(spp_check_used_port(tmp_port.iface_type,
 						tmp_port.iface_no,
-						SPP_PORT_RXTX_TX) >= 0)) {
+						SPPWK_PORT_DIR_TX) >= 0)) {
 			RTE_LOG(ERR, WK_CMD_PARSER,
 				"Port `%s` is already used.\n",
 				arg_val);
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index a174890..3c2c3a6 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -345,12 +345,12 @@ append_core_element_value(
 
 	if (unuse_flg) {
 		ret = append_port_array("rx_port", &tmp_buff,
-				num_rx, rx_ports, SPP_PORT_RXTX_RX);
+				num_rx, rx_ports, SPPWK_PORT_DIR_RX);
 		if (unlikely(ret < 0))
 			return ret;
 
 		ret = append_port_array("tx_port", &tmp_buff,
-				num_tx, tx_ports, SPP_PORT_RXTX_TX);
+				num_tx, tx_ports, SPPWK_PORT_DIR_TX);
 		if (unlikely(ret < SPP_RET_OK))
 			return ret;
 	}
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 4f80b2e..d21c23a 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -678,10 +678,10 @@ spp_check_used_port(
 		if (component->wk_type == SPPWK_TYPE_NONE)
 			continue;
 
-		if (dir == SPP_PORT_RXTX_RX) {
+		if (dir == SPPWK_PORT_DIR_RX) {
 			max = component->nof_rx;
 			port_array = component->rx_ports;
-		} else if (dir == SPP_PORT_RXTX_TX) {
+		} else if (dir == SPPWK_PORT_DIR_TX) {
 			max = component->nof_tx;
 			port_array = component->tx_ports;
 		}
@@ -700,16 +700,16 @@ set_component_change_port(struct sppwk_port_info *port,
 		enum sppwk_port_dir dir)
 {
 	int ret = 0;
-	if ((dir == SPP_PORT_RXTX_RX) || (dir == SPP_PORT_RXTX_ALL)) {
+	if ((dir == SPPWK_PORT_DIR_RX) || (dir == SPPWK_PORT_DIR_BOTH)) {
 		ret = spp_check_used_port(port->iface_type, port->iface_no,
-				SPP_PORT_RXTX_RX);
+				SPPWK_PORT_DIR_RX);
 		if (ret >= 0)
 			*(g_mng_data.p_change_component + ret) = 1;
 	}
 
-	if ((dir == SPP_PORT_RXTX_TX) || (dir == SPP_PORT_RXTX_ALL)) {
+	if ((dir == SPPWK_PORT_DIR_TX) || (dir == SPPWK_PORT_DIR_BOTH)) {
 		ret = spp_check_used_port(port->iface_type, port->iface_no,
-				SPP_PORT_RXTX_TX);
+				SPPWK_PORT_DIR_TX);
 		if (ret >= 0)
 			*(g_mng_data.p_change_component + ret) = 1;
 	}
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index e08e4fb..b15b40a 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -97,10 +97,10 @@ enum spp_classifier_type {
 
 /* Direction of RX or TX on a port. */
 enum sppwk_port_dir {
-	SPP_PORT_RXTX_NONE, /**< none */
-	SPP_PORT_RXTX_RX,   /**< rx port */
-	SPP_PORT_RXTX_TX,   /**< tx port */
-	SPP_PORT_RXTX_ALL,  /**< rx/tx port */
+	SPPWK_PORT_DIR_NONE,  /**< None */
+	SPPWK_PORT_DIR_RX,    /**< RX port */
+	SPPWK_PORT_DIR_TX,    /**< TX port */
+	SPPWK_PORT_DIR_BOTH,  /**< Both of RX and TX */
 };
 
 /**
diff --git a/src/shared/secondary/spp_worker_th/spp_port.c b/src/shared/secondary/spp_worker_th/spp_port.c
index 7ac6858..b0a29f7 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.c
+++ b/src/shared/secondary/spp_worker_th/spp_port.c
@@ -66,10 +66,10 @@ spp_port_ability_get_info(
 	struct port_ability_mng_info *mng = NULL;
 
 	switch (dir) {
-	case SPP_PORT_RXTX_RX:
+	case SPPWK_PORT_DIR_RX:
 		mng = &g_port_mng_info[port_id].rx;
 		break;
-	case SPP_PORT_RXTX_TX:
+	case SPPWK_PORT_DIR_TX:
 		mng = &g_port_mng_info[port_id].tx;
 		break;
 	default:
@@ -213,12 +213,12 @@ spp_port_ability_change_index(
 
 	if (type == PORT_ABILITY_CHG_INDEX_UPD) {
 		switch (dir) {
-		case SPP_PORT_RXTX_RX:
+		case SPPWK_PORT_DIR_RX:
 			mng = &g_port_mng_info[port_id].rx;
 			mng->upd_index = mng->ref_index;
 			rx_list[num_rx++] = port_id;
 			break;
-		case SPP_PORT_RXTX_TX:
+		case SPPWK_PORT_DIR_TX:
 			mng = &g_port_mng_info[port_id].tx;
 			mng->upd_index = mng->ref_index;
 			tx_list[num_tx++] = port_id;
@@ -264,10 +264,10 @@ port_ability_set_ability(
 	port_mng->iface_no   = port->iface_no;
 
 	switch (dir) {
-	case SPP_PORT_RXTX_RX:
+	case SPPWK_PORT_DIR_RX:
 		mng = &port_mng->rx;
 		break;
-	case SPP_PORT_RXTX_TX:
+	case SPPWK_PORT_DIR_TX:
 		mng = &port_mng->tx;
 		break;
 	default:
@@ -312,12 +312,12 @@ spp_port_ability_update(const struct sppwk_comp_info *component)
 	struct sppwk_port_info *port = NULL;
 	for (cnt = 0; cnt < component->nof_rx; cnt++) {
 		port = component->rx_ports[cnt];
-		port_ability_set_ability(port, SPP_PORT_RXTX_RX);
+		port_ability_set_ability(port, SPPWK_PORT_DIR_RX);
 	}
 
 	for (cnt = 0; cnt < component->nof_tx; cnt++) {
 		port = component->tx_ports[cnt];
-		port_ability_set_ability(port, SPP_PORT_RXTX_TX);
+		port_ability_set_ability(port, SPPWK_PORT_DIR_TX);
 	}
 }
 
@@ -384,7 +384,7 @@ spp_eth_rx_burst(
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 
 	return port_ability_each_operation(port_id, rx_pkts, nb_rx,
-			SPP_PORT_RXTX_RX);
+			SPPWK_PORT_DIR_RX);
 }
 
 /* Wrapper function for rte_eth_tx_burst(). */
@@ -395,7 +395,7 @@ spp_eth_tx_burst(
 {
 	uint16_t nb_tx = 0;
 	nb_tx = port_ability_each_operation(port_id, tx_pkts, nb_pkts,
-			SPP_PORT_RXTX_TX);
+			SPPWK_PORT_DIR_TX);
 	if (unlikely(nb_tx == 0))
 		return SPP_RET_OK;
 
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index 89cf12f..4a78ab2 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -107,7 +107,7 @@ update_cls_table(enum sppwk_action wk_action,
 		strcpy(port_info->cls_attrs.mac_addr_str, mac_str);
 	}
 
-	set_component_change_port(port_info, SPP_PORT_RXTX_TX);
+	set_component_change_port(port_info, SPPWK_PORT_DIR_TX);
 	return SPP_RET_OK;
 }
 
@@ -214,7 +214,7 @@ check_vf_port_count(int component_type, enum sppwk_port_dir dir,
 {
 	RTE_LOG(INFO, VF_CMD_RUNNER, "port count, port_type=%d,"
 				" rx=%d, tx=%d\n", dir, nof_rx, nof_tx);
-	if (dir == SPP_PORT_RXTX_RX)
+	if (dir == SPPWK_PORT_DIR_RX)
 		nof_rx++;
 	else
 		nof_tx++;
@@ -276,7 +276,7 @@ update_port(enum sppwk_action wk_action,
 			&comp_info_base, NULL, NULL, &change_component, NULL);
 	comp_info = (comp_info_base + comp_lcore_id);
 	port_info = get_sppwk_port(port->iface_type, port->iface_no);
-	if (dir == SPP_PORT_RXTX_RX) {
+	if (dir == SPPWK_PORT_DIR_RX) {
 		nof_ports = &comp_info->nof_rx;
 		ports = comp_info->rx_ports;
 	} else {
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 17:40:43 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd103.ddreams.local
 (zssg-mailmd103.ddreams.local [10.160.123.98]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DEOHGGNO90@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 17:41:04 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd103.ddreams.local by
 zssg-mailmd103.ddreams.local (dDREAMS) id <0PTL0170OHGG8B00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 17:41:04 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd103.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00UVDHGFT460@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 17:41:04 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf101.ddreams.local (Postfix) with ESMTP id C04617E603D	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:41:04 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id BEB488E605C	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:41:04 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id BD30D8E6054	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 17:41:04 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 667318E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:41:04 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf101.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 17:41:04 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8f48L008123;	Mon,
 24 Jun 2019 17:41:04 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O8f4CN008122;	Mon, 24 Jun 2019 17:41:04 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O8f4AQ008119	for unknown; Mon,
 24 Jun 2019 17:41:04 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8f3t3032618 for
 unknown; Mon, 24 Jun 2019 17:41:03 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8f3pF032613; Mon,
 24 Jun 2019 17:41:03 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8f3bH028651;	Mon,
 24 Jun 2019 17:41:03 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O8f3ak028647	for unknown; Mon, 24 Jun 2019 17:41:03 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8f3EP025135 for
 unknown; Mon, 24 Jun 2019 17:41:03 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8f3V0025128 for
 unknown; Mon, 24 Jun 2019 17:41:03 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O8euU1005237	for unknown; Mon,
 24 Jun 2019 17:41:02 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id D100A1BF3D;	Mon, 24 Jun 2019 10:40:55 +0200 (CEST)
Received: from mail-pl1-f196.google.com
 (mail-pl1-f196.google.com [209.85.214.196]) by dpdk.org (Postfix)
 with ESMTP id EA0BF1BF3C for <spp@dpdk.org>; Mon,
 24 Jun 2019 10:40:53 +0200 (CEST)
Received: by mail-pl1-f196.google.com with SMTP id bi6so6472569plb.12 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 01:40:53 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id 30sm28759534pjk.17.2019.06.24.01.40.51
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 01:40:52 -0700 (PDT)
Date: Mon, 24 Jun 2019 17:40:43 +0900
From: yasufum.o@gmail.com
Subject: [spp 04414] [spp] [PATCH 3/3] spp_pcap: revise enum spp_port_rxtx
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624084043.23718-4-yasufum.o@gmail.com>
In-reply-to: <20190624084043.23718-1-yasufum.o@gmail.com>
References: <20190624084043.23718-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04414
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=iVV2oib/h+WQEDKywP6TXQs8AhFaDH7Y6moZ12STyj4=;
 b=vNlVCHT+onHPqf8hl9ppjD91ozjzj5bba13Ex8wIU7oDka0WyBC3JBL4Xdxb0MDksk
 rvDXKHK69TAssBgkjHvOdt9jjTFTtcV/PZbmY/aYM4FGVj9thLG9d/0/BkXRsWK0hBRU
 PwhGnht6UOfKVQSu1f3OYr/pIibADW/kxFohiJXOmtfrrdnbvq5d7RJyfrDzhaBG/9NL
 m13nBDXXplom6uisBhyj4/CvWcb+NJ34evgitkmFRQVaC8StX29aebZ/Lh6Wpp6kh31C
 0KZ3rKcG2ube5DUvglzyVh8z5dbqj+nJQpAYsJudnDNu21lDwOqzrcePF9eZNQ4TVol1 jytw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=iVV2oib/h+WQEDKywP6TXQs8AhFaDH7Y6moZ12STyj4=;
 b=D8iPnU6dq3RWzwueAYTCSrf+sdpLsU8d1sLV9gia+/OFp11NCGkc5X8ejE1JqslXLi
 s8ic45QUOyGq/6pU6HmkRfkJVhFYageWkWF6AujK8gSZ8Jr7OMkVohQyynvvGB0o1gHf
 5yx49c1bRWCv+Kw7VVK0lVfKcIiGzZjNqcBl5aJqaAMxg4AXdLu/wYCXsfd3Eyc0EOEg
 Te6w3jtvXR6XYXa2wiFzhyarabCpgG6wLhr/rqoAjAql1deL6Ypxtsz/pf8XQsrtZIdx
 yEdRdLmovb8meHfi2kIzXuQf8c5U0flxjtxIADjRshqCRMaxd3Lcs6Z8oa51QS0kt2rc WBwA==
X-Gm-Message-State: APjAAAUQlBGSF6+XRkPcyfxefcV8lNyghw/a0iVu7MmfH7cD3y3g6SO7
 850QepJtF3C5Qj8Hq8zjb1fKAzca
X-Google-Smtp-Source:
 APXvYqyg2dTSK1GGvLMAfuRHhfMqcUH+jsegRDPDtVevoIzornarwojR6bbdL4mPgmMXCQR+P/OH+w==
X-Received: by 2002:a17:902:8f81:: with SMTP id
 z1mr79037475plo.290.1561365653139; Mon, 24 Jun 2019 01:40:53 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 93
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to revise the name of enum `spp_port_rxtx` to
`sppwk_port_dir` because it is used to specify which of direction
packets are forwarded on a port. Term `rxtx` is used for a set of RX and
TX, so it should not be used for specifying the direction. This update
is also rename members of the enum, and a member of structs using this
enum from `rxtx` to `dir`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/pcap/cmd_runner.c |  8 ++++----
 src/pcap/cmd_utils.h  | 17 +++++++----------
 2 files changed, 11 insertions(+), 14 deletions(-)

diff --git a/src/pcap/cmd_runner.c b/src/pcap/cmd_runner.c
index 4a74af2..7f17d40 100644
--- a/src/pcap/cmd_runner.c
+++ b/src/pcap/cmd_runner.c
@@ -399,7 +399,7 @@ append_client_id_value(const char *name, char **output,
 /* append a block of port entry for JSON format */
 static int
 append_port_entry(char **output, const struct sppwk_port_idx *port,
-		const enum spp_port_rxtx rxtx __attribute__ ((unused)))
+		const enum sppwk_port_dir dir __attribute__ ((unused)))
 {
 	int ret = SPPWK_RET_NG;
 	char port_str[CMD_TAG_APPEND_SIZE];
@@ -424,7 +424,7 @@ append_port_entry(char **output, const struct sppwk_port_idx *port,
 static int
 append_port_array(const char *name, char **output, const int num,
 		const struct sppwk_port_idx *ports,
-		const enum spp_port_rxtx rxtx)
+		const enum sppwk_port_dir dir)
 {
 	int ret = SPPWK_RET_NG;
 	int i = 0;
@@ -437,7 +437,7 @@ append_port_array(const char *name, char **output, const int num,
 	}
 
 	for (i = 0; i < num; i++) {
-		ret = append_port_entry(&tmp_buff, &ports[i], rxtx);
+		ret = append_port_entry(&tmp_buff, &ports[i], dir);
 		if (unlikely(ret < SPPWK_RET_OK))
 			return SPPWK_RET_NG;
 	}
@@ -493,7 +493,7 @@ append_pcap_core_element_value(
 
 	if (num_rx != 0)
 		ret = append_port_array("rx_port", &tmp_buff,
-				num_rx, rx_ports, SPP_PORT_RXTX_RX);
+				num_rx, rx_ports, SPPWK_PORT_DIR_RX);
 	else
 		ret = append_json_str_value("filename", &tmp_buff, name);
 	if (unlikely(ret < 0))
diff --git a/src/pcap/cmd_utils.h b/src/pcap/cmd_utils.h
index 5528e00..d38e0eb 100644
--- a/src/pcap/cmd_utils.h
+++ b/src/pcap/cmd_utils.h
@@ -59,15 +59,12 @@ enum sppwk_return_val {
 	SPPWK_RET_NG = -1, /**< failed */
 };
 
-/**
- * Port type (rx or tx) to indicate which direction packet goes
- * (e.g. receiving or transmitting)
- */
-enum spp_port_rxtx {
-	SPP_PORT_RXTX_NONE, /**< none */
-	SPP_PORT_RXTX_RX,   /**< rx port */
-	SPP_PORT_RXTX_TX,   /**< tx port */
-	SPP_PORT_RXTX_ALL,  /**< rx/tx port */
+/* Direction of RX or TX on a port. */
+enum sppwk_port_dir {
+	SPPWK_PORT_DIR_NONE,  /**< None */
+	SPPWK_PORT_DIR_RX,    /**< RX port */
+	SPPWK_PORT_DIR_TX,    /**< TX port */
+	SPPWK_PORT_DIR_BOTH,  /**< Both of RX and TX */
 };
 
 /* TODO(yasufum) merge it to the same definition in shared/.../cmd_utils.h */
@@ -122,7 +119,7 @@ union spp_ability_data {
 /** Port ability information */
 struct spp_port_ability {
 	enum spp_port_ability_ope ope; /**< Operation */
-	enum spp_port_rxtx rxtx;       /**< rx/tx identifier */
+	enum sppwk_port_dir dir;  /**< Direction of RX, TX or both */
 	union spp_ability_data data;   /**< Port ability data */
 };
 
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 17:55:20 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd103.ddreams.local
 (zssg-mailmd103.ddreams.local [10.160.123.98]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DTCI4ONOD0@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 17:55:36 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd103.ddreams.local by
 zssg-mailmd103.ddreams.local (dDREAMS) id <0PTL00C26I4OWR00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 17:55:36 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd103.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00AO5I4O3310@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 17:55:36 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf106.ddreams.local (Postfix) with ESMTP id AE6A87E603A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:55:36 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id ACC508E605F	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:55:36 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id ABB808E6055	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 17:55:36 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id AF5028E6042	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:55:35 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf106.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 17:55:35 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8tZYq012349;	Mon,
 24 Jun 2019 17:55:35 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O8tZG3012348;	Mon, 24 Jun 2019 17:55:35 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O8tZ6Q012345	for unknown; Mon,
 24 Jun 2019 17:55:35 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8tYd7006764 for
 unknown; Mon, 24 Jun 2019 17:55:35 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8tYnQ006760; Mon,
 24 Jun 2019 17:55:34 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8tYeI030528;	Mon,
 24 Jun 2019 17:55:34 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O8tYSP030524	for unknown; Mon, 24 Jun 2019 17:55:34 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8tYJR029435 for
 unknown; Mon, 24 Jun 2019 17:55:34 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8tYW6029429 for
 unknown; Mon, 24 Jun 2019 17:55:34 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O8tRi7007618	for unknown; Mon,
 24 Jun 2019 17:55:33 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id DADAB1BF26;	Mon, 24 Jun 2019 10:55:26 +0200 (CEST)
Received: from mail-pf1-f196.google.com
 (mail-pf1-f196.google.com [209.85.210.196]) by dpdk.org (Postfix)
 with ESMTP id 847F51BF24 for <spp@dpdk.org>; Mon,
 24 Jun 2019 10:55:25 +0200 (CEST)
Received: by mail-pf1-f196.google.com with SMTP id i189so7106911pfg.10 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 01:55:25 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id 5sm10115646pfh.109.2019.06.24.01.55.23
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 01:55:24 -0700 (PDT)
Date: Mon, 24 Jun 2019 17:55:20 +0900
From: yasufum.o@gmail.com
Subject: [spp 04415] [spp] [PATCH] shared/sec: rename enum spp_secondary
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624085520.23929-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04415
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=voou+l+4NK9iFXm8iMFDQMJX+cm6jwH6oC56R5IflDA=;
 b=Bks8skNgIGe7vLI+ffIyiUuKr6YUbZ8lW9QZDJRq0BHVSOn5xAk+51pDHClD0beCgI
 ktNwD0+gduMW3k6kbbUYke43H1JFNofLCs4L9JHkULD0YS1TCeICyFRaHXijvX4ONVOR
 ziu/KLgsXx+/fIYBdU5cKl/0rjskzQ3elwk3hb395j0Ekbn16FoXgoCU6y7mGYU3veTN
 wbeJHwpHKGu/eI08QOovfh4vW9joH3v2U7LwbQej7FGlrfwctL4Ai7+EVxhr3RbjtvwJ
 BmSJizJlbwTJb8J7Vo1+r+vv3TwJFUKhYKGFLnZ07vJmZHFR+npyG6k9H07EAUbT3xo1 pWcA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=voou+l+4NK9iFXm8iMFDQMJX+cm6jwH6oC56R5IflDA=;
 b=Tqxh2shIpVxOJe0B7Z3AGRI9ytA+QOxUJr0UP4zEIrq+apCPw1MheO5w6h5PV9b2Ik
 5TcSQ2xqPZ1UgbnirmY/COgbY2sNmZTB6pMwUtxLrdW1+FaYnNCDgTOjGxvGYastC/wC
 1swWHns/ZjEV6uz/fKlj4fvRfv5VIKWnHreAZ1wFOa6+EVhywhw8wqGyw8PODxDJhaDt
 tdpDDcBJJUGSJw0vPjhZcizZLUSFWR/ryat009ciV6+o0oKF6bnN+wgfO0KJPziEXf1B
 1KZ+EjQTKY+S+5MnCofxRJQDvLCZt6fU7Pl6FR0+vsD27dWfh1ssY3Y5mXDhuC9wcN7k EMiQ==
X-Gm-Message-State: APjAAAWGRJyjGF8WZ52VtChgPHIUFb+HFu0zSiNpl6iS9otI7bPYG7Hz
 JQbtLYciEA68z76K6yfelLMroMW8
X-Google-Smtp-Source:
 APXvYqzuyDTuB/9zSnwtF2jKJ/aDcKPQW+rluYgXZZubhjftUHjdz5Jur7Z/oIo5gnfl6zIkI6mGGA==
X-Received: by 2002:a65:5a42:: with SMTP id z2mr32580148pgs.421.1561366524592;
 Mon, 24 Jun 2019 01:55:24 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 106
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to rename enum `spp_secondary` to `sppwk_proc_type` and
its members start with `SECONDARY_` to `WK_PROC_`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/spp_mirror.c                              |  4 ++--
 .../secondary/spp_worker_th/cmd_res_formatter.c      |  4 ++--
 src/shared/secondary/spp_worker_th/cmd_utils.h       | 12 ++++++------
 src/vf/spp_vf.c                                      |  4 ++--
 4 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index 2cae48a..cb76005 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -216,12 +216,12 @@ parse_app_args(int argc, char *argv[])
 		usage(progname);
 		return SPP_RET_NG;
 	}
-	g_startup_param.secondary_type = SECONDARY_TYPE_MIRROR;
+	g_startup_param.wk_proc_type = WK_PROC_TYPE_MIRROR;
 	RTE_LOG(INFO, MIRROR,
 			"app opts (client_id=%d,type=%d,"
 			"server=%s:%d,vhost_client=%d,)\n",
 			g_startup_param.client_id,
-			g_startup_param.secondary_type,
+			g_startup_param.wk_proc_type,
 			g_startup_param.server_ip,
 			g_startup_param.server_port,
 			g_startup_param.vhost_client);
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index 3c2c3a6..f51157a 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -25,7 +25,7 @@ static int append_error_details_value(const char *name, char **output,
  * List of worker process type. The order of items should be same as the order
  * of enum `secondary_type` in cmd_utils.h.
  */
-/* TODO(yasufum) rename `secondary_type` to `sppwk_proc_type`. */
+/* TODO(yasufum) Add "pcap" after spp_pcap is made to use shared. */
 const char *SPPWK_PROC_TYPE_LIST[] = {
 	"none",
 	"vf",
@@ -128,7 +128,7 @@ get_wk_type(void)
 {
 	struct startup_param *params;
 	sppwk_get_mng_data(&params, NULL, NULL, NULL, NULL, NULL, NULL);
-	return params->secondary_type;
+	return params->wk_proc_type;
 }
 
 /* append a secondary process type for JSON format */
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index b15b40a..4582a82 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -130,11 +130,11 @@ enum copy_mng_flg {
 };
 
 /* secondary process type used only from spp_vf and spp_mirror */
-/* TODO(yasufum) rename `secondary_type` to `sppwk_proc_type`. */
-enum secondary_type {
-	SECONDARY_TYPE_NONE,
-	SECONDARY_TYPE_VF,
-	SECONDARY_TYPE_MIRROR,
+/* TODO(yasufum) Add WK_PROC_TYPE_PCAP. */
+enum sppwk_proc_type {
+	WK_PROC_TYPE_NONE,
+	WK_PROC_TYPE_VF,
+	WK_PROC_TYPE_MIRROR,
 };
 
 /** VLAN tag information */
@@ -200,7 +200,7 @@ struct startup_param {
 	char server_ip[INET_ADDRSTRLEN];  /* IP address of spp-ctl */
 	int server_port;   /* Port Number of spp-ctl */
 	int vhost_client;  /* Flag for --vhost-client option */
-	enum secondary_type secondary_type;
+	enum sppwk_proc_type wk_proc_type;
 };
 
 /* Manage number of interfaces  and port information as global variable. */
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index 7ba894e..5bed735 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -172,12 +172,12 @@ parse_app_args(int argc, char *argv[])
 		usage(progname);
 		return SPP_RET_NG;
 	}
-	g_startup_param.secondary_type = SECONDARY_TYPE_VF;
+	g_startup_param.wk_proc_type = WK_PROC_TYPE_VF;
 	RTE_LOG(INFO, APP,
 			"app opts (client_id=%d,type=%d,server=%s:%d,"
 			"vhost_client=%d)\n",
 			g_startup_param.client_id,
-			g_startup_param.secondary_type,
+			g_startup_param.wk_proc_type,
 			g_startup_param.server_ip,
 			g_startup_param.server_port,
 			g_startup_param.vhost_client);
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 17:55:30 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DV7I4XNOD0@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 17:55:45 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTL0062WI4XD600@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 17:55:45 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00U0OI4X65E0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 17:55:45 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id DB7897E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:55:45 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id DA70C8E6042	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:55:45 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id CFCDB8E6050	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 17:55:45 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 727588E6042	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:55:45 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 17:55:45 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8tjl8012450;	Mon,
 24 Jun 2019 17:55:45 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O8tjBd012449;	Mon, 24 Jun 2019 17:55:45 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O8tj5i012445	for unknown; Mon,
 24 Jun 2019 17:55:45 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8tiYX006843 for
 unknown; Mon, 24 Jun 2019 17:55:44 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8tiom006839; Mon,
 24 Jun 2019 17:55:44 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8tifm030566;	Mon,
 24 Jun 2019 17:55:44 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O8tiEt030562	for unknown; Mon, 24 Jun 2019 17:55:44 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8tilI029480 for
 unknown; Mon, 24 Jun 2019 17:55:44 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8tiiS029473 for
 unknown; Mon, 24 Jun 2019 17:55:44 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O8tbmo007652	for unknown; Mon,
 24 Jun 2019 17:55:43 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id EF8C01BF26;	Mon, 24 Jun 2019 10:55:36 +0200 (CEST)
Received: from mail-pg1-f196.google.com
 (mail-pg1-f196.google.com [209.85.215.196]) by dpdk.org (Postfix)
 with ESMTP id 36C7A1BF1D for <spp@dpdk.org>; Mon,
 24 Jun 2019 10:55:35 +0200 (CEST)
Received: by mail-pg1-f196.google.com with SMTP id m4so6143185pgk.0 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 01:55:35 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id i14sm15243765pfk.0.2019.06.24.01.55.33
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 01:55:33 -0700 (PDT)
Date: Mon, 24 Jun 2019 17:55:30 +0900
From: yasufum.o@gmail.com
Subject: [spp 04416] [spp] [PATCH] shared/sec: rename define SPP_INFO_AREA_MAX
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624085530.23982-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04416
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=Xb8h7g274gpfT/QoAbn1wuH72D6QNxiziSkay1VJH3g=;
 b=rf9+LrY9tlZkzvtU9KhHTpNEYa6OnbhyRtCDQKAeevyOhB4GL+fOi26j/kW1EkCNKO
 ernhFi+O7KGeUWz0cH7uhRwcKvXByN9Z/MzcqL9DxftxJOwBpX5Uko8GRSpHCMVvfr6h
 RbN9MLq9u9GqK/GSywMBegtHpYYJktVpfBesCJdZ10jufHIpgYz7BP63O0/SLJ8G5wta
 pWAaTOQMs60Z6ghwdRAHmliHTyqgURhFHxP2ybbqs9TTAgwGgQNsfvxW3E2B9nrapHdg
 PEy5H0mUpXT0Pi1kSKNLV8GgexdsWnuMmKve0PuYs60vdSagR0xSh5WGS8n4p7BWV5XP HdBQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=Xb8h7g274gpfT/QoAbn1wuH72D6QNxiziSkay1VJH3g=;
 b=OuuKHqwZeD++93MGr+Whu/gYbVktyKmSiim3iL4ZfM5bhiPrezOwnug30eL0mvGXtG
 QYET4C8N0i0Gfdnh4PapBjIPnAY3ZB3MYZOyUQAKTYPfrW4Y4TarqOWV+j95i9cTctv3
 s2G8yFdJt5gm2slYmwJNnUJubgXcJ9yBusybTPuGN15r6tBVElIaQrQQ7V8oBtdmRISI
 Md+/zzKScawgGA5S1+HhI3yYCXPZ1jNUAxzIFGiUIhwzty0iOA1I9anVw7MGscbhWy6t
 +Bnw7bIuP+PM94FnNyCC6TNbvS/5B3LavllUl26StILk0RyZ++ROcEsNejX2MejnQHc5 TEpA==
X-Gm-Message-State: APjAAAVcpMdELraJspkzECV44DudsVYp28S0q5UUReFH6TQyCU63j648
 UYOOHqukvESDAB4++30odAeIcku4
X-Google-Smtp-Source:
 APXvYqyUILVJuWqTNpFaeUdvEsDSc2DCC3FiYuY7hNwaMPAL7e1jwi5sVYkFjajxAxy+bp4LU/j50Q==
X-Received: by 2002:a17:90a:3544:: with SMTP id
 q62mr23672677pjb.53.1561366534304; Mon, 24 Jun 2019 01:55:34 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 144
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Spp_vf or other worker processes has two configuration data for
two-phase updating as described in SPP's documentation. For the purpose,
the number of config data is defined as SPP_INFO_AREA_MAX, but the name
is not appropriate. This update is to rename it to TWO_SIDES simply.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/spp_mirror.c                        | 7 +++----
 src/shared/secondary/spp_worker_th/cmd_utils.h | 5 +++--
 src/shared/secondary/spp_worker_th/spp_port.c  | 7 +++----
 src/vf/forwarder.c                             | 8 ++++----
 src/vf/spp_vf.c                                | 3 +--
 5 files changed, 14 insertions(+), 16 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index cb76005..892a3a8 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -48,7 +48,7 @@ struct mirror_path {
 struct mirror_info {
 	volatile int ref_index; /* index to reference area */
 	volatile int upd_index; /* index to update area    */
-	struct mirror_path path[SPP_INFO_AREA_MAX];
+	struct mirror_path path[TWO_SIDES];
 				/* Information of data path */
 };
 
@@ -339,7 +339,7 @@ change_mirror_index(int id)
 	if (info->ref_index == info->upd_index) {
 	/* Change reference index of port ability. */
 		spp_port_ability_change_index(PORT_ABILITY_CHG_INDEX_REF, 0, 0);
-		info->ref_index = (info->upd_index+1)%SPP_INFO_AREA_MAX;
+		info->ref_index = (info->upd_index+1) % TWO_SIDES;
 	}
 }
 
@@ -479,8 +479,7 @@ slave_main(void *arg __attribute__ ((unused)))
 
 		if (spp_check_core_update(lcore_id) == SPP_RET_OK) {
 			/* Setting with the flush command trigger. */
-			info->ref_index = (info->upd_index+1) %
-					SPP_INFO_AREA_MAX;
+			info->ref_index = (info->upd_index+1) % TWO_SIDES;
 			core = get_core_info(lcore_id);
 		}
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 4582a82..d90aff5 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -34,7 +34,8 @@
 /** Update wait timer (micro sec) */
 #define SPP_CHANGE_UPDATE_INTERVAL 10
 
-#define SPP_INFO_AREA_MAX 2  /* The max number of buffer for management */
+/* Used for index of arrary of management data which has two sides. */
+#define TWO_SIDES 2
 
 #define STR_LEN_SHORT 32  /* Size of short string. */
 #define STR_LEN_NAME 128  /* Size of string for names. */
@@ -224,7 +225,7 @@ struct core_mng_info {
 	volatile enum sppwk_lcore_status status;
 	volatile int ref_index;  /* index for reference */
 	volatile int upd_index;  /* index for update */
-	struct core_info core[SPP_INFO_AREA_MAX];  /* info of each core */
+	struct core_info core[TWO_SIDES];  /* info of each core */
 };
 
 /* Manage data used for backup. */
diff --git a/src/shared/secondary/spp_worker_th/spp_port.c b/src/shared/secondary/spp_worker_th/spp_port.c
index b0a29f7..9f7ac5a 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.c
+++ b/src/shared/secondary/spp_worker_th/spp_port.c
@@ -16,8 +16,7 @@
 struct port_ability_mng_info {
 	volatile int ref_index; /* Index to reference area */
 	volatile int upd_index; /* Index to update area    */
-	struct spp_port_ability ability[SPP_INFO_AREA_MAX]
-				[SPP_PORT_ABILITY_MAX];
+	struct spp_port_ability ability[TWO_SIDES][SPP_PORT_ABILITY_MAX];
 				/* Port ability information */
 };
 
@@ -232,12 +231,12 @@ spp_port_ability_change_index(
 
 	for (cnt = 0; cnt < num_rx; cnt++) {
 		mng = &g_port_mng_info[rx_list[cnt]].rx;
-		mng->ref_index = (mng->upd_index+1)%SPP_INFO_AREA_MAX;
+		mng->ref_index = (mng->upd_index+1) % TWO_SIDES;
 		rx_list[cnt] = 0;
 	}
 	for (cnt = 0; cnt < num_tx; cnt++) {
 		mng = &g_port_mng_info[tx_list[cnt]].tx;
-		mng->ref_index = (mng->upd_index+1)%SPP_INFO_AREA_MAX;
+		mng->ref_index = (mng->upd_index+1) % TWO_SIDES;
 		tx_list[cnt] = 0;
 	}
 
diff --git a/src/vf/forwarder.c b/src/vf/forwarder.c
index 4d99bfb..e5cc963 100644
--- a/src/vf/forwarder.c
+++ b/src/vf/forwarder.c
@@ -31,7 +31,7 @@ struct forward_path {
 struct forward_info {
 	volatile int ref_index; /* index to reference area */
 	volatile int upd_index; /* index to update area    */
-	struct forward_path path[SPP_INFO_AREA_MAX];
+	struct forward_path path[TWO_SIDES];
 				/* Information of data path */
 };
 
@@ -169,10 +169,10 @@ change_forward_index(int id)
 	struct forward_info *info = &g_forward_info[id];
 	if (info->ref_index == info->upd_index) {
 		/* Change reference index of port ability. */
-		spp_port_ability_change_index(PORT_ABILITY_CHG_INDEX_REF,
-									0, 0);
+		spp_port_ability_change_index(
+				PORT_ABILITY_CHG_INDEX_REF, 0, 0);
 
-		info->ref_index = (info->upd_index+1)%SPP_INFO_AREA_MAX;
+		info->ref_index = (info->upd_index+1) % TWO_SIDES;
 	}
 }
 /**
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index 5bed735..bc8db5c 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -205,8 +205,7 @@ slave_main(void *arg __attribute__ ((unused)))
 
 		if (spp_check_core_update(lcore_id) == SPP_RET_OK) {
 			/* Setting with the flush command trigger. */
-			info->ref_index = (info->upd_index+1) %
-					SPP_INFO_AREA_MAX;
+			info->ref_index = (info->upd_index+1) % TWO_SIDES;
 			core = get_core_info(lcore_id);
 		}
 
-- 
2.17.1



From spp-request@dpdk.org Mon Jun 24 17:55:36 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd103.ddreams.local
 (zssg-mailmd103.ddreams.local [10.160.123.98]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DV9I4XNOD0@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 17:55:45 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd103.ddreams.local by
 zssg-mailmd103.ddreams.local (dDREAMS) id <0PTL00C3KI4XWR00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 17:55:45 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd103.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00AS0I4X3310@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 17:55:45 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id DDB887E603A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:55:45 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id DCB578E6042	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:55:45 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id DB5F98E6050	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 17:55:45 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 8C9598E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 17:55:45 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 17:55:45 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8tjsf012455;	Mon,
 24 Jun 2019 17:55:45 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O8tj8C012453;	Mon, 24 Jun 2019 17:55:45 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O8tjDU012448	for unknown; Mon,
 24 Jun 2019 17:55:45 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8tjf1029498 for
 unknown; Mon, 24 Jun 2019 17:55:45 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O8tjQg029495 for
 unknown; Mon, 24 Jun 2019 17:55:45 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O8tchW007654	for unknown; Mon,
 24 Jun 2019 17:55:44 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 059081BF31	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 24 Jun 2019 10:55:38 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 18
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 24 Jun 2019 10:55:36 +0200
Message-id: <mailman.23404.1561366536.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH 2/3] shared/sec: rename members of enum sppwk_port_dir
      (yasufum.o@gmail.com)
   2. [PATCH 3/3] spp_pcap: revise enum spp_port_rxtx
      (yasufum.o@gmail.com)
   3. [PATCH] shared/sec: rename enum spp_secondary
      (yasufum.o@gmail.com)
   4. [PATCH] shared/sec: rename define SPP_INFO_AREA_MAX
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon, 24 Jun 2019 17:40:42 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 2/3] shared/sec: rename members of enum
	sppwk_port_dir
Message-ID: <20190624084043.23718-3-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to rename members of enum `sppwk_port_dir` such as
`SPP_PORT_RXTX_RX` to `SPPWK_PORT_DIR_RX` or so.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/mir_cmd_runner.c                   |  4 ++--
 .../secondary/spp_worker_th/cmd_parser.c      |  4 ++--
 .../spp_worker_th/cmd_res_formatter.c         |  4 ++--
 .../secondary/spp_worker_th/cmd_utils.c       | 12 +++++------
 .../secondary/spp_worker_th/cmd_utils.h       |  8 ++++----
 src/shared/secondary/spp_worker_th/spp_port.c | 20 +++++++++----------
 src/vf/vf_cmd_runner.c                        |  6 +++---
 7 files changed, 29 insertions(+), 29 deletions(-)

diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index eda4d1a..312ded5 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -111,7 +111,7 @@ check_mir_port_count(enum sppwk_port_dir dir, int nof_rx, int nof_tx)
 {
 	RTE_LOG(INFO, MIR_CMD_RUNNER, "port count, port_type=%d,"
 				" rx=%d, tx=%d\n", dir, nof_rx, nof_tx);
-	if (dir == SPP_PORT_RXTX_RX)
+	if (dir == SPPWK_PORT_DIR_RX)
 		nof_rx++;
 	else
 		nof_tx++;
@@ -155,7 +155,7 @@ update_port(enum sppwk_action wk_action,
 			&comp_info_base, NULL, NULL, &change_component, NULL);
 	comp_info = (comp_info_base + comp_lcore_id);
 	port_info = get_sppwk_port(port->iface_type, port->iface_no);
-	if (dir == SPP_PORT_RXTX_RX) {
+	if (dir == SPPWK_PORT_DIR_RX) {
 		nof_ports = &comp_info->nof_rx;
 		ports = comp_info->rx_ports;
 	} else {
diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.c b/src/shared/secondary/spp_worker_th/cmd_parser.c
index c1b311c..10d46d8 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.c
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.c
@@ -462,10 +462,10 @@ parse_port(void *output, const char *arg_val, int allow_override)
 		if ((port->wk_action == SPPWK_ACT_ADD) &&
 				(spp_check_used_port(tmp_port.iface_type,
 						tmp_port.iface_no,
-						SPP_PORT_RXTX_RX) >= 0) &&
+						SPPWK_PORT_DIR_RX) >= 0) &&
 				(spp_check_used_port(tmp_port.iface_type,
 						tmp_port.iface_no,
-						SPP_PORT_RXTX_TX) >= 0)) {
+						SPPWK_PORT_DIR_TX) >= 0)) {
 			RTE_LOG(ERR, WK_CMD_PARSER,
 				"Port `%s` is already used.\n",
 				arg_val);
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index a174890..3c2c3a6 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -345,12 +345,12 @@ append_core_element_value(
 
 	if (unuse_flg) {
 		ret = append_port_array("rx_port", &tmp_buff,
-				num_rx, rx_ports, SPP_PORT_RXTX_RX);
+				num_rx, rx_ports, SPPWK_PORT_DIR_RX);
 		if (unlikely(ret < 0))
 			return ret;
 
 		ret = append_port_array("tx_port", &tmp_buff,
-				num_tx, tx_ports, SPP_PORT_RXTX_TX);
+				num_tx, tx_ports, SPPWK_PORT_DIR_TX);
 		if (unlikely(ret < SPP_RET_OK))
 			return ret;
 	}
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 4f80b2e..d21c23a 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -678,10 +678,10 @@ spp_check_used_port(
 		if (component->wk_type == SPPWK_TYPE_NONE)
 			continue;
 
-		if (dir == SPP_PORT_RXTX_RX) {
+		if (dir == SPPWK_PORT_DIR_RX) {
 			max = component->nof_rx;
 			port_array = component->rx_ports;
-		} else if (dir == SPP_PORT_RXTX_TX) {
+		} else if (dir == SPPWK_PORT_DIR_TX) {
 			max = component->nof_tx;
 			port_array = component->tx_ports;
 		}
@@ -700,16 +700,16 @@ set_component_change_port(struct sppwk_port_info *port,
 		enum sppwk_port_dir dir)
 {
 	int ret = 0;
-	if ((dir == SPP_PORT_RXTX_RX) || (dir == SPP_PORT_RXTX_ALL)) {
+	if ((dir == SPPWK_PORT_DIR_RX) || (dir == SPPWK_PORT_DIR_BOTH)) {
 		ret = spp_check_used_port(port->iface_type, port->iface_no,
-				SPP_PORT_RXTX_RX);
+				SPPWK_PORT_DIR_RX);
 		if (ret >= 0)
 			*(g_mng_data.p_change_component + ret) = 1;
 	}
 
-	if ((dir == SPP_PORT_RXTX_TX) || (dir == SPP_PORT_RXTX_ALL)) {
+	if ((dir == SPPWK_PORT_DIR_TX) || (dir == SPPWK_PORT_DIR_BOTH)) {
 		ret = spp_check_used_port(port->iface_type, port->iface_no,
-				SPP_PORT_RXTX_TX);
+				SPPWK_PORT_DIR_TX);
 		if (ret >= 0)
 			*(g_mng_data.p_change_component + ret) = 1;
 	}
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index e08e4fb..b15b40a 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -97,10 +97,10 @@ enum spp_classifier_type {
 
 /* Direction of RX or TX on a port. */
 enum sppwk_port_dir {
-	SPP_PORT_RXTX_NONE, /**< none */
-	SPP_PORT_RXTX_RX,   /**< rx port */
-	SPP_PORT_RXTX_TX,   /**< tx port */
-	SPP_PORT_RXTX_ALL,  /**< rx/tx port */
+	SPPWK_PORT_DIR_NONE,  /**< None */
+	SPPWK_PORT_DIR_RX,    /**< RX port */
+	SPPWK_PORT_DIR_TX,    /**< TX port */
+	SPPWK_PORT_DIR_BOTH,  /**< Both of RX and TX */
 };
 
 /**
diff --git a/src/shared/secondary/spp_worker_th/spp_port.c b/src/shared/secondary/spp_worker_th/spp_port.c
index 7ac6858..b0a29f7 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.c
+++ b/src/shared/secondary/spp_worker_th/spp_port.c
@@ -66,10 +66,10 @@ spp_port_ability_get_info(
 	struct port_ability_mng_info *mng = NULL;
 
 	switch (dir) {
-	case SPP_PORT_RXTX_RX:
+	case SPPWK_PORT_DIR_RX:
 		mng = &g_port_mng_info[port_id].rx;
 		break;
-	case SPP_PORT_RXTX_TX:
+	case SPPWK_PORT_DIR_TX:
 		mng = &g_port_mng_info[port_id].tx;
 		break;
 	default:
@@ -213,12 +213,12 @@ spp_port_ability_change_index(
 
 	if (type == PORT_ABILITY_CHG_INDEX_UPD) {
 		switch (dir) {
-		case SPP_PORT_RXTX_RX:
+		case SPPWK_PORT_DIR_RX:
 			mng = &g_port_mng_info[port_id].rx;
 			mng->upd_index = mng->ref_index;
 			rx_list[num_rx++] = port_id;
 			break;
-		case SPP_PORT_RXTX_TX:
+		case SPPWK_PORT_DIR_TX:
 			mng = &g_port_mng_info[port_id].tx;
 			mng->upd_index = mng->ref_index;
 			tx_list[num_tx++] = port_id;
@@ -264,10 +264,10 @@ port_ability_set_ability(
 	port_mng->iface_no   = port->iface_no;
 
 	switch (dir) {
-	case SPP_PORT_RXTX_RX:
+	case SPPWK_PORT_DIR_RX:
 		mng = &port_mng->rx;
 		break;
-	case SPP_PORT_RXTX_TX:
+	case SPPWK_PORT_DIR_TX:
 		mng = &port_mng->tx;
 		break;
 	default:
@@ -312,12 +312,12 @@ spp_port_ability_update(const struct sppwk_comp_info *component)
 	struct sppwk_port_info *port = NULL;
 	for (cnt = 0; cnt < component->nof_rx; cnt++) {
 		port = component->rx_ports[cnt];
-		port_ability_set_ability(port, SPP_PORT_RXTX_RX);
+		port_ability_set_ability(port, SPPWK_PORT_DIR_RX);
 	}
 
 	for (cnt = 0; cnt < component->nof_tx; cnt++) {
 		port = component->tx_ports[cnt];
-		port_ability_set_ability(port, SPP_PORT_RXTX_TX);
+		port_ability_set_ability(port, SPPWK_PORT_DIR_TX);
 	}
 }
 
@@ -384,7 +384,7 @@ spp_eth_rx_burst(
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 
 	return port_ability_each_operation(port_id, rx_pkts, nb_rx,
-			SPP_PORT_RXTX_RX);
+			SPPWK_PORT_DIR_RX);
 }
 
 /* Wrapper function for rte_eth_tx_burst(). */
@@ -395,7 +395,7 @@ spp_eth_tx_burst(
 {
 	uint16_t nb_tx = 0;
 	nb_tx = port_ability_each_operation(port_id, tx_pkts, nb_pkts,
-			SPP_PORT_RXTX_TX);
+			SPPWK_PORT_DIR_TX);
 	if (unlikely(nb_tx == 0))
 		return SPP_RET_OK;
 
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index 89cf12f..4a78ab2 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -107,7 +107,7 @@ update_cls_table(enum sppwk_action wk_action,
 		strcpy(port_info->cls_attrs.mac_addr_str, mac_str);
 	}
 
-	set_component_change_port(port_info, SPP_PORT_RXTX_TX);
+	set_component_change_port(port_info, SPPWK_PORT_DIR_TX);
 	return SPP_RET_OK;
 }
 
@@ -214,7 +214,7 @@ check_vf_port_count(int component_type, enum sppwk_port_dir dir,
 {
 	RTE_LOG(INFO, VF_CMD_RUNNER, "port count, port_type=%d,"
 				" rx=%d, tx=%d\n", dir, nof_rx, nof_tx);
-	if (dir == SPP_PORT_RXTX_RX)
+	if (dir == SPPWK_PORT_DIR_RX)
 		nof_rx++;
 	else
 		nof_tx++;
@@ -276,7 +276,7 @@ update_port(enum sppwk_action wk_action,
 			&comp_info_base, NULL, NULL, &change_component, NULL);
 	comp_info = (comp_info_base + comp_lcore_id);
 	port_info = get_sppwk_port(port->iface_type, port->iface_no);
-	if (dir == SPP_PORT_RXTX_RX) {
+	if (dir == SPPWK_PORT_DIR_RX) {
 		nof_ports = &comp_info->nof_rx;
 		ports = comp_info->rx_ports;
 	} else {
-- 
2.17.1



------------------------------

Message: 2
Date: Mon, 24 Jun 2019 17:40:43 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 3/3] spp_pcap: revise enum spp_port_rxtx
Message-ID: <20190624084043.23718-4-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to revise the name of enum `spp_port_rxtx` to
`sppwk_port_dir` because it is used to specify which of direction
packets are forwarded on a port. Term `rxtx` is used for a set of RX and
TX, so it should not be used for specifying the direction. This update
is also rename members of the enum, and a member of structs using this
enum from `rxtx` to `dir`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/pcap/cmd_runner.c |  8 ++++----
 src/pcap/cmd_utils.h  | 17 +++++++----------
 2 files changed, 11 insertions(+), 14 deletions(-)

diff --git a/src/pcap/cmd_runner.c b/src/pcap/cmd_runner.c
index 4a74af2..7f17d40 100644
--- a/src/pcap/cmd_runner.c
+++ b/src/pcap/cmd_runner.c
@@ -399,7 +399,7 @@ append_client_id_value(const char *name, char **output,
 /* append a block of port entry for JSON format */
 static int
 append_port_entry(char **output, const struct sppwk_port_idx *port,
-		const enum spp_port_rxtx rxtx __attribute__ ((unused)))
+		const enum sppwk_port_dir dir __attribute__ ((unused)))
 {
 	int ret = SPPWK_RET_NG;
 	char port_str[CMD_TAG_APPEND_SIZE];
@@ -424,7 +424,7 @@ append_port_entry(char **output, const struct sppwk_port_idx *port,
 static int
 append_port_array(const char *name, char **output, const int num,
 		const struct sppwk_port_idx *ports,
-		const enum spp_port_rxtx rxtx)
+		const enum sppwk_port_dir dir)
 {
 	int ret = SPPWK_RET_NG;
 	int i = 0;
@@ -437,7 +437,7 @@ append_port_array(const char *name, char **output, const int num,
 	}
 
 	for (i = 0; i < num; i++) {
-		ret = append_port_entry(&tmp_buff, &ports[i], rxtx);
+		ret = append_port_entry(&tmp_buff, &ports[i], dir);
 		if (unlikely(ret < SPPWK_RET_OK))
 			return SPPWK_RET_NG;
 	}
@@ -493,7 +493,7 @@ append_pcap_core_element_value(
 
 	if (num_rx != 0)
 		ret = append_port_array("rx_port", &tmp_buff,
-				num_rx, rx_ports, SPP_PORT_RXTX_RX);
+				num_rx, rx_ports, SPPWK_PORT_DIR_RX);
 	else
 		ret = append_json_str_value("filename", &tmp_buff, name);
 	if (unlikely(ret < 0))
diff --git a/src/pcap/cmd_utils.h b/src/pcap/cmd_utils.h
index 5528e00..d38e0eb 100644
--- a/src/pcap/cmd_utils.h
+++ b/src/pcap/cmd_utils.h
@@ -59,15 +59,12 @@ enum sppwk_return_val {
 	SPPWK_RET_NG = -1, /**< failed */
 };
 
-/**
- * Port type (rx or tx) to indicate which direction packet goes
- * (e.g. receiving or transmitting)
- */
-enum spp_port_rxtx {
-	SPP_PORT_RXTX_NONE, /**< none */
-	SPP_PORT_RXTX_RX,   /**< rx port */
-	SPP_PORT_RXTX_TX,   /**< tx port */
-	SPP_PORT_RXTX_ALL,  /**< rx/tx port */
+/* Direction of RX or TX on a port. */
+enum sppwk_port_dir {
+	SPPWK_PORT_DIR_NONE,  /**< None */
+	SPPWK_PORT_DIR_RX,    /**< RX port */
+	SPPWK_PORT_DIR_TX,    /**< TX port */
+	SPPWK_PORT_DIR_BOTH,  /**< Both of RX and TX */
 };
 
 /* TODO(yasufum) merge it to the same definition in shared/.../cmd_utils.h */
@@ -122,7 +119,7 @@ union spp_ability_data {
 /** Port ability information */
 struct spp_port_ability {
 	enum spp_port_ability_ope ope; /**< Operation */
-	enum spp_port_rxtx rxtx;       /**< rx/tx identifier */
+	enum sppwk_port_dir dir;  /**< Direction of RX, TX or both */
 	union spp_ability_data data;   /**< Port ability data */
 };
 
-- 
2.17.1



------------------------------

Message: 3
Date: Mon, 24 Jun 2019 17:55:20 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] shared/sec: rename enum spp_secondary
Message-ID: <20190624085520.23929-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to rename enum `spp_secondary` to `sppwk_proc_type` and
its members start with `SECONDARY_` to `WK_PROC_`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/spp_mirror.c                              |  4 ++--
 .../secondary/spp_worker_th/cmd_res_formatter.c      |  4 ++--
 src/shared/secondary/spp_worker_th/cmd_utils.h       | 12 ++++++------
 src/vf/spp_vf.c                                      |  4 ++--
 4 files changed, 12 insertions(+), 12 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index 2cae48a..cb76005 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -216,12 +216,12 @@ parse_app_args(int argc, char *argv[])
 		usage(progname);
 		return SPP_RET_NG;
 	}
-	g_startup_param.secondary_type = SECONDARY_TYPE_MIRROR;
+	g_startup_param.wk_proc_type = WK_PROC_TYPE_MIRROR;
 	RTE_LOG(INFO, MIRROR,
 			"app opts (client_id=%d,type=%d,"
 			"server=%s:%d,vhost_client=%d,)\n",
 			g_startup_param.client_id,
-			g_startup_param.secondary_type,
+			g_startup_param.wk_proc_type,
 			g_startup_param.server_ip,
 			g_startup_param.server_port,
 			g_startup_param.vhost_client);
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index 3c2c3a6..f51157a 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -25,7 +25,7 @@ static int append_error_details_value(const char *name, char **output,
  * List of worker process type. The order of items should be same as the order
  * of enum `secondary_type` in cmd_utils.h.
  */
-/* TODO(yasufum) rename `secondary_type` to `sppwk_proc_type`. */
+/* TODO(yasufum) Add "pcap" after spp_pcap is made to use shared. */
 const char *SPPWK_PROC_TYPE_LIST[] = {
 	"none",
 	"vf",
@@ -128,7 +128,7 @@ get_wk_type(void)
 {
 	struct startup_param *params;
 	sppwk_get_mng_data(&params, NULL, NULL, NULL, NULL, NULL, NULL);
-	return params->secondary_type;
+	return params->wk_proc_type;
 }
 
 /* append a secondary process type for JSON format */
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index b15b40a..4582a82 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -130,11 +130,11 @@ enum copy_mng_flg {
 };
 
 /* secondary process type used only from spp_vf and spp_mirror */
-/* TODO(yasufum) rename `secondary_type` to `sppwk_proc_type`. */
-enum secondary_type {
-	SECONDARY_TYPE_NONE,
-	SECONDARY_TYPE_VF,
-	SECONDARY_TYPE_MIRROR,
+/* TODO(yasufum) Add WK_PROC_TYPE_PCAP. */
+enum sppwk_proc_type {
+	WK_PROC_TYPE_NONE,
+	WK_PROC_TYPE_VF,
+	WK_PROC_TYPE_MIRROR,
 };
 
 /** VLAN tag information */
@@ -200,7 +200,7 @@ struct startup_param {
 	char server_ip[INET_ADDRSTRLEN];  /* IP address of spp-ctl */
 	int server_port;   /* Port Number of spp-ctl */
 	int vhost_client;  /* Flag for --vhost-client option */
-	enum secondary_type secondary_type;
+	enum sppwk_proc_type wk_proc_type;
 };
 
 /* Manage number of interfaces  and port information as global variable. */
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index 7ba894e..5bed735 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -172,12 +172,12 @@ parse_app_args(int argc, char *argv[])
 		usage(progname);
 		return SPP_RET_NG;
 	}
-	g_startup_param.secondary_type = SECONDARY_TYPE_VF;
+	g_startup_param.wk_proc_type = WK_PROC_TYPE_VF;
 	RTE_LOG(INFO, APP,
 			"app opts (client_id=%d,type=%d,server=%s:%d,"
 			"vhost_client=%d)\n",
 			g_startup_param.client_id,
-			g_startup_param.secondary_type,
+			g_startup_param.wk_proc_type,
 			g_startup_param.server_ip,
 			g_startup_param.server_port,
 			g_startup_param.vhost_client);
-- 
2.17.1



------------------------------

Message: 4
Date: Mon, 24 Jun 2019 17:55:30 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] shared/sec: rename define SPP_INFO_AREA_MAX
Message-ID: <20190624085530.23982-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Spp_vf or other worker processes has two configuration data for
two-phase updating as described in SPP's documentation. For the purpose,
the number of config data is defined as SPP_INFO_AREA_MAX, but the name
is not appropriate. This update is to rename it to TWO_SIDES simply.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/spp_mirror.c                        | 7 +++----
 src/shared/secondary/spp_worker_th/cmd_utils.h | 5 +++--
 src/shared/secondary/spp_worker_th/spp_port.c  | 7 +++----
 src/vf/forwarder.c                             | 8 ++++----
 src/vf/spp_vf.c                                | 3 +--
 5 files changed, 14 insertions(+), 16 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index cb76005..892a3a8 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -48,7 +48,7 @@ struct mirror_path {
 struct mirror_info {
 	volatile int ref_index; /* index to reference area */
 	volatile int upd_index; /* index to update area    */
-	struct mirror_path path[SPP_INFO_AREA_MAX];
+	struct mirror_path path[TWO_SIDES];
 				/* Information of data path */
 };
 
@@ -339,7 +339,7 @@ change_mirror_index(int id)
 	if (info->ref_index == info->upd_index) {
 	/* Change reference index of port ability. */
 		spp_port_ability_change_index(PORT_ABILITY_CHG_INDEX_REF, 0, 0);
-		info->ref_index = (info->upd_index+1)%SPP_INFO_AREA_MAX;
+		info->ref_index = (info->upd_index+1) % TWO_SIDES;
 	}
 }
 
@@ -479,8 +479,7 @@ slave_main(void *arg __attribute__ ((unused)))
 
 		if (spp_check_core_update(lcore_id) == SPP_RET_OK) {
 			/* Setting with the flush command trigger. */
-			info->ref_index = (info->upd_index+1) %
-					SPP_INFO_AREA_MAX;
+			info->ref_index = (info->upd_index+1) % TWO_SIDES;
 			core = get_core_info(lcore_id);
 		}
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 4582a82..d90aff5 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -34,7 +34,8 @@
 /** Update wait timer (micro sec) */
 #define SPP_CHANGE_UPDATE_INTERVAL 10
 
-#define SPP_INFO_AREA_MAX 2  /* The max number of buffer for management */
+/* Used for index of arrary of management data which has two sides. */
+#define TWO_SIDES 2
 
 #define STR_LEN_SHORT 32  /* Size of short string. */
 #define STR_LEN_NAME 128  /* Size of string for names. */
@@ -224,7 +225,7 @@ struct core_mng_info {
 	volatile enum sppwk_lcore_status status;
 	volatile int ref_index;  /* index for reference */
 	volatile int upd_index;  /* index for update */
-	struct core_info core[SPP_INFO_AREA_MAX];  /* info of each core */
+	struct core_info core[TWO_SIDES];  /* info of each core */
 };
 
 /* Manage data used for backup. */
diff --git a/src/shared/secondary/spp_worker_th/spp_port.c b/src/shared/secondary/spp_worker_th/spp_port.c
index b0a29f7..9f7ac5a 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.c
+++ b/src/shared/secondary/spp_worker_th/spp_port.c
@@ -16,8 +16,7 @@
 struct port_ability_mng_info {
 	volatile int ref_index; /* Index to reference area */
 	volatile int upd_index; /* Index to update area    */
-	struct spp_port_ability ability[SPP_INFO_AREA_MAX]
-				[SPP_PORT_ABILITY_MAX];
+	struct spp_port_ability ability[TWO_SIDES][SPP_PORT_ABILITY_MAX];
 				/* Port ability information */
 };
 
@@ -232,12 +231,12 @@ spp_port_ability_change_index(
 
 	for (cnt = 0; cnt < num_rx; cnt++) {
 		mng = &g_port_mng_info[rx_list[cnt]].rx;
-		mng->ref_index = (mng->upd_index+1)%SPP_INFO_AREA_MAX;
+		mng->ref_index = (mng->upd_index+1) % TWO_SIDES;
 		rx_list[cnt] = 0;
 	}
 	for (cnt = 0; cnt < num_tx; cnt++) {
 		mng = &g_port_mng_info[tx_list[cnt]].tx;
-		mng->ref_index = (mng->upd_index+1)%SPP_INFO_AREA_MAX;
+		mng->ref_index = (mng->upd_index+1) % TWO_SIDES;
 		tx_list[cnt] = 0;
 	}
 
diff --git a/src/vf/forwarder.c b/src/vf/forwarder.c
index 4d99bfb..e5cc963 100644
--- a/src/vf/forwarder.c
+++ b/src/vf/forwarder.c
@@ -31,7 +31,7 @@ struct forward_path {
 struct forward_info {
 	volatile int ref_index; /* index to reference area */
 	volatile int upd_index; /* index to update area    */
-	struct forward_path path[SPP_INFO_AREA_MAX];
+	struct forward_path path[TWO_SIDES];
 				/* Information of data path */
 };
 
@@ -169,10 +169,10 @@ change_forward_index(int id)
 	struct forward_info *info = &g_forward_info[id];
 	if (info->ref_index == info->upd_index) {
 		/* Change reference index of port ability. */
-		spp_port_ability_change_index(PORT_ABILITY_CHG_INDEX_REF,
-									0, 0);
+		spp_port_ability_change_index(
+				PORT_ABILITY_CHG_INDEX_REF, 0, 0);
 
-		info->ref_index = (info->upd_index+1)%SPP_INFO_AREA_MAX;
+		info->ref_index = (info->upd_index+1) % TWO_SIDES;
 	}
 }
 /**
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index 5bed735..bc8db5c 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -205,8 +205,7 @@ slave_main(void *arg __attribute__ ((unused)))
 
 		if (spp_check_core_update(lcore_id) == SPP_RET_OK) {
 			/* Setting with the flush command trigger. */
-			info->ref_index = (info->upd_index+1) %
-					SPP_INFO_AREA_MAX;
+			info->ref_index = (info->upd_index+1) % TWO_SIDES;
 			core = get_core_info(lcore_id);
 		}
 
-- 
2.17.1



End of spp Digest, Vol 31, Issue 18
***********************************


From yasufum.o@gmail.com Mon Jun 24 19:39:39 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL001WCMYKR150@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 19:39:56 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTL00L0IMYKS800@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:39:56 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTL009RRMYK7Y40@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:39:56 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf105.ddreams.local (Postfix) with ESMTP id D91347E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:39:56 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id D7B4F8E6060	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:39:56 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id D66478E605A	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:39:56 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 5242D8E605D	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:39:56 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf105.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:39:56 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAduU2031889;	Mon,
 24 Jun 2019 19:39:56 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5OAduPD031888;	Mon, 24 Jun 2019 19:39:56 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5OAdtuA031885	for unknown; Mon,
 24 Jun 2019 19:39:55 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAdtNa006468 for
 unknown; Mon, 24 Jun 2019 19:39:55 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAdtlP006462; Mon,
 24 Jun 2019 19:39:55 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAdtUq008386;	Mon,
 24 Jun 2019 19:39:55 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5OAdtso008378	for unknown; Mon, 24 Jun 2019 19:39:55 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAdtmF022022 for
 unknown; Mon, 24 Jun 2019 19:39:55 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAdtlq022011 for
 unknown; Mon, 24 Jun 2019 19:39:55 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5OAdmO5020209	for unknown; Mon,
 24 Jun 2019 19:39:54 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 3F7811BED8;	Mon, 24 Jun 2019 12:39:47 +0200 (CEST)
Received: from mail-pl1-f194.google.com
 (mail-pl1-f194.google.com [209.85.214.194]) by dpdk.org (Postfix)
 with ESMTP id CC3301BECF for <spp@dpdk.org>; Mon,
 24 Jun 2019 12:39:45 +0200 (CEST)
Received: by mail-pl1-f194.google.com with SMTP id cl9so6630550plb.10 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 03:39:45 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id r7sm15293540pfl.134.2019.06.24.03.39.43
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 03:39:44 -0700 (PDT)
Date: Mon, 24 Jun 2019 19:39:39 +0900
From: yasufum.o@gmail.com
Subject: [spp 04417] [spp] [PATCH] shared/sec: rename structs of port ability
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624103939.24655-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04417
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=YYSdHLS8GKKWbG1+jmHtdGXcXicMvkdokybWvqbwT+k=;
 b=C0MAW7AUEg7u91OyPxJ+a/QF0I4uZCskNGMUKjXRHvJZl+ejKLkHE1E22tYsSNA/qw
 Xz+tMxEZPKm49VUIWZy5Nh1SMtC0Vq+JJvGYa2xmlK4FdhsSR+vv+rytl0B4c63JBnvn
 RXWCYwM+UkV8fEuXNYVrknyIRtVpH6+usz0LOgtPNwC9Q8dakWSj+gqYT1zFrbgK0OXA
 xNY3Lza8eq8vkWbuBDLC4ln2RYtqBV+eNpObvgdk/1R4qr6pI7YnsTikDECI60xhnFEM
 3srzhPGELsNeQppUXDhqvtCQlayvAYjGPYZyYe0jtzlBif2/2ztd4ViI2b/gD1efSLJR 2rwA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=YYSdHLS8GKKWbG1+jmHtdGXcXicMvkdokybWvqbwT+k=;
 b=Rg5SZBKvrA6GjL7WcBPAWtDysC58k+FGjH1H8dUoMp3A5U9wIoQldRLJIpYIs+SDzR
 aA+H4hYjsAcj6d9+0MBrjrlNIQMbz3ovtLn7+G9FhBY9Ix6chU+/kcRYLKyokXw/xsF+
 zLf4LCRtp3GQ3wjthBFUDziKuPcoIz7ko41KMwz+fvt6G5tanWwl6GvNQUKoslLQCysI
 IqP88OeL6xHmCxelcMORFmuYdsuoJZe4p69r0AeI1zTCc3CHXCsYpSkfy4mDpsVwcg0x
 1wFILL6a0LZynW9sQdzlhjCP5HvYbM4Rro6AvG69cMbJL9OWhRQUkL+0uBs43lMLxjpX LdDg==
X-Gm-Message-State: APjAAAU4/30j/5IUySvqEz+EDk8RSu/KcqduM7CUvC6vW1RxfqUjNv/J
 5TJkb2AMsA12aafxYasnu2/cqc6M
X-Google-Smtp-Source:
 APXvYqzNPDwqqKA3u+os4MritA/goWlkDxWwrV1DTa3GJ77yQM31/jHH6BpwKglK9aUcYQ0iQOHJKQ==
X-Received: by 2002:a17:902:121:: with SMTP id
 30mr140680940plb.314.1561372784776; Mon, 24 Jun 2019 03:39:44 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 228
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

In spp_vf, attribute of port such as direction, operation functions or
VLAN tag info as port ability. However, names of structures are not
appropriate, for example `spp_port_ability` is owned by
`port_ability_mng_info` to contain a set of abilities and it is owned
by `port_ability_port_mng_info` to contain other attributes. It is so
confusing and not describing the features.

This update is to fix the issue, to `port_abl_mng_info` has
`port_abl_info`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/cmd_utils.h       |  7 +--
 src/shared/secondary/spp_worker_th/spp_port.c | 47 ++++++++-----------
 src/shared/secondary/spp_worker_th/spp_port.h | 31 ++++--------
 3 files changed, 33 insertions(+), 52 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index d90aff5..d68b0d6 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -40,6 +40,7 @@
 #define STR_LEN_SHORT 32  /* Size of short string. */
 #define STR_LEN_NAME 128  /* Size of string for names. */
 
+/* TODO(yasufum) confirm usage of this value and why it is 4. */
 #define SPP_PORT_ABILITY_MAX 4  /* Max num of port abilities. */
 
 /** Maximum VLAN PCP */
@@ -139,7 +140,7 @@ enum sppwk_proc_type {
 };
 
 /** VLAN tag information */
-struct spp_vlantag_info {
+struct sppwk_vlan_tag {
 	int vid; /**< VLAN ID */
 	int pcp; /**< Priority Code Point */
 	int tci; /**< Tag Control Information */
@@ -148,7 +149,7 @@ struct spp_vlantag_info {
 /* Ability for vlantag for a port. */
 union spp_ability_data {
 	/** VLAN tag information */
-	struct spp_vlantag_info vlantag;
+	struct sppwk_vlan_tag vlantag;
 };
 
 /* Port ability information. */
@@ -162,7 +163,7 @@ struct spp_port_ability {
 struct sppwk_cls_attrs {
 	uint64_t mac_addr;  /**< Mac address (binary) */
 	char mac_addr_str[STR_LEN_SHORT];  /**< Mac address (text) */
-	struct spp_vlantag_info vlantag;   /**< VLAN tag information */
+	struct sppwk_vlan_tag vlantag;   /**< VLAN tag information */
 };
 
 /**
diff --git a/src/shared/secondary/spp_worker_th/spp_port.c b/src/shared/secondary/spp_worker_th/spp_port.c
index 9f7ac5a..0b79531 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.c
+++ b/src/shared/secondary/spp_worker_th/spp_port.c
@@ -13,30 +13,23 @@
 #include "ringlatencystats.h"
 
 /* Port ability management information */
-struct port_ability_mng_info {
-	volatile int ref_index; /* Index to reference area */
-	volatile int upd_index; /* Index to update area    */
+struct port_abl_info {
+	volatile int ref_index; /* Index to reference area. */
+	volatile int upd_index; /* Index to update area. */
 	struct spp_port_ability ability[TWO_SIDES][SPP_PORT_ABILITY_MAX];
-				/* Port ability information */
+				/* Port ability information. */
 };
 
 /* Port ability port information */
-struct port_ability_port_mng_info {
-	/* Interface type (phy/vhost/ring) */
-	enum port_type iface_type;
-
-	/* Interface number */
-	int            iface_no;
-
-	/* Management data of port ability for receiving */
-	struct port_ability_mng_info rx;
-
-	/* Management data of port ability for sending */
-	struct port_ability_mng_info tx;
+struct port_mng_info {
+	enum port_type iface_type;  /* Interface type (phy, vhost or so). */
+	int iface_no;  /* Interface number. */
+	struct port_abl_info rx;  /* Mng data of port ability for RX. */
+	struct port_abl_info tx;  /* Mng data of port ability for Tx. */
 };
 
 /* Information for VLAN tag management. */
-struct port_ability_port_mng_info g_port_mng_info[RTE_MAX_ETHPORTS];
+struct port_mng_info g_port_mng_info[RTE_MAX_ETHPORTS];
 
 /* TPID of VLAN. */
 static uint16_t g_vlan_tpid;
@@ -62,7 +55,7 @@ spp_port_ability_get_info(
 		int port_id, enum sppwk_port_dir dir,
 		struct spp_port_ability **info)
 {
-	struct port_ability_mng_info *mng = NULL;
+	struct port_abl_info *mng = NULL;
 
 	switch (dir) {
 	case SPPWK_PORT_DIR_RX:
@@ -97,7 +90,7 @@ add_vlantag_packet(
 	struct ether_hdr *old_ether = NULL;
 	struct ether_hdr *new_ether = NULL;
 	struct vlan_hdr  *vlan      = NULL;
-	const struct spp_vlantag_info *vlantag = &data->vlantag;
+	const struct sppwk_vlan_tag *vlantag = &data->vlantag;
 
 	old_ether = rte_pktmbuf_mtod(pkt, struct ether_hdr *);
 	if (old_ether->ether_type == g_vlan_tpid) {
@@ -208,7 +201,7 @@ spp_port_ability_change_index(
 	static int rx_list[RTE_MAX_ETHPORTS];
 	static int num_tx;
 	static int tx_list[RTE_MAX_ETHPORTS];
-	struct port_ability_mng_info *mng = NULL;
+	struct port_abl_info *mng = NULL;
 
 	if (type == PORT_ABILITY_CHG_INDEX_UPD) {
 		switch (dir) {
@@ -246,18 +239,16 @@ spp_port_ability_change_index(
 
 /* Set ability data of port ability. */
 static void
-port_ability_set_ability(
-		struct sppwk_port_info *port,
+port_ability_set_ability(struct sppwk_port_info *port,
 		enum sppwk_port_dir dir)
 {
 	int in_cnt, out_cnt = 0;
 	int port_id = port->ethdev_port_id;
-	struct port_ability_port_mng_info *port_mng =
-						&g_port_mng_info[port_id];
-	struct port_ability_mng_info *mng         = NULL;
-	struct spp_port_ability      *in_ability  = port->ability;
-	struct spp_port_ability      *out_ability = NULL;
-	struct spp_vlantag_info      *tag         = NULL;
+	struct port_mng_info *port_mng = &g_port_mng_info[port_id];
+	struct port_abl_info *mng = NULL;
+	struct spp_port_ability *in_ability = port->ability;
+	struct spp_port_ability *out_ability = NULL;
+	struct sppwk_vlan_tag *tag = NULL;
 
 	port_mng->iface_type = port->iface_type;
 	port_mng->iface_no   = port->iface_no;
diff --git a/src/shared/secondary/spp_worker_th/spp_port.h b/src/shared/secondary/spp_worker_th/spp_port.h
index 5cde7d2..a6fb313 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.h
+++ b/src/shared/secondary/spp_worker_th/spp_port.h
@@ -19,11 +19,8 @@
 
 /** Type for changing index. */
 enum port_ability_chg_index_type {
-	/** Type for changing index to reference area. */
-	PORT_ABILITY_CHG_INDEX_REF,
-
-	/** Type for changing index to update area. */
-	PORT_ABILITY_CHG_INDEX_UPD,
+	PORT_ABILITY_CHG_INDEX_REF,  /** To change index to reference area. */
+	PORT_ABILITY_CHG_INDEX_UPD,  /** To change index to update area. */
 };
 
 /** Initialize port ability. */
@@ -32,12 +29,9 @@ void spp_port_ability_init(void);
 /**
  * Get information of port ability.
  *
- * @param port_id
- *  The port identifier of the Ethernet device.
- * @param rxtx
- *  rx/tx identifier of port_id.
- * @param info
- *  Port ability information.
+ * @param port_id Etherdev ID.
+ * @param rxtx RX/TX ID of port_id.
+ * @param info Port ability information.
  */
 void spp_port_ability_get_info(
 		int port_id, enum sppwk_port_dir dir,
@@ -46,12 +40,9 @@ void spp_port_ability_get_info(
 /**
  * Change index of management information.
  *
- * @param port_id
- *  The port identifier of the Ethernet device.
- * @param rxtx
- *  rx/tx identifier of port_id.
- * @param type
- *  Type for changing index.
+ * @param port_id Etherdev ID.
+ * @param rxtx RX/TX ID of port_id.
+ * @param type Type for changing index.
  */
 void spp_port_ability_change_index(
 		enum port_ability_chg_index_type type,
@@ -69,8 +60,7 @@ void spp_port_ability_update(const struct sppwk_comp_info *component);
 /**
  * Wrapper function for rte_eth_rx_burst().
  *
- * @param port_id
- *  The port identifier of the Ethernet device.
+ * @param port_id Etherdev ID.
  * @param queue_id
  *  The index of the receive queue from which to retrieve input packets.
  *  SPP is fixed at 0.
@@ -91,8 +81,7 @@ uint16_t spp_eth_rx_burst(uint16_t port_id, uint16_t queue_id,
 /**
  * Wrapper function for rte_eth_tx_burst().
  *
- * @param port_id
- *  The port identifier of the Ethernet device.
+ * @param port_id Etherdev ID.
  * @param queue_id
  *  The index of the transmit queue through which output packets must be sent.
  *  SPP is fixed at 0.
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 19:39:52 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd106.ddreams.local
 (zssg-mailmd106.ddreams.local [10.160.123.101])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL001YGMYXR150@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 19:40:09 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd106.ddreams.local by
 zssg-mailmd106.ddreams.local (dDREAMS) id <0PTL0150IMYX6V00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:40:09 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd106.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00CMKMYXB3B0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:40:09 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id BD4E17E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:40:09 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id BC1818E6042	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:40:09 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id B156F8E6050	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:40:09 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 8AD8C8E6042	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:40:08 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:40:08 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAe8bJ031918;	Mon,
 24 Jun 2019 19:40:08 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5OAe81U031917;	Mon, 24 Jun 2019 19:40:08 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5OAe8aS031914	for unknown; Mon,
 24 Jun 2019 19:40:08 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAe7YE006546 for
 unknown; Mon, 24 Jun 2019 19:40:08 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAe7jL006543; Mon,
 24 Jun 2019 19:40:07 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAe7fF008411;	Mon,
 24 Jun 2019 19:40:07 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5OAe7Dp008407	for unknown; Mon, 24 Jun 2019 19:40:07 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAe7nv022108 for
 unknown; Mon, 24 Jun 2019 19:40:07 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAe71W022101 for
 unknown; Mon, 24 Jun 2019 19:40:07 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5OAe0bY020244	for unknown; Mon,
 24 Jun 2019 19:40:06 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 583301BF01;	Mon, 24 Jun 2019 12:40:00 +0200 (CEST)
Received: from mail-pl1-f193.google.com
 (mail-pl1-f193.google.com [209.85.214.193]) by dpdk.org (Postfix)
 with ESMTP id 4BBF01BED8 for <spp@dpdk.org>; Mon,
 24 Jun 2019 12:39:59 +0200 (CEST)
Received: by mail-pl1-f193.google.com with SMTP id a93so6665423pla.7 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 03:39:59 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id x5sm11544893pjp.21.2019.06.24.03.39.56
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 03:39:57 -0700 (PDT)
Date: Mon, 24 Jun 2019 19:39:52 +0900
From: yasufum.o@gmail.com
Subject: [spp 04418] [spp] [PATCH] spp_pcap: rename funcs and vars in cmd_util.h
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624103952.24710-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04418
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=U0A/3NqicpR8aGqe/De3BCYwoqmw6Vw+rs+v/9wrGVg=;
 b=uRwVEmT4ikPz+Wl4OASd0rlc6V3cwpUX7zUwhijo/8cWnNoF82m637M3EUYfRNTIyz
 emt07xITic34LNE2RAeDD02FTZZBIXQx3SxRdMatAmfkQrU6l+qbaIM0vN6iL9rTwRp3
 I/JYBHlMcyMOcy11lQAQg0fqWLjMpcicMa4rCSdL21xQoFzB3KkZzT/sXjpOGAa3ZDwL
 ux6OSpqYWGGjKEBj2jCCO8OIv+JLBacU4E1KNbjy+55HtHcD8z4ekOZ1iT3LgMcgSxeU
 uVhrGbNBNOTuHV6FOY/dXPw91hukYHJOdRVkBzv0tFRTi9TR9EbaXqpS0z89o9BRd89z lgKA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=U0A/3NqicpR8aGqe/De3BCYwoqmw6Vw+rs+v/9wrGVg=;
 b=nEBF9CN0wkYGKM8QkICC0zm1e3fyT0oxn3+lghw5KT5ryPLBA6jo04YwpWt8FuHsLX
 T27Wi57VjvoZ4MXPzgg9Z+Z77S6ogPM91zThriNFUV3CkUqvFH660ANyWNzBBtWKqSF+
 bx42C0J7d1e18Va1ZyKC7bhAJVqYXkz2vb1cyJfVt9Y7b4Yyha85ArcjhvpKMkJhxrD3
 t7WILaIeuJcG199RByV4isS7lUUPY6YanD2ZEpydNFhNBkAA49S61KsU+aXGQ78GxUI4
 cuUFDBmdGZFdGy44iwgEZmmxgZf7YMCyXr3RwFG5EirgfAN2hBNjrnub95cLfJ2Hp5ez jKsg==
X-Gm-Message-State: APjAAAXAz2JpeVHbz+b5Uy7sKz5SknYU2++e+FveinzIrJK7qg3AACp2
 3JGiRITvZhSz1HTbj8ubYx0mkrBy
X-Google-Smtp-Source:
 APXvYqz/ny13OuV5fkQCwdFRxf9eOktBq9R570DlIGNjt/MR/PBwpJPm4UztUWvLt0kKgW424Nz66Q==
X-Received: by 2002:a17:902:e282:: with SMTP id
 cf2mr125316084plb.301.1561372798034; Mon, 24 Jun 2019 03:39:58 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 715
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

There are many similar funcs and vars in shared and spp_pcap. Some of
them have same features should be merged to shared libs. This update is
the first step to the task, rename funcs and vars in spp_pcap to be
exactly the same, and add TODOs.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/mir_cmd_runner.c                   |  10 +-
 src/pcap/cmd_utils.c                          |  70 ++++----
 src/pcap/cmd_utils.h                          | 151 ++++++++----------
 .../secondary/spp_worker_th/cmd_parser.c      |   2 +-
 .../spp_worker_th/cmd_res_formatter.c         |   8 +-
 .../secondary/spp_worker_th/cmd_utils.h       |  51 +++---
 src/shared/secondary/spp_worker_th/spp_port.c |   8 +-
 src/vf/classifier_mac.c                       |   6 +-
 src/vf/vf_cmd_runner.c                        |  10 +-
 9 files changed, 150 insertions(+), 166 deletions(-)

diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index 312ded5..abbd6f6 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -176,11 +176,11 @@ update_port(enum sppwk_action wk_action,
 			/* registered */
 			/* TODO(yasufum) confirm it is needed for spp_mirror. */
 			if (ability->ops == SPPWK_PORT_ABL_OPS_ADD_VLANTAG) {
-				while ((cnt < SPP_PORT_ABILITY_MAX) &&
+				while ((cnt < PORT_ABL_MAX) &&
 					    (port_info->ability[cnt].ops !=
 					    SPPWK_PORT_ABL_OPS_ADD_VLANTAG))
 					cnt++;
-				if (cnt >= SPP_PORT_ABILITY_MAX) {
+				if (cnt >= PORT_ABL_MAX) {
 					RTE_LOG(ERR, MIR_CMD_RUNNER, "update VLAN tag "
 						"Non-registratio\n");
 					return SPP_RET_NG;
@@ -201,12 +201,12 @@ update_port(enum sppwk_action wk_action,
 		}
 
 		if (ability->ops != SPPWK_PORT_ABL_OPS_NONE) {
-			while ((cnt < SPP_PORT_ABILITY_MAX) &&
+			while ((cnt < PORT_ABL_MAX) &&
 					(port_info->ability[cnt].ops !=
 					SPPWK_PORT_ABL_OPS_NONE)) {
 				cnt++;
 			}
-			if (cnt >= SPP_PORT_ABILITY_MAX) {
+			if (cnt >= PORT_ABL_MAX) {
 				RTE_LOG(ERR, MIR_CMD_RUNNER,
 						"No space of port ability.\n");
 				return SPP_RET_NG;
@@ -223,7 +223,7 @@ update_port(enum sppwk_action wk_action,
 		break;
 
 	case SPPWK_ACT_DEL:
-		for (cnt = 0; cnt < SPP_PORT_ABILITY_MAX; cnt++) {
+		for (cnt = 0; cnt < PORT_ABL_MAX; cnt++) {
 			if (port_info->ability[cnt].ops ==
 					SPPWK_PORT_ABL_OPS_NONE)
 				continue;
diff --git a/src/pcap/cmd_utils.c b/src/pcap/cmd_utils.c
index 726ad9e..d9e09e5 100644
--- a/src/pcap/cmd_utils.c
+++ b/src/pcap/cmd_utils.c
@@ -13,7 +13,7 @@
 #define RTE_LOGTYPE_PCAP_UTILS RTE_LOGTYPE_USER2
 
 /* Manage data to addoress */
-struct manage_data_addr_info {
+struct mng_data_info {
 	struct startup_param	  *p_startup_param;
 	struct iface_info	  *p_iface_info;
 	struct core_mng_info	  *p_core_info;
@@ -24,7 +24,7 @@ struct manage_data_addr_info {
 
 /* Declare global variables */
 /* Logical core ID for main process */
-static struct manage_data_addr_info g_mng_data_addr;
+static struct mng_data_info g_mng_data_addr;
 
 /* generation of the ring port */
 int
@@ -206,11 +206,11 @@ set_nic_interface(void)
 	struct iface_info *p_iface_info = g_mng_data_addr.p_iface_info;
 
 	/* NIC Setting */
-	p_iface_info->num_nic = rte_eth_dev_count_avail();
-	if (p_iface_info->num_nic > RTE_MAX_ETHPORTS)
-		p_iface_info->num_nic = RTE_MAX_ETHPORTS;
+	p_iface_info->nof_phys = rte_eth_dev_count_avail();
+	if (p_iface_info->nof_phys > RTE_MAX_ETHPORTS)
+		p_iface_info->nof_phys = RTE_MAX_ETHPORTS;
 
-	for (nic_cnt = 0; nic_cnt < p_iface_info->num_nic; nic_cnt++) {
+	for (nic_cnt = 0; nic_cnt < p_iface_info->nof_phys; nic_cnt++) {
 		p_iface_info->nic[nic_cnt].iface_type   = PHY;
 		p_iface_info->nic[nic_cnt].ethdev_port_id = nic_cnt;
 	}
@@ -258,47 +258,47 @@ int spp_format_port_string(char *port, enum port_type iface_type, int iface_no)
 }
 
 /* Set mange data address */
-int spp_set_mng_data_addr(struct startup_param *startup_param_addr,
-			  struct iface_info *iface_addr,
-			  struct core_mng_info *core_mng_addr,
-			  int *capture_request_addr,
-			  int *capture_status_addr,
+int spp_set_mng_data_addr(struct startup_param *startup_param_p,
+			  struct iface_info *iface_p,
+			  struct core_mng_info *core_mng_p,
+			  int *capture_request_p,
+			  int *capture_status_p,
 			  unsigned int main_lcore_id)
 {
-	if (startup_param_addr == NULL || iface_addr == NULL ||
-			core_mng_addr == NULL ||
-			capture_request_addr == NULL ||
-			capture_status_addr == NULL ||
+	if (startup_param_p == NULL || iface_p == NULL ||
+			core_mng_p == NULL ||
+			capture_request_p == NULL ||
+			capture_status_p == NULL ||
 			main_lcore_id == 0xffffffff)
 		return SPPWK_RET_NG;
 
-	g_mng_data_addr.p_startup_param = startup_param_addr;
-	g_mng_data_addr.p_iface_info = iface_addr;
-	g_mng_data_addr.p_core_info = core_mng_addr;
-	g_mng_data_addr.p_capture_request = capture_request_addr;
-	g_mng_data_addr.p_capture_status = capture_status_addr;
+	g_mng_data_addr.p_startup_param = startup_param_p;
+	g_mng_data_addr.p_iface_info = iface_p;
+	g_mng_data_addr.p_core_info = core_mng_p;
+	g_mng_data_addr.p_capture_request = capture_request_p;
+	g_mng_data_addr.p_capture_status = capture_status_p;
 	g_mng_data_addr.main_lcore_id = main_lcore_id;
 
 	return SPPWK_RET_OK;
 }
 
 /* Get manage data address */
-void spp_get_mng_data_addr(struct startup_param **startup_param_addr,
-			   struct iface_info **iface_addr,
-			   struct core_mng_info **core_mng_addr,
-			   int **capture_request_addr,
-			   int **capture_status_addr)
+void spp_get_mng_data_addr(struct startup_param **startup_param_p,
+			   struct iface_info **iface_p,
+			   struct core_mng_info **core_mng_p,
+			   int **capture_request_p,
+			   int **capture_status_p)
 {
 
-	if (startup_param_addr != NULL)
-		*startup_param_addr = g_mng_data_addr.p_startup_param;
-	if (iface_addr != NULL)
-		*iface_addr = g_mng_data_addr.p_iface_info;
-	if (core_mng_addr != NULL)
-		*core_mng_addr = g_mng_data_addr.p_core_info;
-	if (capture_request_addr != NULL)
-		*capture_request_addr = g_mng_data_addr.p_capture_request;
-	if (capture_status_addr != NULL)
-		*capture_status_addr = g_mng_data_addr.p_capture_status;
+	if (startup_param_p != NULL)
+		*startup_param_p = g_mng_data_addr.p_startup_param;
+	if (iface_p != NULL)
+		*iface_p = g_mng_data_addr.p_iface_info;
+	if (core_mng_p != NULL)
+		*core_mng_p = g_mng_data_addr.p_core_info;
+	if (capture_request_p != NULL)
+		*capture_request_p = g_mng_data_addr.p_capture_request;
+	if (capture_status_p != NULL)
+		*capture_status_p = g_mng_data_addr.p_capture_status;
 
 }
diff --git a/src/pcap/cmd_utils.h b/src/pcap/cmd_utils.h
index d38e0eb..46747e9 100644
--- a/src/pcap/cmd_utils.h
+++ b/src/pcap/cmd_utils.h
@@ -21,22 +21,18 @@
 #include <netinet/in.h>
 #include "shared/common.h"
 
-/* Max number of core status check */
-#define SPP_CORE_STATUS_CHECK_MAX 5
-
-/** The length of shortest character string */
-#define SPP_MIN_STR_LEN   32
-
-/** The length of NAME string */
-#define SPP_NAME_STR_LEN  128
-
-/** Maximum number of port abilities available */
-#define SPP_PORT_ABILITY_MAX 4
-
 /** Identifier string for each interface */
 #define SPP_IFTYPE_NIC_STR   "phy"
 #define SPP_IFTYPE_RING_STR  "ring"
 
+#define STR_LEN_SHORT 32  /* Size of short string. */
+#define STR_LEN_NAME 128  /* Size of string for names. */
+
+#define PORT_ABL_MAX 4  /* Max num of port abilities. */
+
+/* Max number of core status check */
+#define SPP_CORE_STATUS_CHECK_MAX 5
+
 /* TODO(yasufum) merge it to the same definition in shared/.../cmd_utils.h */
 /* State on core */
 enum sppwk_lcore_status {
@@ -127,7 +123,7 @@ struct spp_port_ability {
 /* Attributes for classifying . */
 struct sppwk_cls_attrs {
 	uint64_t mac_addr;  /**< Mac address (binary) */
-	char mac_addr_str[SPP_MIN_STR_LEN];  /**< Mac address (text) */
+	char mac_addr_str[STR_LEN_SHORT];  /**< Mac address (text) */
 	struct spp_vlantag_info vlantag;   /**< VLAN tag information */
 };
 
@@ -143,13 +139,13 @@ struct sppwk_port_info {
 	int iface_no;
 	int ethdev_port_id;  /**< Consistent ID of ethdev */
 	struct sppwk_cls_attrs cls_attrs;
-	struct spp_port_ability ability[SPP_PORT_ABILITY_MAX];
+	struct spp_port_ability ability[PORT_ABL_MAX];
 };
 
 /* TODO(yasufum) merge it to the same definition in shared/.../cmd_utils.h */
 /* Attributes of SPP worker thread named as `component`. */
 struct sppwk_comp_info {
-	char name[SPP_NAME_STR_LEN];  /**< Component name */
+	char name[STR_LEN_NAME];  /**< Component name */
 	enum sppwk_worker_type wk_type;  /**< Type of worker thread */
 	unsigned int lcore_id;
 	int comp_id;  /**< Component ID */
@@ -161,20 +157,18 @@ struct sppwk_comp_info {
 
 /* Manage given options as global variable */
 struct startup_param {
-	int client_id;		/* Client ID */
-	char server_ip[INET_ADDRSTRLEN];
-				/* IP address stiring of spp-ctl */
-	int server_port;	/* Port Number of spp-ctl */
+	int client_id;  /* Client ID */
+	char server_ip[INET_ADDRSTRLEN];  /* IP address of spp-ctl */
+	int server_port;  /* Port Number of spp-ctl */
 };
 
 /* Manage interfaces and port information as global variable */
+/* TODO(yasufum) confirm why nof_rings is required not used in anywhere. */
 struct iface_info {
-	int num_nic;            /* The number of phy */
-	int num_ring;           /* The number of ring */
+	int nof_phys;    /* Number of phy ports */
+	int nof_rings;   /* Number of ring ports */
 	struct sppwk_port_info nic[RTE_MAX_ETHPORTS];
-				/* Port information of phy */
 	struct sppwk_port_info ring[RTE_MAX_ETHPORTS];
-				/* Port information of ring */
 };
 
 /* Manage core status and component information as global variable */
@@ -184,46 +178,42 @@ struct core_mng_info {
 };
 
 /* TODO(yasufum) refactor name of func and vars, and comments. */
+/* TODO(yasufum) confirm this var is used in spp_pcap. */
+/* TODO(yasufum) if so, consider to merge to shared. */
 struct spp_iterate_core_params;
 /**
- * definition of iterated core element procedure function
- * which is member of spp_iterate_core_params structure.
- * Above structure is used when listing core information
- * (e.g) create resonse to status command.
+ * Define func to iterate lcore to list core information for showing status
+ * or so, as a member of struct `spp_iterate_core_params`.
  */
 typedef int (*spp_iterate_core_element_proc)(
 		struct spp_iterate_core_params *params,
 		const unsigned int lcore_id,
-		const char *name,
-		const char *type,
-		const int num_rx,
+		const char *wk_name,
+		const char *wk_type,
+		const int nof_rx,
 		const struct sppwk_port_idx *rx_ports,
-		const int num_tx,
+		const int nof_tx,
 		const struct sppwk_port_idx *tx_ports);
 
-/* TODO(yasufum) refactor name of func and vars, and comments. */
 /**
- * iterate core table parameters which is
- * used when listing core table content
- * (e.g.) create response to status command.
+ * iterate core table parameters used to list content of lcore table for.
+ * showing status or so.
  */
+/* TODO(yasufum) consider to merge to shared. */
+/* TODO(yasufum) refactor name of func and vars, and comments. */
 struct spp_iterate_core_params {
-	/** Output buffer */
-	char *output;
-
+	char *output;  /* Buffer used for output */
 	/** The function for creating core information */
 	spp_iterate_core_element_proc element_proc;
 };
 
 /**
- * added ring_pmd
+ * Add ring pmd for owned proccess or thread.
  *
- * @param ring_id
- *  added ring id.
- *
- * @retval 0~   ring_port_id.
- * @retval -1   failed.
+ * @param[in] ring_id added ring id.
+ * @return ring port ID, or -1 if failed.
  */
+/* TODO(yasufum) consider to merge to shared. */
 int add_ring_pmd(int ring_id);
 
 /**
@@ -308,16 +298,13 @@ struct core_info *get_core_info(unsigned int lcore_id);
 /**
  * Port type to string
  *
- * @param port
- *  Character string of Port type to be converted.
- * @param iface_type
- *  port interface type
- * @param iface_no
- *  interface no
- *
- * @retval SPPWK_RET_OK succeeded.
- * @retval SPPWK_RET_NG failed.
+ * @param port String of port type to be converted.
+ * @param iface_type Interface type.
+ * @param iface_no Interface number.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
+/* TODO(yasufum) consider to merge to shared. */
 int
 spp_format_port_string(char *port, enum port_type iface_type, int iface_no);
 
@@ -340,47 +327,35 @@ spp_format_port_string(char *port, enum port_type iface_type, int iface_no);
 /**
  * Set mange data address
  *
- * @param startup_param_addr
- *  g_startup_param address
- * @param iface_addr
- *  g_iface_info address
- * @param core_mng_addr
- *  g_core_info address
- * @param capture_request_addr
- *  g_capture_request address
- * @param capture_status_addr
- *  g_capture_status address
- * @param main_lcore_id
- *  main_lcore_id mask
- *
- * @retval SPPWK_RET_OK succeeded.
- * @retval SPPWK_RET_NG failed.
+ * @param startup_param_p Pointer to g_startup_param address.
+ * @param iface_p Pointer to g_iface_info address.
+ * @param core_mng_p Pointer to g_core_info address.
+ * @param capture_status_p Pointer to status of pcap.
+ * @param capture_request_p Pointer to req of pcap.
+ * @param main_lcore_id Lcore ID of main thread.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
-int spp_set_mng_data_addr(struct startup_param *startup_param_addr,
-			  struct iface_info *iface_addr,
-			  struct core_mng_info *core_mng_addr,
-			  int *capture_request_addr,
-			  int *capture_status_addr,
+int spp_set_mng_data_addr(struct startup_param *startup_param_p,
+			  struct iface_info *iface_p,
+			  struct core_mng_info *core_mng_p,
+			  int *capture_request_p,
+			  int *capture_status_p,
 			  unsigned int main_lcore_id);
 
 /**
  * Get mange data address
  *
- * @param iface_addr
- *  g_startup_param write address
- * @param iface_addr
- *  g_iface_info write address
- * @param core_mng_addr
- *  g_core_mng_info write address
- * @param change_core_addr
- *  g_capture_request write address
- * @param change_component_addr
- *  g_capture_status write address
+ * @param startup_param_p Pointer to startup params.
+ * @param iface_p Pointer to g_iface_info.
+ * @param core_mng_p Pointer to g_core_mng_info.
+ * @param capture_request_p Pointer to status of pcap.
+ * @param capture_status_p Pointer to req of pcap.
  */
-void spp_get_mng_data_addr(struct startup_param **startup_param_addr,
-			   struct iface_info **iface_addr,
-			   struct core_mng_info **core_mng_addr,
-			   int **capture_request_addr,
-			   int **capture_status_addr);
+void spp_get_mng_data_addr(struct startup_param **startup_param_p,
+			   struct iface_info **iface_p,
+			   struct core_mng_info **core_mng_p,
+			   int **capture_request_p,
+			   int **capture_status_p);
 
 #endif
diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.c b/src/shared/secondary/spp_worker_th/cmd_parser.c
index 10d46d8..cd79bdb 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.c
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.c
@@ -632,7 +632,7 @@ parse_mac_addr(void *output, const char *arg_val,
 
 	/* If given value is the default, use dummy address instead. */
 	if (unlikely(strcmp(str_val, SPPWK_TERM_DEFAULT) == 0))
-		str_val = SPP_DEFAULT_CLASSIFIED_DMY_ADDR_STR;
+		str_val = CLS_DUMMY_ADDR_STR;
 
 	/* Check if the given value is valid. */
 	res = sppwk_convert_mac_str_to_int64(str_val);
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index f51157a..7d7388d 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -23,7 +23,7 @@ static int append_error_details_value(const char *name, char **output,
 
 /**
  * List of worker process type. The order of items should be same as the order
- * of enum `secondary_type` in cmd_utils.h.
+ * of enum `wk_proc_type` in cmd_utils.h.
  */
 /* TODO(yasufum) Add "pcap" after spp_pcap is made to use shared. */
 const char *SPPWK_PROC_TYPE_LIST[] = {
@@ -179,7 +179,7 @@ append_vlan_block(const char *name, char **output,
 	}
 
 	spp_port_ability_get_info(port_id, dir, &info);
-	for (i = 0; i < SPP_PORT_ABILITY_MAX; i++) {
+	for (i = 0; i < PORT_ABL_MAX; i++) {
 		switch (info[i].ops) {
 		case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
 		case SPPWK_PORT_ABL_OPS_DEL_VLANTAG:
@@ -194,14 +194,14 @@ append_vlan_block(const char *name, char **output,
 			 * An if statement after loop termination is false
 			 * by "maximum+1 ".
 			 */
-			i = SPP_PORT_ABILITY_MAX + 1;
+			i = PORT_ABL_MAX + 1;
 			break;
 		default:
 			/* not used */
 			break;
 		}
 	}
-	if (i == SPP_PORT_ABILITY_MAX) {
+	if (i == PORT_ABL_MAX) {
 		ret = append_vlan_value(&tmp_buff, SPPWK_PORT_ABL_OPS_NONE,
 				0, 0);
 		if (unlikely(ret < SPP_RET_OK))
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index d68b0d6..7139865 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -5,14 +5,13 @@
 #ifndef _SPPWK_CMD_UTILS_H_
 #define _SPPWK_CMD_UTILS_H_
 
-#include <netinet/in.h>
-
 /**
  * @file cmd_utils.h
  *
  * Command utility functions for SPP worker thread.
  */
 
+#include <netinet/in.h>
 #include "shared/common.h"
 
 /**
@@ -24,6 +23,7 @@
 #define SPPWK_TYPE_MRG_STR "merge"
 #define SPPWK_TYPE_FWD_STR "forward"
 #define SPPWK_TYPE_MIR_STR "mirror"
+#define SPPWK_TYPE_PCAP_STR "pcap"
 #define SPPWK_TYPE_NONE_STR "unuse"
 
 /** Identifier string for each interface */
@@ -31,19 +31,22 @@
 #define SPP_IFTYPE_VHOST_STR "vhost"
 #define SPP_IFTYPE_RING_STR  "ring"
 
-/** Update wait timer (micro sec) */
-#define SPP_CHANGE_UPDATE_INTERVAL 10
+/** Waiting time for checking update (not used for spp_pcap). */
+#define SPP_CHANGE_UPDATE_INTERVAL 10  /* micro sec */
 
-/* Used for index of arrary of management data which has two sides. */
+/**
+ * Used for index of arrary of management data which has two sides. It is not
+ * used for spp_pcap.
+ */
 #define TWO_SIDES 2
 
 #define STR_LEN_SHORT 32  /* Size of short string. */
 #define STR_LEN_NAME 128  /* Size of string for names. */
 
 /* TODO(yasufum) confirm usage of this value and why it is 4. */
-#define SPP_PORT_ABILITY_MAX 4  /* Max num of port abilities. */
+#define PORT_ABL_MAX 4  /* Max num of port abilities. */
 
-/** Maximum VLAN PCP */
+/** Maximum VLAN PCP, used only for spp_vf. */
 #define SPP_VLAN_PCP_MAX 7
 
 /* Max number of core status check */
@@ -52,11 +55,11 @@
 /** Character sting for default port of classifier */
 #define SPPWK_TERM_DEFAULT "default"
 
-/** Value for default MAC address of classifier */
-#define SPP_DEFAULT_CLASSIFIED_DMY_ADDR     0x010000000000
-
-/** Character sting for default MAC address of classifier */
-#define SPP_DEFAULT_CLASSIFIED_DMY_ADDR_STR "00:00:00:00:00:01"
+/**
+ * Character sting for default MAC address of classifier.
+ * It is used only for spp_vf.
+ */
+#define CLS_DUMMY_ADDR_STR "00:00:00:00:00:01"
 
 /* Sampling interval timer for latency evaluation */
 #define SPP_RING_LATENCY_STATS_SAMPLING_INTERVAL 1000000
@@ -181,7 +184,7 @@ struct sppwk_port_info {
 	int iface_no;
 	int ethdev_port_id;  /**< Consistent ID of ethdev */
 	struct sppwk_cls_attrs cls_attrs;
-	struct spp_port_ability ability[SPP_PORT_ABILITY_MAX];
+	struct spp_port_ability ability[PORT_ABL_MAX];
 };
 
 /* Attributes of SPP worker thread named as `component`. */
@@ -196,7 +199,7 @@ struct sppwk_comp_info {
 	struct sppwk_port_info *tx_ports[RTE_MAX_ETHPORTS]; /**< tx ports */
 };
 
-/* Manage given options as global variable */
+/* Manage cmd arg as global variable, used for spp_vf and spp_mirror. */
 struct startup_param {
 	int client_id;  /* Client ID */
 	char server_ip[INET_ADDRSTRLEN];  /* IP address of spp-ctl */
@@ -221,7 +224,10 @@ struct core_info {
 	int id[RTE_MAX_LCORE];  /* IDs of components run on the lcore. */
 };
 
-/* Manage core status and component info as global variable. */
+/**
+ * Manage core status and comp info as global variable,
+ * used for spp_vf and spp_mirror.
+ */
 struct core_mng_info {
 	volatile enum sppwk_lcore_status status;
 	volatile int ref_index;  /* index for reference */
@@ -256,6 +262,7 @@ typedef int (*spp_iterate_core_element_proc)(
  * iterate core table parameters used to list content of lcore table for.
  * showing status or so.
  */
+/* TODO(yasufum) refactor name of func and vars, and comments. */
 struct spp_iterate_core_params {
 	char *output;  /* Buffer used for output */
 	/** The function for creating core information */
@@ -544,7 +551,7 @@ int64_t sppwk_convert_mac_str_to_int64(const char *macaddr);
 /**
  * Set mange data address.
  *
- * @param startup_param_p Pointer to  g_startup_param address.
+ * @param startup_param_p Pointer to g_startup_param address.
  * @param iface_p Pointer to g_iface_info address.
  * @param component_p Pointer to g_component_info address.
  * @param core_mng_p Pointer to g_core_info address.
@@ -568,12 +575,12 @@ int sppwk_set_mng_data(struct startup_param *startup_param_p,
  * Get mange data address.
  *
  * @param startup_param_p Pointer to startup params.
- * @param iface_addr Pointer to g_iface_info.
- * @param component_addr Pointer to g_component_info.
- * @param core_mng_addr Pointer to g_core_mng_info.
- * @param change_core_addr Pointer to change_core_addr.
- * @param change_component_addr Pointer to g_change_component.
- * @param backup_info_addr Pointer to g_backup_info.
+ * @param iface_p Pointer to g_iface_info.
+ * @param component_p Pointer to g_component_info.
+ * @param core_mng_p Pointer to g_core_mng_info.
+ * @param change_core_p Pointer to change_core_addr.
+ * @param change_component_p Pointer to g_change_component.
+ * @param backup_info_p Pointer to g_backup_info.
  */
 void sppwk_get_mng_data(struct startup_param **startup_param_p,
 		struct iface_info **iface_p,
diff --git a/src/shared/secondary/spp_worker_th/spp_port.c b/src/shared/secondary/spp_worker_th/spp_port.c
index 0b79531..8de8460 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.c
+++ b/src/shared/secondary/spp_worker_th/spp_port.c
@@ -16,7 +16,7 @@
 struct port_abl_info {
 	volatile int ref_index; /* Index to reference area. */
 	volatile int upd_index; /* Index to update area. */
-	struct spp_port_ability ability[TWO_SIDES][SPP_PORT_ABILITY_MAX];
+	struct spp_port_ability ability[TWO_SIDES][PORT_ABL_MAX];
 				/* Port ability information. */
 };
 
@@ -267,8 +267,8 @@ port_ability_set_ability(struct sppwk_port_info *port,
 
 	out_ability = mng->ability[mng->upd_index];
 	memset(out_ability, 0x00, sizeof(struct spp_port_ability)
-			* SPP_PORT_ABILITY_MAX);
-	for (in_cnt = 0; in_cnt < SPP_PORT_ABILITY_MAX; in_cnt++) {
+			* PORT_ABL_MAX);
+	for (in_cnt = 0; in_cnt < PORT_ABL_MAX; in_cnt++) {
 		if (in_ability[in_cnt].dir != dir)
 			continue;
 
@@ -338,7 +338,7 @@ port_ability_each_operation(uint16_t port_id,
 	if (unlikely(info[0].ops == SPPWK_PORT_ABL_OPS_NONE))
 		return nb_pkts;
 
-	for (cnt = 0; cnt < SPP_PORT_ABILITY_MAX; cnt++) {
+	for (cnt = 0; cnt < PORT_ABL_MAX; cnt++) {
 		if (info[cnt].ops == SPPWK_PORT_ABL_OPS_NONE)
 			break;
 
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 4387fd5..c7873e3 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -58,6 +58,9 @@
 /* VID of VLAN untagged */
 #define VLAN_UNTAGGED_VID 0x0fff
 
+/** Value for default MAC address of classifier */
+#define CLS_DUMMY_ADDR 0x010000000000
+
 /* classifier management information */
 struct management_info {
 	/* classifier information */
@@ -396,8 +399,7 @@ init_component_info(struct cls_comp_info *cmp_info,
 		cmp_info->mac_addr_entry = 1;
 
 		/* store default classified */
-		if (unlikely(tx_port->cls_attrs.mac_addr ==
-				SPP_DEFAULT_CLASSIFIED_DMY_ADDR)) {
+		if (unlikely(tx_port->cls_attrs.mac_addr == CLS_DUMMY_ADDR)) {
 			mac_cls->default_cls_idx = i;
 			RTE_LOG(INFO, SPP_CLASSIFIER_MAC,
 					"default classified. vid=%hu, "
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index 4a78ab2..4be3188 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -297,11 +297,11 @@ update_port(enum sppwk_action wk_action,
 		if (port_idx >= SPP_RET_OK) {
 			/* registered */
 			if (ability->ops == SPPWK_PORT_ABL_OPS_ADD_VLANTAG) {
-				while ((cnt < SPP_PORT_ABILITY_MAX) &&
+				while ((cnt < PORT_ABL_MAX) &&
 					    (port_info->ability[cnt].ops !=
 					    SPPWK_PORT_ABL_OPS_ADD_VLANTAG))
 					cnt++;
-				if (cnt >= SPP_PORT_ABILITY_MAX) {
+				if (cnt >= PORT_ABL_MAX) {
 					RTE_LOG(ERR, VF_CMD_RUNNER, "update VLAN tag "
 						"Non-registratio\n");
 					return SPP_RET_NG;
@@ -322,12 +322,12 @@ update_port(enum sppwk_action wk_action,
 		}
 
 		if (ability->ops != SPPWK_PORT_ABL_OPS_NONE) {
-			while ((cnt < SPP_PORT_ABILITY_MAX) &&
+			while ((cnt < PORT_ABL_MAX) &&
 					(port_info->ability[cnt].ops !=
 					SPPWK_PORT_ABL_OPS_NONE)) {
 				cnt++;
 			}
-			if (cnt >= SPP_PORT_ABILITY_MAX) {
+			if (cnt >= PORT_ABL_MAX) {
 				RTE_LOG(ERR, VF_CMD_RUNNER,
 						"No space of port ability.\n");
 				return SPP_RET_NG;
@@ -344,7 +344,7 @@ update_port(enum sppwk_action wk_action,
 		break;
 
 	case SPPWK_ACT_DEL:
-		for (cnt = 0; cnt < SPP_PORT_ABILITY_MAX; cnt++) {
+		for (cnt = 0; cnt < PORT_ABL_MAX; cnt++) {
 			if (port_info->ability[cnt].ops ==
 					SPPWK_PORT_ABL_OPS_NONE)
 				continue;
-- 
2.17.1



From spp-request@dpdk.org Mon Jun 24 19:40:00 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL001YIMYXR150@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 19:40:09 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTL00L1AMYXVX00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:40:09 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTL009UYMYX7Y40@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:40:09 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id D25F77E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:40:09 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id D15208E605D	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:40:09 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id C6AF58E6056	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:40:09 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 480B38E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:40:09 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:40:09 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAe9p7031925;	Mon,
 24 Jun 2019 19:40:09 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5OAe9xG031924;	Mon, 24 Jun 2019 19:40:09 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5OAe84x031921	for unknown; Mon,
 24 Jun 2019 19:40:09 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAe8S2022124 for
 unknown; Mon, 24 Jun 2019 19:40:08 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAe8Fw022121 for
 unknown; Mon, 24 Jun 2019 19:40:08 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5OAe1se020249	for unknown; Mon,
 24 Jun 2019 19:40:07 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 62E861BF0E	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 24 Jun 2019 12:40:01 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 19
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 24 Jun 2019 12:40:00 +0200
Message-id: <mailman.23408.1561372800.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH] shared/sec: rename structs of port ability
      (yasufum.o@gmail.com)
   2. [PATCH] spp_pcap: rename funcs and vars in cmd_util.h
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon, 24 Jun 2019 19:39:39 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] shared/sec: rename structs of port ability
Message-ID: <20190624103939.24655-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

In spp_vf, attribute of port such as direction, operation functions or
VLAN tag info as port ability. However, names of structures are not
appropriate, for example `spp_port_ability` is owned by
`port_ability_mng_info` to contain a set of abilities and it is owned
by `port_ability_port_mng_info` to contain other attributes. It is so
confusing and not describing the features.

This update is to fix the issue, to `port_abl_mng_info` has
`port_abl_info`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/cmd_utils.h       |  7 +--
 src/shared/secondary/spp_worker_th/spp_port.c | 47 ++++++++-----------
 src/shared/secondary/spp_worker_th/spp_port.h | 31 ++++--------
 3 files changed, 33 insertions(+), 52 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index d90aff5..d68b0d6 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -40,6 +40,7 @@
 #define STR_LEN_SHORT 32  /* Size of short string. */
 #define STR_LEN_NAME 128  /* Size of string for names. */
 
+/* TODO(yasufum) confirm usage of this value and why it is 4. */
 #define SPP_PORT_ABILITY_MAX 4  /* Max num of port abilities. */
 
 /** Maximum VLAN PCP */
@@ -139,7 +140,7 @@ enum sppwk_proc_type {
 };
 
 /** VLAN tag information */
-struct spp_vlantag_info {
+struct sppwk_vlan_tag {
 	int vid; /**< VLAN ID */
 	int pcp; /**< Priority Code Point */
 	int tci; /**< Tag Control Information */
@@ -148,7 +149,7 @@ struct spp_vlantag_info {
 /* Ability for vlantag for a port. */
 union spp_ability_data {
 	/** VLAN tag information */
-	struct spp_vlantag_info vlantag;
+	struct sppwk_vlan_tag vlantag;
 };
 
 /* Port ability information. */
@@ -162,7 +163,7 @@ struct spp_port_ability {
 struct sppwk_cls_attrs {
 	uint64_t mac_addr;  /**< Mac address (binary) */
 	char mac_addr_str[STR_LEN_SHORT];  /**< Mac address (text) */
-	struct spp_vlantag_info vlantag;   /**< VLAN tag information */
+	struct sppwk_vlan_tag vlantag;   /**< VLAN tag information */
 };
 
 /**
diff --git a/src/shared/secondary/spp_worker_th/spp_port.c b/src/shared/secondary/spp_worker_th/spp_port.c
index 9f7ac5a..0b79531 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.c
+++ b/src/shared/secondary/spp_worker_th/spp_port.c
@@ -13,30 +13,23 @@
 #include "ringlatencystats.h"
 
 /* Port ability management information */
-struct port_ability_mng_info {
-	volatile int ref_index; /* Index to reference area */
-	volatile int upd_index; /* Index to update area    */
+struct port_abl_info {
+	volatile int ref_index; /* Index to reference area. */
+	volatile int upd_index; /* Index to update area. */
 	struct spp_port_ability ability[TWO_SIDES][SPP_PORT_ABILITY_MAX];
-				/* Port ability information */
+				/* Port ability information. */
 };
 
 /* Port ability port information */
-struct port_ability_port_mng_info {
-	/* Interface type (phy/vhost/ring) */
-	enum port_type iface_type;
-
-	/* Interface number */
-	int            iface_no;
-
-	/* Management data of port ability for receiving */
-	struct port_ability_mng_info rx;
-
-	/* Management data of port ability for sending */
-	struct port_ability_mng_info tx;
+struct port_mng_info {
+	enum port_type iface_type;  /* Interface type (phy, vhost or so). */
+	int iface_no;  /* Interface number. */
+	struct port_abl_info rx;  /* Mng data of port ability for RX. */
+	struct port_abl_info tx;  /* Mng data of port ability for Tx. */
 };
 
 /* Information for VLAN tag management. */
-struct port_ability_port_mng_info g_port_mng_info[RTE_MAX_ETHPORTS];
+struct port_mng_info g_port_mng_info[RTE_MAX_ETHPORTS];
 
 /* TPID of VLAN. */
 static uint16_t g_vlan_tpid;
@@ -62,7 +55,7 @@ spp_port_ability_get_info(
 		int port_id, enum sppwk_port_dir dir,
 		struct spp_port_ability **info)
 {
-	struct port_ability_mng_info *mng = NULL;
+	struct port_abl_info *mng = NULL;
 
 	switch (dir) {
 	case SPPWK_PORT_DIR_RX:
@@ -97,7 +90,7 @@ add_vlantag_packet(
 	struct ether_hdr *old_ether = NULL;
 	struct ether_hdr *new_ether = NULL;
 	struct vlan_hdr  *vlan      = NULL;
-	const struct spp_vlantag_info *vlantag = &data->vlantag;
+	const struct sppwk_vlan_tag *vlantag = &data->vlantag;
 
 	old_ether = rte_pktmbuf_mtod(pkt, struct ether_hdr *);
 	if (old_ether->ether_type == g_vlan_tpid) {
@@ -208,7 +201,7 @@ spp_port_ability_change_index(
 	static int rx_list[RTE_MAX_ETHPORTS];
 	static int num_tx;
 	static int tx_list[RTE_MAX_ETHPORTS];
-	struct port_ability_mng_info *mng = NULL;
+	struct port_abl_info *mng = NULL;
 
 	if (type == PORT_ABILITY_CHG_INDEX_UPD) {
 		switch (dir) {
@@ -246,18 +239,16 @@ spp_port_ability_change_index(
 
 /* Set ability data of port ability. */
 static void
-port_ability_set_ability(
-		struct sppwk_port_info *port,
+port_ability_set_ability(struct sppwk_port_info *port,
 		enum sppwk_port_dir dir)
 {
 	int in_cnt, out_cnt = 0;
 	int port_id = port->ethdev_port_id;
-	struct port_ability_port_mng_info *port_mng =
-						&g_port_mng_info[port_id];
-	struct port_ability_mng_info *mng         = NULL;
-	struct spp_port_ability      *in_ability  = port->ability;
-	struct spp_port_ability      *out_ability = NULL;
-	struct spp_vlantag_info      *tag         = NULL;
+	struct port_mng_info *port_mng = &g_port_mng_info[port_id];
+	struct port_abl_info *mng = NULL;
+	struct spp_port_ability *in_ability = port->ability;
+	struct spp_port_ability *out_ability = NULL;
+	struct sppwk_vlan_tag *tag = NULL;
 
 	port_mng->iface_type = port->iface_type;
 	port_mng->iface_no   = port->iface_no;
diff --git a/src/shared/secondary/spp_worker_th/spp_port.h b/src/shared/secondary/spp_worker_th/spp_port.h
index 5cde7d2..a6fb313 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.h
+++ b/src/shared/secondary/spp_worker_th/spp_port.h
@@ -19,11 +19,8 @@
 
 /** Type for changing index. */
 enum port_ability_chg_index_type {
-	/** Type for changing index to reference area. */
-	PORT_ABILITY_CHG_INDEX_REF,
-
-	/** Type for changing index to update area. */
-	PORT_ABILITY_CHG_INDEX_UPD,
+	PORT_ABILITY_CHG_INDEX_REF,  /** To change index to reference area. */
+	PORT_ABILITY_CHG_INDEX_UPD,  /** To change index to update area. */
 };
 
 /** Initialize port ability. */
@@ -32,12 +29,9 @@ void spp_port_ability_init(void);
 /**
  * Get information of port ability.
  *
- * @param port_id
- *  The port identifier of the Ethernet device.
- * @param rxtx
- *  rx/tx identifier of port_id.
- * @param info
- *  Port ability information.
+ * @param port_id Etherdev ID.
+ * @param rxtx RX/TX ID of port_id.
+ * @param info Port ability information.
  */
 void spp_port_ability_get_info(
 		int port_id, enum sppwk_port_dir dir,
@@ -46,12 +40,9 @@ void spp_port_ability_get_info(
 /**
  * Change index of management information.
  *
- * @param port_id
- *  The port identifier of the Ethernet device.
- * @param rxtx
- *  rx/tx identifier of port_id.
- * @param type
- *  Type for changing index.
+ * @param port_id Etherdev ID.
+ * @param rxtx RX/TX ID of port_id.
+ * @param type Type for changing index.
  */
 void spp_port_ability_change_index(
 		enum port_ability_chg_index_type type,
@@ -69,8 +60,7 @@ void spp_port_ability_update(const struct sppwk_comp_info *component);
 /**
  * Wrapper function for rte_eth_rx_burst().
  *
- * @param port_id
- *  The port identifier of the Ethernet device.
+ * @param port_id Etherdev ID.
  * @param queue_id
  *  The index of the receive queue from which to retrieve input packets.
  *  SPP is fixed at 0.
@@ -91,8 +81,7 @@ uint16_t spp_eth_rx_burst(uint16_t port_id, uint16_t queue_id,
 /**
  * Wrapper function for rte_eth_tx_burst().
  *
- * @param port_id
- *  The port identifier of the Ethernet device.
+ * @param port_id Etherdev ID.
  * @param queue_id
  *  The index of the transmit queue through which output packets must be sent.
  *  SPP is fixed at 0.
-- 
2.17.1



------------------------------

Message: 2
Date: Mon, 24 Jun 2019 19:39:52 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] spp_pcap: rename funcs and vars in cmd_util.h
Message-ID: <20190624103952.24710-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

There are many similar funcs and vars in shared and spp_pcap. Some of
them have same features should be merged to shared libs. This update is
the first step to the task, rename funcs and vars in spp_pcap to be
exactly the same, and add TODOs.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/mir_cmd_runner.c                   |  10 +-
 src/pcap/cmd_utils.c                          |  70 ++++----
 src/pcap/cmd_utils.h                          | 151 ++++++++----------
 .../secondary/spp_worker_th/cmd_parser.c      |   2 +-
 .../spp_worker_th/cmd_res_formatter.c         |   8 +-
 .../secondary/spp_worker_th/cmd_utils.h       |  51 +++---
 src/shared/secondary/spp_worker_th/spp_port.c |   8 +-
 src/vf/classifier_mac.c                       |   6 +-
 src/vf/vf_cmd_runner.c                        |  10 +-
 9 files changed, 150 insertions(+), 166 deletions(-)

diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index 312ded5..abbd6f6 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -176,11 +176,11 @@ update_port(enum sppwk_action wk_action,
 			/* registered */
 			/* TODO(yasufum) confirm it is needed for spp_mirror. */
 			if (ability->ops == SPPWK_PORT_ABL_OPS_ADD_VLANTAG) {
-				while ((cnt < SPP_PORT_ABILITY_MAX) &&
+				while ((cnt < PORT_ABL_MAX) &&
 					    (port_info->ability[cnt].ops !=
 					    SPPWK_PORT_ABL_OPS_ADD_VLANTAG))
 					cnt++;
-				if (cnt >= SPP_PORT_ABILITY_MAX) {
+				if (cnt >= PORT_ABL_MAX) {
 					RTE_LOG(ERR, MIR_CMD_RUNNER, "update VLAN tag "
 						"Non-registratio\n");
 					return SPP_RET_NG;
@@ -201,12 +201,12 @@ update_port(enum sppwk_action wk_action,
 		}
 
 		if (ability->ops != SPPWK_PORT_ABL_OPS_NONE) {
-			while ((cnt < SPP_PORT_ABILITY_MAX) &&
+			while ((cnt < PORT_ABL_MAX) &&
 					(port_info->ability[cnt].ops !=
 					SPPWK_PORT_ABL_OPS_NONE)) {
 				cnt++;
 			}
-			if (cnt >= SPP_PORT_ABILITY_MAX) {
+			if (cnt >= PORT_ABL_MAX) {
 				RTE_LOG(ERR, MIR_CMD_RUNNER,
 						"No space of port ability.\n");
 				return SPP_RET_NG;
@@ -223,7 +223,7 @@ update_port(enum sppwk_action wk_action,
 		break;
 
 	case SPPWK_ACT_DEL:
-		for (cnt = 0; cnt < SPP_PORT_ABILITY_MAX; cnt++) {
+		for (cnt = 0; cnt < PORT_ABL_MAX; cnt++) {
 			if (port_info->ability[cnt].ops ==
 					SPPWK_PORT_ABL_OPS_NONE)
 				continue;
diff --git a/src/pcap/cmd_utils.c b/src/pcap/cmd_utils.c
index 726ad9e..d9e09e5 100644
--- a/src/pcap/cmd_utils.c
+++ b/src/pcap/cmd_utils.c
@@ -13,7 +13,7 @@
 #define RTE_LOGTYPE_PCAP_UTILS RTE_LOGTYPE_USER2
 
 /* Manage data to addoress */
-struct manage_data_addr_info {
+struct mng_data_info {
 	struct startup_param	  *p_startup_param;
 	struct iface_info	  *p_iface_info;
 	struct core_mng_info	  *p_core_info;
@@ -24,7 +24,7 @@ struct manage_data_addr_info {
 
 /* Declare global variables */
 /* Logical core ID for main process */
-static struct manage_data_addr_info g_mng_data_addr;
+static struct mng_data_info g_mng_data_addr;
 
 /* generation of the ring port */
 int
@@ -206,11 +206,11 @@ set_nic_interface(void)
 	struct iface_info *p_iface_info = g_mng_data_addr.p_iface_info;
 
 	/* NIC Setting */
-	p_iface_info->num_nic = rte_eth_dev_count_avail();
-	if (p_iface_info->num_nic > RTE_MAX_ETHPORTS)
-		p_iface_info->num_nic = RTE_MAX_ETHPORTS;
+	p_iface_info->nof_phys = rte_eth_dev_count_avail();
+	if (p_iface_info->nof_phys > RTE_MAX_ETHPORTS)
+		p_iface_info->nof_phys = RTE_MAX_ETHPORTS;
 
-	for (nic_cnt = 0; nic_cnt < p_iface_info->num_nic; nic_cnt++) {
+	for (nic_cnt = 0; nic_cnt < p_iface_info->nof_phys; nic_cnt++) {
 		p_iface_info->nic[nic_cnt].iface_type   = PHY;
 		p_iface_info->nic[nic_cnt].ethdev_port_id = nic_cnt;
 	}
@@ -258,47 +258,47 @@ int spp_format_port_string(char *port, enum port_type iface_type, int iface_no)
 }
 
 /* Set mange data address */
-int spp_set_mng_data_addr(struct startup_param *startup_param_addr,
-			  struct iface_info *iface_addr,
-			  struct core_mng_info *core_mng_addr,
-			  int *capture_request_addr,
-			  int *capture_status_addr,
+int spp_set_mng_data_addr(struct startup_param *startup_param_p,
+			  struct iface_info *iface_p,
+			  struct core_mng_info *core_mng_p,
+			  int *capture_request_p,
+			  int *capture_status_p,
 			  unsigned int main_lcore_id)
 {
-	if (startup_param_addr == NULL || iface_addr == NULL ||
-			core_mng_addr == NULL ||
-			capture_request_addr == NULL ||
-			capture_status_addr == NULL ||
+	if (startup_param_p == NULL || iface_p == NULL ||
+			core_mng_p == NULL ||
+			capture_request_p == NULL ||
+			capture_status_p == NULL ||
 			main_lcore_id == 0xffffffff)
 		return SPPWK_RET_NG;
 
-	g_mng_data_addr.p_startup_param = startup_param_addr;
-	g_mng_data_addr.p_iface_info = iface_addr;
-	g_mng_data_addr.p_core_info = core_mng_addr;
-	g_mng_data_addr.p_capture_request = capture_request_addr;
-	g_mng_data_addr.p_capture_status = capture_status_addr;
+	g_mng_data_addr.p_startup_param = startup_param_p;
+	g_mng_data_addr.p_iface_info = iface_p;
+	g_mng_data_addr.p_core_info = core_mng_p;
+	g_mng_data_addr.p_capture_request = capture_request_p;
+	g_mng_data_addr.p_capture_status = capture_status_p;
 	g_mng_data_addr.main_lcore_id = main_lcore_id;
 
 	return SPPWK_RET_OK;
 }
 
 /* Get manage data address */
-void spp_get_mng_data_addr(struct startup_param **startup_param_addr,
-			   struct iface_info **iface_addr,
-			   struct core_mng_info **core_mng_addr,
-			   int **capture_request_addr,
-			   int **capture_status_addr)
+void spp_get_mng_data_addr(struct startup_param **startup_param_p,
+			   struct iface_info **iface_p,
+			   struct core_mng_info **core_mng_p,
+			   int **capture_request_p,
+			   int **capture_status_p)
 {
 
-	if (startup_param_addr != NULL)
-		*startup_param_addr = g_mng_data_addr.p_startup_param;
-	if (iface_addr != NULL)
-		*iface_addr = g_mng_data_addr.p_iface_info;
-	if (core_mng_addr != NULL)
-		*core_mng_addr = g_mng_data_addr.p_core_info;
-	if (capture_request_addr != NULL)
-		*capture_request_addr = g_mng_data_addr.p_capture_request;
-	if (capture_status_addr != NULL)
-		*capture_status_addr = g_mng_data_addr.p_capture_status;
+	if (startup_param_p != NULL)
+		*startup_param_p = g_mng_data_addr.p_startup_param;
+	if (iface_p != NULL)
+		*iface_p = g_mng_data_addr.p_iface_info;
+	if (core_mng_p != NULL)
+		*core_mng_p = g_mng_data_addr.p_core_info;
+	if (capture_request_p != NULL)
+		*capture_request_p = g_mng_data_addr.p_capture_request;
+	if (capture_status_p != NULL)
+		*capture_status_p = g_mng_data_addr.p_capture_status;
 
 }
diff --git a/src/pcap/cmd_utils.h b/src/pcap/cmd_utils.h
index d38e0eb..46747e9 100644
--- a/src/pcap/cmd_utils.h
+++ b/src/pcap/cmd_utils.h
@@ -21,22 +21,18 @@
 #include <netinet/in.h>
 #include "shared/common.h"
 
-/* Max number of core status check */
-#define SPP_CORE_STATUS_CHECK_MAX 5
-
-/** The length of shortest character string */
-#define SPP_MIN_STR_LEN   32
-
-/** The length of NAME string */
-#define SPP_NAME_STR_LEN  128
-
-/** Maximum number of port abilities available */
-#define SPP_PORT_ABILITY_MAX 4
-
 /** Identifier string for each interface */
 #define SPP_IFTYPE_NIC_STR   "phy"
 #define SPP_IFTYPE_RING_STR  "ring"
 
+#define STR_LEN_SHORT 32  /* Size of short string. */
+#define STR_LEN_NAME 128  /* Size of string for names. */
+
+#define PORT_ABL_MAX 4  /* Max num of port abilities. */
+
+/* Max number of core status check */
+#define SPP_CORE_STATUS_CHECK_MAX 5
+
 /* TODO(yasufum) merge it to the same definition in shared/.../cmd_utils.h */
 /* State on core */
 enum sppwk_lcore_status {
@@ -127,7 +123,7 @@ struct spp_port_ability {
 /* Attributes for classifying . */
 struct sppwk_cls_attrs {
 	uint64_t mac_addr;  /**< Mac address (binary) */
-	char mac_addr_str[SPP_MIN_STR_LEN];  /**< Mac address (text) */
+	char mac_addr_str[STR_LEN_SHORT];  /**< Mac address (text) */
 	struct spp_vlantag_info vlantag;   /**< VLAN tag information */
 };
 
@@ -143,13 +139,13 @@ struct sppwk_port_info {
 	int iface_no;
 	int ethdev_port_id;  /**< Consistent ID of ethdev */
 	struct sppwk_cls_attrs cls_attrs;
-	struct spp_port_ability ability[SPP_PORT_ABILITY_MAX];
+	struct spp_port_ability ability[PORT_ABL_MAX];
 };
 
 /* TODO(yasufum) merge it to the same definition in shared/.../cmd_utils.h */
 /* Attributes of SPP worker thread named as `component`. */
 struct sppwk_comp_info {
-	char name[SPP_NAME_STR_LEN];  /**< Component name */
+	char name[STR_LEN_NAME];  /**< Component name */
 	enum sppwk_worker_type wk_type;  /**< Type of worker thread */
 	unsigned int lcore_id;
 	int comp_id;  /**< Component ID */
@@ -161,20 +157,18 @@ struct sppwk_comp_info {
 
 /* Manage given options as global variable */
 struct startup_param {
-	int client_id;		/* Client ID */
-	char server_ip[INET_ADDRSTRLEN];
-				/* IP address stiring of spp-ctl */
-	int server_port;	/* Port Number of spp-ctl */
+	int client_id;  /* Client ID */
+	char server_ip[INET_ADDRSTRLEN];  /* IP address of spp-ctl */
+	int server_port;  /* Port Number of spp-ctl */
 };
 
 /* Manage interfaces and port information as global variable */
+/* TODO(yasufum) confirm why nof_rings is required not used in anywhere. */
 struct iface_info {
-	int num_nic;            /* The number of phy */
-	int num_ring;           /* The number of ring */
+	int nof_phys;    /* Number of phy ports */
+	int nof_rings;   /* Number of ring ports */
 	struct sppwk_port_info nic[RTE_MAX_ETHPORTS];
-				/* Port information of phy */
 	struct sppwk_port_info ring[RTE_MAX_ETHPORTS];
-				/* Port information of ring */
 };
 
 /* Manage core status and component information as global variable */
@@ -184,46 +178,42 @@ struct core_mng_info {
 };
 
 /* TODO(yasufum) refactor name of func and vars, and comments. */
+/* TODO(yasufum) confirm this var is used in spp_pcap. */
+/* TODO(yasufum) if so, consider to merge to shared. */
 struct spp_iterate_core_params;
 /**
- * definition of iterated core element procedure function
- * which is member of spp_iterate_core_params structure.
- * Above structure is used when listing core information
- * (e.g) create resonse to status command.
+ * Define func to iterate lcore to list core information for showing status
+ * or so, as a member of struct `spp_iterate_core_params`.
  */
 typedef int (*spp_iterate_core_element_proc)(
 		struct spp_iterate_core_params *params,
 		const unsigned int lcore_id,
-		const char *name,
-		const char *type,
-		const int num_rx,
+		const char *wk_name,
+		const char *wk_type,
+		const int nof_rx,
 		const struct sppwk_port_idx *rx_ports,
-		const int num_tx,
+		const int nof_tx,
 		const struct sppwk_port_idx *tx_ports);
 
-/* TODO(yasufum) refactor name of func and vars, and comments. */
 /**
- * iterate core table parameters which is
- * used when listing core table content
- * (e.g.) create response to status command.
+ * iterate core table parameters used to list content of lcore table for.
+ * showing status or so.
  */
+/* TODO(yasufum) consider to merge to shared. */
+/* TODO(yasufum) refactor name of func and vars, and comments. */
 struct spp_iterate_core_params {
-	/** Output buffer */
-	char *output;
-
+	char *output;  /* Buffer used for output */
 	/** The function for creating core information */
 	spp_iterate_core_element_proc element_proc;
 };
 
 /**
- * added ring_pmd
+ * Add ring pmd for owned proccess or thread.
  *
- * @param ring_id
- *  added ring id.
- *
- * @retval 0~   ring_port_id.
- * @retval -1   failed.
+ * @param[in] ring_id added ring id.
+ * @return ring port ID, or -1 if failed.
  */
+/* TODO(yasufum) consider to merge to shared. */
 int add_ring_pmd(int ring_id);
 
 /**
@@ -308,16 +298,13 @@ struct core_info *get_core_info(unsigned int lcore_id);
 /**
  * Port type to string
  *
- * @param port
- *  Character string of Port type to be converted.
- * @param iface_type
- *  port interface type
- * @param iface_no
- *  interface no
- *
- * @retval SPPWK_RET_OK succeeded.
- * @retval SPPWK_RET_NG failed.
+ * @param port String of port type to be converted.
+ * @param iface_type Interface type.
+ * @param iface_no Interface number.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
+/* TODO(yasufum) consider to merge to shared. */
 int
 spp_format_port_string(char *port, enum port_type iface_type, int iface_no);
 
@@ -340,47 +327,35 @@ spp_format_port_string(char *port, enum port_type iface_type, int iface_no);
 /**
  * Set mange data address
  *
- * @param startup_param_addr
- *  g_startup_param address
- * @param iface_addr
- *  g_iface_info address
- * @param core_mng_addr
- *  g_core_info address
- * @param capture_request_addr
- *  g_capture_request address
- * @param capture_status_addr
- *  g_capture_status address
- * @param main_lcore_id
- *  main_lcore_id mask
- *
- * @retval SPPWK_RET_OK succeeded.
- * @retval SPPWK_RET_NG failed.
+ * @param startup_param_p Pointer to g_startup_param address.
+ * @param iface_p Pointer to g_iface_info address.
+ * @param core_mng_p Pointer to g_core_info address.
+ * @param capture_status_p Pointer to status of pcap.
+ * @param capture_request_p Pointer to req of pcap.
+ * @param main_lcore_id Lcore ID of main thread.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
-int spp_set_mng_data_addr(struct startup_param *startup_param_addr,
-			  struct iface_info *iface_addr,
-			  struct core_mng_info *core_mng_addr,
-			  int *capture_request_addr,
-			  int *capture_status_addr,
+int spp_set_mng_data_addr(struct startup_param *startup_param_p,
+			  struct iface_info *iface_p,
+			  struct core_mng_info *core_mng_p,
+			  int *capture_request_p,
+			  int *capture_status_p,
 			  unsigned int main_lcore_id);
 
 /**
  * Get mange data address
  *
- * @param iface_addr
- *  g_startup_param write address
- * @param iface_addr
- *  g_iface_info write address
- * @param core_mng_addr
- *  g_core_mng_info write address
- * @param change_core_addr
- *  g_capture_request write address
- * @param change_component_addr
- *  g_capture_status write address
+ * @param startup_param_p Pointer to startup params.
+ * @param iface_p Pointer to g_iface_info.
+ * @param core_mng_p Pointer to g_core_mng_info.
+ * @param capture_request_p Pointer to status of pcap.
+ * @param capture_status_p Pointer to req of pcap.
  */
-void spp_get_mng_data_addr(struct startup_param **startup_param_addr,
-			   struct iface_info **iface_addr,
-			   struct core_mng_info **core_mng_addr,
-			   int **capture_request_addr,
-			   int **capture_status_addr);
+void spp_get_mng_data_addr(struct startup_param **startup_param_p,
+			   struct iface_info **iface_p,
+			   struct core_mng_info **core_mng_p,
+			   int **capture_request_p,
+			   int **capture_status_p);
 
 #endif
diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.c b/src/shared/secondary/spp_worker_th/cmd_parser.c
index 10d46d8..cd79bdb 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.c
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.c
@@ -632,7 +632,7 @@ parse_mac_addr(void *output, const char *arg_val,
 
 	/* If given value is the default, use dummy address instead. */
 	if (unlikely(strcmp(str_val, SPPWK_TERM_DEFAULT) == 0))
-		str_val = SPP_DEFAULT_CLASSIFIED_DMY_ADDR_STR;
+		str_val = CLS_DUMMY_ADDR_STR;
 
 	/* Check if the given value is valid. */
 	res = sppwk_convert_mac_str_to_int64(str_val);
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index f51157a..7d7388d 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -23,7 +23,7 @@ static int append_error_details_value(const char *name, char **output,
 
 /**
  * List of worker process type. The order of items should be same as the order
- * of enum `secondary_type` in cmd_utils.h.
+ * of enum `wk_proc_type` in cmd_utils.h.
  */
 /* TODO(yasufum) Add "pcap" after spp_pcap is made to use shared. */
 const char *SPPWK_PROC_TYPE_LIST[] = {
@@ -179,7 +179,7 @@ append_vlan_block(const char *name, char **output,
 	}
 
 	spp_port_ability_get_info(port_id, dir, &info);
-	for (i = 0; i < SPP_PORT_ABILITY_MAX; i++) {
+	for (i = 0; i < PORT_ABL_MAX; i++) {
 		switch (info[i].ops) {
 		case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
 		case SPPWK_PORT_ABL_OPS_DEL_VLANTAG:
@@ -194,14 +194,14 @@ append_vlan_block(const char *name, char **output,
 			 * An if statement after loop termination is false
 			 * by "maximum+1 ".
 			 */
-			i = SPP_PORT_ABILITY_MAX + 1;
+			i = PORT_ABL_MAX + 1;
 			break;
 		default:
 			/* not used */
 			break;
 		}
 	}
-	if (i == SPP_PORT_ABILITY_MAX) {
+	if (i == PORT_ABL_MAX) {
 		ret = append_vlan_value(&tmp_buff, SPPWK_PORT_ABL_OPS_NONE,
 				0, 0);
 		if (unlikely(ret < SPP_RET_OK))
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index d68b0d6..7139865 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -5,14 +5,13 @@
 #ifndef _SPPWK_CMD_UTILS_H_
 #define _SPPWK_CMD_UTILS_H_
 
-#include <netinet/in.h>
-
 /**
  * @file cmd_utils.h
  *
  * Command utility functions for SPP worker thread.
  */
 
+#include <netinet/in.h>
 #include "shared/common.h"
 
 /**
@@ -24,6 +23,7 @@
 #define SPPWK_TYPE_MRG_STR "merge"
 #define SPPWK_TYPE_FWD_STR "forward"
 #define SPPWK_TYPE_MIR_STR "mirror"
+#define SPPWK_TYPE_PCAP_STR "pcap"
 #define SPPWK_TYPE_NONE_STR "unuse"
 
 /** Identifier string for each interface */
@@ -31,19 +31,22 @@
 #define SPP_IFTYPE_VHOST_STR "vhost"
 #define SPP_IFTYPE_RING_STR  "ring"
 
-/** Update wait timer (micro sec) */
-#define SPP_CHANGE_UPDATE_INTERVAL 10
+/** Waiting time for checking update (not used for spp_pcap). */
+#define SPP_CHANGE_UPDATE_INTERVAL 10  /* micro sec */
 
-/* Used for index of arrary of management data which has two sides. */
+/**
+ * Used for index of arrary of management data which has two sides. It is not
+ * used for spp_pcap.
+ */
 #define TWO_SIDES 2
 
 #define STR_LEN_SHORT 32  /* Size of short string. */
 #define STR_LEN_NAME 128  /* Size of string for names. */
 
 /* TODO(yasufum) confirm usage of this value and why it is 4. */
-#define SPP_PORT_ABILITY_MAX 4  /* Max num of port abilities. */
+#define PORT_ABL_MAX 4  /* Max num of port abilities. */
 
-/** Maximum VLAN PCP */
+/** Maximum VLAN PCP, used only for spp_vf. */
 #define SPP_VLAN_PCP_MAX 7
 
 /* Max number of core status check */
@@ -52,11 +55,11 @@
 /** Character sting for default port of classifier */
 #define SPPWK_TERM_DEFAULT "default"
 
-/** Value for default MAC address of classifier */
-#define SPP_DEFAULT_CLASSIFIED_DMY_ADDR     0x010000000000
-
-/** Character sting for default MAC address of classifier */
-#define SPP_DEFAULT_CLASSIFIED_DMY_ADDR_STR "00:00:00:00:00:01"
+/**
+ * Character sting for default MAC address of classifier.
+ * It is used only for spp_vf.
+ */
+#define CLS_DUMMY_ADDR_STR "00:00:00:00:00:01"
 
 /* Sampling interval timer for latency evaluation */
 #define SPP_RING_LATENCY_STATS_SAMPLING_INTERVAL 1000000
@@ -181,7 +184,7 @@ struct sppwk_port_info {
 	int iface_no;
 	int ethdev_port_id;  /**< Consistent ID of ethdev */
 	struct sppwk_cls_attrs cls_attrs;
-	struct spp_port_ability ability[SPP_PORT_ABILITY_MAX];
+	struct spp_port_ability ability[PORT_ABL_MAX];
 };
 
 /* Attributes of SPP worker thread named as `component`. */
@@ -196,7 +199,7 @@ struct sppwk_comp_info {
 	struct sppwk_port_info *tx_ports[RTE_MAX_ETHPORTS]; /**< tx ports */
 };
 
-/* Manage given options as global variable */
+/* Manage cmd arg as global variable, used for spp_vf and spp_mirror. */
 struct startup_param {
 	int client_id;  /* Client ID */
 	char server_ip[INET_ADDRSTRLEN];  /* IP address of spp-ctl */
@@ -221,7 +224,10 @@ struct core_info {
 	int id[RTE_MAX_LCORE];  /* IDs of components run on the lcore. */
 };
 
-/* Manage core status and component info as global variable. */
+/**
+ * Manage core status and comp info as global variable,
+ * used for spp_vf and spp_mirror.
+ */
 struct core_mng_info {
 	volatile enum sppwk_lcore_status status;
 	volatile int ref_index;  /* index for reference */
@@ -256,6 +262,7 @@ typedef int (*spp_iterate_core_element_proc)(
  * iterate core table parameters used to list content of lcore table for.
  * showing status or so.
  */
+/* TODO(yasufum) refactor name of func and vars, and comments. */
 struct spp_iterate_core_params {
 	char *output;  /* Buffer used for output */
 	/** The function for creating core information */
@@ -544,7 +551,7 @@ int64_t sppwk_convert_mac_str_to_int64(const char *macaddr);
 /**
  * Set mange data address.
  *
- * @param startup_param_p Pointer to  g_startup_param address.
+ * @param startup_param_p Pointer to g_startup_param address.
  * @param iface_p Pointer to g_iface_info address.
  * @param component_p Pointer to g_component_info address.
  * @param core_mng_p Pointer to g_core_info address.
@@ -568,12 +575,12 @@ int sppwk_set_mng_data(struct startup_param *startup_param_p,
  * Get mange data address.
  *
  * @param startup_param_p Pointer to startup params.
- * @param iface_addr Pointer to g_iface_info.
- * @param component_addr Pointer to g_component_info.
- * @param core_mng_addr Pointer to g_core_mng_info.
- * @param change_core_addr Pointer to change_core_addr.
- * @param change_component_addr Pointer to g_change_component.
- * @param backup_info_addr Pointer to g_backup_info.
+ * @param iface_p Pointer to g_iface_info.
+ * @param component_p Pointer to g_component_info.
+ * @param core_mng_p Pointer to g_core_mng_info.
+ * @param change_core_p Pointer to change_core_addr.
+ * @param change_component_p Pointer to g_change_component.
+ * @param backup_info_p Pointer to g_backup_info.
  */
 void sppwk_get_mng_data(struct startup_param **startup_param_p,
 		struct iface_info **iface_p,
diff --git a/src/shared/secondary/spp_worker_th/spp_port.c b/src/shared/secondary/spp_worker_th/spp_port.c
index 0b79531..8de8460 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.c
+++ b/src/shared/secondary/spp_worker_th/spp_port.c
@@ -16,7 +16,7 @@
 struct port_abl_info {
 	volatile int ref_index; /* Index to reference area. */
 	volatile int upd_index; /* Index to update area. */
-	struct spp_port_ability ability[TWO_SIDES][SPP_PORT_ABILITY_MAX];
+	struct spp_port_ability ability[TWO_SIDES][PORT_ABL_MAX];
 				/* Port ability information. */
 };
 
@@ -267,8 +267,8 @@ port_ability_set_ability(struct sppwk_port_info *port,
 
 	out_ability = mng->ability[mng->upd_index];
 	memset(out_ability, 0x00, sizeof(struct spp_port_ability)
-			* SPP_PORT_ABILITY_MAX);
-	for (in_cnt = 0; in_cnt < SPP_PORT_ABILITY_MAX; in_cnt++) {
+			* PORT_ABL_MAX);
+	for (in_cnt = 0; in_cnt < PORT_ABL_MAX; in_cnt++) {
 		if (in_ability[in_cnt].dir != dir)
 			continue;
 
@@ -338,7 +338,7 @@ port_ability_each_operation(uint16_t port_id,
 	if (unlikely(info[0].ops == SPPWK_PORT_ABL_OPS_NONE))
 		return nb_pkts;
 
-	for (cnt = 0; cnt < SPP_PORT_ABILITY_MAX; cnt++) {
+	for (cnt = 0; cnt < PORT_ABL_MAX; cnt++) {
 		if (info[cnt].ops == SPPWK_PORT_ABL_OPS_NONE)
 			break;
 
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 4387fd5..c7873e3 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -58,6 +58,9 @@
 /* VID of VLAN untagged */
 #define VLAN_UNTAGGED_VID 0x0fff
 
+/** Value for default MAC address of classifier */
+#define CLS_DUMMY_ADDR 0x010000000000
+
 /* classifier management information */
 struct management_info {
 	/* classifier information */
@@ -396,8 +399,7 @@ init_component_info(struct cls_comp_info *cmp_info,
 		cmp_info->mac_addr_entry = 1;
 
 		/* store default classified */
-		if (unlikely(tx_port->cls_attrs.mac_addr ==
-				SPP_DEFAULT_CLASSIFIED_DMY_ADDR)) {
+		if (unlikely(tx_port->cls_attrs.mac_addr == CLS_DUMMY_ADDR)) {
 			mac_cls->default_cls_idx = i;
 			RTE_LOG(INFO, SPP_CLASSIFIER_MAC,
 					"default classified. vid=%hu, "
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index 4a78ab2..4be3188 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -297,11 +297,11 @@ update_port(enum sppwk_action wk_action,
 		if (port_idx >= SPP_RET_OK) {
 			/* registered */
 			if (ability->ops == SPPWK_PORT_ABL_OPS_ADD_VLANTAG) {
-				while ((cnt < SPP_PORT_ABILITY_MAX) &&
+				while ((cnt < PORT_ABL_MAX) &&
 					    (port_info->ability[cnt].ops !=
 					    SPPWK_PORT_ABL_OPS_ADD_VLANTAG))
 					cnt++;
-				if (cnt >= SPP_PORT_ABILITY_MAX) {
+				if (cnt >= PORT_ABL_MAX) {
 					RTE_LOG(ERR, VF_CMD_RUNNER, "update VLAN tag "
 						"Non-registratio\n");
 					return SPP_RET_NG;
@@ -322,12 +322,12 @@ update_port(enum sppwk_action wk_action,
 		}
 
 		if (ability->ops != SPPWK_PORT_ABL_OPS_NONE) {
-			while ((cnt < SPP_PORT_ABILITY_MAX) &&
+			while ((cnt < PORT_ABL_MAX) &&
 					(port_info->ability[cnt].ops !=
 					SPPWK_PORT_ABL_OPS_NONE)) {
 				cnt++;
 			}
-			if (cnt >= SPP_PORT_ABILITY_MAX) {
+			if (cnt >= PORT_ABL_MAX) {
 				RTE_LOG(ERR, VF_CMD_RUNNER,
 						"No space of port ability.\n");
 				return SPP_RET_NG;
@@ -344,7 +344,7 @@ update_port(enum sppwk_action wk_action,
 		break;
 
 	case SPPWK_ACT_DEL:
-		for (cnt = 0; cnt < SPP_PORT_ABILITY_MAX; cnt++) {
+		for (cnt = 0; cnt < PORT_ABL_MAX; cnt++) {
 			if (port_info->ability[cnt].ops ==
 					SPPWK_PORT_ABL_OPS_NONE)
 				continue;
-- 
2.17.1



End of spp Digest, Vol 31, Issue 19
***********************************


From yasufum.o@gmail.com Mon Jun 24 19:41:26 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd105.ddreams.local
 (zssg-mailmd105.ddreams.local [10.160.123.100])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL0017RN1HR160@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 19:41:41 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd105.ddreams.local by
 zssg-mailmd105.ddreams.local (dDREAMS) id <0PTL00B0EN1HP100@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:41:41 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd105.ddreams.local
 (dDREAMS) with ESMTP id <0PTL01C3BN1H6T50@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:41:41 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf106.ddreams.local (Postfix) with ESMTP id B09867E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:41:41 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id AF5BB8E6057	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:41:41 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id AE3448E6042	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:41:41 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id C56438E6042	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:41:40 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf106.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:41:40 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAfeOA032113;	Mon,
 24 Jun 2019 19:41:40 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5OAfeiN032112;	Mon, 24 Jun 2019 19:41:40 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5OAfeXI032109	for unknown; Mon,
 24 Jun 2019 19:41:40 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAfeKC006921 for
 unknown; Mon, 24 Jun 2019 19:41:40 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAferQ006918; Mon,
 24 Jun 2019 19:41:40 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAfd3j008557;	Mon,
 24 Jun 2019 19:41:39 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5OAfdcd008553	for unknown; Mon, 24 Jun 2019 19:41:39 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAfdKd022430 for
 unknown; Mon, 24 Jun 2019 19:41:39 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAfdFY022424 for
 unknown; Mon, 24 Jun 2019 19:41:39 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5OAfWe8020395	for unknown; Mon,
 24 Jun 2019 19:41:38 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 8E4CE1BF00;	Mon, 24 Jun 2019 12:41:32 +0200 (CEST)
Received: from mail-pg1-f195.google.com
 (mail-pg1-f195.google.com [209.85.215.195]) by dpdk.org (Postfix)
 with ESMTP id 3BA181BED0 for <spp@dpdk.org>; Mon,
 24 Jun 2019 12:41:31 +0200 (CEST)
Received: by mail-pg1-f195.google.com with SMTP id w10so6883494pgj.7 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 03:41:31 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id p65sm12236232pfp.58.2019.06.24.03.41.28
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 03:41:29 -0700 (PDT)
Date: Mon, 24 Jun 2019 19:41:26 +0900
From: yasufum.o@gmail.com
Subject: [spp 04419] [spp] [PATCH] shared/sec: remove function
 spp_vf_add_vhost_pmd
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624104126.24763-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04419
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=Cax01KtQ5d7RXhx4CzpRzz80n42zTsgdQGz0X7wH/tA=;
 b=BWKB6b7TPA+Hywy44bfzvjnQjmao9BXYNrsum+TgBfOdix3WprJu+VNfrfyMFj6HWa
 deqv/15p7QTG4BPGD5ObFMogMrgG4FQoLjeY4RtmHhq6Mgrq19Tl/oEK7ERhVL4Z72cT
 A64oauSH6jqeXG+KJXjbefzOLLmftMWF0vhgSGP+5emTqhLE1xivCeLHruFrb2In60pf
 JAIlmTytxo3XQPGmPkjGw7jikxazg3LbMQCIr4d7fVLbiBNcmqwhtDsHXSgKkMgBEwxm
 XclQ7gSfy/QkIEBijKY0rm5jyjUPua77A7Itr1fGLtMcmYlW+ymhJq2MjEiEee68mzTO rpXQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=Cax01KtQ5d7RXhx4CzpRzz80n42zTsgdQGz0X7wH/tA=;
 b=fIb9w5Skm1lwmdIJqYi4qxlMSzKiUYpdLObCdwE15PRtnTBZcbQ3ceeDFbXZlV+U3t
 qowAU/B7rOnw784k66usXGITXVjrc3VM62oDDsRcyvOpjH9QjHjDfsSvfiPjaaw0NbKw
 b00zlTqbJ17Gm/AruW6km7ZOIoagcPOiJMFqoi3wS515zmilDIhO1M9r608ykMBd6zMl
 SHyV719QWRkPPXJKqVX/ziuBGKaAUo4wxGD3KMFsg6Uvx6CItm4CPuzejAOAc49V4tED
 03UrkpSrngNfGnpehFGukQ8p8Lm/FySicrcrpW8amMfqHedKnVkopLG2hQ5C5W3ffWUm 8QFg==
X-Gm-Message-State: APjAAAWYXaabHo1QoCxPcJHrsRbNyp744KZ6f+VPVwLF1LGXZ4D7mFyF
 6hZj9Ua40KPqjJNZscH+smTeqBQB
X-Google-Smtp-Source:
 APXvYqx0DAo0glSa3nRKRZd6rVD3GrH6oMh+R9MqhEQefnF/FFSbV9HIdRRlgRM+1UIMLYYiQVSnaQ==
X-Received: by 2002:a17:90a:9382:: with SMTP id
 q2mr24167744pjo.131.1561372890168; Mon, 24 Jun 2019 03:41:30 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 343
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Spp_vf and spp_mirror use spp_vf_add_vhost_pmd() for assigning vhost
port, but this feature is the same as add_vhost_pmd(). This update is to
remove former one. For this update, remove `vhost_client` which is a
member of struct `startup_param` and no longer needed.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/spp_mirror.c                       |   5 +-
 src/shared/secondary/add_port.c               |  28 +++-
 src/shared/secondary/add_port.h               |   1 +
 .../secondary/spp_worker_th/cmd_utils.c       | 127 +-----------------
 .../secondary/spp_worker_th/cmd_utils.h       |   9 --
 src/vf/spp_vf.c                               |   5 +-
 6 files changed, 33 insertions(+), 142 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index 892a3a8..aad74a9 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -11,6 +11,7 @@
 
 #include "spp_mirror.h"
 #include "shared/common.h"
+#include "shared/secondary/add_port.h"
 #include "shared/secondary/return_codes.h"
 #include "shared/secondary/utils.h"
 #include "shared/secondary/spp_worker_th/mirror_deps.h"
@@ -194,7 +195,7 @@ parse_app_args(int argc, char *argv[])
 			proc_flg = 1;
 			break;
 		case SPP_LONGOPT_RETVAL_VHOST_CLIENT:
-			g_startup_param.vhost_client = 1;
+			g_enable_vhost_cli = 1;
 			break;
 		case 's':
 			if (parse_app_server(optarg, g_startup_param.server_ip,
@@ -224,7 +225,7 @@ parse_app_args(int argc, char *argv[])
 			g_startup_param.wk_proc_type,
 			g_startup_param.server_ip,
 			g_startup_param.server_port,
-			g_startup_param.vhost_client);
+			g_enable_vhost_cli);
 	return SPP_RET_OK;
 }
 
diff --git a/src/shared/secondary/add_port.c b/src/shared/secondary/add_port.c
index 6924583..e0de36f 100644
--- a/src/shared/secondary/add_port.c
+++ b/src/shared/secondary/add_port.c
@@ -165,36 +165,52 @@ add_vhost_pmd(int index)
 
 	sprintf(devargs, "%s,iface=%s,queues=%d,client=%d",
 			name, iface, nr_queues, g_enable_vhost_cli);
-	RTE_LOG(DEBUG, SHARED, "devargs for vhost: '%s'\n", devargs);
+	RTE_LOG(DEBUG, SHARED, "Devargs for vhost: '%s'.\n", devargs);
 	ret = dev_attach_by_devargs(devargs, &vhost_port_id);
-	if (ret < 0)
+	if (ret < 0) {
+		RTE_LOG(ERR, SHARED, "Cannot attach: %s.\n", devargs);
 		return ret;
+	}
 
 	ret = rte_eth_dev_configure(vhost_port_id, nr_queues, nr_queues,
 		&port_conf);
-	if (ret < 0)
+	if (ret < 0) {
+		RTE_LOG(ERR, SHARED, "Failed to dev configure.\n");
 		return ret;
+	}
 
 	/* Allocate and set up 1 RX queue per Ethernet port. */
 	for (q = 0; q < nr_queues; q++) {
 		ret = rte_eth_rx_queue_setup(vhost_port_id, q, NR_DESCS,
 			rte_eth_dev_socket_id(vhost_port_id), NULL, mp);
-		if (ret < 0)
+		if (ret < 0) {
+			RTE_LOG(ERR, SHARED,
+				"Failed to setup RX queue, "
+				"port: %d, queue: %d.\n",
+				vhost_port_id, q);
 			return ret;
+		}
 	}
 
 	/* Allocate and set up 1 TX queue per Ethernet port. */
 	for (q = 0; q < nr_queues; q++) {
 		ret = rte_eth_tx_queue_setup(vhost_port_id, q, NR_DESCS,
 			rte_eth_dev_socket_id(vhost_port_id), NULL);
-		if (ret < 0)
+		if (ret < 0) {
+			RTE_LOG(ERR, SHARED,
+				"Failed to setup TX queue, "
+				"port: %d, queue: %d.\n",
+				vhost_port_id, q);
 			return ret;
+		}
 	}
 
 	/* Start the Ethernet port. */
 	ret = rte_eth_dev_start(vhost_port_id);
-	if (ret < 0)
+	if (ret < 0) {
+		RTE_LOG(ERR, SHARED, "Failed to start vhost.\n");
 		return ret;
+	}
 
 	RTE_LOG(DEBUG, SHARED, "vhost port id %d\n", vhost_port_id);
 
diff --git a/src/shared/secondary/add_port.h b/src/shared/secondary/add_port.h
index 7012940..943d0d6 100644
--- a/src/shared/secondary/add_port.h
+++ b/src/shared/secondary/add_port.h
@@ -20,6 +20,7 @@
 
 #define RTE_LOGTYPE_SHARED RTE_LOGTYPE_USER1
 
+/* TODO(yasufum) remove it after --vhost-client is retrieved from a func. */
 extern int g_enable_vhost_cli;
 
 /**
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index d21c23a..f24d1a6 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -11,9 +11,10 @@
 #include <rte_log.h>
 #include <rte_branch_prediction.h>
 
-#include "shared/secondary/return_codes.h"
 #include "cmd_utils.h"
 #include "spp_port.h"
+#include "shared/secondary/add_port.h"
+#include "shared/secondary/return_codes.h"
 
 #ifdef SPP_VF_MODULE
 #include "vf_deps.h"
@@ -70,125 +71,6 @@ log_hexdumped(const char *obj_name, const void *obj_addr, const size_t size)
 	}
 }
 
-/* generation of the ring port */
-int
-spp_vf_add_ring_pmd(int ring_id)
-{
-	struct rte_ring *ring;
-	int ring_port_id;
-	uint16_t port_id = PORT_RESET;
-	char dev_name[RTE_ETH_NAME_MAX_LEN];
-
-	/* Lookup ring of given id */
-	ring = rte_ring_lookup(get_rx_queue_name(ring_id));
-	if (unlikely(ring == NULL)) {
-		RTE_LOG(ERR, APP,
-			"Cannot get RX ring - is server process running?\n");
-		return SPP_RET_NG;
-	}
-
-	/* Create ring pmd */
-	snprintf(dev_name, RTE_ETH_NAME_MAX_LEN - 1, "net_ring_%s", ring->name);
-	/* check whether a port already exists. */
-	ring_port_id = rte_eth_dev_get_port_by_name(dev_name, &port_id);
-	if (port_id == PORT_RESET) {
-		ring_port_id = rte_eth_from_ring(ring);
-		if (ring_port_id < 0) {
-			RTE_LOG(ERR, APP, "Cannot create eth dev with "
-						"rte_eth_from_ring()\n");
-			return SPP_RET_NG;
-		}
-	} else {
-		ring_port_id = port_id;
-		rte_eth_dev_start(ring_port_id);
-	}
-	RTE_LOG(INFO, APP, "ring port add. (no = %d / port = %d)\n",
-			ring_id, ring_port_id);
-	return ring_port_id;
-}
-
-/* generation of the vhost port */
-int
-spp_vf_add_vhost_pmd(int index, int client)
-{
-	struct rte_eth_conf port_conf = {
-		.rxmode = { .max_rx_pkt_len = ETHER_MAX_LEN }
-	};
-	struct rte_mempool *mp;
-	uint16_t vhost_port_id;
-	int nr_queues = 1;
-	const char *name;
-	char devargs[64];
-	char *iface;
-	uint16_t q;
-	int ret;
-#define NR_DESCS 128
-
-	mp = rte_mempool_lookup(PKTMBUF_POOL_NAME);
-	if (unlikely(mp == NULL)) {
-		RTE_LOG(ERR, APP, "Cannot get mempool for mbufs. "
-				"(name = %s)\n", PKTMBUF_POOL_NAME);
-		return SPP_RET_NG;
-	}
-
-	/* eth_vhost0 index 0 iface /tmp/sock0 on numa 0 */
-	name = get_vhost_backend_name(index);
-	iface = get_vhost_iface_name(index);
-
-	sprintf(devargs, "%s,iface=%s,queues=%d,client=%d",
-			name, iface, nr_queues, client);
-	ret = dev_attach_by_devargs(devargs, &vhost_port_id);
-	if (unlikely(ret < 0)) {
-		RTE_LOG(ERR, APP, "spp_rte_eth_dev_attach error. "
-				"(ret = %d)\n", ret);
-		return ret;
-	}
-
-	ret = rte_eth_dev_configure(vhost_port_id, nr_queues, nr_queues,
-		&port_conf);
-	if (unlikely(ret < 0)) {
-		RTE_LOG(ERR, APP, "rte_eth_dev_configure error. "
-				"(ret = %d)\n", ret);
-		return ret;
-	}
-
-	/* Allocate and set up 1 RX queue per Ethernet port. */
-	for (q = 0; q < nr_queues; q++) {
-		ret = rte_eth_rx_queue_setup(vhost_port_id, q, NR_DESCS,
-			rte_eth_dev_socket_id(vhost_port_id), NULL, mp);
-		if (unlikely(ret < 0)) {
-			RTE_LOG(ERR, APP,
-				"rte_eth_rx_queue_setup error. (ret = %d)\n",
-				ret);
-			return ret;
-		}
-	}
-
-	/* Allocate and set up 1 TX queue per Ethernet port. */
-	for (q = 0; q < nr_queues; q++) {
-		ret = rte_eth_tx_queue_setup(vhost_port_id, q, NR_DESCS,
-			rte_eth_dev_socket_id(vhost_port_id), NULL);
-		if (unlikely(ret < 0)) {
-			RTE_LOG(ERR, APP,
-				"rte_eth_tx_queue_setup error. (ret = %d)\n",
-				ret);
-			return ret;
-		}
-	}
-
-	/* Start the Ethernet port. */
-	ret = rte_eth_dev_start(vhost_port_id);
-	if (unlikely(ret < 0)) {
-		RTE_LOG(ERR, APP, "rte_eth_dev_start error. (ret = %d)\n",
-			ret);
-		return ret;
-	}
-
-	RTE_LOG(INFO, APP, "vhost port add. (no = %d / port = %d)\n",
-			index, vhost_port_id);
-	return vhost_port_id;
-}
-
 /* Get core status */
 enum sppwk_lcore_status
 spp_get_core_status(unsigned int lcore_id)
@@ -606,7 +488,7 @@ del_vhost_sockfile(struct sppwk_port_info *vhost)
 	int cnt;
 
 	/* Do not remove for if it is running in vhost-client mode. */
-	if (g_mng_data.p_startup_param->vhost_client != 0)
+	if (g_enable_vhost_cli != 0)
 		return;
 
 	for (cnt = 0; cnt < RTE_MAX_ETHPORTS; cnt++) {
@@ -830,8 +712,7 @@ update_port_info(void)
 	for (cnt = 0; cnt < RTE_MAX_ETHPORTS; cnt++) {
 		port = &p_iface_info->vhost[cnt];
 		if ((port->iface_type != UNDEF) && (port->ethdev_port_id < 0)) {
-			ret = spp_vf_add_vhost_pmd(port->iface_no,
-				g_mng_data.p_startup_param->vhost_client);
+			ret = add_vhost_pmd(port->iface_no);
 			if (ret < 0)
 				return SPP_RET_NG;
 			port->ethdev_port_id = ret;
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 7139865..f3e2303 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -204,7 +204,6 @@ struct startup_param {
 	int client_id;  /* Client ID */
 	char server_ip[INET_ADDRSTRLEN];  /* IP address of spp-ctl */
 	int server_port;   /* Port Number of spp-ctl */
-	int vhost_client;  /* Flag for --vhost-client option */
 	enum sppwk_proc_type wk_proc_type;
 };
 
@@ -300,14 +299,6 @@ struct spp_iterate_classifier_table_params {
 void log_hexdumped(const char *obj_name, const void *obj_addr,
 		const size_t size);
 
-/**
- * Add ring pmd for owned proccess or thread.
- *
- * @param[in] ring_id added ring id.
- * @return ring port ID, or -1 if failed.
- */
-int spp_vf_add_ring_pmd(int ring_id);
-
 /**
  * Add ring pmd for owned proccess or thread.
  *
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index bc8db5c..4513a0c 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -11,6 +11,7 @@
 #include "classifier_mac.h"
 #include "forwarder.h"
 #include "shared/secondary/return_codes.h"
+#include "shared/secondary/add_port.h"
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
 #include "shared/secondary/spp_worker_th/spp_port.h"
@@ -150,7 +151,7 @@ parse_app_args(int argc, char *argv[])
 			proc_flg = 1;
 			break;
 		case SPP_LONGOPT_RETVAL_VHOST_CLIENT:
-			g_startup_param.vhost_client = 1;
+			g_enable_vhost_cli = 1;
 			break;
 		case 's':
 			if (parse_app_server(optarg, g_startup_param.server_ip,
@@ -180,7 +181,7 @@ parse_app_args(int argc, char *argv[])
 			g_startup_param.wk_proc_type,
 			g_startup_param.server_ip,
 			g_startup_param.server_port,
-			g_startup_param.vhost_client);
+			g_enable_vhost_cli);
 	return SPP_RET_OK;
 }
 
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 19:41:35 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd105.ddreams.local
 (zssg-mailmd105.ddreams.local [10.160.123.100])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL0019EN1RR160@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 19:41:51 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd105.ddreams.local by
 zssg-mailmd105.ddreams.local (dDREAMS) id <0PTL00B04N1RU200@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:41:51 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd105.ddreams.local
 (dDREAMS) with ESMTP id <0PTL01C4XN1R6T50@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:41:51 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id 255BD7E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:41:51 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 242738E6052	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:41:51 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 22FFD8E6042	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:41:51 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id E4B1A8E6042	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:41:49 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:41:49 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAfnHN032214;	Mon,
 24 Jun 2019 19:41:49 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5OAfnP1032213;	Mon, 24 Jun 2019 19:41:49 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5OAfnU6032209	for unknown; Mon,
 24 Jun 2019 19:41:49 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAfnXF006958 for
 unknown; Mon, 24 Jun 2019 19:41:49 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAfnet006955; Mon,
 24 Jun 2019 19:41:49 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAfnxA008571;	Mon,
 24 Jun 2019 19:41:49 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5OAfmlf008567	for unknown; Mon, 24 Jun 2019 19:41:48 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAfmn7022453 for
 unknown; Mon, 24 Jun 2019 19:41:48 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAfmgf022447 for
 unknown; Mon, 24 Jun 2019 19:41:48 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5OAfg2v020409	for unknown; Mon,
 24 Jun 2019 19:41:47 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id A20AE1BF0C;	Mon, 24 Jun 2019 12:41:41 +0200 (CEST)
Received: from mail-pg1-f195.google.com
 (mail-pg1-f195.google.com [209.85.215.195]) by dpdk.org (Postfix)
 with ESMTP id F35D51BED0 for <spp@dpdk.org>; Mon,
 24 Jun 2019 12:41:40 +0200 (CEST)
Received: by mail-pg1-f195.google.com with SMTP id s27so6908132pgl.2 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 03:41:40 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id r15sm12984713pfh.121.2019.06.24.03.41.38
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 03:41:39 -0700 (PDT)
Date: Mon, 24 Jun 2019 19:41:35 +0900
From: yasufum.o@gmail.com
Subject: [spp 04420] [spp] [PATCH] shared/sec: remove client ID from global
 variable
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624104135.24816-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04420
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=Ay8WiWjcnG2Zb6M6kFxQleW3z5wtdR3aF+0rEMybDXU=;
 b=dxy9j37iegZaMIQzixfm5iOMppRI3W7wmRYfkaAHdhOE8GScJp+65wb51Rg9+uaSbB
 QqzhWGbPEw/Z66qK7EXmRCZ3k9Bic9hNFLLgIJWqVzQWfm/7f00oGECTkMVDTDCpnRIT
 mZq82YYCCeJZv2BJTlL3Bcr9/GPJS/e+1ECJ0LJpMInp/kzSP43VOT/V/S+9v2ZMWoL+
 Ty7LJa1r6rbxF/b7Kb+lj/Remc3wICz9/T1b7z0a+o/mJVmBd/p/ncCuYPJ/RtKEWX/8
 q2u1CtpuBgUbiOpegbUW9o/RHQql4dBn8aMr3v5yqGGbHlRh6DMg3CRsWJOTJKHHY6pS rTVw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=Ay8WiWjcnG2Zb6M6kFxQleW3z5wtdR3aF+0rEMybDXU=;
 b=GQZYHvnVkyx2lKR7PSupj4I5tqlVCPKPXyC2xHEDGbfBStneFWCnOsJhhzC7IoKtGD
 45vdfIYRObB1dd7h0N8indesuOqeI90XOSrf8Q3K/Xoq0rmId79Cr1LjpQV4sUSXIksg
 ihOMb2s39TJgm7/oV3fksEeet1P6E3ZsShrY/65VBOf5wYyPBKTDPLsyI1zthu8yEtps
 7LJ24YubdrXdl0W1hRkIX8JOR7psQwy9s3m+8L5nIx7D7iOuyjDyQOYxdTDVvrJ8yL/u
 S3wCifmZX+POnYTZVz0AafMvFS754yxHBEzlBtsl8JI7/bLoTdR2OPKUh3ECywZsPd+R uyOA==
X-Gm-Message-State: APjAAAVqy1yzhDsBHwDi1Et3GJ4aLIkzPHMHj/nRmOm+YAA5ZO9beIiJ
 1gWbcF7NIzc4t2p2ONgH2VU+peRp
X-Google-Smtp-Source:
 APXvYqzxCDi6zKuvq/YN+IM/a2p1qv9MfEkO+m8BJzpVe5D/qfBEAN159cWmXr7JpVDTPvqIyFT87w==
X-Received: by 2002:a63:9d43:: with SMTP id i64mr29977335pgd.404.1561372899925;
 Mon, 24 Jun 2019 03:41:39 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 328
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Client ID of secondary process is defined as a member of global
variable `g_startup_params` is defined in shared library, but no need to
be global. This update is to remove client ID from the global var and
add functions to get and set the client ID.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/spp_mirror.c                       | 35 +++--------------
 .../spp_worker_th/cmd_res_formatter.c         | 12 +-----
 .../secondary/spp_worker_th/cmd_utils.h       |  1 -
 .../secondary/spp_worker_th/mirror_deps.h     |  2 +
 src/shared/secondary/spp_worker_th/vf_deps.h  |  2 +
 src/shared/secondary/utils.c                  | 39 +++++++++++++++++--
 src/shared/secondary/utils.h                  | 12 ++++++
 src/vf/spp_vf.c                               | 36 ++++-------------
 8 files changed, 66 insertions(+), 73 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index aad74a9..19d79ef 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -101,30 +101,6 @@ usage(const char *progname)
 			, progname);
 }
 
-/**
- * Convert string of given client id to integer
- *
- * If succeeded, client id of integer is assigned to client_id and
- * return SPP_RET_OK. Or return -SPP_RET_NG if failed.
- */
-static int
-parse_app_client_id(const char *client_id_str, int *client_id)
-{
-	int id = 0;
-	char *endptr = NULL;
-
-	id = strtol(client_id_str, &endptr, 0);
-	if (unlikely(client_id_str == endptr) || unlikely(*endptr != '\0'))
-		return SPP_RET_NG;
-
-	if (id >= RTE_MAX_LCORE)
-		return SPP_RET_NG;
-
-	*client_id = id;
-	RTE_LOG(DEBUG, MIRROR, "Set client id = %d\n", *client_id);
-	return SPP_RET_OK;
-}
-
 /* Parse options for server IP and port */
 static int
 parse_app_server(const char *server_str, char *server_ip, int *server_port)
@@ -155,6 +131,7 @@ static int
 parse_app_args(int argc, char *argv[])
 {
 	int cnt;
+	int cli_id;
 	int proc_flg = 0;
 	int server_flg = 0;
 	int option_index, opt;
@@ -186,12 +163,12 @@ parse_app_args(int argc, char *argv[])
 			&option_index)) != EOF) {
 		switch (opt) {
 		case SPP_LONGOPT_RETVAL_CLIENT_ID:
-			if (parse_app_client_id(optarg,
-						&g_startup_param.client_id) !=
-						SPP_RET_OK) {
+			if (parse_client_id(&cli_id, optarg) != SPP_RET_OK) {
 				usage(progname);
 				return SPP_RET_NG;
 			}
+			set_client_id(cli_id);
+
 			proc_flg = 1;
 			break;
 		case SPP_LONGOPT_RETVAL_VHOST_CLIENT:
@@ -221,7 +198,7 @@ parse_app_args(int argc, char *argv[])
 	RTE_LOG(INFO, MIRROR,
 			"app opts (client_id=%d,type=%d,"
 			"server=%s:%d,vhost_client=%d,)\n",
-			g_startup_param.client_id,
+			cli_id,
 			g_startup_param.wk_proc_type,
 			g_startup_param.server_ip,
 			g_startup_param.server_port,
@@ -555,7 +532,7 @@ main(int argc, char *argv[])
 		}
 
 		/* create the mbuf pool */
-		ret = mirror_pool_create(g_startup_param.client_id);
+		ret = mirror_pool_create(get_client_id());
 		if (ret == SPP_RET_NG) {
 			RTE_LOG(ERR, MIRROR,
 					"mirror mnuf pool create failed.\n");
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index 7d7388d..291c1f5 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -530,16 +530,6 @@ append_info_value(const char *name, char **output)
 	return ret;
 }
 
-/* TODO(yasufum) move to another file for util funcs. */
-/* Get client ID from global command params. */
-static int
-wk_get_client_id(void)
-{
-	struct startup_param *params;
-	sppwk_get_mng_data(&params, NULL, NULL, NULL, NULL, NULL, NULL);
-	return params->client_id;
-}
-
 /**
  * Operation functions start with prefix `add_` defined in get_status_ops()
  * of struct `cmd_res_formatter_ops` which are for making each of parts of
@@ -551,7 +541,7 @@ int
 add_client_id(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
-	return append_json_int_value(output, name, wk_get_client_id());
+	return append_json_int_value(output, name, get_client_id());
 }
 
 /* Add entry of port to a response in JSON such as "phy:0". */
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index f3e2303..9022589 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -201,7 +201,6 @@ struct sppwk_comp_info {
 
 /* Manage cmd arg as global variable, used for spp_vf and spp_mirror. */
 struct startup_param {
-	int client_id;  /* Client ID */
 	char server_ip[INET_ADDRSTRLEN];  /* IP address of spp-ctl */
 	int server_port;   /* Port Number of spp-ctl */
 	enum sppwk_proc_type wk_proc_type;
diff --git a/src/shared/secondary/spp_worker_th/mirror_deps.h b/src/shared/secondary/spp_worker_th/mirror_deps.h
index 31f0b0c..1446027 100644
--- a/src/shared/secondary/spp_worker_th/mirror_deps.h
+++ b/src/shared/secondary/spp_worker_th/mirror_deps.h
@@ -40,4 +40,6 @@ enum sppwk_worker_type get_comp_type_from_str(const char *type_str);
 
 int get_status_ops(struct cmd_res_formatter_ops *ops_list);
 
+int get_client_id(void);
+
 #endif  /* __SPP_WORKER_TH_MIRROR_DEPS_H__ */
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 41ea1b9..8da81a5 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -117,4 +117,6 @@ enum sppwk_worker_type get_comp_type_from_str(const char *type_str);
 
 int get_status_ops(struct cmd_res_formatter_ops *ops_list);
 
+int get_client_id(void);
+
 #endif  /* _SPPWK_TH_VF_DEPS_H_ */
diff --git a/src/shared/secondary/utils.c b/src/shared/secondary/utils.c
index 7c676a0..73800d3 100644
--- a/src/shared/secondary/utils.c
+++ b/src/shared/secondary/utils.c
@@ -8,6 +8,42 @@
 
 #define RTE_LOGTYPE_SHARED RTE_LOGTYPE_USER1
 
+int client_id;
+
+int set_client_id(int cid)
+{
+	client_id = cid;
+	return 0;
+}
+
+int get_client_id(void)
+{
+	if (client_id < 0) {
+		RTE_LOG(ERR, SHARED, "Client ID is not initialized.\n");
+		return -1;
+	}
+	return client_id;
+}
+
+/* Parse client ID from given value of string. */
+int
+parse_client_id(int *cli_id, const char *cli_id_str)
+{
+	int id = 0;
+	char *endptr = NULL;
+
+	id = strtol(cli_id_str, &endptr, 0);
+	if (unlikely(cli_id_str == endptr) || unlikely(*endptr != '\0'))
+		return -1;
+
+	if (id >= RTE_MAX_LCORE)
+		return -1;
+
+	*cli_id = id;
+	RTE_LOG(DEBUG, SHARED, "Parse client ID %d.\n", *cli_id);
+	return 0;
+}
+
 /**
  * Retieve port type and ID from resource UID. For example, resource UID
  * 'ring:0' is  parsed to retrieve port tyep 'ring' and ID '0'.
@@ -43,14 +79,11 @@ int
 spp_atoi(const char *str, int *val)
 {
 	char *end;
-
 	*val = strtol(str, &end, 10);
-
 	if (*end) {
 		RTE_LOG(ERR, SHARED, "Bad integer value: %s\n", str);
 		return -1;
 	}
-
 	return 0;
 }
 
diff --git a/src/shared/secondary/utils.h b/src/shared/secondary/utils.h
index c905b12..74531b0 100644
--- a/src/shared/secondary/utils.h
+++ b/src/shared/secondary/utils.h
@@ -9,6 +9,18 @@ int parse_resource_uid(char *str, char **port_type, int *port_id);
 
 int spp_atoi(const char *str, int *val);
 
+int set_client_id(int cid);
+int get_client_id(void);
+
+/**
+ * Parse client ID from given value of string.
+ *
+ * @params[in] cli_id_str String value of client ID.
+ * @params[in,out] cli_id client ID of int value.
+ * @return 0 if succeeded, or -1 if failed.
+ */
+int parse_client_id(int *cli_id, const char *cli_id_str);
+
 /**
  * Attach a new Ethernet device specified by arguments.
  *
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index 4513a0c..d8b0c87 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -7,9 +7,10 @@
 #include <getopt.h>
 
 #include "spp_vf.h"
-#include "shared/secondary/spp_worker_th/cmd_utils.h"
 #include "classifier_mac.h"
 #include "forwarder.h"
+#include "shared/secondary/utils.h"
+#include "shared/secondary/spp_worker_th/cmd_utils.h"
 #include "shared/secondary/return_codes.h"
 #include "shared/secondary/add_port.h"
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
@@ -56,30 +57,6 @@ usage(const char *progname)
 			, progname);
 }
 
-/**
- * Convert string of given client id to integer
- *
- * If succeeded, client id of integer is assigned to client_id and
- * return SPP_RET_OK Or return SPP_RET_NG if failed.
- */
-static int
-parse_app_client_id(const char *client_id_str, int *client_id)
-{
-	int id = 0;
-	char *endptr = NULL;
-
-	id = strtol(client_id_str, &endptr, 0);
-	if (unlikely(client_id_str == endptr) || unlikely(*endptr != '\0'))
-		return SPP_RET_NG;
-
-	if (id >= RTE_MAX_LCORE)
-		return SPP_RET_NG;
-
-	*client_id = id;
-	RTE_LOG(DEBUG, APP, "Set client id = %d\n", *client_id);
-	return SPP_RET_OK;
-}
-
 /* Parse options for server IP and port */
 static int
 parse_app_server(const char *server_str, char *server_ip, int *server_port)
@@ -111,6 +88,7 @@ static int
 parse_app_args(int argc, char *argv[])
 {
 	int cnt;
+	int cli_id;
 	int proc_flg = 0;
 	int server_flg = 0;
 	int option_index, opt;
@@ -142,12 +120,12 @@ parse_app_args(int argc, char *argv[])
 			&option_index)) != EOF) {
 		switch (opt) {
 		case SPP_LONGOPT_RETVAL_CLIENT_ID:
-			if (parse_app_client_id(optarg,
-					&g_startup_param.client_id) !=
-								SPP_RET_OK) {
+			if (parse_client_id(&cli_id, optarg) != SPP_RET_OK) {
 				usage(progname);
 				return SPP_RET_NG;
 			}
+			set_client_id(cli_id);
+
 			proc_flg = 1;
 			break;
 		case SPP_LONGOPT_RETVAL_VHOST_CLIENT:
@@ -177,7 +155,7 @@ parse_app_args(int argc, char *argv[])
 	RTE_LOG(INFO, APP,
 			"app opts (client_id=%d,type=%d,server=%s:%d,"
 			"vhost_client=%d)\n",
-			g_startup_param.client_id,
+			cli_id,
 			g_startup_param.wk_proc_type,
 			g_startup_param.server_ip,
 			g_startup_param.server_port,
-- 
2.17.1



From spp-request@dpdk.org Mon Jun 24 19:41:50 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL001A4N1YR160@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 19:41:58 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTL0031AN1Y7E00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:41:58 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00T7XN1YO590@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:41:58 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id C971C7E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:41:58 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id C86B28E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:41:58 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id BDE548E6054	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:41:58 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 635918E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:41:58 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:41:58 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAfwiS032231;	Mon,
 24 Jun 2019 19:41:58 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5OAfwJf032230;	Mon, 24 Jun 2019 19:41:58 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5OAfwCK032227	for unknown; Mon,
 24 Jun 2019 19:41:58 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAfvOh022497 for
 unknown; Mon, 24 Jun 2019 19:41:57 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAfven022494 for
 unknown; Mon, 24 Jun 2019 19:41:57 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5OAfpOG020433	for unknown; Mon,
 24 Jun 2019 19:41:57 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id BCB531BF0F	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 24 Jun 2019 12:41:50 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 20
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 24 Jun 2019 12:41:50 +0200
Message-id: <mailman.23410.1561372910.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH] shared/sec: remove function spp_vf_add_vhost_pmd
      (yasufum.o@gmail.com)
   2. [PATCH] shared/sec: remove client ID from global variable
      (yasufum.o@gmail.com)
   3. [PATCH] shared/sec: remove worker process type
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon, 24 Jun 2019 19:41:26 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] shared/sec: remove function
	spp_vf_add_vhost_pmd
Message-ID: <20190624104126.24763-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Spp_vf and spp_mirror use spp_vf_add_vhost_pmd() for assigning vhost
port, but this feature is the same as add_vhost_pmd(). This update is to
remove former one. For this update, remove `vhost_client` which is a
member of struct `startup_param` and no longer needed.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/spp_mirror.c                       |   5 +-
 src/shared/secondary/add_port.c               |  28 +++-
 src/shared/secondary/add_port.h               |   1 +
 .../secondary/spp_worker_th/cmd_utils.c       | 127 +-----------------
 .../secondary/spp_worker_th/cmd_utils.h       |   9 --
 src/vf/spp_vf.c                               |   5 +-
 6 files changed, 33 insertions(+), 142 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index 892a3a8..aad74a9 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -11,6 +11,7 @@
 
 #include "spp_mirror.h"
 #include "shared/common.h"
+#include "shared/secondary/add_port.h"
 #include "shared/secondary/return_codes.h"
 #include "shared/secondary/utils.h"
 #include "shared/secondary/spp_worker_th/mirror_deps.h"
@@ -194,7 +195,7 @@ parse_app_args(int argc, char *argv[])
 			proc_flg = 1;
 			break;
 		case SPP_LONGOPT_RETVAL_VHOST_CLIENT:
-			g_startup_param.vhost_client = 1;
+			g_enable_vhost_cli = 1;
 			break;
 		case 's':
 			if (parse_app_server(optarg, g_startup_param.server_ip,
@@ -224,7 +225,7 @@ parse_app_args(int argc, char *argv[])
 			g_startup_param.wk_proc_type,
 			g_startup_param.server_ip,
 			g_startup_param.server_port,
-			g_startup_param.vhost_client);
+			g_enable_vhost_cli);
 	return SPP_RET_OK;
 }
 
diff --git a/src/shared/secondary/add_port.c b/src/shared/secondary/add_port.c
index 6924583..e0de36f 100644
--- a/src/shared/secondary/add_port.c
+++ b/src/shared/secondary/add_port.c
@@ -165,36 +165,52 @@ add_vhost_pmd(int index)
 
 	sprintf(devargs, "%s,iface=%s,queues=%d,client=%d",
 			name, iface, nr_queues, g_enable_vhost_cli);
-	RTE_LOG(DEBUG, SHARED, "devargs for vhost: '%s'\n", devargs);
+	RTE_LOG(DEBUG, SHARED, "Devargs for vhost: '%s'.\n", devargs);
 	ret = dev_attach_by_devargs(devargs, &vhost_port_id);
-	if (ret < 0)
+	if (ret < 0) {
+		RTE_LOG(ERR, SHARED, "Cannot attach: %s.\n", devargs);
 		return ret;
+	}
 
 	ret = rte_eth_dev_configure(vhost_port_id, nr_queues, nr_queues,
 		&port_conf);
-	if (ret < 0)
+	if (ret < 0) {
+		RTE_LOG(ERR, SHARED, "Failed to dev configure.\n");
 		return ret;
+	}
 
 	/* Allocate and set up 1 RX queue per Ethernet port. */
 	for (q = 0; q < nr_queues; q++) {
 		ret = rte_eth_rx_queue_setup(vhost_port_id, q, NR_DESCS,
 			rte_eth_dev_socket_id(vhost_port_id), NULL, mp);
-		if (ret < 0)
+		if (ret < 0) {
+			RTE_LOG(ERR, SHARED,
+				"Failed to setup RX queue, "
+				"port: %d, queue: %d.\n",
+				vhost_port_id, q);
 			return ret;
+		}
 	}
 
 	/* Allocate and set up 1 TX queue per Ethernet port. */
 	for (q = 0; q < nr_queues; q++) {
 		ret = rte_eth_tx_queue_setup(vhost_port_id, q, NR_DESCS,
 			rte_eth_dev_socket_id(vhost_port_id), NULL);
-		if (ret < 0)
+		if (ret < 0) {
+			RTE_LOG(ERR, SHARED,
+				"Failed to setup TX queue, "
+				"port: %d, queue: %d.\n",
+				vhost_port_id, q);
 			return ret;
+		}
 	}
 
 	/* Start the Ethernet port. */
 	ret = rte_eth_dev_start(vhost_port_id);
-	if (ret < 0)
+	if (ret < 0) {
+		RTE_LOG(ERR, SHARED, "Failed to start vhost.\n");
 		return ret;
+	}
 
 	RTE_LOG(DEBUG, SHARED, "vhost port id %d\n", vhost_port_id);
 
diff --git a/src/shared/secondary/add_port.h b/src/shared/secondary/add_port.h
index 7012940..943d0d6 100644
--- a/src/shared/secondary/add_port.h
+++ b/src/shared/secondary/add_port.h
@@ -20,6 +20,7 @@
 
 #define RTE_LOGTYPE_SHARED RTE_LOGTYPE_USER1
 
+/* TODO(yasufum) remove it after --vhost-client is retrieved from a func. */
 extern int g_enable_vhost_cli;
 
 /**
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index d21c23a..f24d1a6 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -11,9 +11,10 @@
 #include <rte_log.h>
 #include <rte_branch_prediction.h>
 
-#include "shared/secondary/return_codes.h"
 #include "cmd_utils.h"
 #include "spp_port.h"
+#include "shared/secondary/add_port.h"
+#include "shared/secondary/return_codes.h"
 
 #ifdef SPP_VF_MODULE
 #include "vf_deps.h"
@@ -70,125 +71,6 @@ log_hexdumped(const char *obj_name, const void *obj_addr, const size_t size)
 	}
 }
 
-/* generation of the ring port */
-int
-spp_vf_add_ring_pmd(int ring_id)
-{
-	struct rte_ring *ring;
-	int ring_port_id;
-	uint16_t port_id = PORT_RESET;
-	char dev_name[RTE_ETH_NAME_MAX_LEN];
-
-	/* Lookup ring of given id */
-	ring = rte_ring_lookup(get_rx_queue_name(ring_id));
-	if (unlikely(ring == NULL)) {
-		RTE_LOG(ERR, APP,
-			"Cannot get RX ring - is server process running?\n");
-		return SPP_RET_NG;
-	}
-
-	/* Create ring pmd */
-	snprintf(dev_name, RTE_ETH_NAME_MAX_LEN - 1, "net_ring_%s", ring->name);
-	/* check whether a port already exists. */
-	ring_port_id = rte_eth_dev_get_port_by_name(dev_name, &port_id);
-	if (port_id == PORT_RESET) {
-		ring_port_id = rte_eth_from_ring(ring);
-		if (ring_port_id < 0) {
-			RTE_LOG(ERR, APP, "Cannot create eth dev with "
-						"rte_eth_from_ring()\n");
-			return SPP_RET_NG;
-		}
-	} else {
-		ring_port_id = port_id;
-		rte_eth_dev_start(ring_port_id);
-	}
-	RTE_LOG(INFO, APP, "ring port add. (no = %d / port = %d)\n",
-			ring_id, ring_port_id);
-	return ring_port_id;
-}
-
-/* generation of the vhost port */
-int
-spp_vf_add_vhost_pmd(int index, int client)
-{
-	struct rte_eth_conf port_conf = {
-		.rxmode = { .max_rx_pkt_len = ETHER_MAX_LEN }
-	};
-	struct rte_mempool *mp;
-	uint16_t vhost_port_id;
-	int nr_queues = 1;
-	const char *name;
-	char devargs[64];
-	char *iface;
-	uint16_t q;
-	int ret;
-#define NR_DESCS 128
-
-	mp = rte_mempool_lookup(PKTMBUF_POOL_NAME);
-	if (unlikely(mp == NULL)) {
-		RTE_LOG(ERR, APP, "Cannot get mempool for mbufs. "
-				"(name = %s)\n", PKTMBUF_POOL_NAME);
-		return SPP_RET_NG;
-	}
-
-	/* eth_vhost0 index 0 iface /tmp/sock0 on numa 0 */
-	name = get_vhost_backend_name(index);
-	iface = get_vhost_iface_name(index);
-
-	sprintf(devargs, "%s,iface=%s,queues=%d,client=%d",
-			name, iface, nr_queues, client);
-	ret = dev_attach_by_devargs(devargs, &vhost_port_id);
-	if (unlikely(ret < 0)) {
-		RTE_LOG(ERR, APP, "spp_rte_eth_dev_attach error. "
-				"(ret = %d)\n", ret);
-		return ret;
-	}
-
-	ret = rte_eth_dev_configure(vhost_port_id, nr_queues, nr_queues,
-		&port_conf);
-	if (unlikely(ret < 0)) {
-		RTE_LOG(ERR, APP, "rte_eth_dev_configure error. "
-				"(ret = %d)\n", ret);
-		return ret;
-	}
-
-	/* Allocate and set up 1 RX queue per Ethernet port. */
-	for (q = 0; q < nr_queues; q++) {
-		ret = rte_eth_rx_queue_setup(vhost_port_id, q, NR_DESCS,
-			rte_eth_dev_socket_id(vhost_port_id), NULL, mp);
-		if (unlikely(ret < 0)) {
-			RTE_LOG(ERR, APP,
-				"rte_eth_rx_queue_setup error. (ret = %d)\n",
-				ret);
-			return ret;
-		}
-	}
-
-	/* Allocate and set up 1 TX queue per Ethernet port. */
-	for (q = 0; q < nr_queues; q++) {
-		ret = rte_eth_tx_queue_setup(vhost_port_id, q, NR_DESCS,
-			rte_eth_dev_socket_id(vhost_port_id), NULL);
-		if (unlikely(ret < 0)) {
-			RTE_LOG(ERR, APP,
-				"rte_eth_tx_queue_setup error. (ret = %d)\n",
-				ret);
-			return ret;
-		}
-	}
-
-	/* Start the Ethernet port. */
-	ret = rte_eth_dev_start(vhost_port_id);
-	if (unlikely(ret < 0)) {
-		RTE_LOG(ERR, APP, "rte_eth_dev_start error. (ret = %d)\n",
-			ret);
-		return ret;
-	}
-
-	RTE_LOG(INFO, APP, "vhost port add. (no = %d / port = %d)\n",
-			index, vhost_port_id);
-	return vhost_port_id;
-}
-
 /* Get core status */
 enum sppwk_lcore_status
 spp_get_core_status(unsigned int lcore_id)
@@ -606,7 +488,7 @@ del_vhost_sockfile(struct sppwk_port_info *vhost)
 	int cnt;
 
 	/* Do not remove for if it is running in vhost-client mode. */
-	if (g_mng_data.p_startup_param->vhost_client != 0)
+	if (g_enable_vhost_cli != 0)
 		return;
 
 	for (cnt = 0; cnt < RTE_MAX_ETHPORTS; cnt++) {
@@ -830,8 +712,7 @@ update_port_info(void)
 	for (cnt = 0; cnt < RTE_MAX_ETHPORTS; cnt++) {
 		port = &p_iface_info->vhost[cnt];
 		if ((port->iface_type != UNDEF) && (port->ethdev_port_id < 0)) {
-			ret = spp_vf_add_vhost_pmd(port->iface_no,
-				g_mng_data.p_startup_param->vhost_client);
+			ret = add_vhost_pmd(port->iface_no);
 			if (ret < 0)
 				return SPP_RET_NG;
 			port->ethdev_port_id = ret;
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 7139865..f3e2303 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -204,7 +204,6 @@ struct startup_param {
 	int client_id;  /* Client ID */
 	char server_ip[INET_ADDRSTRLEN];  /* IP address of spp-ctl */
 	int server_port;   /* Port Number of spp-ctl */
-	int vhost_client;  /* Flag for --vhost-client option */
 	enum sppwk_proc_type wk_proc_type;
 };
 
@@ -300,14 +299,6 @@ struct spp_iterate_classifier_table_params {
 void log_hexdumped(const char *obj_name, const void *obj_addr,
 		const size_t size);
 
-/**
- * Add ring pmd for owned proccess or thread.
- *
- * @param[in] ring_id added ring id.
- * @return ring port ID, or -1 if failed.
- */
-int spp_vf_add_ring_pmd(int ring_id);
-
 /**
  * Add ring pmd for owned proccess or thread.
  *
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index bc8db5c..4513a0c 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -11,6 +11,7 @@
 #include "classifier_mac.h"
 #include "forwarder.h"
 #include "shared/secondary/return_codes.h"
+#include "shared/secondary/add_port.h"
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
 #include "shared/secondary/spp_worker_th/spp_port.h"
@@ -150,7 +151,7 @@ parse_app_args(int argc, char *argv[])
 			proc_flg = 1;
 			break;
 		case SPP_LONGOPT_RETVAL_VHOST_CLIENT:
-			g_startup_param.vhost_client = 1;
+			g_enable_vhost_cli = 1;
 			break;
 		case 's':
 			if (parse_app_server(optarg, g_startup_param.server_ip,
@@ -180,7 +181,7 @@ parse_app_args(int argc, char *argv[])
 			g_startup_param.wk_proc_type,
 			g_startup_param.server_ip,
 			g_startup_param.server_port,
-			g_startup_param.vhost_client);
+			g_enable_vhost_cli);
 	return SPP_RET_OK;
 }
 
-- 
2.17.1



------------------------------

Message: 2
Date: Mon, 24 Jun 2019 19:41:35 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] shared/sec: remove client ID from global
	variable
Message-ID: <20190624104135.24816-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Client ID of secondary process is defined as a member of global
variable `g_startup_params` is defined in shared library, but no need to
be global. This update is to remove client ID from the global var and
add functions to get and set the client ID.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/spp_mirror.c                       | 35 +++--------------
 .../spp_worker_th/cmd_res_formatter.c         | 12 +-----
 .../secondary/spp_worker_th/cmd_utils.h       |  1 -
 .../secondary/spp_worker_th/mirror_deps.h     |  2 +
 src/shared/secondary/spp_worker_th/vf_deps.h  |  2 +
 src/shared/secondary/utils.c                  | 39 +++++++++++++++++--
 src/shared/secondary/utils.h                  | 12 ++++++
 src/vf/spp_vf.c                               | 36 ++++-------------
 8 files changed, 66 insertions(+), 73 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index aad74a9..19d79ef 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -101,30 +101,6 @@ usage(const char *progname)
 			, progname);
 }
 
-/**
- * Convert string of given client id to integer
- *
- * If succeeded, client id of integer is assigned to client_id and
- * return SPP_RET_OK. Or return -SPP_RET_NG if failed.
- */
-static int
-parse_app_client_id(const char *client_id_str, int *client_id)
-{
-	int id = 0;
-	char *endptr = NULL;
-
-	id = strtol(client_id_str, &endptr, 0);
-	if (unlikely(client_id_str == endptr) || unlikely(*endptr != '\0'))
-		return SPP_RET_NG;
-
-	if (id >= RTE_MAX_LCORE)
-		return SPP_RET_NG;
-
-	*client_id = id;
-	RTE_LOG(DEBUG, MIRROR, "Set client id = %d\n", *client_id);
-	return SPP_RET_OK;
-}
-
 /* Parse options for server IP and port */
 static int
 parse_app_server(const char *server_str, char *server_ip, int *server_port)
@@ -155,6 +131,7 @@ static int
 parse_app_args(int argc, char *argv[])
 {
 	int cnt;
+	int cli_id;
 	int proc_flg = 0;
 	int server_flg = 0;
 	int option_index, opt;
@@ -186,12 +163,12 @@ parse_app_args(int argc, char *argv[])
 			&option_index)) != EOF) {
 		switch (opt) {
 		case SPP_LONGOPT_RETVAL_CLIENT_ID:
-			if (parse_app_client_id(optarg,
-						&g_startup_param.client_id) !=
-						SPP_RET_OK) {
+			if (parse_client_id(&cli_id, optarg) != SPP_RET_OK) {
 				usage(progname);
 				return SPP_RET_NG;
 			}
+			set_client_id(cli_id);
+
 			proc_flg = 1;
 			break;
 		case SPP_LONGOPT_RETVAL_VHOST_CLIENT:
@@ -221,7 +198,7 @@ parse_app_args(int argc, char *argv[])
 	RTE_LOG(INFO, MIRROR,
 			"app opts (client_id=%d,type=%d,"
 			"server=%s:%d,vhost_client=%d,)\n",
-			g_startup_param.client_id,
+			cli_id,
 			g_startup_param.wk_proc_type,
 			g_startup_param.server_ip,
 			g_startup_param.server_port,
@@ -555,7 +532,7 @@ main(int argc, char *argv[])
 		}
 
 		/* create the mbuf pool */
-		ret = mirror_pool_create(g_startup_param.client_id);
+		ret = mirror_pool_create(get_client_id());
 		if (ret == SPP_RET_NG) {
 			RTE_LOG(ERR, MIRROR,
 					"mirror mnuf pool create failed.\n");
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index 7d7388d..291c1f5 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -530,16 +530,6 @@ append_info_value(const char *name, char **output)
 	return ret;
 }
 
-/* TODO(yasufum) move to another file for util funcs. */
-/* Get client ID from global command params. */
-static int
-wk_get_client_id(void)
-{
-	struct startup_param *params;
-	sppwk_get_mng_data(&params, NULL, NULL, NULL, NULL, NULL, NULL);
-	return params->client_id;
-}
-
 /**
  * Operation functions start with prefix `add_` defined in get_status_ops()
  * of struct `cmd_res_formatter_ops` which are for making each of parts of
@@ -551,7 +541,7 @@ int
 add_client_id(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
-	return append_json_int_value(output, name, wk_get_client_id());
+	return append_json_int_value(output, name, get_client_id());
 }
 
 /* Add entry of port to a response in JSON such as "phy:0". */
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index f3e2303..9022589 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -201,7 +201,6 @@ struct sppwk_comp_info {
 
 /* Manage cmd arg as global variable, used for spp_vf and spp_mirror. */
 struct startup_param {
-	int client_id;  /* Client ID */
 	char server_ip[INET_ADDRSTRLEN];  /* IP address of spp-ctl */
 	int server_port;   /* Port Number of spp-ctl */
 	enum sppwk_proc_type wk_proc_type;
diff --git a/src/shared/secondary/spp_worker_th/mirror_deps.h b/src/shared/secondary/spp_worker_th/mirror_deps.h
index 31f0b0c..1446027 100644
--- a/src/shared/secondary/spp_worker_th/mirror_deps.h
+++ b/src/shared/secondary/spp_worker_th/mirror_deps.h
@@ -40,4 +40,6 @@ enum sppwk_worker_type get_comp_type_from_str(const char *type_str);
 
 int get_status_ops(struct cmd_res_formatter_ops *ops_list);
 
+int get_client_id(void);
+
 #endif  /* __SPP_WORKER_TH_MIRROR_DEPS_H__ */
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 41ea1b9..8da81a5 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -117,4 +117,6 @@ enum sppwk_worker_type get_comp_type_from_str(const char *type_str);
 
 int get_status_ops(struct cmd_res_formatter_ops *ops_list);
 
+int get_client_id(void);
+
 #endif  /* _SPPWK_TH_VF_DEPS_H_ */
diff --git a/src/shared/secondary/utils.c b/src/shared/secondary/utils.c
index 7c676a0..73800d3 100644
--- a/src/shared/secondary/utils.c
+++ b/src/shared/secondary/utils.c
@@ -8,6 +8,42 @@
 
 #define RTE_LOGTYPE_SHARED RTE_LOGTYPE_USER1
 
+int client_id;
+
+int set_client_id(int cid)
+{
+	client_id = cid;
+	return 0;
+}
+
+int get_client_id(void)
+{
+	if (client_id < 0) {
+		RTE_LOG(ERR, SHARED, "Client ID is not initialized.\n");
+		return -1;
+	}
+	return client_id;
+}
+
+/* Parse client ID from given value of string. */
+int
+parse_client_id(int *cli_id, const char *cli_id_str)
+{
+	int id = 0;
+	char *endptr = NULL;
+
+	id = strtol(cli_id_str, &endptr, 0);
+	if (unlikely(cli_id_str == endptr) || unlikely(*endptr != '\0'))
+		return -1;
+
+	if (id >= RTE_MAX_LCORE)
+		return -1;
+
+	*cli_id = id;
+	RTE_LOG(DEBUG, SHARED, "Parse client ID %d.\n", *cli_id);
+	return 0;
+}
+
 /**
  * Retieve port type and ID from resource UID. For example, resource UID
  * 'ring:0' is  parsed to retrieve port tyep 'ring' and ID '0'.
@@ -43,14 +79,11 @@ int
 spp_atoi(const char *str, int *val)
 {
 	char *end;
-
 	*val = strtol(str, &end, 10);
-
 	if (*end) {
 		RTE_LOG(ERR, SHARED, "Bad integer value: %s\n", str);
 		return -1;
 	}
-
 	return 0;
 }
 
diff --git a/src/shared/secondary/utils.h b/src/shared/secondary/utils.h
index c905b12..74531b0 100644
--- a/src/shared/secondary/utils.h
+++ b/src/shared/secondary/utils.h
@@ -9,6 +9,18 @@ int parse_resource_uid(char *str, char **port_type, int *port_id);
 
 int spp_atoi(const char *str, int *val);
 
+int set_client_id(int cid);
+int get_client_id(void);
+
+/**
+ * Parse client ID from given value of string.
+ *
+ * @params[in] cli_id_str String value of client ID.
+ * @params[in,out] cli_id client ID of int value.
+ * @return 0 if succeeded, or -1 if failed.
+ */
+int parse_client_id(int *cli_id, const char *cli_id_str);
+
 /**
  * Attach a new Ethernet device specified by arguments.
  *
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index 4513a0c..d8b0c87 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -7,9 +7,10 @@
 #include <getopt.h>
 
 #include "spp_vf.h"
-#include "shared/secondary/spp_worker_th/cmd_utils.h"
 #include "classifier_mac.h"
 #include "forwarder.h"
+#include "shared/secondary/utils.h"
+#include "shared/secondary/spp_worker_th/cmd_utils.h"
 #include "shared/secondary/return_codes.h"
 #include "shared/secondary/add_port.h"
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
@@ -56,30 +57,6 @@ usage(const char *progname)
 			, progname);
 }
 
-/**
- * Convert string of given client id to integer
- *
- * If succeeded, client id of integer is assigned to client_id and
- * return SPP_RET_OK Or return SPP_RET_NG if failed.
- */
-static int
-parse_app_client_id(const char *client_id_str, int *client_id)
-{
-	int id = 0;
-	char *endptr = NULL;
-
-	id = strtol(client_id_str, &endptr, 0);
-	if (unlikely(client_id_str == endptr) || unlikely(*endptr != '\0'))
-		return SPP_RET_NG;
-
-	if (id >= RTE_MAX_LCORE)
-		return SPP_RET_NG;
-
-	*client_id = id;
-	RTE_LOG(DEBUG, APP, "Set client id = %d\n", *client_id);
-	return SPP_RET_OK;
-}
-
 /* Parse options for server IP and port */
 static int
 parse_app_server(const char *server_str, char *server_ip, int *server_port)
@@ -111,6 +88,7 @@ static int
 parse_app_args(int argc, char *argv[])
 {
 	int cnt;
+	int cli_id;
 	int proc_flg = 0;
 	int server_flg = 0;
 	int option_index, opt;
@@ -142,12 +120,12 @@ parse_app_args(int argc, char *argv[])
 			&option_index)) != EOF) {
 		switch (opt) {
 		case SPP_LONGOPT_RETVAL_CLIENT_ID:
-			if (parse_app_client_id(optarg,
-					&g_startup_param.client_id) !=
-								SPP_RET_OK) {
+			if (parse_client_id(&cli_id, optarg) != SPP_RET_OK) {
 				usage(progname);
 				return SPP_RET_NG;
 			}
+			set_client_id(cli_id);
+
 			proc_flg = 1;
 			break;
 		case SPP_LONGOPT_RETVAL_VHOST_CLIENT:
@@ -177,7 +155,7 @@ parse_app_args(int argc, char *argv[])
 	RTE_LOG(INFO, APP,
 			"app opts (client_id=%d,type=%d,server=%s:%d,"
 			"vhost_client=%d)\n",
-			g_startup_param.client_id,
+			cli_id,
 			g_startup_param.wk_proc_type,
 			g_startup_param.server_ip,
 			g_startup_param.server_port,
-- 
2.17.1



------------------------------

Message: 3
Date: Mon, 24 Jun 2019 19:41:44 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] shared/sec: remove worker process type
Message-ID: <20190624104144.24869-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Three of SPP worker process types are defined as an enum for vf,
mirror and none. It is only used as index for getting name of types of
string value from an array.

  enum sppwk_proc_type {
       WK_PROC_TYPE_NONE,
       WK_PROC_TYPE_VF,
       WK_PROC_TYPE_MIRROR,
  }

However, it is menaingless because type for vf is not used in
spp_mirror, or vise versa. In addition, type none is not used from
anywhere. It should be simply replaced with fixed string values in each
of processes because it is not needed to be shared among processes.

This update is to replace this enum and array of string with
`#define WK_PROC_TYPE "vf"` and `#define WK_PROC_TYPE "mirror"` in each
of processes independently.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/spp_mirror.c                       | 12 +++------
 .../spp_worker_th/cmd_res_formatter.c         | 25 +------------------
 .../secondary/spp_worker_th/cmd_utils.h       |  9 -------
 .../secondary/spp_worker_th/mirror_deps.h     |  2 ++
 src/shared/secondary/spp_worker_th/vf_deps.h  |  2 ++
 src/vf/spp_vf.c                               | 10 +++-----
 6 files changed, 12 insertions(+), 48 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index 19d79ef..9d9b4a8 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -194,15 +194,11 @@ parse_app_args(int argc, char *argv[])
 		usage(progname);
 		return SPP_RET_NG;
 	}
-	g_startup_param.wk_proc_type = WK_PROC_TYPE_MIRROR;
 	RTE_LOG(INFO, MIRROR,
-			"app opts (client_id=%d,type=%d,"
-			"server=%s:%d,vhost_client=%d,)\n",
-			cli_id,
-			g_startup_param.wk_proc_type,
-			g_startup_param.server_ip,
-			g_startup_param.server_port,
-			g_enable_vhost_cli);
+			"Parsed app args (client_id=%d, server=%s:%d, "
+			"vhost_client=%d,)\n",
+			cli_id, g_startup_param.server_ip,
+			g_startup_param.server_port, g_enable_vhost_cli);
 	return SPP_RET_OK;
 }
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index 291c1f5..f095b08 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -21,18 +21,6 @@ static int append_result_value(const char *name, char **output, void *tmp);
 static int append_error_details_value(const char *name, char **output,
 		void *tmp);
 
-/**
- * List of worker process type. The order of items should be same as the order
- * of enum `wk_proc_type` in cmd_utils.h.
- */
-/* TODO(yasufum) Add "pcap" after spp_pcap is made to use shared. */
-const char *SPPWK_PROC_TYPE_LIST[] = {
-	"none",
-	"vf",
-	"mirror",
-	"",  /* termination */
-};
-
 /**
  * List of port abilities. The order of items should be same as the order of
  * enum `sppwk_port_abl_ops` in spp_vf.h.
@@ -121,23 +109,12 @@ append_interface_array(char **output, const enum port_type type)
 	return SPP_RET_OK;
 }
 
-/* TODO(yasufum) move to another file for util funcs. */
-/* Get proc type from global command params. */
-static int
-get_wk_type(void)
-{
-	struct startup_param *params;
-	sppwk_get_mng_data(&params, NULL, NULL, NULL, NULL, NULL, NULL);
-	return params->wk_proc_type;
-}
-
 /* append a secondary process type for JSON format */
 int
 append_process_type_value(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
-	return append_json_str_value(output, name,
-			SPPWK_PROC_TYPE_LIST[get_wk_type()]);
+	return append_json_str_value(output, name, SPPWK_PROC_TYPE);
 }
 
 /* append a value of vlan for JSON format */
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 9022589..425d3eb 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -134,14 +134,6 @@ enum copy_mng_flg {
 	COPY_MNG_FLG_ALLCOPY,
 };
 
-/* secondary process type used only from spp_vf and spp_mirror */
-/* TODO(yasufum) Add WK_PROC_TYPE_PCAP. */
-enum sppwk_proc_type {
-	WK_PROC_TYPE_NONE,
-	WK_PROC_TYPE_VF,
-	WK_PROC_TYPE_MIRROR,
-};
-
 /** VLAN tag information */
 struct sppwk_vlan_tag {
 	int vid; /**< VLAN ID */
@@ -203,7 +195,6 @@ struct sppwk_comp_info {
 struct startup_param {
 	char server_ip[INET_ADDRSTRLEN];  /* IP address of spp-ctl */
 	int server_port;   /* Port Number of spp-ctl */
-	enum sppwk_proc_type wk_proc_type;
 };
 
 /* Manage number of interfaces  and port information as global variable. */
diff --git a/src/shared/secondary/spp_worker_th/mirror_deps.h b/src/shared/secondary/spp_worker_th/mirror_deps.h
index 1446027..085b01e 100644
--- a/src/shared/secondary/spp_worker_th/mirror_deps.h
+++ b/src/shared/secondary/spp_worker_th/mirror_deps.h
@@ -9,6 +9,8 @@
 #include "cmd_parser.h"
 #include "cmd_res_formatter.h"
 
+#define SPPWK_PROC_TYPE "mirror"
+
 /* Num of entries of ops_list in mir_cmd_runner.c. */
 #define NOF_STAT_OPS 7
 
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 8da81a5..fd3c201 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -11,6 +11,8 @@
 #include "cmd_parser.h"
 #include "cmd_res_formatter.h"
 
+#define SPPWK_PROC_TYPE "vf"
+
 /* Number of VLAN ID */
 #define NOF_VLAN 4096
 
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index d8b0c87..f4bafb4 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -151,15 +151,11 @@ parse_app_args(int argc, char *argv[])
 		usage(progname);
 		return SPP_RET_NG;
 	}
-	g_startup_param.wk_proc_type = WK_PROC_TYPE_VF;
 	RTE_LOG(INFO, APP,
-			"app opts (client_id=%d,type=%d,server=%s:%d,"
+			"Parsed app args (client_id=%d,server=%s:%d,"
 			"vhost_client=%d)\n",
-			cli_id,
-			g_startup_param.wk_proc_type,
-			g_startup_param.server_ip,
-			g_startup_param.server_port,
-			g_enable_vhost_cli);
+			cli_id, g_startup_param.server_ip,
+			g_startup_param.server_port, g_enable_vhost_cli);
 	return SPP_RET_OK;
 }
 
-- 
2.17.1



End of spp Digest, Vol 31, Issue 20
***********************************


From yasufum.o@gmail.com Mon Jun 24 19:41:44 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL001AHN20R160@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 19:42:00 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTL0031GN207E00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:42:00 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00T85N20O590@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:42:00 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id 4FD087E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:42:00 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 4EC198E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:42:00 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 4D9E68E6050	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:42:00 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id F24918E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:41:58 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:41:58 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAfwxJ032238;	Mon,
 24 Jun 2019 19:41:58 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5OAfweV032237;	Mon, 24 Jun 2019 19:41:58 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5OAfw13032234	for unknown; Mon,
 24 Jun 2019 19:41:58 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAfwct006994 for
 unknown; Mon, 24 Jun 2019 19:41:58 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAfwDd006991; Mon,
 24 Jun 2019 19:41:58 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAfwse008592;	Mon,
 24 Jun 2019 19:41:58 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5OAfv6a008588	for unknown; Mon, 24 Jun 2019 19:41:58 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAfvlR022493 for
 unknown; Mon, 24 Jun 2019 19:41:57 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAfvj7022487 for
 unknown; Mon, 24 Jun 2019 19:41:57 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5OAfpQd020431	for unknown; Mon,
 24 Jun 2019 19:41:56 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id B4CDB1BF0C;	Mon, 24 Jun 2019 12:41:50 +0200 (CEST)
Received: from mail-pf1-f194.google.com
 (mail-pf1-f194.google.com [209.85.210.194]) by dpdk.org (Postfix)
 with ESMTP id ED0D91BED0 for <spp@dpdk.org>; Mon,
 24 Jun 2019 12:41:49 +0200 (CEST)
Received: by mail-pf1-f194.google.com with SMTP id t16so7257475pfe.11 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 03:41:49 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id d123sm14365330pfc.144.2019.06.24.03.41.47
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 03:41:48 -0700 (PDT)
Date: Mon, 24 Jun 2019 19:41:44 +0900
From: yasufum.o@gmail.com
Subject: [spp 04421] [spp] [PATCH] shared/sec: remove worker process type
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624104144.24869-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04421
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=uoGaV6QOl1mfmDoFaJW2BeEtIm1QoWH9JfogYzL88oY=;
 b=CZKn2RcnbhFVOmFLXCZNwi1BOiCKxqvQ6SWoH5myvhBmvYjXMyipYxh13VnqP1MANP
 PDsPzDu5UPduxGVZp9uaQkTwbbM/toK4B358+e/6kkFjBl6hoT/n0IAeIuPTff5PE8sj
 xwBMFah6Oo2IbZ7PXefcfgWaCgwI18WYNu/2Zj4zE7AUgb1InaP+LyTP2MXvc6SatgBs
 KaXvH6HFL/HlSccSRe6hVSIAnbRvL4HwHFBRmAo88KlIZSbStXiEEAqD8jxjCauxLvFp
 jwfIs77UIzPLPynYFddA2mG+CzrZUA7xdg7rhcAOjuIdamWIa9NZI4pp4aCuplf+OEiI PvgQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=uoGaV6QOl1mfmDoFaJW2BeEtIm1QoWH9JfogYzL88oY=;
 b=l34Y2ylRZLv9ahJS9au3AGnBua/gCoFgpvjeqyZU4iGIRB1fJJyd/aLhmSWFNQk0L2
 AhG59SG0yDjtqPT2LiBLx8WtYIlJWXV7PdDXFH8jICSgiby05bTp/wQ3BwPVgbO1ijCW
 HdzsD9kyy7djmGWiZwiLiv/MIZKW1rCzjC4+lYwj9/u0TCtD0Tq4FeN6UABZFgneOQYG
 jkS0fuJdyfU9FP7TAK6HBOwFrfmVOH0xcZ2hhBWezZioqWVL4s1dBaUo5S9hD77omuMF
 k0oKC5f5bJugQK7J+esPGWCThrJEgSRC0lGll5ikZY1LHIJNqgOzXzItOW7HEIETnBVR i64A==
X-Gm-Message-State: APjAAAUG0yGTOLlWEEAiIwCU9992rA++pUSMeTuRrWR3+0dFfwvJYgiI
 RSMZrXyUEy7+J81rYBzl3MXi0DnU
X-Google-Smtp-Source:
 APXvYqzKkFTXqrX/25PuwVUMuol/6R6JWDfYXqm9bZ8f/sKZLTjjtIhk+vgb6WlBPClRK2KPvPDxDw==
X-Received: by 2002:a63:595e:: with SMTP id j30mr13092106pgm.2.1561372908774;
 Mon, 24 Jun 2019 03:41:48 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 182
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Three of SPP worker process types are defined as an enum for vf,
mirror and none. It is only used as index for getting name of types of
string value from an array.

  enum sppwk_proc_type {
       WK_PROC_TYPE_NONE,
       WK_PROC_TYPE_VF,
       WK_PROC_TYPE_MIRROR,
  }

However, it is menaingless because type for vf is not used in
spp_mirror, or vise versa. In addition, type none is not used from
anywhere. It should be simply replaced with fixed string values in each
of processes because it is not needed to be shared among processes.

This update is to replace this enum and array of string with
`#define WK_PROC_TYPE "vf"` and `#define WK_PROC_TYPE "mirror"` in each
of processes independently.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/spp_mirror.c                       | 12 +++------
 .../spp_worker_th/cmd_res_formatter.c         | 25 +------------------
 .../secondary/spp_worker_th/cmd_utils.h       |  9 -------
 .../secondary/spp_worker_th/mirror_deps.h     |  2 ++
 src/shared/secondary/spp_worker_th/vf_deps.h  |  2 ++
 src/vf/spp_vf.c                               | 10 +++-----
 6 files changed, 12 insertions(+), 48 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index 19d79ef..9d9b4a8 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -194,15 +194,11 @@ parse_app_args(int argc, char *argv[])
 		usage(progname);
 		return SPP_RET_NG;
 	}
-	g_startup_param.wk_proc_type = WK_PROC_TYPE_MIRROR;
 	RTE_LOG(INFO, MIRROR,
-			"app opts (client_id=%d,type=%d,"
-			"server=%s:%d,vhost_client=%d,)\n",
-			cli_id,
-			g_startup_param.wk_proc_type,
-			g_startup_param.server_ip,
-			g_startup_param.server_port,
-			g_enable_vhost_cli);
+			"Parsed app args (client_id=%d, server=%s:%d, "
+			"vhost_client=%d,)\n",
+			cli_id, g_startup_param.server_ip,
+			g_startup_param.server_port, g_enable_vhost_cli);
 	return SPP_RET_OK;
 }
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index 291c1f5..f095b08 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -21,18 +21,6 @@ static int append_result_value(const char *name, char **output, void *tmp);
 static int append_error_details_value(const char *name, char **output,
 		void *tmp);
 
-/**
- * List of worker process type. The order of items should be same as the order
- * of enum `wk_proc_type` in cmd_utils.h.
- */
-/* TODO(yasufum) Add "pcap" after spp_pcap is made to use shared. */
-const char *SPPWK_PROC_TYPE_LIST[] = {
-	"none",
-	"vf",
-	"mirror",
-	"",  /* termination */
-};
-
 /**
  * List of port abilities. The order of items should be same as the order of
  * enum `sppwk_port_abl_ops` in spp_vf.h.
@@ -121,23 +109,12 @@ append_interface_array(char **output, const enum port_type type)
 	return SPP_RET_OK;
 }
 
-/* TODO(yasufum) move to another file for util funcs. */
-/* Get proc type from global command params. */
-static int
-get_wk_type(void)
-{
-	struct startup_param *params;
-	sppwk_get_mng_data(&params, NULL, NULL, NULL, NULL, NULL, NULL);
-	return params->wk_proc_type;
-}
-
 /* append a secondary process type for JSON format */
 int
 append_process_type_value(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
-	return append_json_str_value(output, name,
-			SPPWK_PROC_TYPE_LIST[get_wk_type()]);
+	return append_json_str_value(output, name, SPPWK_PROC_TYPE);
 }
 
 /* append a value of vlan for JSON format */
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 9022589..425d3eb 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -134,14 +134,6 @@ enum copy_mng_flg {
 	COPY_MNG_FLG_ALLCOPY,
 };
 
-/* secondary process type used only from spp_vf and spp_mirror */
-/* TODO(yasufum) Add WK_PROC_TYPE_PCAP. */
-enum sppwk_proc_type {
-	WK_PROC_TYPE_NONE,
-	WK_PROC_TYPE_VF,
-	WK_PROC_TYPE_MIRROR,
-};
-
 /** VLAN tag information */
 struct sppwk_vlan_tag {
 	int vid; /**< VLAN ID */
@@ -203,7 +195,6 @@ struct sppwk_comp_info {
 struct startup_param {
 	char server_ip[INET_ADDRSTRLEN];  /* IP address of spp-ctl */
 	int server_port;   /* Port Number of spp-ctl */
-	enum sppwk_proc_type wk_proc_type;
 };
 
 /* Manage number of interfaces  and port information as global variable. */
diff --git a/src/shared/secondary/spp_worker_th/mirror_deps.h b/src/shared/secondary/spp_worker_th/mirror_deps.h
index 1446027..085b01e 100644
--- a/src/shared/secondary/spp_worker_th/mirror_deps.h
+++ b/src/shared/secondary/spp_worker_th/mirror_deps.h
@@ -9,6 +9,8 @@
 #include "cmd_parser.h"
 #include "cmd_res_formatter.h"
 
+#define SPPWK_PROC_TYPE "mirror"
+
 /* Num of entries of ops_list in mir_cmd_runner.c. */
 #define NOF_STAT_OPS 7
 
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 8da81a5..fd3c201 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -11,6 +11,8 @@
 #include "cmd_parser.h"
 #include "cmd_res_formatter.h"
 
+#define SPPWK_PROC_TYPE "vf"
+
 /* Number of VLAN ID */
 #define NOF_VLAN 4096
 
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index d8b0c87..f4bafb4 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -151,15 +151,11 @@ parse_app_args(int argc, char *argv[])
 		usage(progname);
 		return SPP_RET_NG;
 	}
-	g_startup_param.wk_proc_type = WK_PROC_TYPE_VF;
 	RTE_LOG(INFO, APP,
-			"app opts (client_id=%d,type=%d,server=%s:%d,"
+			"Parsed app args (client_id=%d,server=%s:%d,"
 			"vhost_client=%d)\n",
-			cli_id,
-			g_startup_param.wk_proc_type,
-			g_startup_param.server_ip,
-			g_startup_param.server_port,
-			g_enable_vhost_cli);
+			cli_id, g_startup_param.server_ip,
+			g_startup_param.server_port, g_enable_vhost_cli);
 	return SPP_RET_OK;
 }
 
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 19:43:23 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd103.ddreams.local
 (zssg-mailmd103.ddreams.local [10.160.123.98]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL001I9N4RR160@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 19:43:39 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd103.ddreams.local by
 zssg-mailmd103.ddreams.local (dDREAMS) id <0PTL00W1QN4RBV00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:43:39 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd103.ddreams.local
 (dDREAMS) with ESMTP id <0PTL007SHN4RCY90@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:43:39 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf101.ddreams.local (Postfix) with ESMTP id 983727E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:43:39 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 971AA8E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:43:39 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 8C6FF8E6051	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:43:39 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 33C168E6051	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:43:39 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf101.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:43:39 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAhcRG032379;	Mon,
 24 Jun 2019 19:43:39 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5OAhbTV032375;	Mon, 24 Jun 2019 19:43:37 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5OAhb5c032361	for unknown; Mon,
 24 Jun 2019 19:43:37 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAhbAZ007357 for
 unknown; Mon, 24 Jun 2019 19:43:37 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAhbqE007354; Mon,
 24 Jun 2019 19:43:37 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAhbpg008706;	Mon,
 24 Jun 2019 19:43:37 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5OAhbih008702	for unknown; Mon, 24 Jun 2019 19:43:37 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAhavt022781 for
 unknown; Mon, 24 Jun 2019 19:43:37 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAhaiH022777 for
 unknown; Mon, 24 Jun 2019 19:43:36 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5OAhUdF020577	for unknown; Mon,
 24 Jun 2019 19:43:36 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id E83161BF00;	Mon, 24 Jun 2019 12:43:29 +0200 (CEST)
Received: from mail-pg1-f196.google.com
 (mail-pg1-f196.google.com [209.85.215.196]) by dpdk.org (Postfix)
 with ESMTP id AE7AC1BED0 for <spp@dpdk.org>; Mon,
 24 Jun 2019 12:43:28 +0200 (CEST)
Received: by mail-pg1-f196.google.com with SMTP id z19so3941882pgl.12 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 03:43:28 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id w65sm1760073pfw.168.2019.06.24.03.43.26
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 03:43:27 -0700 (PDT)
Date: Mon, 24 Jun 2019 19:43:23 +0900
From: yasufum.o@gmail.com
Subject: [spp 04422] [spp] [PATCH] spp_nfv: remove global variable client_id
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624104323.24923-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04422
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=3QgPA51gtKctch556U9g+kr4kDLvaroiKzqhc2PEcd8=;
 b=j4PfGj7TExqqyjwGROzhPA2sQmAQUBKL4BN//uI0sNWixwU+8YrJTvGgmuWAHV/B4c
 qSAHPAc6Db0yYoQUcadukjZFmE/HfyY7/j9H1019l8zZUfNy/HgY7nKvmcedCfw8nBum
 E0lE+28oe96LX07WXezWpUrlLVtLhREUFh5nKO8Eij9byE3N0DCgCo5a92eNnpdrezk/
 aW/ROS3uDx57DlPgSWVQt8SCIuJE2LEKyePbnTOSdS3HlR3SeWZAnzjgR1JFHItU76E4
 wK+Z9SKQYMRDtakioIORoea/uK/ig8lWyXdQe8aA2Yupj4TonAt62mdGHP3WVELeqMww Jhsg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=3QgPA51gtKctch556U9g+kr4kDLvaroiKzqhc2PEcd8=;
 b=dA/TBTNdika6uUSW0so8NzbmLGd53u3LjSYXS+4L4zOlT7aSJ/s1U+2i9to+x+xXB4
 KSpJq5in3Mw7yuPtyHXsZcl2PBYdIVYVhAjgW9JFJCrSaWpk9w6SJnt1MiVuvko5Zl7k
 +KwCHtb8vTLEs35tmUHnuqazuXv+ykhkRVVvodCL68TluIPj+0V4bdGPpuujoC1rpoxN
 r6uxM/ive0KQS74lCfi2tGlBUZV9KizjEaG5sKI+otGAyIAhkHdmI5k+cUcHbl+ZSMBN
 dKtxDoxUXKfRIp8+jgIQ7vBb/8LlEsg7dvOsOpt1StYR5UfUZJvJtrqUFsIN0dybA1lU JW1Q==
X-Gm-Message-State: APjAAAWSwlcJZVt3Pkdv2D5UvVvBSIlQMVKrn53/RDZQRPEXzTvYKoBb
 h3Qx9bFkYRTcR8BkThl5MtRby2t9
X-Google-Smtp-Source:
 APXvYqyn9lxwMTvVjdfiRFKH5A2/QbGntsHNo6EITUYyCJIm28fHByfLvUmTNq0GcNLtVCXVOvo4SQ==
X-Received: by 2002:a65:4383:: with SMTP id m3mr31510221pgp.435.1561373007801;
 Mon, 24 Jun 2019 03:43:27 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 153
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

`client_id` is defined as a global variable in `params.h`, but it is
better to use get_client_id() instead. This update is to replace it.
This update is also to make a change for formatter function
`get_sec_stats_json()` which takes client ID as uint16_t, but
get_client_id() returns the ID as int.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/nfv/commands.h   | 13 ++++++-------
 src/nfv/main.c       |  8 ++++++--
 src/nfv/nfv_status.c |  4 ++--
 src/nfv/nfv_status.h |  2 +-
 src/nfv/params.h     |  2 --
 5 files changed, 15 insertions(+), 14 deletions(-)

diff --git a/src/nfv/commands.h b/src/nfv/commands.h
index c8f726f..708d084 100644
--- a/src/nfv/commands.h
+++ b/src/nfv/commands.h
@@ -152,6 +152,7 @@ static int
 parse_command(char *str)
 {
 	char *token_list[MAX_PARAMETER] = {NULL};
+	int cli_id;
 	int max_token = 0;
 	int ret = 0;
 
@@ -174,11 +175,11 @@ parse_command(char *str)
 		RTE_LOG(DEBUG, SPP_NFV, "status\n");
 		memset(str, '\0', MSG_SIZE);
 		if (cmd == FORWARD)
-			get_sec_stats_json(str, client_id, "running",
+			get_sec_stats_json(str, get_client_id(), "running",
 					lcore_id_used,
 					ports_fwd_array, port_map);
 		else
-			get_sec_stats_json(str, client_id, "idling",
+			get_sec_stats_json(str, get_client_id(), "idling",
 					lcore_id_used,
 					ports_fwd_array, port_map);
 
@@ -186,14 +187,12 @@ parse_command(char *str)
 		memset(str, '\0', MSG_SIZE);
 		sprintf(str, "{%s:%s,%s:%d,%s:%s}",
 				"\"results\"", "[{\"result\":\"success\"}]",
-				"\"client_id\"", client_id,
+				"\"client_id\"", get_client_id(),
 				"\"process_type\"", "\"nfv\"");
 
 	} else if (!strcmp(token_list[0], "_set_client_id")) {
-		int id;
-
-		if (spp_atoi(token_list[1], &id) >= 0)
-			client_id = id;
+		if (spp_atoi(token_list[1], &cli_id) >= 0)
+			set_client_id(cli_id);
 
 	} else if (!strcmp(token_list[0], "exit")) {
 		RTE_LOG(DEBUG, SPP_NFV, "exit\n");
diff --git a/src/nfv/main.c b/src/nfv/main.c
index fbcef0c..ae4168c 100644
--- a/src/nfv/main.c
+++ b/src/nfv/main.c
@@ -12,6 +12,7 @@
 #include <rte_log.h>
 
 #include "shared/common.h"
+#include "shared/secondary/utils.h"
 #include "shared/secondary/add_port.h"
 
 #include "params.h"
@@ -61,6 +62,7 @@ static int
 parse_app_args(int argc, char *argv[])
 {
 	int option_index, opt;
+	int cli_id;
 	char **argvopt = argv;
 	const char *progname = argv[0];
 	int ret;
@@ -72,10 +74,11 @@ parse_app_args(int argc, char *argv[])
 			g_enable_vhost_cli = 1;
 			break;
 		case 'n':
-			if (parse_num_clients(&client_id, optarg) != 0) {
+			if (parse_client_id(&cli_id, optarg) != 0) {
 				usage(progname);
 				return -1;
 			}
+			set_client_id(cli_id);
 			break;
 		case 's':
 			ret = parse_server(&server_ip, &server_port, optarg);
@@ -259,7 +262,8 @@ main(int argc, char *argv[])
 		rte_eal_remote_launch(main_loop, NULL, lcore_id);
 	}
 
-	RTE_LOG(INFO, SPP_NFV, "My ID %d start handling message\n", client_id);
+	RTE_LOG(INFO, SPP_NFV, "My ID %d start handling message\n",
+			get_client_id());
 	RTE_LOG(INFO, SPP_NFV, "[Press Ctrl-C to quit ...]\n");
 
 	/* send and receive msg loop */
diff --git a/src/nfv/nfv_status.c b/src/nfv/nfv_status.c
index 7e3dbd4..c40d0b4 100644
--- a/src/nfv/nfv_status.c
+++ b/src/nfv/nfv_status.c
@@ -26,13 +26,13 @@
  *   }
  */
 void
-get_sec_stats_json(char *str, uint16_t client_id,
+get_sec_stats_json(char *str, int cli_id,
 		const char *running_stat,
 		uint8_t lcore_id_used[RTE_MAX_LCORE],
 		struct port *ports_fwd_array,
 		struct port_map *port_map)
 {
-	sprintf(str, "{\"client-id\":%d,", client_id);
+	sprintf(str, "{\"client-id\":%d,", cli_id);
 
 	sprintf(str + strlen(str), "\"status\":");
 	sprintf(str + strlen(str), "\"%s\",", running_stat);
diff --git a/src/nfv/nfv_status.h b/src/nfv/nfv_status.h
index ef9cd00..14225cc 100644
--- a/src/nfv/nfv_status.h
+++ b/src/nfv/nfv_status.h
@@ -6,7 +6,7 @@
 #define _NFV_STATUS_H_
 
 /* Get status of spp_nfv or spp_vm as JSON format. */
-void get_sec_stats_json(char *str, uint16_t client_id,
+void get_sec_stats_json(char *str, int client_id,
 		const char *running_stat,
 		uint8_t lcore_id_used[RTE_MAX_LCORE],
 		struct port *ports_fwd_array,
diff --git a/src/nfv/params.h b/src/nfv/params.h
index aa9c720..9ddf79d 100644
--- a/src/nfv/params.h
+++ b/src/nfv/params.h
@@ -23,8 +23,6 @@ struct porttype_map portmap[] = {
 
 static struct port ports_fwd_array[RTE_MAX_ETHPORTS];
 
-static uint16_t client_id;
-
 /* the port details */
 struct port_info *ports;
 
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 19:44:07 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd105.ddreams.local
 (zssg-mailmd105.ddreams.local [10.160.123.100])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL001MYN64R160@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 19:44:28 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd105.ddreams.local by
 zssg-mailmd105.ddreams.local (dDREAMS) id <0PTL00D1YN64SM00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:44:28 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd105.ddreams.local
 (dDREAMS) with ESMTP id <0PTL01CY8N646T50@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:44:28 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id 974ED7E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:44:28 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 961448E6063	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:44:28 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 94E7D8E6062	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:44:28 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 572538E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:44:27 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:44:27 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiRk4032496;	Mon,
 24 Jun 2019 19:44:27 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5OAiRY8032495;	Mon, 24 Jun 2019 19:44:27 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5OAiQJr032492	for unknown; Mon,
 24 Jun 2019 19:44:26 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiQTK007500 for
 unknown; Mon, 24 Jun 2019 19:44:26 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiQDP007497; Mon,
 24 Jun 2019 19:44:26 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiQAp008770;	Mon,
 24 Jun 2019 19:44:26 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5OAiQ6W008766	for unknown; Mon, 24 Jun 2019 19:44:26 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiQob022918 for
 unknown; Mon, 24 Jun 2019 19:44:26 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiPaY022914 for
 unknown; Mon, 24 Jun 2019 19:44:25 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5OAiJjV020666	for unknown; Mon,
 24 Jun 2019 19:44:25 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 1A0BC1BF16;	Mon, 24 Jun 2019 12:44:19 +0200 (CEST)
Received: from mail-pl1-f193.google.com
 (mail-pl1-f193.google.com [209.85.214.193]) by dpdk.org (Postfix)
 with ESMTP id C774E1BF0F for <spp@dpdk.org>; Mon,
 24 Jun 2019 12:44:17 +0200 (CEST)
Received: by mail-pl1-f193.google.com with SMTP id a93so6670875pla.7 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 03:44:17 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id r9sm10093635pgv.24.2019.06.24.03.44.15
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 03:44:16 -0700 (PDT)
Date: Mon, 24 Jun 2019 19:44:07 +0900
From: yasufum.o@gmail.com
Subject: [spp 04423] [spp] [PATCH 0/4] Remove global vars of IP and port of
 spp-ctl
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624104411.24977-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04423
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=xKMWIbDPEFCy4R3hB4QdtlD4f1YotsjUYVSvl760gc0=;
 b=lSrIuXgNBzE+VhCLEY5mLRvg6GLKmwIa7ZMfmbrxFYc9/FqTOKiP1mR9YfrbSh/ReP
 lJzEHQGEyRU8aFOT2lk0dTz9JAV1fnsJvwSPLJapyuNjFXZFCNE0wGFp/aos43dr02HZ
 9lDWf1cUtynX/dwMnAghW2RIBWQ7G6qDzylCpuLlZcw/jjLsWYeP9jxboo5dpX6Zvh78
 +ObkRS3EQlKWBzW2AC+J6+EpRQnYGOfCPZiTD/azq6zy9AT8gHOelYDPDabIp0ZWYKJ9
 1NV5Sk4Zpe0yZIq48jRlaT7JpvtISb/j9+hCyreaBpDBAwW01DGzgV++hnPlse+hLE+C tckA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=xKMWIbDPEFCy4R3hB4QdtlD4f1YotsjUYVSvl760gc0=;
 b=SJVoA6QiKEdfLrcTVtqyqpOsDZKMW1R7Fhgq8uvVx20+7jnKvOYphH11I+6/YOq8pS
 C8V2U3XF1fpRTWeRRg95QSMS6DDEMi/x9qQ8mIu3Bz4SlemvWS/ab/ZQEKGrOFrHQJu3
 34qjXi0G0+cLW3OPCbmwvvBPcfQkCTXlxbmH+uzHPnbJgn4mKYS5hQL1kt4e/kY0zg3O
 FVF0ETxnfYdJ1wp99u4JsoOQrG9Nt8sVnrf6T5qo/0O8gqQLzQsIY9CTrvrvDYDDXlY4
 AvFXr7FslIsucpkciP0wlc2GXxEaCu05/gPWC0SwO/9eqxdU0x34S1FmxP0ELWZ3P2V+ d6bg==
X-Gm-Message-State: APjAAAWFMB38Bkx0CyzLxl6FyB5B8AnUXL39FNtlEVocmqBoWx/qvUGy
 KdYZxh0/SSHoaN2c0BRvgheWr3E2
X-Google-Smtp-Source:
 APXvYqyjEVFTbBFPzFCb/GZJyw/t3ZuK1aH4KH8Z5daEjyPT4z7l9weDXN8XYKf7/kpWc3a3iq6E+A==
X-Received: by 2002:a17:902:b592:: with SMTP id
 a18mr122865776pls.278.1561373057040; Mon, 24 Jun 2019 03:44:17 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 26
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

In secondary processes, IP address and port given as command args are
defined as global variables, but no need to be global. This update is to
change them to be retrieved from functions and remove global
variables.

Yasufumi Ogawa (4):
  spp_nfv: remove global vars of spp-ctl IP and port
  spp_vf: remove global vars of spp-ctl IP and port
  spp_mirror: remove global vars spp-ctl IP and port
  spp_pcap: remove global vars spp-ctl IP and port

 src/mirror/spp_mirror.c | 60 ++++++++++++-------------------
 src/nfv/commands.h      |  6 ++--
 src/nfv/main.c          |  6 +++-
 src/nfv/params.h        |  7 ----
 src/pcap/spp_pcap.c     | 78 +++++++++++++++++------------------------
 src/shared/common.c     | 48 +++++++++++++++++++++++++
 src/shared/common.h     | 42 +++++++++++++++++++++-
 src/vf/spp_vf.c         | 60 ++++++++++++-------------------
 8 files changed, 175 insertions(+), 132 deletions(-)

-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 19:44:08 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd106.ddreams.local
 (zssg-mailmd106.ddreams.local [10.160.123.101])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL001NCN66R160@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 19:44:30 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd106.ddreams.local by
 zssg-mailmd106.ddreams.local (dDREAMS) id <0PTL0182GN66IO00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:44:30 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd106.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00CZNN66B3C0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:44:30 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id 358707E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:44:30 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 32B278E6055	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:44:30 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 25B128E6042	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:44:30 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 92A7A8E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:44:29 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:44:29 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiTkb032511;	Mon,
 24 Jun 2019 19:44:29 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5OAiTWB032508;	Mon, 24 Jun 2019 19:44:29 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5OAiTIk032499	for unknown; Mon,
 24 Jun 2019 19:44:29 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiSww007509 for
 unknown; Mon, 24 Jun 2019 19:44:28 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiS9o007506; Mon,
 24 Jun 2019 19:44:28 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiSKX008777;	Mon,
 24 Jun 2019 19:44:28 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5OAiS37008773	for unknown; Mon, 24 Jun 2019 19:44:28 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiSrb022944 for
 unknown; Mon, 24 Jun 2019 19:44:28 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiSD9022939 for
 unknown; Mon, 24 Jun 2019 19:44:28 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5OAiLUA020675	for unknown; Mon,
 24 Jun 2019 19:44:27 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 3124E1BF1B;	Mon, 24 Jun 2019 12:44:21 +0200 (CEST)
Received: from mail-pl1-f193.google.com
 (mail-pl1-f193.google.com [209.85.214.193]) by dpdk.org (Postfix)
 with ESMTP id 821381BF19 for <spp@dpdk.org>; Mon,
 24 Jun 2019 12:44:19 +0200 (CEST)
Received: by mail-pl1-f193.google.com with SMTP id p1so6670304plo.2 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 03:44:19 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id r9sm10093635pgv.24.2019.06.24.03.44.17
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 03:44:18 -0700 (PDT)
Date: Mon, 24 Jun 2019 19:44:08 +0900
From: yasufum.o@gmail.com
Subject: [spp 04424] [spp] [PATCH 1/4] spp_nfv: remove global vars of spp-ctl
 IP and port
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624104411.24977-2-yasufum.o@gmail.com>
In-reply-to: <20190624104411.24977-1-yasufum.o@gmail.com>
References: <20190624104411.24977-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04424
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=2GwllWaHZMVbWh08H4sNJLwdSY6VfWxGSsGLBJwpdJY=;
 b=ptT40seVSS9CpRBVjFCFcfqQBl3R7d3ZYeDwPH9ayYz19jAM10etUZNfAKIPT/eQ3Y
 LiHyFHxt14VL5jnAvbHHP/1HIO8aJ7tg4B4+kDzgEQ/QFgdkPL2pT/8ItNDQ023qtB0a
 JfwFTuRSPOApuoygxgUwcYEA0c1S6OE4bez2wWtZj3C0qpUVObW6TyaA3BVomnvZTfHy
 AMMpPMF3jPFh1q6kAqwIgjvqOnjew4fvoRkwlR7gVL7Sm5gqoJF5lG5Bs61sIsJcYDh7
 77HbWeddkw2FomO/bDRAPSEqOpRGpQa9eReQeDoIXIB+D2f8xB1PzxBkVx7mjLssJ8a9 0Dfw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=2GwllWaHZMVbWh08H4sNJLwdSY6VfWxGSsGLBJwpdJY=;
 b=qgMHztfk5MiR9wTNF1XytguyENG8po7URCiibQEs1n0shf/cw4aXkruKUFoUWqSK5S
 lu1j+E0o1WqcPpcb8fL2ri8cnH5QMOMgrT2FSA7ppudZN7CacDcmhTKAhqOLljg+arRc
 gaMJbFF015M3nI9YZ6ysiAIOrikrLbTMonez2+c0o4r/Re9F/AfXAp+4kIzhAytCHNOQ
 Y1bEUmOtQLQufrfkFGyFFaJS//4JbkFTkXOvyFOAIsrpCND6wDdvuKfdqWZ3WW+qWbZ5
 Fts59Od+54fhEFxd/7x9eeCioaH6o77yXp/emvo8txae+/x6008BmNxcnD9jP1oHWgCN kVoA==
X-Gm-Message-State: APjAAAXThGgQBEuO+WSecy3kXKq2a0/j/zRXdM0BxaN5uvtTKEg+9yud
 IuuLbGqMymhYH9hmc131P5ekV2q0
X-Google-Smtp-Source:
 APXvYqyYMnMkVkfrlsfUCJiiKJ3ipemf3949W7DgEDPJwtiBAXDQLnD9/MZO3Xt8PU9GVCKAArFOJA==
X-Received: by 2002:a17:902:7583:: with SMTP id
 j3mr29259768pll.196.1561373058440; Mon, 24 Jun 2019 03:44:18 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 210
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to remove global variable of IP address and port number
of spp-ctl, and functions for gettting and setting them instead.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/nfv/commands.h  |  6 ++++--
 src/nfv/main.c      |  6 +++++-
 src/nfv/params.h    |  7 -------
 src/shared/common.c | 48 +++++++++++++++++++++++++++++++++++++++++++++
 src/shared/common.h | 42 ++++++++++++++++++++++++++++++++++++++-
 5 files changed, 98 insertions(+), 11 deletions(-)

diff --git a/src/nfv/commands.h b/src/nfv/commands.h
index 708d084..11e434a 100644
--- a/src/nfv/commands.h
+++ b/src/nfv/commands.h
@@ -116,6 +116,7 @@ do_connection(int *connected, int *sock)
 {
 	static struct sockaddr_in servaddr;
 	int ret = 0;
+	char ctl_ip[IPADDR_LEN] = { 0 };  /* spp_ctl's IP addr. */
 
 	if (*connected == 0) {
 		if (*sock < 0) {
@@ -127,8 +128,9 @@ do_connection(int *connected, int *sock)
 			/*Create of the tcp socket*/
 			memset(&servaddr, 0, sizeof(servaddr));
 			servaddr.sin_family = AF_INET;
-			servaddr.sin_addr.s_addr = inet_addr(server_ip);
-			servaddr.sin_port = htons(server_port);
+			get_spp_ctl_ip(ctl_ip);
+			servaddr.sin_addr.s_addr = inet_addr(ctl_ip);
+			servaddr.sin_port = htons(get_spp_ctl_port());
 		}
 
 		RTE_LOG(INFO,
diff --git a/src/nfv/main.c b/src/nfv/main.c
index ae4168c..9cfe49a 100644
--- a/src/nfv/main.c
+++ b/src/nfv/main.c
@@ -65,6 +65,8 @@ parse_app_args(int argc, char *argv[])
 	int cli_id;
 	char **argvopt = argv;
 	const char *progname = argv[0];
+	char *ctl_ip;  /* IP address of spp_ctl. */
+	int ctl_port;  /* Port num to connect spp_ctl. */
 	int ret;
 
 	while ((opt = getopt_long(argc, argvopt, "n:s:", lgopts,
@@ -81,7 +83,9 @@ parse_app_args(int argc, char *argv[])
 			set_client_id(cli_id);
 			break;
 		case 's':
-			ret = parse_server(&server_ip, &server_port, optarg);
+			ret = parse_server(&ctl_ip, &ctl_port, optarg);
+			set_spp_ctl_ip(ctl_ip);
+			set_spp_ctl_port(ctl_port);
 			if (ret != 0) {
 				usage(progname);
 				return -1;
diff --git a/src/nfv/params.h b/src/nfv/params.h
index 9ddf79d..06e6f1f 100644
--- a/src/nfv/params.h
+++ b/src/nfv/params.h
@@ -26,13 +26,6 @@ static struct port ports_fwd_array[RTE_MAX_ETHPORTS];
 /* the port details */
 struct port_info *ports;
 
-/*
- * our client id number - tells us which rx queue to read, and NIC TX
- * queue to write to.
- */
-static char *server_ip;
-static int server_port;
-
 static enum cmd_type cmd;
 
 static struct port_map port_map[RTE_MAX_ETHPORTS];
diff --git a/src/shared/common.c b/src/shared/common.c
index 9c244e5..a195929 100644
--- a/src/shared/common.c
+++ b/src/shared/common.c
@@ -8,6 +8,9 @@
 
 #define RTE_LOGTYPE_SHARED RTE_LOGTYPE_USER1
 
+char spp_ctl_ip[IPADDR_LEN];  /* IP address of spp_ctl. */
+int spp_ctl_port;  /* Port num to connect spp_ctl. */
+
 /**
  * Set log level of type RTE_LOGTYPE_USER* to given level, for instance,
  * RTE_LOG_INFO or RTE_LOG_DEBUG.
@@ -115,3 +118,48 @@ int get_sec_dir(char *proc_name, char *dir_name)
 	}
 	return 0;
 }
+
+/* Get IP address of spp_ctl as string. */
+int get_spp_ctl_ip(char *s_ip)
+{
+	sprintf(s_ip, "%s", spp_ctl_ip);
+	if (spp_ctl_ip == NULL) {
+		RTE_LOG(ERR, SHARED, "Failed to get IP of spp_ctl.\n");
+		return -1;
+	}
+	return 0;
+}
+
+/* Set IP address of spp_ctl. */
+int set_spp_ctl_ip(const char *s_ip)
+{
+	memset(spp_ctl_ip, 0x00, sizeof(spp_ctl_ip));
+	sprintf(spp_ctl_ip, "%s", s_ip);
+	if (spp_ctl_ip == NULL) {
+		RTE_LOG(ERR, SHARED, "Failed to set IP of spp_ctl.\n");
+		return -1;
+	}
+	return 0;
+}
+
+/* Get port number for connecting to spp_ctl as string. */
+int get_spp_ctl_port(void)
+{
+	if (spp_ctl_port < 0) {
+		RTE_LOG(ERR, SHARED, "Server port is not initialized.\n");
+		return -1;
+	}
+	return spp_ctl_port;
+}
+
+/* Set port number for connecting to spp_ctl. */
+int set_spp_ctl_port(int s_port)
+{
+	if (s_port < 0) {
+		RTE_LOG(ERR, SHARED, "Given invalid port number '%d'.\n",
+				s_port);
+		return -1;
+	}
+	spp_ctl_port = s_port;
+	return 0;
+}
diff --git a/src/shared/common.h b/src/shared/common.h
index 9b8d897..78d2520 100644
--- a/src/shared/common.h
+++ b/src/shared/common.h
@@ -10,6 +10,8 @@
 #include <unistd.h>
 #include <rte_ethdev_driver.h>
 
+#define IPADDR_LEN 16  /* Length of IP address in string. */
+
 #define MSG_SIZE 2048  /* socket buffer len */
 
 #define SOCK_RESET  -1
@@ -125,11 +127,49 @@ int set_user_log_level(int num_user_log, uint32_t log_level);
 int set_user_log_debug(int num_user_log);
 
 int parse_num_clients(uint16_t *num_clients, const char *clients);
+
 int parse_server(char **server_ip, int *server_port, char *server_addr);
 
-/* Get directory name of given proc_name */
+/**
+ * Get directory name of given proc_name.
+ *
+ * @param[in] proc_name Name of sec process such as spp_nfv.
+ * @param[out] dir_name Directory name.
+ * @return 0
+ */
 int get_sec_dir(char *proc_name, char *dir_name);
 
 extern uint8_t lcore_id_used[RTE_MAX_LCORE];
 
+/**
+ * Get IP address of spp_ctl as string.
+ *
+ * @param[in,out] s_ip IP address of spp_ctl.
+ * @return 0 if succeeded, or -1 if failed.
+ */
+int get_spp_ctl_ip(char *s_ip);
+
+/**
+ * Set IP address of spp_ctl.
+ *
+ * @param[in] s_ip IP address of spp_ctl.
+ * @return 0 if succeeded, or -1 if failed.
+ */
+int set_spp_ctl_ip(const char *s_ip);
+
+/**
+ * Get port number for connecting to spp_ctl as string.
+ *
+ * @return Port number, or -1 if failed.
+ */
+int get_spp_ctl_port(void);
+
+/**
+ * Set port number for connecting to spp_ctl.
+ *
+ * @param[in] s_port Port number for spp_ctl.
+ * @return 0 if succeeded, or -1 if failed.
+ */
+int set_spp_ctl_port(int s_port);
+
 #endif
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 19:44:09 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd105.ddreams.local
 (zssg-mailmd105.ddreams.local [10.160.123.100])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL001NSN68R160@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 19:44:32 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd105.ddreams.local by
 zssg-mailmd105.ddreams.local (dDREAMS) id <0PTL00D2IN68SM00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:44:32 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd105.ddreams.local
 (dDREAMS) with ESMTP id <0PTL01CZYN686T50@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:44:32 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf106.ddreams.local (Postfix) with ESMTP id 1ED7C7E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:44:32 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 1AB3B8E6065	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:44:32 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 0FBE28E605A	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:44:32 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id BEAE38E6042	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:44:30 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf106.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:44:30 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiUBb032533;	Mon,
 24 Jun 2019 19:44:30 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5OAiUn9032532;	Mon, 24 Jun 2019 19:44:30 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5OAiUuA032529	for unknown; Mon,
 24 Jun 2019 19:44:30 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiUHb007524 for
 unknown; Mon, 24 Jun 2019 19:44:30 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiUQA007521; Mon,
 24 Jun 2019 19:44:30 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiTa9008784;	Mon,
 24 Jun 2019 19:44:29 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5OAiTbl008780	for unknown; Mon, 24 Jun 2019 19:44:29 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiT8I022992 for
 unknown; Mon, 24 Jun 2019 19:44:29 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiT1N022989 for
 unknown; Mon, 24 Jun 2019 19:44:29 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5OAiMKj020685	for unknown; Mon,
 24 Jun 2019 19:44:28 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 421BE1BF20;	Mon, 24 Jun 2019 12:44:22 +0200 (CEST)
Received: from mail-pg1-f194.google.com
 (mail-pg1-f194.google.com [209.85.215.194]) by dpdk.org (Postfix)
 with ESMTP id 3B2211BF1E for <spp@dpdk.org>; Mon,
 24 Jun 2019 12:44:20 +0200 (CEST)
Received: by mail-pg1-f194.google.com with SMTP id z19so3942955pgl.12 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 03:44:20 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id r9sm10093635pgv.24.2019.06.24.03.44.18
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 03:44:19 -0700 (PDT)
Date: Mon, 24 Jun 2019 19:44:09 +0900
From: yasufum.o@gmail.com
Subject: [spp 04425] [spp] [PATCH 2/4] spp_vf: remove global vars of spp-ctl IP
 and port
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624104411.24977-3-yasufum.o@gmail.com>
In-reply-to: <20190624104411.24977-1-yasufum.o@gmail.com>
References: <20190624104411.24977-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04425
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=8Br02rRFtz3iXoWJfwieb/OcPsYKT9sF6Zh70xzdLMI=;
 b=ALG/454U+Bq87oBpkFKzM6GZovnB6P98C/35w+ez1klvB+reOXewKZtNz3CqVesP3M
 06aB8+Soz3zL12v6spb7ka4qY0+dklA1w5cCOlAcgDOjH0OHKfiURuUl5TnJVacMzo8d
 7dW+wog9oS0FZQJDbYrd89UI73cEgztLzYuUfxVafuqy9RjGJzO+II0fNFRk6HsoU+2I
 Cp/akaVzZ45mdF6FKAOTZoSe5VBiMunTaNQ2Pthaoab3YLneyKUDECoerqCjSQfelomb
 ccjqijmUtkrvduOycjJqCoQRtNtpM6dyEqvFDKbCgL1mGW7GH1U6i5GNJTSxaQaa+KUQ /dVQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=8Br02rRFtz3iXoWJfwieb/OcPsYKT9sF6Zh70xzdLMI=;
 b=bRmG8hu0fafzAGrmIGnABHUjbc1q6iQ+rTZxFcOQmS4GhVWYfWfLf0uq+SRNxAwPmi
 d+gX7EeSOaPKGvFLKR8vUp2o5NJ4Is9TlJfnzL56uKZYdn+kDR54DdBfT9oKaX/XX8Gq
 40AitO40YNg6EFyY3w/OappgO62eyO3YF64C+MB0wMSyaVub2ypVp/quuNGIreB36BLt
 ZAm4ulaRjtIaMnTHtimUQDtg0hgz/guiTI8ZgJ6s2lo2+OHTkZVl+B/OC/0qv3kfhUtn
 tIYEfp8CkRl90vn+MkX7XlpGrWPjzSzXQpI+kNnt5LU8Qy4IKkpZ4lEz5RsgiuLV/NnI 4Evw==
X-Gm-Message-State: APjAAAXBfyusVRDvwsXqy7Qa3mEanAhsDciykawMEUxPoUhRH+5OOTIg
 0KBPoIAJgLHbADf2HmsLpnNjObab
X-Google-Smtp-Source:
 APXvYqxZdaqBkQcxsg3CWarzj1eC3y+BBQ0P4yf7XYj8xa5+kUSgan4/nw8bse2d1L2FnKoCx5pT/g==
X-Received: by 2002:a17:90a:2244:: with SMTP id
 c62mr24550702pje.29.1561373059819; Mon, 24 Jun 2019 03:44:19 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 148
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to remove global `startup_params` from spp_vf, and change
to use getter and setter for IP addr and port of spp-ctl.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/shared/common.c |  4 +--
 src/vf/spp_vf.c     | 60 +++++++++++++++++----------------------------
 2 files changed, 24 insertions(+), 40 deletions(-)

diff --git a/src/shared/common.c b/src/shared/common.c
index a195929..b261fb0 100644
--- a/src/shared/common.c
+++ b/src/shared/common.c
@@ -122,11 +122,11 @@ int get_sec_dir(char *proc_name, char *dir_name)
 /* Get IP address of spp_ctl as string. */
 int get_spp_ctl_ip(char *s_ip)
 {
-	sprintf(s_ip, "%s", spp_ctl_ip);
 	if (spp_ctl_ip == NULL) {
-		RTE_LOG(ERR, SHARED, "Failed to get IP of spp_ctl.\n");
+		RTE_LOG(ERR, SHARED, "IP addr of spp_ctl not initialized.\n");
 		return -1;
 	}
+	sprintf(s_ip, "%s", spp_ctl_ip);
 	return 0;
 }
 
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index f4bafb4..d8098f2 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -57,44 +57,24 @@ usage(const char *progname)
 			, progname);
 }
 
-/* Parse options for server IP and port */
-static int
-parse_app_server(const char *server_str, char *server_ip, int *server_port)
-{
-	const char delim[2] = ":";
-	unsigned int pos = 0;
-	int port = 0;
-	char *endptr = NULL;
-
-	pos = strcspn(server_str, delim);
-	if (pos >= strlen(server_str))
-		return SPP_RET_NG;
-
-	port = strtol(&server_str[pos+1], &endptr, 0);
-	if (unlikely(&server_str[pos+1] == endptr) ||
-				unlikely(*endptr != '\0'))
-		return SPP_RET_NG;
-
-	memcpy(server_ip, server_str, pos);
-	server_ip[pos] = '\0';
-	*server_port = port;
-	RTE_LOG(DEBUG, APP, "Set server IP   = %s\n", server_ip);
-	RTE_LOG(DEBUG, APP, "Set server port = %d\n", *server_port);
-	return SPP_RET_OK;
-}
-
 /* Parse options for client app */
 static int
 parse_app_args(int argc, char *argv[])
 {
+	int cli_id;  /* Client ID. */
+	char *ctl_ip;  /* IP address of spp_ctl. */
+	int ctl_port;  /* Port num to connect spp_ctl. */
+	int ret;
 	int cnt;
-	int cli_id;
+	int option_index, opt;
+
 	int proc_flg = 0;
 	int server_flg = 0;
-	int option_index, opt;
+
 	const int argcopt = argc;
 	char *argvopt[argcopt];
 	const char *progname = argv[0];
+
 	static struct option lgopts[] = {
 			{ "client-id", required_argument, NULL,
 					SPP_LONGOPT_RETVAL_CLIENT_ID },
@@ -132,9 +112,10 @@ parse_app_args(int argc, char *argv[])
 			g_enable_vhost_cli = 1;
 			break;
 		case 's':
-			if (parse_app_server(optarg, g_startup_param.server_ip,
-					&g_startup_param.server_port) !=
-								SPP_RET_OK) {
+			ret = parse_server(&ctl_ip, &ctl_port, optarg);
+			set_spp_ctl_ip(ctl_ip);
+			set_spp_ctl_port(ctl_port);
+			if (ret != SPP_RET_OK) {
 				usage(progname);
 				return SPP_RET_NG;
 			}
@@ -154,8 +135,7 @@ parse_app_args(int argc, char *argv[])
 	RTE_LOG(INFO, APP,
 			"Parsed app args (client_id=%d,server=%s:%d,"
 			"vhost_client=%d)\n",
-			cli_id, g_startup_param.server_ip,
-			g_startup_param.server_port, g_enable_vhost_cli);
+			cli_id, ctl_ip, ctl_port, g_enable_vhost_cli);
 	return SPP_RET_OK;
 }
 
@@ -222,6 +202,11 @@ int
 main(int argc, char *argv[])
 {
 	int ret = SPP_RET_NG;
+	char ctl_ip[IPADDR_LEN] = { 0 };
+	int ctl_port;
+	int ret_cmd_init;
+	unsigned int lcore_id = 0;
+
 #ifdef SPP_DEMONIZE
 	/* Daemonize process */
 	int ret_daemon = daemon(0, 0);
@@ -274,10 +259,10 @@ main(int argc, char *argv[])
 		spp_port_ability_init();
 
 		/* Setup connection for accepting commands from controller */
-		int ret_command_init = sppwk_cmd_runner_conn(
-				g_startup_param.server_ip,
-				g_startup_param.server_port);
-		if (unlikely(ret_command_init != SPP_RET_OK))
+		get_spp_ctl_ip(ctl_ip);
+		ctl_port = get_spp_ctl_port();
+		ret_cmd_init = sppwk_cmd_runner_conn(ctl_ip, ctl_port);
+		if (unlikely(ret_cmd_init != SPP_RET_OK))
 			break;
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
@@ -289,7 +274,6 @@ main(int argc, char *argv[])
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 
 		/* Start worker threads of classifier and forwarder */
-		unsigned int lcore_id = 0;
 		RTE_LCORE_FOREACH_SLAVE(lcore_id) {
 			rte_eal_remote_launch(slave_main, NULL, lcore_id);
 		}
-- 
2.17.1



From spp-request@dpdk.org Mon Jun 24 19:44:23 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL001NWN68R160@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 19:44:32 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTL00P2CN68JQ00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:44:32 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00992N687Y60@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:44:32 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id B171C7E6038	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:44:32 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id B06498E605D	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:44:32 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id A58D28E6050	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:44:32 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 268858E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:44:32 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:44:32 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiVuF032540;	Mon,
 24 Jun 2019 19:44:31 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5OAiVkt032539;	Mon, 24 Jun 2019 19:44:31 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5OAiV06032536	for unknown; Mon,
 24 Jun 2019 19:44:31 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiVd2023014 for
 unknown; Mon, 24 Jun 2019 19:44:31 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiVTu023010 for
 unknown; Mon, 24 Jun 2019 19:44:31 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5OAiOgh020694	for unknown; Mon,
 24 Jun 2019 19:44:30 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 6214C2C2B	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 24 Jun 2019 12:44:24 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 21
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 24 Jun 2019 12:44:23 +0200
Message-id: <mailman.23412.1561373063.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH] spp_nfv: remove global variable client_id
      (yasufum.o@gmail.com)
   2. [PATCH 0/4] Remove global vars of IP and port of spp-ctl
      (yasufum.o@gmail.com)
   3. [PATCH 1/4] spp_nfv: remove global vars of spp-ctl IP and
      port (yasufum.o@gmail.com)
   4. [PATCH 2/4] spp_vf: remove global vars of spp-ctl IP and port
      (yasufum.o@gmail.com)
   5. [PATCH 3/4] spp_mirror: remove global vars spp-ctl IP and
      port (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon, 24 Jun 2019 19:43:23 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] spp_nfv: remove global variable client_id
Message-ID: <20190624104323.24923-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

`client_id` is defined as a global variable in `params.h`, but it is
better to use get_client_id() instead. This update is to replace it.
This update is also to make a change for formatter function
`get_sec_stats_json()` which takes client ID as uint16_t, but
get_client_id() returns the ID as int.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/nfv/commands.h   | 13 ++++++-------
 src/nfv/main.c       |  8 ++++++--
 src/nfv/nfv_status.c |  4 ++--
 src/nfv/nfv_status.h |  2 +-
 src/nfv/params.h     |  2 --
 5 files changed, 15 insertions(+), 14 deletions(-)

diff --git a/src/nfv/commands.h b/src/nfv/commands.h
index c8f726f..708d084 100644
--- a/src/nfv/commands.h
+++ b/src/nfv/commands.h
@@ -152,6 +152,7 @@ static int
 parse_command(char *str)
 {
 	char *token_list[MAX_PARAMETER] = {NULL};
+	int cli_id;
 	int max_token = 0;
 	int ret = 0;
 
@@ -174,11 +175,11 @@ parse_command(char *str)
 		RTE_LOG(DEBUG, SPP_NFV, "status\n");
 		memset(str, '\0', MSG_SIZE);
 		if (cmd == FORWARD)
-			get_sec_stats_json(str, client_id, "running",
+			get_sec_stats_json(str, get_client_id(), "running",
 					lcore_id_used,
 					ports_fwd_array, port_map);
 		else
-			get_sec_stats_json(str, client_id, "idling",
+			get_sec_stats_json(str, get_client_id(), "idling",
 					lcore_id_used,
 					ports_fwd_array, port_map);
 
@@ -186,14 +187,12 @@ parse_command(char *str)
 		memset(str, '\0', MSG_SIZE);
 		sprintf(str, "{%s:%s,%s:%d,%s:%s}",
 				"\"results\"", "[{\"result\":\"success\"}]",
-				"\"client_id\"", client_id,
+				"\"client_id\"", get_client_id(),
 				"\"process_type\"", "\"nfv\"");
 
 	} else if (!strcmp(token_list[0], "_set_client_id")) {
-		int id;
-
-		if (spp_atoi(token_list[1], &id) >= 0)
-			client_id = id;
+		if (spp_atoi(token_list[1], &cli_id) >= 0)
+			set_client_id(cli_id);
 
 	} else if (!strcmp(token_list[0], "exit")) {
 		RTE_LOG(DEBUG, SPP_NFV, "exit\n");
diff --git a/src/nfv/main.c b/src/nfv/main.c
index fbcef0c..ae4168c 100644
--- a/src/nfv/main.c
+++ b/src/nfv/main.c
@@ -12,6 +12,7 @@
 #include <rte_log.h>
 
 #include "shared/common.h"
+#include "shared/secondary/utils.h"
 #include "shared/secondary/add_port.h"
 
 #include "params.h"
@@ -61,6 +62,7 @@ static int
 parse_app_args(int argc, char *argv[])
 {
 	int option_index, opt;
+	int cli_id;
 	char **argvopt = argv;
 	const char *progname = argv[0];
 	int ret;
@@ -72,10 +74,11 @@ parse_app_args(int argc, char *argv[])
 			g_enable_vhost_cli = 1;
 			break;
 		case 'n':
-			if (parse_num_clients(&client_id, optarg) != 0) {
+			if (parse_client_id(&cli_id, optarg) != 0) {
 				usage(progname);
 				return -1;
 			}
+			set_client_id(cli_id);
 			break;
 		case 's':
 			ret = parse_server(&server_ip, &server_port, optarg);
@@ -259,7 +262,8 @@ main(int argc, char *argv[])
 		rte_eal_remote_launch(main_loop, NULL, lcore_id);
 	}
 
-	RTE_LOG(INFO, SPP_NFV, "My ID %d start handling message\n", client_id);
+	RTE_LOG(INFO, SPP_NFV, "My ID %d start handling message\n",
+			get_client_id());
 	RTE_LOG(INFO, SPP_NFV, "[Press Ctrl-C to quit ...]\n");
 
 	/* send and receive msg loop */
diff --git a/src/nfv/nfv_status.c b/src/nfv/nfv_status.c
index 7e3dbd4..c40d0b4 100644
--- a/src/nfv/nfv_status.c
+++ b/src/nfv/nfv_status.c
@@ -26,13 +26,13 @@
  *   }
  */
 void
-get_sec_stats_json(char *str, uint16_t client_id,
+get_sec_stats_json(char *str, int cli_id,
 		const char *running_stat,
 		uint8_t lcore_id_used[RTE_MAX_LCORE],
 		struct port *ports_fwd_array,
 		struct port_map *port_map)
 {
-	sprintf(str, "{\"client-id\":%d,", client_id);
+	sprintf(str, "{\"client-id\":%d,", cli_id);
 
 	sprintf(str + strlen(str), "\"status\":");
 	sprintf(str + strlen(str), "\"%s\",", running_stat);
diff --git a/src/nfv/nfv_status.h b/src/nfv/nfv_status.h
index ef9cd00..14225cc 100644
--- a/src/nfv/nfv_status.h
+++ b/src/nfv/nfv_status.h
@@ -6,7 +6,7 @@
 #define _NFV_STATUS_H_
 
 /* Get status of spp_nfv or spp_vm as JSON format. */
-void get_sec_stats_json(char *str, uint16_t client_id,
+void get_sec_stats_json(char *str, int client_id,
 		const char *running_stat,
 		uint8_t lcore_id_used[RTE_MAX_LCORE],
 		struct port *ports_fwd_array,
diff --git a/src/nfv/params.h b/src/nfv/params.h
index aa9c720..9ddf79d 100644
--- a/src/nfv/params.h
+++ b/src/nfv/params.h
@@ -23,8 +23,6 @@ struct porttype_map portmap[] = {
 
 static struct port ports_fwd_array[RTE_MAX_ETHPORTS];
 
-static uint16_t client_id;
-
 /* the port details */
 struct port_info *ports;
 
-- 
2.17.1



------------------------------

Message: 2
Date: Mon, 24 Jun 2019 19:44:07 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 0/4] Remove global vars of IP and port of
	spp-ctl
Message-ID: <20190624104411.24977-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

In secondary processes, IP address and port given as command args are
defined as global variables, but no need to be global. This update is to
change them to be retrieved from functions and remove global
variables.

Yasufumi Ogawa (4):
  spp_nfv: remove global vars of spp-ctl IP and port
  spp_vf: remove global vars of spp-ctl IP and port
  spp_mirror: remove global vars spp-ctl IP and port
  spp_pcap: remove global vars spp-ctl IP and port

 src/mirror/spp_mirror.c | 60 ++++++++++++-------------------
 src/nfv/commands.h      |  6 ++--
 src/nfv/main.c          |  6 +++-
 src/nfv/params.h        |  7 ----
 src/pcap/spp_pcap.c     | 78 +++++++++++++++++------------------------
 src/shared/common.c     | 48 +++++++++++++++++++++++++
 src/shared/common.h     | 42 +++++++++++++++++++++-
 src/vf/spp_vf.c         | 60 ++++++++++++-------------------
 8 files changed, 175 insertions(+), 132 deletions(-)

-- 
2.17.1



------------------------------

Message: 3
Date: Mon, 24 Jun 2019 19:44:08 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 1/4] spp_nfv: remove global vars of spp-ctl IP
	and port
Message-ID: <20190624104411.24977-2-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to remove global variable of IP address and port number
of spp-ctl, and functions for gettting and setting them instead.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/nfv/commands.h  |  6 ++++--
 src/nfv/main.c      |  6 +++++-
 src/nfv/params.h    |  7 -------
 src/shared/common.c | 48 +++++++++++++++++++++++++++++++++++++++++++++
 src/shared/common.h | 42 ++++++++++++++++++++++++++++++++++++++-
 5 files changed, 98 insertions(+), 11 deletions(-)

diff --git a/src/nfv/commands.h b/src/nfv/commands.h
index 708d084..11e434a 100644
--- a/src/nfv/commands.h
+++ b/src/nfv/commands.h
@@ -116,6 +116,7 @@ do_connection(int *connected, int *sock)
 {
 	static struct sockaddr_in servaddr;
 	int ret = 0;
+	char ctl_ip[IPADDR_LEN] = { 0 };  /* spp_ctl's IP addr. */
 
 	if (*connected == 0) {
 		if (*sock < 0) {
@@ -127,8 +128,9 @@ do_connection(int *connected, int *sock)
 			/*Create of the tcp socket*/
 			memset(&servaddr, 0, sizeof(servaddr));
 			servaddr.sin_family = AF_INET;
-			servaddr.sin_addr.s_addr = inet_addr(server_ip);
-			servaddr.sin_port = htons(server_port);
+			get_spp_ctl_ip(ctl_ip);
+			servaddr.sin_addr.s_addr = inet_addr(ctl_ip);
+			servaddr.sin_port = htons(get_spp_ctl_port());
 		}
 
 		RTE_LOG(INFO,
diff --git a/src/nfv/main.c b/src/nfv/main.c
index ae4168c..9cfe49a 100644
--- a/src/nfv/main.c
+++ b/src/nfv/main.c
@@ -65,6 +65,8 @@ parse_app_args(int argc, char *argv[])
 	int cli_id;
 	char **argvopt = argv;
 	const char *progname = argv[0];
+	char *ctl_ip;  /* IP address of spp_ctl. */
+	int ctl_port;  /* Port num to connect spp_ctl. */
 	int ret;
 
 	while ((opt = getopt_long(argc, argvopt, "n:s:", lgopts,
@@ -81,7 +83,9 @@ parse_app_args(int argc, char *argv[])
 			set_client_id(cli_id);
 			break;
 		case 's':
-			ret = parse_server(&server_ip, &server_port, optarg);
+			ret = parse_server(&ctl_ip, &ctl_port, optarg);
+			set_spp_ctl_ip(ctl_ip);
+			set_spp_ctl_port(ctl_port);
 			if (ret != 0) {
 				usage(progname);
 				return -1;
diff --git a/src/nfv/params.h b/src/nfv/params.h
index 9ddf79d..06e6f1f 100644
--- a/src/nfv/params.h
+++ b/src/nfv/params.h
@@ -26,13 +26,6 @@ static struct port ports_fwd_array[RTE_MAX_ETHPORTS];
 /* the port details */
 struct port_info *ports;
 
-/*
- * our client id number - tells us which rx queue to read, and NIC TX
- * queue to write to.
- */
-static char *server_ip;
-static int server_port;
-
 static enum cmd_type cmd;
 
 static struct port_map port_map[RTE_MAX_ETHPORTS];
diff --git a/src/shared/common.c b/src/shared/common.c
index 9c244e5..a195929 100644
--- a/src/shared/common.c
+++ b/src/shared/common.c
@@ -8,6 +8,9 @@
 
 #define RTE_LOGTYPE_SHARED RTE_LOGTYPE_USER1
 
+char spp_ctl_ip[IPADDR_LEN];  /* IP address of spp_ctl. */
+int spp_ctl_port;  /* Port num to connect spp_ctl. */
+
 /**
  * Set log level of type RTE_LOGTYPE_USER* to given level, for instance,
  * RTE_LOG_INFO or RTE_LOG_DEBUG.
@@ -115,3 +118,48 @@ int get_sec_dir(char *proc_name, char *dir_name)
 	}
 	return 0;
 }
+
+/* Get IP address of spp_ctl as string. */
+int get_spp_ctl_ip(char *s_ip)
+{
+	sprintf(s_ip, "%s", spp_ctl_ip);
+	if (spp_ctl_ip == NULL) {
+		RTE_LOG(ERR, SHARED, "Failed to get IP of spp_ctl.\n");
+		return -1;
+	}
+	return 0;
+}
+
+/* Set IP address of spp_ctl. */
+int set_spp_ctl_ip(const char *s_ip)
+{
+	memset(spp_ctl_ip, 0x00, sizeof(spp_ctl_ip));
+	sprintf(spp_ctl_ip, "%s", s_ip);
+	if (spp_ctl_ip == NULL) {
+		RTE_LOG(ERR, SHARED, "Failed to set IP of spp_ctl.\n");
+		return -1;
+	}
+	return 0;
+}
+
+/* Get port number for connecting to spp_ctl as string. */
+int get_spp_ctl_port(void)
+{
+	if (spp_ctl_port < 0) {
+		RTE_LOG(ERR, SHARED, "Server port is not initialized.\n");
+		return -1;
+	}
+	return spp_ctl_port;
+}
+
+/* Set port number for connecting to spp_ctl. */
+int set_spp_ctl_port(int s_port)
+{
+	if (s_port < 0) {
+		RTE_LOG(ERR, SHARED, "Given invalid port number '%d'.\n",
+				s_port);
+		return -1;
+	}
+	spp_ctl_port = s_port;
+	return 0;
+}
diff --git a/src/shared/common.h b/src/shared/common.h
index 9b8d897..78d2520 100644
--- a/src/shared/common.h
+++ b/src/shared/common.h
@@ -10,6 +10,8 @@
 #include <unistd.h>
 #include <rte_ethdev_driver.h>
 
+#define IPADDR_LEN 16  /* Length of IP address in string. */
+
 #define MSG_SIZE 2048  /* socket buffer len */
 
 #define SOCK_RESET  -1
@@ -125,11 +127,49 @@ int set_user_log_level(int num_user_log, uint32_t log_level);
 int set_user_log_debug(int num_user_log);
 
 int parse_num_clients(uint16_t *num_clients, const char *clients);
+
 int parse_server(char **server_ip, int *server_port, char *server_addr);
 
-/* Get directory name of given proc_name */
+/**
+ * Get directory name of given proc_name.
+ *
+ * @param[in] proc_name Name of sec process such as spp_nfv.
+ * @param[out] dir_name Directory name.
+ * @return 0
+ */
 int get_sec_dir(char *proc_name, char *dir_name);
 
 extern uint8_t lcore_id_used[RTE_MAX_LCORE];
 
+/**
+ * Get IP address of spp_ctl as string.
+ *
+ * @param[in,out] s_ip IP address of spp_ctl.
+ * @return 0 if succeeded, or -1 if failed.
+ */
+int get_spp_ctl_ip(char *s_ip);
+
+/**
+ * Set IP address of spp_ctl.
+ *
+ * @param[in] s_ip IP address of spp_ctl.
+ * @return 0 if succeeded, or -1 if failed.
+ */
+int set_spp_ctl_ip(const char *s_ip);
+
+/**
+ * Get port number for connecting to spp_ctl as string.
+ *
+ * @return Port number, or -1 if failed.
+ */
+int get_spp_ctl_port(void);
+
+/**
+ * Set port number for connecting to spp_ctl.
+ *
+ * @param[in] s_port Port number for spp_ctl.
+ * @return 0 if succeeded, or -1 if failed.
+ */
+int set_spp_ctl_port(int s_port);
+
 #endif
-- 
2.17.1



------------------------------

Message: 4
Date: Mon, 24 Jun 2019 19:44:09 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 2/4] spp_vf: remove global vars of spp-ctl IP
	and port
Message-ID: <20190624104411.24977-3-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to remove global `startup_params` from spp_vf, and change
to use getter and setter for IP addr and port of spp-ctl.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/shared/common.c |  4 +--
 src/vf/spp_vf.c     | 60 +++++++++++++++++----------------------------
 2 files changed, 24 insertions(+), 40 deletions(-)

diff --git a/src/shared/common.c b/src/shared/common.c
index a195929..b261fb0 100644
--- a/src/shared/common.c
+++ b/src/shared/common.c
@@ -122,11 +122,11 @@ int get_sec_dir(char *proc_name, char *dir_name)
 /* Get IP address of spp_ctl as string. */
 int get_spp_ctl_ip(char *s_ip)
 {
-	sprintf(s_ip, "%s", spp_ctl_ip);
 	if (spp_ctl_ip == NULL) {
-		RTE_LOG(ERR, SHARED, "Failed to get IP of spp_ctl.\n");
+		RTE_LOG(ERR, SHARED, "IP addr of spp_ctl not initialized.\n");
 		return -1;
 	}
+	sprintf(s_ip, "%s", spp_ctl_ip);
 	return 0;
 }
 
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index f4bafb4..d8098f2 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -57,44 +57,24 @@ usage(const char *progname)
 			, progname);
 }
 
-/* Parse options for server IP and port */
-static int
-parse_app_server(const char *server_str, char *server_ip, int *server_port)
-{
-	const char delim[2] = ":";
-	unsigned int pos = 0;
-	int port = 0;
-	char *endptr = NULL;
-
-	pos = strcspn(server_str, delim);
-	if (pos >= strlen(server_str))
-		return SPP_RET_NG;
-
-	port = strtol(&server_str[pos+1], &endptr, 0);
-	if (unlikely(&server_str[pos+1] == endptr) ||
-				unlikely(*endptr != '\0'))
-		return SPP_RET_NG;
-
-	memcpy(server_ip, server_str, pos);
-	server_ip[pos] = '\0';
-	*server_port = port;
-	RTE_LOG(DEBUG, APP, "Set server IP   = %s\n", server_ip);
-	RTE_LOG(DEBUG, APP, "Set server port = %d\n", *server_port);
-	return SPP_RET_OK;
-}
-
 /* Parse options for client app */
 static int
 parse_app_args(int argc, char *argv[])
 {
+	int cli_id;  /* Client ID. */
+	char *ctl_ip;  /* IP address of spp_ctl. */
+	int ctl_port;  /* Port num to connect spp_ctl. */
+	int ret;
 	int cnt;
-	int cli_id;
+	int option_index, opt;
+
 	int proc_flg = 0;
 	int server_flg = 0;
-	int option_index, opt;
+
 	const int argcopt = argc;
 	char *argvopt[argcopt];
 	const char *progname = argv[0];
+
 	static struct option lgopts[] = {
 			{ "client-id", required_argument, NULL,
 					SPP_LONGOPT_RETVAL_CLIENT_ID },
@@ -132,9 +112,10 @@ parse_app_args(int argc, char *argv[])
 			g_enable_vhost_cli = 1;
 			break;
 		case 's':
-			if (parse_app_server(optarg, g_startup_param.server_ip,
-					&g_startup_param.server_port) !=
-								SPP_RET_OK) {
+			ret = parse_server(&ctl_ip, &ctl_port, optarg);
+			set_spp_ctl_ip(ctl_ip);
+			set_spp_ctl_port(ctl_port);
+			if (ret != SPP_RET_OK) {
 				usage(progname);
 				return SPP_RET_NG;
 			}
@@ -154,8 +135,7 @@ parse_app_args(int argc, char *argv[])
 	RTE_LOG(INFO, APP,
 			"Parsed app args (client_id=%d,server=%s:%d,"
 			"vhost_client=%d)\n",
-			cli_id, g_startup_param.server_ip,
-			g_startup_param.server_port, g_enable_vhost_cli);
+			cli_id, ctl_ip, ctl_port, g_enable_vhost_cli);
 	return SPP_RET_OK;
 }
 
@@ -222,6 +202,11 @@ int
 main(int argc, char *argv[])
 {
 	int ret = SPP_RET_NG;
+	char ctl_ip[IPADDR_LEN] = { 0 };
+	int ctl_port;
+	int ret_cmd_init;
+	unsigned int lcore_id = 0;
+
 #ifdef SPP_DEMONIZE
 	/* Daemonize process */
 	int ret_daemon = daemon(0, 0);
@@ -274,10 +259,10 @@ main(int argc, char *argv[])
 		spp_port_ability_init();
 
 		/* Setup connection for accepting commands from controller */
-		int ret_command_init = sppwk_cmd_runner_conn(
-				g_startup_param.server_ip,
-				g_startup_param.server_port);
-		if (unlikely(ret_command_init != SPP_RET_OK))
+		get_spp_ctl_ip(ctl_ip);
+		ctl_port = get_spp_ctl_port();
+		ret_cmd_init = sppwk_cmd_runner_conn(ctl_ip, ctl_port);
+		if (unlikely(ret_cmd_init != SPP_RET_OK))
 			break;
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
@@ -289,7 +274,6 @@ main(int argc, char *argv[])
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 
 		/* Start worker threads of classifier and forwarder */
-		unsigned int lcore_id = 0;
 		RTE_LCORE_FOREACH_SLAVE(lcore_id) {
 			rte_eal_remote_launch(slave_main, NULL, lcore_id);
 		}
-- 
2.17.1



------------------------------

Message: 5
Date: Mon, 24 Jun 2019 19:44:10 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 3/4] spp_mirror: remove global vars spp-ctl IP
	and port
Message-ID: <20190624104411.24977-4-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to remove global `startup_params` from spp_mirror, and
change to use getter and setter for IP addr and port of spp-ctl.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/spp_mirror.c | 60 ++++++++++++++++-------------------------
 src/shared/common.c     |  4 +--
 2 files changed, 25 insertions(+), 39 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index 9d9b4a8..305e977 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -101,43 +101,24 @@ usage(const char *progname)
 			, progname);
 }
 
-/* Parse options for server IP and port */
-static int
-parse_app_server(const char *server_str, char *server_ip, int *server_port)
-{
-	const char delim[2] = ":";
-	unsigned int pos = 0;
-	int port = 0;
-	char *endptr = NULL;
-
-	pos = strcspn(server_str, delim);
-	if (pos >= strlen(server_str))
-		return SPP_RET_NG;
-
-	port = strtol(&server_str[pos+1], &endptr, 0);
-	if (unlikely(&server_str[pos+1] == endptr) || unlikely(*endptr != '\0'))
-		return SPP_RET_NG;
-
-	memcpy(server_ip, server_str, pos);
-	server_ip[pos] = '\0';
-	*server_port = port;
-	RTE_LOG(DEBUG, MIRROR, "Set server IP   = %s\n", server_ip);
-	RTE_LOG(DEBUG, MIRROR, "Set server port = %d\n", *server_port);
-	return SPP_RET_OK;
-}
-
 /* Parse options for client app */
 static int
 parse_app_args(int argc, char *argv[])
 {
+	int cli_id;  /* Client ID. */
+	char *ctl_ip;  /* IP address of spp_ctl. */
+	int ctl_port;  /* Port num to connect spp_ctl. */
+	int ret;
 	int cnt;
-	int cli_id;
+	int option_index, opt;
+
 	int proc_flg = 0;
 	int server_flg = 0;
-	int option_index, opt;
+
 	const int argcopt = argc;
 	char *argvopt[argcopt];
 	const char *progname = argv[0];
+
 	static struct option lgopts[] = {
 			{ "client-id", required_argument, NULL,
 					SPP_LONGOPT_RETVAL_CLIENT_ID },
@@ -175,12 +156,13 @@ parse_app_args(int argc, char *argv[])
 			g_enable_vhost_cli = 1;
 			break;
 		case 's':
-			if (parse_app_server(optarg, g_startup_param.server_ip,
-					     &g_startup_param.server_port) !=
-					     SPP_RET_OK) {
+			ret = parse_server(&ctl_ip, &ctl_port, optarg);
+			if (ret != SPP_RET_OK) {
 				usage(progname);
 				return SPP_RET_NG;
 			}
+			set_spp_ctl_ip(ctl_ip);
+			set_spp_ctl_port(ctl_port);
 			server_flg = 1;
 			break;
 		default:
@@ -197,8 +179,7 @@ parse_app_args(int argc, char *argv[])
 	RTE_LOG(INFO, MIRROR,
 			"Parsed app args (client_id=%d, server=%s:%d, "
 			"vhost_client=%d,)\n",
-			cli_id, g_startup_param.server_ip,
-			g_startup_param.server_port, g_enable_vhost_cli);
+			cli_id, ctl_ip, ctl_port, g_enable_vhost_cli);
 	return SPP_RET_OK;
 }
 
@@ -488,6 +469,11 @@ int
 main(int argc, char *argv[])
 {
 	int ret = SPP_RET_NG;
+	char ctl_ip[IPADDR_LEN] = { 0 };
+	int ctl_port;
+	int ret_cmd_init;
+	unsigned int lcore_id;
+
 #ifdef SPP_DEMONIZE
 	/* Daemonize process */
 	int ret_daemon = daemon(0, 0);
@@ -543,10 +529,10 @@ main(int argc, char *argv[])
 		spp_port_ability_init();
 
 		/* Setup connection for accepting commands from controller */
-		int ret_command_init = sppwk_cmd_runner_conn(
-				g_startup_param.server_ip,
-				g_startup_param.server_port);
-		if (unlikely(ret_command_init != SPP_RET_OK))
+		get_spp_ctl_ip(ctl_ip);
+		ctl_port = get_spp_ctl_port();
+		ret_cmd_init = sppwk_cmd_runner_conn(ctl_ip, ctl_port);
+		if (unlikely(ret_cmd_init != SPP_RET_OK))
 			break;
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
@@ -558,7 +544,7 @@ main(int argc, char *argv[])
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 
 		/* Start worker threads of classifier and forwarder */
-		unsigned int lcore_id = 0;
+		lcore_id = 0;
 		RTE_LCORE_FOREACH_SLAVE(lcore_id) {
 			rte_eal_remote_launch(slave_main, NULL, lcore_id);
 		}
diff --git a/src/shared/common.c b/src/shared/common.c
index b261fb0..55c53c0 100644
--- a/src/shared/common.c
+++ b/src/shared/common.c
@@ -8,8 +8,8 @@
 
 #define RTE_LOGTYPE_SHARED RTE_LOGTYPE_USER1
 
-char spp_ctl_ip[IPADDR_LEN];  /* IP address of spp_ctl. */
-int spp_ctl_port;  /* Port num to connect spp_ctl. */
+char spp_ctl_ip[IPADDR_LEN] = { 0 };  /* IP address of spp_ctl. */
+int spp_ctl_port = -1;  /* Port num to connect spp_ctl. */
 
 /**
  * Set log level of type RTE_LOGTYPE_USER* to given level, for instance,
-- 
2.17.1



End of spp Digest, Vol 31, Issue 21
***********************************


From yasufum.o@gmail.com Mon Jun 24 19:44:10 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd101.ddreams.local
 (zssg-mailmd101.ddreams.local [10.160.123.96]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL001OAN6AR160@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 19:44:34 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd101.ddreams.local by
 zssg-mailmd101.ddreams.local (dDREAMS) id <0PTL01106N6ASJ00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:44:34 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd101.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00JPXN6AZ160@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:44:34 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf101.ddreams.local (Postfix) with ESMTP id 0D0B57E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:44:34 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 0BA988E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:44:34 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 007AC8E6051	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:44:34 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id BEB238E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:44:32 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf101.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:44:32 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiW1l032547;	Mon,
 24 Jun 2019 19:44:32 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5OAiWPe032546;	Mon, 24 Jun 2019 19:44:32 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5OAiW0w032543	for unknown; Mon,
 24 Jun 2019 19:44:32 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiWfq007534 for
 unknown; Mon, 24 Jun 2019 19:44:32 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiWXX007531; Mon,
 24 Jun 2019 19:44:32 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiVqs008791;	Mon,
 24 Jun 2019 19:44:31 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5OAiVcu008787	for unknown; Mon, 24 Jun 2019 19:44:31 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiVSG023011 for
 unknown; Mon, 24 Jun 2019 19:44:31 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiViZ023004 for
 unknown; Mon, 24 Jun 2019 19:44:31 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5OAiOH0020690	for unknown; Mon,
 24 Jun 2019 19:44:30 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 5292A2AA0;	Mon, 24 Jun 2019 12:44:24 +0200 (CEST)
Received: from mail-pf1-f195.google.com
 (mail-pf1-f195.google.com [209.85.210.195]) by dpdk.org (Postfix)
 with ESMTP id 8A18A1BF21 for <spp@dpdk.org>; Mon,
 24 Jun 2019 12:44:22 +0200 (CEST)
Received: by mail-pf1-f195.google.com with SMTP id 81so7253558pfy.13 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 03:44:22 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id r9sm10093635pgv.24.2019.06.24.03.44.19
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 03:44:20 -0700 (PDT)
Date: Mon, 24 Jun 2019 19:44:10 +0900
From: yasufum.o@gmail.com
Subject: [spp 04426] [spp] [PATCH 3/4] spp_mirror: remove global vars spp-ctl
 IP and port
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624104411.24977-4-yasufum.o@gmail.com>
In-reply-to: <20190624104411.24977-1-yasufum.o@gmail.com>
References: <20190624104411.24977-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04426
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=odW9KXe9bNuC0Xs6IAbqlP7RJdgYDhWqe9X9/2JobDk=;
 b=HonZuCec1A00/R8iOa/PA6vqmvuz89jBVygYvjImdyGmrWyEgJwMp9l8jFHvjK4lr8
 TTHW3Oqly+/am+QLdEZBArAA3yRq6rL8NbTMd4SomaWSqt3dDkvRaT2E0PJblI/pVFzU
 KZ4i5tfjEp4CtpHfg+IA88EUSLag04PDWELqfIOsNBnEH/mCHqOgIsXWfsGe/He866VJ
 5u1PgG8ZLjVOjOJj6supHf0C7EUlIPxTX5LdcGaaE3Uzj6IgdeGwUD1Z/rbvhnIzS1D2
 qeWPXHGP2O7iYVzf51pck07KMB4q/WcO9Nwc+VLtaEHDrPKxm/QKQDim3FarkxY3Zo1H T3Rw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=odW9KXe9bNuC0Xs6IAbqlP7RJdgYDhWqe9X9/2JobDk=;
 b=XSa1R5xOKy3sTAi4FN7D4VJEcobj4DJYF08OTu7IitrnJEQkVFXB7SoHvsUT5jfFvS
 rOXZr+W4H1xX1n+sOQcNLmRai0ZdAPX/UNlP+kHoiBL5Azdg/YIyk8cBHCcDuGRs9vCo
 kejXP2gvEIFFkLs+kp4crFcZF9IF4qn+VH4BhrHgW5DxSNGd0jeK5eNqjeprVmp8S70l
 GgvhPcKHdj9Dq5fYvQfwWBFSndZY97JVDVtjfZX/V/Pzn35DwpFJNVEXN73dSFxM986I
 CXkRkNSWWxEVLcSAiAb3OV3o/jNCa9i87dXGAnDG6jvWXa2S6bryXsIMnNh03F15OxRq orNg==
X-Gm-Message-State: APjAAAX5wHrkqbh41fXc0fIANo/Al9B0wgPqf4l2BHIF2Izbsvd4E5mL
 /F9lQdtfBu4/Q1w7VDXxDOIoJYkW
X-Google-Smtp-Source:
 APXvYqyh33NmPlZRjTHTWenpyyrX6co+apifZ2XYWczB25r3Ni1oIsVWtZ6aR4tkApBJSPzT0gB2kQ==
X-Received: by 2002:a17:90a:2305:: with SMTP id
 f5mr25217446pje.128.1561373061250; Mon, 24 Jun 2019 03:44:21 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 148
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to remove global `startup_params` from spp_mirror, and
change to use getter and setter for IP addr and port of spp-ctl.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/spp_mirror.c | 60 ++++++++++++++++-------------------------
 src/shared/common.c     |  4 +--
 2 files changed, 25 insertions(+), 39 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index 9d9b4a8..305e977 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -101,43 +101,24 @@ usage(const char *progname)
 			, progname);
 }
 
-/* Parse options for server IP and port */
-static int
-parse_app_server(const char *server_str, char *server_ip, int *server_port)
-{
-	const char delim[2] = ":";
-	unsigned int pos = 0;
-	int port = 0;
-	char *endptr = NULL;
-
-	pos = strcspn(server_str, delim);
-	if (pos >= strlen(server_str))
-		return SPP_RET_NG;
-
-	port = strtol(&server_str[pos+1], &endptr, 0);
-	if (unlikely(&server_str[pos+1] == endptr) || unlikely(*endptr != '\0'))
-		return SPP_RET_NG;
-
-	memcpy(server_ip, server_str, pos);
-	server_ip[pos] = '\0';
-	*server_port = port;
-	RTE_LOG(DEBUG, MIRROR, "Set server IP   = %s\n", server_ip);
-	RTE_LOG(DEBUG, MIRROR, "Set server port = %d\n", *server_port);
-	return SPP_RET_OK;
-}
-
 /* Parse options for client app */
 static int
 parse_app_args(int argc, char *argv[])
 {
+	int cli_id;  /* Client ID. */
+	char *ctl_ip;  /* IP address of spp_ctl. */
+	int ctl_port;  /* Port num to connect spp_ctl. */
+	int ret;
 	int cnt;
-	int cli_id;
+	int option_index, opt;
+
 	int proc_flg = 0;
 	int server_flg = 0;
-	int option_index, opt;
+
 	const int argcopt = argc;
 	char *argvopt[argcopt];
 	const char *progname = argv[0];
+
 	static struct option lgopts[] = {
 			{ "client-id", required_argument, NULL,
 					SPP_LONGOPT_RETVAL_CLIENT_ID },
@@ -175,12 +156,13 @@ parse_app_args(int argc, char *argv[])
 			g_enable_vhost_cli = 1;
 			break;
 		case 's':
-			if (parse_app_server(optarg, g_startup_param.server_ip,
-					     &g_startup_param.server_port) !=
-					     SPP_RET_OK) {
+			ret = parse_server(&ctl_ip, &ctl_port, optarg);
+			if (ret != SPP_RET_OK) {
 				usage(progname);
 				return SPP_RET_NG;
 			}
+			set_spp_ctl_ip(ctl_ip);
+			set_spp_ctl_port(ctl_port);
 			server_flg = 1;
 			break;
 		default:
@@ -197,8 +179,7 @@ parse_app_args(int argc, char *argv[])
 	RTE_LOG(INFO, MIRROR,
 			"Parsed app args (client_id=%d, server=%s:%d, "
 			"vhost_client=%d,)\n",
-			cli_id, g_startup_param.server_ip,
-			g_startup_param.server_port, g_enable_vhost_cli);
+			cli_id, ctl_ip, ctl_port, g_enable_vhost_cli);
 	return SPP_RET_OK;
 }
 
@@ -488,6 +469,11 @@ int
 main(int argc, char *argv[])
 {
 	int ret = SPP_RET_NG;
+	char ctl_ip[IPADDR_LEN] = { 0 };
+	int ctl_port;
+	int ret_cmd_init;
+	unsigned int lcore_id;
+
 #ifdef SPP_DEMONIZE
 	/* Daemonize process */
 	int ret_daemon = daemon(0, 0);
@@ -543,10 +529,10 @@ main(int argc, char *argv[])
 		spp_port_ability_init();
 
 		/* Setup connection for accepting commands from controller */
-		int ret_command_init = sppwk_cmd_runner_conn(
-				g_startup_param.server_ip,
-				g_startup_param.server_port);
-		if (unlikely(ret_command_init != SPP_RET_OK))
+		get_spp_ctl_ip(ctl_ip);
+		ctl_port = get_spp_ctl_port();
+		ret_cmd_init = sppwk_cmd_runner_conn(ctl_ip, ctl_port);
+		if (unlikely(ret_cmd_init != SPP_RET_OK))
 			break;
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
@@ -558,7 +544,7 @@ main(int argc, char *argv[])
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 
 		/* Start worker threads of classifier and forwarder */
-		unsigned int lcore_id = 0;
+		lcore_id = 0;
 		RTE_LCORE_FOREACH_SLAVE(lcore_id) {
 			rte_eal_remote_launch(slave_main, NULL, lcore_id);
 		}
diff --git a/src/shared/common.c b/src/shared/common.c
index b261fb0..55c53c0 100644
--- a/src/shared/common.c
+++ b/src/shared/common.c
@@ -8,8 +8,8 @@
 
 #define RTE_LOGTYPE_SHARED RTE_LOGTYPE_USER1
 
-char spp_ctl_ip[IPADDR_LEN];  /* IP address of spp_ctl. */
-int spp_ctl_port;  /* Port num to connect spp_ctl. */
+char spp_ctl_ip[IPADDR_LEN] = { 0 };  /* IP address of spp_ctl. */
+int spp_ctl_port = -1;  /* Port num to connect spp_ctl. */
 
 /**
  * Set log level of type RTE_LOGTYPE_USER* to given level, for instance,
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 19:44:11 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd105.ddreams.local
 (zssg-mailmd105.ddreams.local [10.160.123.100])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL001OGN6AR160@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 19:44:34 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd105.ddreams.local by
 zssg-mailmd105.ddreams.local (dDREAMS) id <0PTL00D3GN6AWO00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:44:34 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd105.ddreams.local
 (dDREAMS) with ESMTP id <0PTL01C16N6A6T60@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:44:34 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id CA2F27E603A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:44:34 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id C89E98E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:44:34 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id C73288E6062	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:44:34 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id D36D18E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:44:33 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:44:33 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiXld032554;	Mon,
 24 Jun 2019 19:44:33 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5OAiXoF032553;	Mon, 24 Jun 2019 19:44:33 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5OAiXHn032550	for unknown; Mon,
 24 Jun 2019 19:44:33 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiXV7007551 for
 unknown; Mon, 24 Jun 2019 19:44:33 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiXvS007548; Mon,
 24 Jun 2019 19:44:33 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiWf4008805;	Mon,
 24 Jun 2019 19:44:32 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5OAiWc9008801	for unknown; Mon, 24 Jun 2019 19:44:32 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiWAZ023041 for
 unknown; Mon, 24 Jun 2019 19:44:32 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAiWBD023035 for
 unknown; Mon, 24 Jun 2019 19:44:32 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5OAiP1j020700	for unknown; Mon,
 24 Jun 2019 19:44:31 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 6FFCD1B9B1;	Mon, 24 Jun 2019 12:44:25 +0200 (CEST)
Received: from mail-pl1-f196.google.com
 (mail-pl1-f196.google.com [209.85.214.196]) by dpdk.org (Postfix)
 with ESMTP id 788AF1BF21 for <spp@dpdk.org>; Mon,
 24 Jun 2019 12:44:23 +0200 (CEST)
Received: by mail-pl1-f196.google.com with SMTP id m7so6634933pls.8 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 03:44:23 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id r9sm10093635pgv.24.2019.06.24.03.44.21
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 03:44:22 -0700 (PDT)
Date: Mon, 24 Jun 2019 19:44:11 +0900
From: yasufum.o@gmail.com
Subject: [spp 04427] [spp] [PATCH 4/4] spp_pcap: remove global vars spp-ctl IP
 and port
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624104411.24977-5-yasufum.o@gmail.com>
In-reply-to: <20190624104411.24977-1-yasufum.o@gmail.com>
References: <20190624104411.24977-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04427
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=8uIjhu4qMVgVXKtAYriJ3zmEYvRMPpDQ+MbHk4R64CM=;
 b=NBNJ9eh6x2Gvc/po4kUGT0hxnaAOof+FiCy/J9YNk4pYdx3Ii/9bqUjyi8OasSDw5U
 kst+yjjHiqhNYmWTaApWf6JO8yzmcSccmgJVw1FM75fwbWp6c8F2CodxkTn62JSlD/UU
 kR45jYxof2Zwgp6u0itgx/S+GQl5cBbBWU37g3O00aZgQQEpk1cnRFcf8JLjOcxIfeWa
 puBkl/aJBiIIw74QxnH1EvTdQJwUa7XFI8iYP3gUHtphAX2dXX+veJGURAGPu+++9UdW
 bNw0+wczYi0m2dqD8q3dg6RcewNzW7mzZBq3DwSC3fwi0P4TNaMiOnbeapMdIu0YT2U3 0DVQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=8uIjhu4qMVgVXKtAYriJ3zmEYvRMPpDQ+MbHk4R64CM=;
 b=TiI4QK20iI5av4lBopR0xi4sosyyoBiFuJH3xRxonU69+mv3X56HGTwT3CCqM/1PJh
 cGn2q9Y4N1ONBqw763ST4MChl4JmwtGki+88ukzzOty/ug2+tdH6kqPMkiSTmJS/hwID
 cmypFPfUHjX51ArrHjoyXIjSTWr5XIa1aam50uj8TOQOfYm7uERyjmbI3fgTC+2nbHo5
 SswABmEuXVLhFcksjllMdR1v1fG/VTeDs2jTmg8evykZRv6rSb4ge3Ek7B0NEZnwx6/O
 Clc0j0i7OeFfaTME56Mqf7J4V3LKecX3W8l3UoLuUQpmw6UBBx8YWPvNH13vNmj8cmqX P3/g==
X-Gm-Message-State: APjAAAVtIq+PL909cTNxXI78LMLz08esGG5OoHOF2HujAZcXslY2pJ3r
 3IewvA9KQpV8V5c1UGw2s1qLpss9
X-Google-Smtp-Source:
 APXvYqzJHJHajw3FQEkuhMEzQr4TBsfoBOggqMCkBMjGQl4Xf7NF1ffoVhMGYKqcyujzI5t9TDqtBw==
X-Received: by 2002:a17:902:934a:: with SMTP id
 g10mr138086623plp.18.1561373062653; Mon, 24 Jun 2019 03:44:22 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 175
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to remove global `startup_params` from spp_pcap, and
change to use getter and setter for IP addr and port of spp-ctl.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/pcap/spp_pcap.c | 78 +++++++++++++++++++--------------------------
 1 file changed, 32 insertions(+), 46 deletions(-)

diff --git a/src/pcap/spp_pcap.c b/src/pcap/spp_pcap.c
index d4896eb..57cc0bb 100644
--- a/src/pcap/spp_pcap.c
+++ b/src/pcap/spp_pcap.c
@@ -17,6 +17,7 @@
 #include "spp_pcap.h"
 #include "cmd_runner.h"
 #include "cmd_parser.h"
+#include "shared/secondary/utils.h"
 #include "shared/secondary/spp_worker_th/spp_port.h"
 
 /* Declare global variables */
@@ -198,32 +199,6 @@ client_id_toi(const char *client_id_str, int *client_id)
 	return SPPWK_RET_OK;
 }
 
-/* Parse options for server IP and port */
-static int
-parse_server_ip(const char *server_str, char *server_ip, int *server_port)
-{
-	const char delim[2] = ":";
-	unsigned int pos = 0;
-	int port = 0;
-	char *endptr = NULL;
-
-	pos = strcspn(server_str, delim);
-	if (pos >= strlen(server_str))
-		return SPPWK_RET_NG;
-
-	port = strtol(&server_str[pos+1], &endptr, 0);
-	if (unlikely(&server_str[pos+1] == endptr) || unlikely(*endptr != '\0'))
-		return SPPWK_RET_NG;
-
-	memcpy(server_ip, server_str, pos);
-	server_ip[pos] = '\0';
-	*server_port = port;
-	RTE_LOG(DEBUG, SPP_PCAP, "Set server IP   = %s\n", server_ip);
-	RTE_LOG(DEBUG, SPP_PCAP, "Set server port = %d\n", *server_port);
-	return SPPWK_RET_OK;
-}
-
-
 /* Parse `--fsize` option and get the value */
 static int
 parse_fsize(const char *fsize_str, uint64_t *fsize)
@@ -286,17 +261,23 @@ parse_captured_port(const char *port_str, enum port_type *iface_type,
 
 /* Parse options for client app */
 static int
-parse_args(int argc, char *argv[])
+parse_app_args(int argc, char *argv[])
 {
+	char *ctl_ip;  /* IP address of spp_ctl. */
+	int ctl_port;  /* Port num to connect spp_ctl. */
+	char cap_port_str[PORT_STR_SIZE];  /* Captured port. */
 	int cnt;
+	int ret;
+	int option_index, opt;
+
 	int proc_flg = 0;
 	int server_flg = 0;
 	int port_flg = 0;
-	int option_index, opt;
+
 	const int argcopt = argc;
 	char *argvopt[argcopt];
 	const char *progname = argv[0];
-	char port_str[PORT_STR_SIZE];
+
 	static struct option lgopts[] = {
 		{ "client-id", required_argument, NULL,
 			SPP_LONGOPT_RETVAL_CLIENT_ID },
@@ -351,7 +332,7 @@ parse_args(int argc, char *argv[])
 			}
 			break;
 		case 'c':  /* captured port */
-			strcpy(port_str, optarg);
+			strcpy(cap_port_str, optarg);
 			if (parse_captured_port(optarg,
 					&g_pcap_option.port_cap.iface_type,
 					&g_pcap_option.port_cap.iface_no) !=
@@ -362,9 +343,10 @@ parse_args(int argc, char *argv[])
 			port_flg = 1;
 			break;
 		case 's':  /* server addr */
-			if (parse_server_ip(optarg, g_startup_param.server_ip,
-					&g_startup_param.server_port) !=
-								SPPWK_RET_OK) {
+			ret = parse_server(&ctl_ip, &ctl_port, optarg);
+			set_spp_ctl_ip(ctl_ip);
+			set_spp_ctl_port(ctl_port);
+			if (ret != SPPWK_RET_OK) {
 				usage(progname);
 				return SPPWK_RET_NG;
 			}
@@ -383,12 +365,10 @@ parse_args(int argc, char *argv[])
 	}
 
 	RTE_LOG(INFO, SPP_PCAP,
-			"App opts: '--client-id %d', '-s %s:%d', "
-			"'-c %s', '--out-dir %s', '--fsize %ld'\n",
-			g_startup_param.client_id,
-			g_startup_param.server_ip,
-			g_startup_param.server_port,
-			port_str,
+			"Parsed app args ('--client-id %d', '-s %s:%d', "
+			"'-c %s', '--out-dir %s', '--fsize %ld')\n",
+			g_startup_param.client_id, ctl_ip, ctl_port,
+			cap_port_str,
 			g_pcap_option.compress_file_path,
 			g_pcap_option.fsize_limit);
 	return SPPWK_RET_OK;
@@ -946,6 +926,12 @@ int
 main(int argc, char *argv[])
 {
 	int ret = SPPWK_RET_NG;
+	char ctl_ip[IPADDR_LEN] = { 0 };
+	int ctl_port;
+	int ret_cmd_init;
+	unsigned int lcore_id;
+	unsigned int thread_no;
+
 #ifdef SPP_DEMONIZE
 	/* Daemonize process */
 	int ret_daemon = daemon(0, 0);
@@ -969,7 +955,7 @@ main(int argc, char *argv[])
 		argv += ret_eal;
 
 		/* Parse spp_pcap specific parameters */
-		int ret_parse = parse_args(argc, argv);
+		int ret_parse = parse_app_args(argc, argv);
 		if (unlikely(ret_parse != 0))
 			break;
 
@@ -995,10 +981,10 @@ main(int argc, char *argv[])
 		spp_port_ability_init();
 
 		/* Setup connection for accepting commands from controller */
-		int ret_command_init = spp_command_proc_init(
-				g_startup_param.server_ip,
-				g_startup_param.server_port);
-		if (unlikely(ret_command_init != SPPWK_RET_OK))
+		get_spp_ctl_ip(ctl_ip);
+		ctl_port = get_spp_ctl_port();
+		ret_cmd_init = spp_command_proc_init(ctl_ip, ctl_port);
+		if (unlikely(ret_cmd_init != SPPWK_RET_OK))
 			break;
 
 		/* capture port setup */
@@ -1060,10 +1046,10 @@ main(int argc, char *argv[])
 				g_pcap_option.cap_ring->flags);
 
 		/* Start worker threads of recive or write */
-		unsigned int lcore_id = 0;
-		unsigned int thread_no = 0;
 		g_pcap_thread_info.thread_cnt = 0;
 		g_pcap_thread_info.start_up_cnt = 0;
+		lcore_id = 0;
+		thread_no = 0;
 		RTE_LCORE_FOREACH_SLAVE(lcore_id) {
 			g_pcap_thread_info.thread_cnt += 1;
 			g_pcap_info[lcore_id].thread_no = thread_no++;
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 19:45:14 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL001UQN7UR160@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 19:45:30 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTL00Q20N7ULE00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:45:30 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTL009R8N7U7Y60@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:45:30 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id 09C747E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:45:30 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 08CE38E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:45:30 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id F1CCF8E6054	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:45:29 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 52C428E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:45:29 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:45:29 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjTED032642;	Mon,
 24 Jun 2019 19:45:29 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5OAjTvw032641;	Mon, 24 Jun 2019 19:45:29 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5OAjS6v032638	for unknown; Mon,
 24 Jun 2019 19:45:28 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjSWI007848 for
 unknown; Mon, 24 Jun 2019 19:45:28 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjSuG007845; Mon,
 24 Jun 2019 19:45:28 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjSZR008900;	Mon,
 24 Jun 2019 19:45:28 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5OAjSeQ008896	for unknown; Mon, 24 Jun 2019 19:45:28 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjSUs023283 for
 unknown; Mon, 24 Jun 2019 19:45:28 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjSbQ023279 for
 unknown; Mon, 24 Jun 2019 19:45:28 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5OAjLle020820	for unknown; Mon,
 24 Jun 2019 19:45:27 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 8FA7A1B9B1;	Mon, 24 Jun 2019 12:45:20 +0200 (CEST)
Received: from mail-pl1-f195.google.com
 (mail-pl1-f195.google.com [209.85.214.195]) by dpdk.org (Postfix)
 with ESMTP id 46A892C2B for <spp@dpdk.org>; Mon,
 24 Jun 2019 12:45:19 +0200 (CEST)
Received: by mail-pl1-f195.google.com with SMTP id b7so6667630pls.6 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 03:45:19 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id z11sm9863448pjn.2.2019.06.24.03.45.17
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 03:45:17 -0700 (PDT)
Date: Mon, 24 Jun 2019 19:45:14 +0900
From: yasufum.o@gmail.com
Subject: [spp 04428] [spp] [PATCH] spp_pcap: remove global variable client_id
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624104514.25034-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04428
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=7xTxGGSkRwlSqpPnPTnyx3Jk/K0xsG3WpAf13m0faKA=;
 b=JJZJ2nsuaRf5HB3jc4lipqIF6YiBXuam/bOEQO1A+RcYQ6vqrojQK8599ouJcU9Xke
 JRHP3bjdp4T4V0PqzONqwqL7un6nzcoAF5wiHT06CCQj++p8U7i3jys+I2QFCUa3TWyp
 nACaWs3AcvGM3L1HYvN4YWD4vPV7M/KeZM2CbVlT+WV/nGb00wgo1hWMj5p9+38fG9hZ
 9b74JmEu/SYXNU6naoDvkoz6lYIAPrIUFp5ElpXboMpINe3t8sN7WeJIrk8dvrRx5qqw
 q4NCqP6s38HecowDsL6bxAIZeQoO3iqUVC0B7Q8X/X4MGSd++yqlM4mwEh70LuBCwl9H TkpQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=7xTxGGSkRwlSqpPnPTnyx3Jk/K0xsG3WpAf13m0faKA=;
 b=UFaaljQhQjebsEV22kOCj1wuvw3yGJEuhQtbXDlt+ioM+Q6fxLc/jOyBXlGqjT4vwu
 HKBCwUJVKH86MA7jL+2/rxkd1ese/Em8lMijyYHUY2atWejzWxycYoxZRwnKskQ5jsWx
 qcHD40BelIe+TTX/mT8PLSItTUtPtK7N8MOCXHAEo58FBjrObJ9SlpUlOZV+nuSBLJ6Z
 cI+6dDez4/ZVSEbouLoWngQm2CCt+tz47kft6DUiXyx7Sb74ldX0MghecUPqrE0py6Qu
 eITLKJMmZ3busTcBQCuyTj21xQb60a3bZSLJF96voppzt+2F45TPq+2Nt70gMfdpRAbI XbHA==
X-Gm-Message-State: APjAAAVsHX3if40r0o7+7aynw3Rc9D/F6WoC+uAoWX0tXiIGxoINA2L3
 RTPvDzohouHGK8S0gBoCptJMiu2e
X-Google-Smtp-Source:
 APXvYqy4TzMYllaa0fbuyHpTpLqDLqHT4I9YNyRmSCy/wXMq2Eg/iFxJlB0yn5QmoIh6GPKPX9BiLw==
X-Received: by 2002:a17:902:54d:: with SMTP id
 71mr35188055plf.140.1561373118268; Mon, 24 Jun 2019 03:45:18 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 287
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

`client_id` is defined as a global variable, but it is better to use
get_client_id() instead. This update is to replace it.

This update is also try block in SPP controller to avoid CLI is
terminated if entry `client-id` is not found in status message.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/pri.py |  9 +++--
 src/controller/shell.py        | 66 ++++++++++++++++++----------------
 src/pcap/Makefile              |  1 +
 src/pcap/cmd_runner.c          | 19 +++-------
 src/pcap/cmd_utils.h           |  2 +-
 src/pcap/spp_pcap.c            | 35 ++++--------------
 src/spp-ctl/spp_ctl.py         |  1 +
 7 files changed, 56 insertions(+), 77 deletions(-)

diff --git a/src/controller/commands/pri.py b/src/controller/commands/pri.py
index b119a5c..6089137 100644
--- a/src/controller/commands/pri.py
+++ b/src/controller/commands/pri.py
@@ -301,9 +301,12 @@ class SppPrimary(object):
         res = self.spp_ctl_cli.get('processes')
         if res is not None:
             if res.status_code == 200:
-                for proc in res.json():
-                    if proc['type'] != 'primary':
-                        sec_ids.append(proc['client-id'])
+                try:
+                    for proc in res.json():
+                        if proc['type'] != 'primary':
+                            sec_ids.append(proc['client-id'])
+                except KeyError as e:
+                    print('Error: {} is not defined!'.format(e))
             elif res.status_code in self.spp_ctl_cli.rest_common_error_codes:
                 # Print default error message
                 pass
diff --git a/src/controller/shell.py b/src/controller/shell.py
index 3f4d95b..2288e1d 100644
--- a/src/controller/shell.py
+++ b/src/controller/shell.py
@@ -142,9 +142,12 @@ class Shell(cmd.Cmd, object):
         res = self.spp_ctl_cli.get('processes')
         if res is not None:
             if res.status_code == 200:
-                for ent in res.json():
-                    if ent['type'] == ptype:
-                        ids.append(ent['client-id'])
+                try:
+                    for ent in res.json():
+                        if ent['type'] == ptype:
+                            ids.append(ent['client-id'])
+                except KeyError as e:
+                    print('Error: {} is not defined!'.format(e))
         return ids
 
     def print_status(self):
@@ -156,34 +159,37 @@ class Shell(cmd.Cmd, object):
         res = self.spp_ctl_cli.get('processes')
         if res is not None:
             if res.status_code == 200:
-                proc_objs = res.json()
-                pri_obj = None
-                sec_obj = {}
-                sec_obj['nfv'] = []
-                sec_obj['vf'] = []
-                sec_obj['mirror'] = []
-                sec_obj['pcap'] = []
-
-                for proc_obj in proc_objs:
-                    if proc_obj['type'] == 'primary':
-                        pri_obj = proc_obj
+                try:
+                    proc_objs = res.json()
+                    pri_obj = None
+                    sec_obj = {}
+                    sec_obj['nfv'] = []
+                    sec_obj['vf'] = []
+                    sec_obj['mirror'] = []
+                    sec_obj['pcap'] = []
+
+                    for proc_obj in proc_objs:
+                        if proc_obj['type'] == 'primary':
+                            pri_obj = proc_obj
+                        else:
+                            sec_obj[proc_obj['type']].append(proc_obj)
+
+                    print('- primary:')
+                    if pri_obj is not None:
+                        print('  - status: running')
                     else:
-                        sec_obj[proc_obj['type']].append(proc_obj)
-
-                print('- primary:')
-                if pri_obj is not None:
-                    print('  - status: running')
-                else:
-                    print('  - status: not running')
-
-                print('- secondary:')
-                print('  - processes:')
-                cnt = 1
-                for pt in ['nfv', 'vf', 'mirror', 'pcap']:
-                    for obj in sec_obj[pt]:
-                        print('    %d: %s:%s' %
-                              (cnt, obj['type'], obj['client-id']))
-                        cnt += 1
+                        print('  - status: not running')
+
+                    print('- secondary:')
+                    print('  - processes:')
+                    cnt = 1
+                    for pt in ['nfv', 'vf', 'mirror', 'pcap']:
+                        for obj in sec_obj[pt]:
+                            print('    %d: %s:%s' %
+                                  (cnt, obj['type'], obj['client-id']))
+                            cnt += 1
+                except KeyError as e:
+                    print('Error: {} is not defined!'.format(e))
             elif res.status_code in self.spp_ctl_cli.rest_common_error_codes:
                 pass
             else:
diff --git a/src/pcap/Makefile b/src/pcap/Makefile
index 852d036..784ee1b 100644
--- a/src/pcap/Makefile
+++ b/src/pcap/Makefile
@@ -19,6 +19,7 @@ SRCS-y := spp_pcap.c
 SRCS-y += cmd_utils.c
 SRCS-y += cmd_runner.c cmd_parser.c
 SRCS-y += ../shared/common.c
+SRCS-y += $(SPP_SEC_DIR)/utils.c
 SRCS-y += $(SPP_SEC_DIR)/string_buffer.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/spp_port.c
diff --git a/src/pcap/cmd_runner.c b/src/pcap/cmd_runner.c
index 7f17d40..4c1891e 100644
--- a/src/pcap/cmd_runner.c
+++ b/src/pcap/cmd_runner.c
@@ -7,11 +7,12 @@
 
 #include <rte_log.h>
 
-#include "shared/secondary/string_buffer.h"
-#include "spp_pcap.h"
-#include "shared/secondary/spp_worker_th/conn_spp_ctl.h"
 #include "cmd_parser.h"
 #include "cmd_runner.h"
+#include "spp_pcap.h"
+#include "shared/secondary/utils.h"
+#include "shared/secondary/string_buffer.h"
+#include "shared/secondary/spp_worker_th/conn_spp_ctl.h"
 
 #define RTE_LOGTYPE_PCAP_RUNNER RTE_LOGTYPE_USER2
 
@@ -59,16 +60,6 @@ const char *CAPTURE_STATUS_STRINGS[] = {
 	"", /* termination */
 };
 
-/* get client id */
-static int
-spp_get_client_id(void)
-{
-	struct startup_param *startup_param;
-
-	spp_get_mng_data_addr(&startup_param, NULL, NULL, NULL, NULL);
-	return startup_param->client_id;
-}
-
 /**
  * Iterate core information for number of available cores to
  * append response for status command.
@@ -393,7 +384,7 @@ static int
 append_client_id_value(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
-	return append_json_int_value(name, output, spp_get_client_id());
+	return append_json_int_value(name, output, get_client_id());
 }
 
 /* append a block of port entry for JSON format */
diff --git a/src/pcap/cmd_utils.h b/src/pcap/cmd_utils.h
index 46747e9..8281a3b 100644
--- a/src/pcap/cmd_utils.h
+++ b/src/pcap/cmd_utils.h
@@ -157,7 +157,7 @@ struct sppwk_comp_info {
 
 /* Manage given options as global variable */
 struct startup_param {
-	int client_id;  /* Client ID */
+	//int client_id;  /* Client ID */
 	char server_ip[INET_ADDRSTRLEN];  /* IP address of spp-ctl */
 	int server_port;  /* Port Number of spp-ctl */
 };
diff --git a/src/pcap/spp_pcap.c b/src/pcap/spp_pcap.c
index 57cc0bb..b69ffdd 100644
--- a/src/pcap/spp_pcap.c
+++ b/src/pcap/spp_pcap.c
@@ -177,28 +177,6 @@ usage(const char *progname)
 		, progname);
 }
 
-/**
- * Convert string type of client ID to integer and return SPPWK_RET_OK, or
- * SPPWK_RET_NG if failed.
- */
-static int
-client_id_toi(const char *client_id_str, int *client_id)
-{
-	int id = 0;
-	char *endptr = NULL;
-
-	id = strtol(client_id_str, &endptr, 0);
-	if (unlikely(client_id_str == endptr) || unlikely(*endptr != '\0'))
-		return SPPWK_RET_NG;
-
-	if (id >= RTE_MAX_LCORE)
-		return SPPWK_RET_NG;
-
-	*client_id = id;
-	RTE_LOG(DEBUG, SPP_PCAP, "Set client id = %d\n", *client_id);
-	return SPPWK_RET_OK;
-}
-
 /* Parse `--fsize` option and get the value */
 static int
 parse_fsize(const char *fsize_str, uint64_t *fsize)
@@ -263,6 +241,7 @@ parse_captured_port(const char *port_str, enum port_type *iface_type,
 static int
 parse_app_args(int argc, char *argv[])
 {
+	int cli_id;  /* Client ID. */
 	char *ctl_ip;  /* IP address of spp_ctl. */
 	int ctl_port;  /* Port num to connect spp_ctl. */
 	char cap_port_str[PORT_STR_SIZE];  /* Captured port. */
@@ -307,12 +286,11 @@ parse_app_args(int argc, char *argv[])
 			&option_index)) != EOF) {
 		switch (opt) {
 		case SPP_LONGOPT_RETVAL_CLIENT_ID:
-			if (client_id_toi(optarg,
-					&g_startup_param.client_id) !=
-								SPPWK_RET_OK) {
+			if (parse_client_id(&cli_id, optarg) != SPPWK_RET_OK) {
 				usage(progname);
 				return SPPWK_RET_NG;
 			}
+			set_client_id(cli_id);
 			proc_flg = 1;
 			break;
 		case SPP_LONGOPT_RETVAL_OUT_DIR:
@@ -367,8 +345,7 @@ parse_app_args(int argc, char *argv[])
 	RTE_LOG(INFO, SPP_PCAP,
 			"Parsed app args ('--client-id %d', '-s %s:%d', "
 			"'-c %s', '--out-dir %s', '--fsize %ld')\n",
-			g_startup_param.client_id, ctl_ip, ctl_port,
-			cap_port_str,
+			cli_id, ctl_ip, ctl_port, cap_port_str,
 			g_pcap_option.compress_file_path,
 			g_pcap_option.fsize_limit);
 	return SPPWK_RET_OK;
@@ -1031,8 +1008,8 @@ main(int argc, char *argv[])
 		/* create ring */
 		char ring_name[PORT_STR_SIZE];
 		memset(ring_name, 0x00, PORT_STR_SIZE);
-		snprintf(ring_name, PORT_STR_SIZE,  "cap_ring_%d",
-						g_startup_param.client_id);
+		snprintf(ring_name, PORT_STR_SIZE, "cap_ring_%d",
+				get_client_id());
 		g_pcap_option.cap_ring = rte_ring_create(ring_name,
 					rte_align32pow2(RING_SIZE),
 					rte_socket_id(), 0);
diff --git a/src/spp-ctl/spp_ctl.py b/src/spp-ctl/spp_ctl.py
index f276442..ce1a2e2 100644
--- a/src/spp-ctl/spp_ctl.py
+++ b/src/spp-ctl/spp_ctl.py
@@ -139,6 +139,7 @@ class Controller(object):
 
     def get_processes(self):
         procs = []
+        LOG.info('get_proesses: {}'.format(self.procs.values()))
         for proc in self.procs.values():
             p = {"type": proc.type}
             if proc.id != spp_proc.ID_PRIMARY:
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 19:45:22 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd101.ddreams.local
 (zssg-mailmd101.ddreams.local [10.160.123.96]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL001VYN82R160@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 19:45:38 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd101.ddreams.local by
 zssg-mailmd101.ddreams.local (dDREAMS) id <0PTL0120YN82SI00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:45:38 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd101.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00J8AN82Z170@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:45:38 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf106.ddreams.local (Postfix) with ESMTP id 5A7717E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:45:38 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 58EB68E6042	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:45:38 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 4DA708E605F	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:45:38 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 02EFA8E6057	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:45:37 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf106.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:45:36 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAja37032649;	Mon,
 24 Jun 2019 19:45:36 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5OAjaeK032648;	Mon, 24 Jun 2019 19:45:36 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5OAja1n032645	for unknown; Mon,
 24 Jun 2019 19:45:36 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjaTF007903 for
 unknown; Mon, 24 Jun 2019 19:45:36 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjae0007900; Mon,
 24 Jun 2019 19:45:36 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjaKA008916;	Mon,
 24 Jun 2019 19:45:36 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5OAjZwr008912	for unknown; Mon, 24 Jun 2019 19:45:35 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjZKe023363 for
 unknown; Mon, 24 Jun 2019 19:45:35 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjZk5023356 for
 unknown; Mon, 24 Jun 2019 19:45:35 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5OAjTDv020855	for unknown; Mon,
 24 Jun 2019 19:45:34 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id A16A01BF01;	Mon, 24 Jun 2019 12:45:28 +0200 (CEST)
Received: from mail-pg1-f195.google.com
 (mail-pg1-f195.google.com [209.85.215.195]) by dpdk.org (Postfix)
 with ESMTP id 32A0D2C2B for <spp@dpdk.org>; Mon,
 24 Jun 2019 12:45:27 +0200 (CEST)
Received: by mail-pg1-f195.google.com with SMTP id k13so727458pgq.9 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 03:45:27 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id v13sm11502011pfe.105.2019.06.24.03.45.24
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 03:45:25 -0700 (PDT)
Date: Mon, 24 Jun 2019 19:45:22 +0900
From: yasufum.o@gmail.com
Subject: [spp 04429] [spp] [PATCH] spp-ctl: add updating for no existing sec
 procs
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624104522.25087-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04429
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=6wdnq931fhW0ivHmwihncEMDokUivdELfLJKdf4Tfx8=;
 b=jEIAeflOzna/FiIBzKvzoyUkJmjxgK0yAz1ql+wA4CUi4EEywwoTjXfBvW2mhG29S3
 zUsG8zteRzUingfqvnEa23CK4JxVM0Hdn4YWET9GvtFTwS2UYUc0TBp9qE+BXx7NhNOw
 wPXtnDryAF5ZHiO6otr9iHdJkU7rVXEBB2qREU+yUKFQM1+ncyA32TAfz7UtF2cuNQoF
 x8EZ4qy83nmf/YY4JcLw5ztzY2Njk+5kCfxqJdYDi8q5w4TK1yaUCyudWbNYt5qy3rQQ
 d4AzSxMeZwFFtRH8SKf66KkBGE75pqmsD5wqchIbs45Wl6tAly6w4NA7QzygAGK3TgLT zR/A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=6wdnq931fhW0ivHmwihncEMDokUivdELfLJKdf4Tfx8=;
 b=dleJSfOSFtCOoJQwOcVurRukFcXBgnPFlnQlBHTNEtnU7c5O3bPDA3dtLtts3OZDZ2
 621LMo9ov/FxfzNh1HRpehtwukaog+yUa8vKr8UlQSwYNceEsWhjRJKwkepsho7XPVkI
 xWJP3mn/5Tq0HjrxCDL3jzqhUjUY4gbr74VAZzaPwJfhMB9FDUNieQoLuxZm71WPSHsY
 rYPuAMHlE84FpIkqBCKRBvfFYns1fP2pAo+rcec9zsbWe361VD4uwxwzaJy6hQP4Hs4q
 /qLr2tD9y61Tj2QiadMhhkN5cJNchx54AB89VR8ckWZIhCwdUrHdAG6biSJDeVXvgIdd ZtcA==
X-Gm-Message-State: APjAAAUhpyW/j9h4WiIXCnhJ+Q3t55OasJ0M2Rgrf8b2yiB8wNpkW25f
 A6myFz0j2Et1jd0sq1jmlPuoEEf2
X-Google-Smtp-Source:
 APXvYqwWzy22SocJWruTb8/DpTjCC87ujeY8i8dPpkLNyYjoHkgl9svfcquORSVkhHcT9IbFFu4EzQ==
X-Received: by 2002:a17:90a:cb87:: with SMTP id
 a7mr24796598pju.130.1561373126193; Mon, 24 Jun 2019 03:45:26 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 76
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

If secondary process is died, spp-ctl cannot find the event and does
not update list of secondary processes. As the result, spp-ctl returns
an invalid message for inquiring status.

This update is to add a method _update_proc() for updating the list run
before making the result message. In the method, spp-ctl tries to
retrieve status of all processes and remove entries of the list if it
is failed.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/spp-ctl/spp_ctl.py | 37 +++++++++++++++++++++++++++++--------
 1 file changed, 29 insertions(+), 8 deletions(-)

diff --git a/src/spp-ctl/spp_ctl.py b/src/spp-ctl/spp_ctl.py
index ce1a2e2..93b87dd 100644
--- a/src/spp-ctl/spp_ctl.py
+++ b/src/spp-ctl/spp_ctl.py
@@ -118,13 +118,17 @@ class Controller(object):
 
     @staticmethod
     def _send_command(conn, command):
-        conn.sendall(command.encode())
-        data = conn.recv(MSG_SIZE)
-        if data and len(data) == MSG_SIZE:
-            # could not receive data at once. recieve remining data.
-            data += self._continue_recv(conn)
-        if data:
-            data = data.decode()
+        data = None
+        try:
+            conn.sendall(command.encode())
+            data = conn.recv(MSG_SIZE)
+            if data and len(data) == MSG_SIZE:
+                # could not receive data at once. recieve remining data.
+                data += self._continue_recv(conn)
+            if data:
+                data = data.decode()
+        except Exception as e:
+            LOG.info("Error: {}".format(e))
         return data
 
     def _get_proc(self, conn):
@@ -137,9 +141,26 @@ class Controller(object):
             if sec_id is not None:
                 return proc(sec_id, conn)
 
+    def _update_procs(self):
+        """Remove no existing processes from `self.procs`."""
+        removed_ids = []
+        for idx, proc in self.procs.items():
+            if proc.id != spp_proc.ID_PRIMARY:
+                try:
+                    # Check the process can be accessed. If not, go
+                    # to except block.
+                    proc.get_status()
+                except Exception as e:
+                    LOG.error(e)
+                    removed_ids.append(idx)
+        for idx in removed_ids:
+            LOG.info("Remove no existing {}:{}.".format(
+                self.procs[idx].type, self.procs[idx].id))
+            del self.procs[idx]
+
     def get_processes(self):
         procs = []
-        LOG.info('get_proesses: {}'.format(self.procs.values()))
+        self._update_procs()
         for proc in self.procs.values():
             p = {"type": proc.type}
             if proc.id != spp_proc.ID_PRIMARY:
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 19:45:30 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL001X0N8BR160@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 19:45:47 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTL00Q18N8BY700@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:45:47 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTL009VWN8B7Y60@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:45:47 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id 11E197E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:45:47 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 10BD58E605D	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:45:47 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 055B28E6050	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:45:47 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id EE9618E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:45:45 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:45:45 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjj1t032657;	Mon,
 24 Jun 2019 19:45:45 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5OAjjat032656;	Mon, 24 Jun 2019 19:45:45 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5OAjjBh032653	for unknown; Mon,
 24 Jun 2019 19:45:45 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjjPj007931 for
 unknown; Mon, 24 Jun 2019 19:45:45 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjj2Z007928; Mon,
 24 Jun 2019 19:45:45 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjjAY008932;	Mon,
 24 Jun 2019 19:45:45 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5OAji3w008928	for unknown; Mon, 24 Jun 2019 19:45:44 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjisc023392 for
 unknown; Mon, 24 Jun 2019 19:45:44 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjiRQ023388 for
 unknown; Mon, 24 Jun 2019 19:45:44 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5OAjcJg020885	for unknown; Mon,
 24 Jun 2019 19:45:43 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id B23441B9B1;	Mon, 24 Jun 2019 12:45:37 +0200 (CEST)
Received: from mail-pl1-f193.google.com
 (mail-pl1-f193.google.com [209.85.214.193]) by dpdk.org (Postfix)
 with ESMTP id 134B72C2B for <spp@dpdk.org>; Mon,
 24 Jun 2019 12:45:36 +0200 (CEST)
Received: by mail-pl1-f193.google.com with SMTP id p1so6671922plo.2 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 03:45:36 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id h6sm11483096pfn.79.2019.06.24.03.45.33
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 03:45:34 -0700 (PDT)
Date: Mon, 24 Jun 2019 19:45:30 +0900
From: yasufum.o@gmail.com
Subject: [spp 04430] [spp] [PATCH] spp-ctl: add API for getting CPU usage
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624104530.25143-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04430
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=cSVkT8sIigBkXMVuGCq77m6j7ZUOmdKGs7WfSAEXJPE=;
 b=RAzR7yySW0NfXa3SmtBCyueMLVRD1bDXnd9wmdkqeb2eJwgqxbWvugg0CpLc2rjLX1
 CAGyZnWhgP682U5cEyOCgyvm/1BQP1scvwoyv/dxgqSaS+QB6Qv3/P6Pkma8FJtF5cgP
 mm6kQ9Q5+GYVDCfx4xOlAYszKSWzNM9K9WFysxgbGlXx1VPGBdsayHP7CCQKOS6Zl787
 epnnIg5w/SjNK4Gg8i8zTw4Wp2mIXTMdg2/8n10Vy4qGdA9cvDcfsW+V0yyqCB6epyO6
 EtCmqahBuTOKPg6o3gzaLMnj2cn10bnrM4NB4aXNXhltyNsRpzGsBSANnxnNfJJ3grIN 6hng==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=cSVkT8sIigBkXMVuGCq77m6j7ZUOmdKGs7WfSAEXJPE=;
 b=XznNNCrDm/OLvf0SqJ1GBPWJuBMX/inlu+ZqyE8H2dFEnu0xLuGWZC0ZPbtYWCmA97
 dKSZ29Juj4bmGohFqMqp5VTU1NxjbB7j5BA4bYIjJiNOEQgG3crO1mphPcQ6v7WizJSG
 ppvUmCWphbNB7zGepMGSu4P//kGRNCYkMhXs/ROKcrFeH0FOoZgXEztpTCTq5zuH3p30
 n1/qDwpj9DAiEc5xAzborp2Mc6WbYkSnhQMPWaryjg1XKTNFVydSuZoBixzPpJl3nR7h
 cyl71YmOTDJmTj2Q+Swbkc/IZ5fRQOgmvnO+ywWcSsBNxeO3GHp/wGk7xcrem878LY6y uE5Q==
X-Gm-Message-State: APjAAAXwidAkrnINBM9nXnaKUdT1WL0O1z5MKe8B7h0HoUgp1ocPudIA
 nnCst0TksoRDU/gZO4X1VE4SSugN
X-Google-Smtp-Source:
 APXvYqzRK8JP+NvRkYqhG56xGqCvwFGWjPoCWBY6UIphRpX3+5Mzq/3YffRoiVnbZCXU26R1YHfB8A==
X-Received: by 2002:a17:902:61:: with SMTP id 88mr66625921pla.50.1561373135186;
 Mon, 24 Jun 2019 03:45:35 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 193
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

API for getting CPU usage is intended to be used for suggesting unused
lcores for `pri; launch` command.

This update is also revise method of primary for getting status to be
the same as other secondary processes.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/spp-ctl/spp_ctl.py    | 54 ++++++++++++++++++++++++++++++++++++++-
 src/spp-ctl/spp_proc.py   |  6 +----
 src/spp-ctl/spp_webapi.py | 18 ++++++++-----
 3 files changed, 66 insertions(+), 12 deletions(-)

diff --git a/src/spp-ctl/spp_ctl.py b/src/spp-ctl/spp_ctl.py
index 93b87dd..ea19aa6 100644
--- a/src/spp-ctl/spp_ctl.py
+++ b/src/spp-ctl/spp_ctl.py
@@ -18,12 +18,12 @@ import spp_webapi
 
 LOG = logging.getLogger(__name__)
 
-
 MSG_SIZE = 4096
 
 # relative path of `cpu_layout.py`
 CPU_LAYOUT_TOOL = 'tools/helpers/cpu_layout.py'
 
+
 class Controller(object):
 
     def __init__(self, host, pri_port, sec_port, api_port):
@@ -143,6 +143,7 @@ class Controller(object):
 
     def _update_procs(self):
         """Remove no existing processes from `self.procs`."""
+
         removed_ids = []
         for idx, proc in self.procs.items():
             if proc.id != spp_proc.ID_PRIMARY:
@@ -168,6 +169,57 @@ class Controller(object):
             procs.append(p)
         return procs
 
+    def get_cpu_usage(self):
+        """Get cpu usage from each of status of SPP processes.
+
+        If process returns invalid message or cannot connect, remove
+        it from `self.procs` as in _update_procs().
+        """
+
+        removed_ids = []
+        cpus = []
+        for idx, proc in self.procs.items():
+            try:
+                # Check the process can be accessed. If not, go
+                # to except block.
+                stat = proc.get_status()
+                if proc.id == spp_proc.ID_PRIMARY:
+                    cpus.append(
+                            {'proc-type': proc.type,
+                                'master-lcore': stat['lcores'][0],
+                                'lcores': stat['lcores']})
+                elif proc.type == 'nfv':
+                    cpus.append(
+                            {'proc-type': proc.type,
+                                'client-id': proc.id,
+                                'master-lcore': stat['master-lcore'],
+                                'lcores': stat['lcores']})
+                elif proc.type in ['vf', 'mirror', 'pcap']:
+                    master_lcore = stat['info']['master-lcore']
+                    lcores = [stat['info']['master-lcore']]
+                    # TODO(yasufum) revise tag name 'core'.
+                    for val in stat['info']['core']:
+                        lcores.append(val['core'])
+                    cpus.append(
+                            {'proc-type': proc.type,
+                                'client-id': proc.id,
+                                'master-lcore': master_lcore,
+                                'lcores': lcores})
+                else:
+                    LOG.debug('No supported proc type: {}'.format(
+                        roc.type))
+
+            except Exception as e:
+                LOG.error("get_cpu_usage: {}".format(e))
+                removed_ids.append(idx)
+
+        for idx in removed_ids:
+            LOG.info("Remove no existing {}:{}.".format(
+                self.procs[idx].type, self.procs[idx].id))
+            del self.procs[idx]
+
+        return cpus
+
     def get_cpu_layout(self):
         """Get cpu layout with helper tool 'cpu_layout.py'."""
 
diff --git a/src/spp-ctl/spp_proc.py b/src/spp-ctl/spp_proc.py
index cdd7b49..fe7ecea 100644
--- a/src/spp-ctl/spp_proc.py
+++ b/src/spp-ctl/spp_proc.py
@@ -284,12 +284,8 @@ class PrimaryProc(SppProc):
     def __init__(self, conn):
         super(PrimaryProc, self).__init__(TYPE_PRIMARY, ID_PRIMARY, conn)
 
-    @staticmethod
-    def _decode_reply(data):
-        return data.strip('\0')
-
     @exec_command
-    def status(self):
+    def get_status(self):
         return "status"
 
     @exec_command
diff --git a/src/spp-ctl/spp_webapi.py b/src/spp-ctl/spp_webapi.py
index 3ad34d0..7f2baad 100644
--- a/src/spp-ctl/spp_webapi.py
+++ b/src/spp-ctl/spp_webapi.py
@@ -53,7 +53,7 @@ class BaseHandler(bottle.Bottle):
             if if_type not in ["phy", "vhost", "ring", "pcap", "nullpmd"]:
                 raise
             int(if_num)
-        except:
+        except Exception:
             raise KeyInvalid('port', port)
 
     def log_url(self):
@@ -152,16 +152,22 @@ class V1Handler(BaseHandler):
 
     def set_route(self):
         self.route('/processes', 'GET', callback=self.get_processes)
-        self.route('/cpus', 'GET', callback=self.get_cpu_layout)
+        self.route('/cpu_usage', 'GET', callback=self.get_cpu_usage)
+        self.route('/cpu_layout', 'GET', callback=self.get_cpu_layout)
 
     def get_processes(self):
         LOG.info("get processes called.")
         return self.ctrl.get_processes()
 
+    def get_cpu_usage(self):
+        LOG.info("get cpu usage called.")
+        return self.ctrl.get_cpu_usage()
+
     def get_cpu_layout(self):
         LOG.info("get cpu layout called.")
         return self.ctrl.get_cpu_layout()
 
+
 class V1VFCommon(object):
     """Define common methods for vf and mirror handler."""
 
@@ -251,7 +257,7 @@ class V1VFHandler(BaseHandler, V1VFCommon):
                     if vlan['operation'] == "add":
                         int(vlan['id'])
                         int(vlan['pcp'])
-                except:
+                except Exception:
                     raise KeyInvalid('vlan', vlan)
 
     def vf_comp_port(self, proc, name, body):
@@ -277,7 +283,7 @@ class V1VFHandler(BaseHandler, V1VFCommon):
     def _validate_mac(self, mac_address):
         try:
             netaddr.EUI(mac_address)
-        except:
+        except Exception:
             raise KeyInvalid('mac_address', mac_address)
 
     def _validate_vf_classifier(self, body):
@@ -296,7 +302,7 @@ class V1VFHandler(BaseHandler, V1VFCommon):
         if body['type'] == "vlan":
             try:
                 int(body['vlan'])
-            except:
+            except Exception:
                 raise KeyInvalid('vlan', body.get('vlan'))
 
     def vf_classifier(self, proc, body):
@@ -466,7 +472,7 @@ class V1PrimaryHandler(BaseHandler):
 
     def get_status(self):
         proc = self._get_proc()
-        return self.convert_status(proc.status())
+        return proc.get_status()
 
     def clear_status(self):
         proc = self._get_proc()
-- 
2.17.1



From spp-request@dpdk.org Mon Jun 24 19:45:36 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd105.ddreams.local
 (zssg-mailmd105.ddreams.local [10.160.123.100])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL001X2N8BR160@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 19:45:47 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd105.ddreams.local by
 zssg-mailmd105.ddreams.local (dDREAMS) id <0PTL00F0GN8B9V00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:45:47 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd105.ddreams.local
 (dDREAMS) with ESMTP id <0PTL01CNKN8B6T60@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:45:47 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf105.ddreams.local (Postfix) with ESMTP id BB14E7E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:45:47 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id B9A818E6052	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:45:47 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id AEC2A8E6058	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:45:47 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 4E8F38E605D	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:45:47 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf105.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:45:47 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjlCf032664;	Mon,
 24 Jun 2019 19:45:47 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5OAjliX032663;	Mon, 24 Jun 2019 19:45:47 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5OAjljE032660	for unknown; Mon,
 24 Jun 2019 19:45:47 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjkmR023409 for
 unknown; Mon, 24 Jun 2019 19:45:46 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjka4023406 for
 unknown; Mon, 24 Jun 2019 19:45:46 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5OAjeQb020889	for unknown; Mon,
 24 Jun 2019 19:45:45 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id BBCEA1BED8	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 24 Jun 2019 12:45:39 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 22
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 24 Jun 2019 12:45:36 +0200
Message-id: <mailman.23414.1561373136.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH 4/4] spp_pcap: remove global vars spp-ctl IP and port
      (yasufum.o@gmail.com)
   2. [PATCH] spp_pcap: remove global variable client_id
      (yasufum.o@gmail.com)
   3. [PATCH] spp-ctl: add updating for no existing sec procs
      (yasufum.o@gmail.com)
   4. [PATCH] spp-ctl: add API for getting CPU usage
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon, 24 Jun 2019 19:44:11 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 4/4] spp_pcap: remove global vars spp-ctl IP and
	port
Message-ID: <20190624104411.24977-5-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to remove global `startup_params` from spp_pcap, and
change to use getter and setter for IP addr and port of spp-ctl.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/pcap/spp_pcap.c | 78 +++++++++++++++++++--------------------------
 1 file changed, 32 insertions(+), 46 deletions(-)

diff --git a/src/pcap/spp_pcap.c b/src/pcap/spp_pcap.c
index d4896eb..57cc0bb 100644
--- a/src/pcap/spp_pcap.c
+++ b/src/pcap/spp_pcap.c
@@ -17,6 +17,7 @@
 #include "spp_pcap.h"
 #include "cmd_runner.h"
 #include "cmd_parser.h"
+#include "shared/secondary/utils.h"
 #include "shared/secondary/spp_worker_th/spp_port.h"
 
 /* Declare global variables */
@@ -198,32 +199,6 @@ client_id_toi(const char *client_id_str, int *client_id)
 	return SPPWK_RET_OK;
 }
 
-/* Parse options for server IP and port */
-static int
-parse_server_ip(const char *server_str, char *server_ip, int *server_port)
-{
-	const char delim[2] = ":";
-	unsigned int pos = 0;
-	int port = 0;
-	char *endptr = NULL;
-
-	pos = strcspn(server_str, delim);
-	if (pos >= strlen(server_str))
-		return SPPWK_RET_NG;
-
-	port = strtol(&server_str[pos+1], &endptr, 0);
-	if (unlikely(&server_str[pos+1] == endptr) || unlikely(*endptr != '\0'))
-		return SPPWK_RET_NG;
-
-	memcpy(server_ip, server_str, pos);
-	server_ip[pos] = '\0';
-	*server_port = port;
-	RTE_LOG(DEBUG, SPP_PCAP, "Set server IP   = %s\n", server_ip);
-	RTE_LOG(DEBUG, SPP_PCAP, "Set server port = %d\n", *server_port);
-	return SPPWK_RET_OK;
-}
-
-
 /* Parse `--fsize` option and get the value */
 static int
 parse_fsize(const char *fsize_str, uint64_t *fsize)
@@ -286,17 +261,23 @@ parse_captured_port(const char *port_str, enum port_type *iface_type,
 
 /* Parse options for client app */
 static int
-parse_args(int argc, char *argv[])
+parse_app_args(int argc, char *argv[])
 {
+	char *ctl_ip;  /* IP address of spp_ctl. */
+	int ctl_port;  /* Port num to connect spp_ctl. */
+	char cap_port_str[PORT_STR_SIZE];  /* Captured port. */
 	int cnt;
+	int ret;
+	int option_index, opt;
+
 	int proc_flg = 0;
 	int server_flg = 0;
 	int port_flg = 0;
-	int option_index, opt;
+
 	const int argcopt = argc;
 	char *argvopt[argcopt];
 	const char *progname = argv[0];
-	char port_str[PORT_STR_SIZE];
+
 	static struct option lgopts[] = {
 		{ "client-id", required_argument, NULL,
 			SPP_LONGOPT_RETVAL_CLIENT_ID },
@@ -351,7 +332,7 @@ parse_args(int argc, char *argv[])
 			}
 			break;
 		case 'c':  /* captured port */
-			strcpy(port_str, optarg);
+			strcpy(cap_port_str, optarg);
 			if (parse_captured_port(optarg,
 					&g_pcap_option.port_cap.iface_type,
 					&g_pcap_option.port_cap.iface_no) !=
@@ -362,9 +343,10 @@ parse_args(int argc, char *argv[])
 			port_flg = 1;
 			break;
 		case 's':  /* server addr */
-			if (parse_server_ip(optarg, g_startup_param.server_ip,
-					&g_startup_param.server_port) !=
-								SPPWK_RET_OK) {
+			ret = parse_server(&ctl_ip, &ctl_port, optarg);
+			set_spp_ctl_ip(ctl_ip);
+			set_spp_ctl_port(ctl_port);
+			if (ret != SPPWK_RET_OK) {
 				usage(progname);
 				return SPPWK_RET_NG;
 			}
@@ -383,12 +365,10 @@ parse_args(int argc, char *argv[])
 	}
 
 	RTE_LOG(INFO, SPP_PCAP,
-			"App opts: '--client-id %d', '-s %s:%d', "
-			"'-c %s', '--out-dir %s', '--fsize %ld'\n",
-			g_startup_param.client_id,
-			g_startup_param.server_ip,
-			g_startup_param.server_port,
-			port_str,
+			"Parsed app args ('--client-id %d', '-s %s:%d', "
+			"'-c %s', '--out-dir %s', '--fsize %ld')\n",
+			g_startup_param.client_id, ctl_ip, ctl_port,
+			cap_port_str,
 			g_pcap_option.compress_file_path,
 			g_pcap_option.fsize_limit);
 	return SPPWK_RET_OK;
@@ -946,6 +926,12 @@ int
 main(int argc, char *argv[])
 {
 	int ret = SPPWK_RET_NG;
+	char ctl_ip[IPADDR_LEN] = { 0 };
+	int ctl_port;
+	int ret_cmd_init;
+	unsigned int lcore_id;
+	unsigned int thread_no;
+
 #ifdef SPP_DEMONIZE
 	/* Daemonize process */
 	int ret_daemon = daemon(0, 0);
@@ -969,7 +955,7 @@ main(int argc, char *argv[])
 		argv += ret_eal;
 
 		/* Parse spp_pcap specific parameters */
-		int ret_parse = parse_args(argc, argv);
+		int ret_parse = parse_app_args(argc, argv);
 		if (unlikely(ret_parse != 0))
 			break;
 
@@ -995,10 +981,10 @@ main(int argc, char *argv[])
 		spp_port_ability_init();
 
 		/* Setup connection for accepting commands from controller */
-		int ret_command_init = spp_command_proc_init(
-				g_startup_param.server_ip,
-				g_startup_param.server_port);
-		if (unlikely(ret_command_init != SPPWK_RET_OK))
+		get_spp_ctl_ip(ctl_ip);
+		ctl_port = get_spp_ctl_port();
+		ret_cmd_init = spp_command_proc_init(ctl_ip, ctl_port);
+		if (unlikely(ret_cmd_init != SPPWK_RET_OK))
 			break;
 
 		/* capture port setup */
@@ -1060,10 +1046,10 @@ main(int argc, char *argv[])
 				g_pcap_option.cap_ring->flags);
 
 		/* Start worker threads of recive or write */
-		unsigned int lcore_id = 0;
-		unsigned int thread_no = 0;
 		g_pcap_thread_info.thread_cnt = 0;
 		g_pcap_thread_info.start_up_cnt = 0;
+		lcore_id = 0;
+		thread_no = 0;
 		RTE_LCORE_FOREACH_SLAVE(lcore_id) {
 			g_pcap_thread_info.thread_cnt += 1;
 			g_pcap_info[lcore_id].thread_no = thread_no++;
-- 
2.17.1



------------------------------

Message: 2
Date: Mon, 24 Jun 2019 19:45:14 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] spp_pcap: remove global variable client_id
Message-ID: <20190624104514.25034-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

`client_id` is defined as a global variable, but it is better to use
get_client_id() instead. This update is to replace it.

This update is also try block in SPP controller to avoid CLI is
terminated if entry `client-id` is not found in status message.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/pri.py |  9 +++--
 src/controller/shell.py        | 66 ++++++++++++++++++----------------
 src/pcap/Makefile              |  1 +
 src/pcap/cmd_runner.c          | 19 +++-------
 src/pcap/cmd_utils.h           |  2 +-
 src/pcap/spp_pcap.c            | 35 ++++--------------
 src/spp-ctl/spp_ctl.py         |  1 +
 7 files changed, 56 insertions(+), 77 deletions(-)

diff --git a/src/controller/commands/pri.py b/src/controller/commands/pri.py
index b119a5c..6089137 100644
--- a/src/controller/commands/pri.py
+++ b/src/controller/commands/pri.py
@@ -301,9 +301,12 @@ class SppPrimary(object):
         res = self.spp_ctl_cli.get('processes')
         if res is not None:
             if res.status_code == 200:
-                for proc in res.json():
-                    if proc['type'] != 'primary':
-                        sec_ids.append(proc['client-id'])
+                try:
+                    for proc in res.json():
+                        if proc['type'] != 'primary':
+                            sec_ids.append(proc['client-id'])
+                except KeyError as e:
+                    print('Error: {} is not defined!'.format(e))
             elif res.status_code in self.spp_ctl_cli.rest_common_error_codes:
                 # Print default error message
                 pass
diff --git a/src/controller/shell.py b/src/controller/shell.py
index 3f4d95b..2288e1d 100644
--- a/src/controller/shell.py
+++ b/src/controller/shell.py
@@ -142,9 +142,12 @@ class Shell(cmd.Cmd, object):
         res = self.spp_ctl_cli.get('processes')
         if res is not None:
             if res.status_code == 200:
-                for ent in res.json():
-                    if ent['type'] == ptype:
-                        ids.append(ent['client-id'])
+                try:
+                    for ent in res.json():
+                        if ent['type'] == ptype:
+                            ids.append(ent['client-id'])
+                except KeyError as e:
+                    print('Error: {} is not defined!'.format(e))
         return ids
 
     def print_status(self):
@@ -156,34 +159,37 @@ class Shell(cmd.Cmd, object):
         res = self.spp_ctl_cli.get('processes')
         if res is not None:
             if res.status_code == 200:
-                proc_objs = res.json()
-                pri_obj = None
-                sec_obj = {}
-                sec_obj['nfv'] = []
-                sec_obj['vf'] = []
-                sec_obj['mirror'] = []
-                sec_obj['pcap'] = []
-
-                for proc_obj in proc_objs:
-                    if proc_obj['type'] == 'primary':
-                        pri_obj = proc_obj
+                try:
+                    proc_objs = res.json()
+                    pri_obj = None
+                    sec_obj = {}
+                    sec_obj['nfv'] = []
+                    sec_obj['vf'] = []
+                    sec_obj['mirror'] = []
+                    sec_obj['pcap'] = []
+
+                    for proc_obj in proc_objs:
+                        if proc_obj['type'] == 'primary':
+                            pri_obj = proc_obj
+                        else:
+                            sec_obj[proc_obj['type']].append(proc_obj)
+
+                    print('- primary:')
+                    if pri_obj is not None:
+                        print('  - status: running')
                     else:
-                        sec_obj[proc_obj['type']].append(proc_obj)
-
-                print('- primary:')
-                if pri_obj is not None:
-                    print('  - status: running')
-                else:
-                    print('  - status: not running')
-
-                print('- secondary:')
-                print('  - processes:')
-                cnt = 1
-                for pt in ['nfv', 'vf', 'mirror', 'pcap']:
-                    for obj in sec_obj[pt]:
-                        print('    %d: %s:%s' %
-                              (cnt, obj['type'], obj['client-id']))
-                        cnt += 1
+                        print('  - status: not running')
+
+                    print('- secondary:')
+                    print('  - processes:')
+                    cnt = 1
+                    for pt in ['nfv', 'vf', 'mirror', 'pcap']:
+                        for obj in sec_obj[pt]:
+                            print('    %d: %s:%s' %
+                                  (cnt, obj['type'], obj['client-id']))
+                            cnt += 1
+                except KeyError as e:
+                    print('Error: {} is not defined!'.format(e))
             elif res.status_code in self.spp_ctl_cli.rest_common_error_codes:
                 pass
             else:
diff --git a/src/pcap/Makefile b/src/pcap/Makefile
index 852d036..784ee1b 100644
--- a/src/pcap/Makefile
+++ b/src/pcap/Makefile
@@ -19,6 +19,7 @@ SRCS-y := spp_pcap.c
 SRCS-y += cmd_utils.c
 SRCS-y += cmd_runner.c cmd_parser.c
 SRCS-y += ../shared/common.c
+SRCS-y += $(SPP_SEC_DIR)/utils.c
 SRCS-y += $(SPP_SEC_DIR)/string_buffer.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/spp_port.c
diff --git a/src/pcap/cmd_runner.c b/src/pcap/cmd_runner.c
index 7f17d40..4c1891e 100644
--- a/src/pcap/cmd_runner.c
+++ b/src/pcap/cmd_runner.c
@@ -7,11 +7,12 @@
 
 #include <rte_log.h>
 
-#include "shared/secondary/string_buffer.h"
-#include "spp_pcap.h"
-#include "shared/secondary/spp_worker_th/conn_spp_ctl.h"
 #include "cmd_parser.h"
 #include "cmd_runner.h"
+#include "spp_pcap.h"
+#include "shared/secondary/utils.h"
+#include "shared/secondary/string_buffer.h"
+#include "shared/secondary/spp_worker_th/conn_spp_ctl.h"
 
 #define RTE_LOGTYPE_PCAP_RUNNER RTE_LOGTYPE_USER2
 
@@ -59,16 +60,6 @@ const char *CAPTURE_STATUS_STRINGS[] = {
 	"", /* termination */
 };
 
-/* get client id */
-static int
-spp_get_client_id(void)
-{
-	struct startup_param *startup_param;
-
-	spp_get_mng_data_addr(&startup_param, NULL, NULL, NULL, NULL);
-	return startup_param->client_id;
-}
-
 /**
  * Iterate core information for number of available cores to
  * append response for status command.
@@ -393,7 +384,7 @@ static int
 append_client_id_value(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
-	return append_json_int_value(name, output, spp_get_client_id());
+	return append_json_int_value(name, output, get_client_id());
 }
 
 /* append a block of port entry for JSON format */
diff --git a/src/pcap/cmd_utils.h b/src/pcap/cmd_utils.h
index 46747e9..8281a3b 100644
--- a/src/pcap/cmd_utils.h
+++ b/src/pcap/cmd_utils.h
@@ -157,7 +157,7 @@ struct sppwk_comp_info {
 
 /* Manage given options as global variable */
 struct startup_param {
-	int client_id;  /* Client ID */
+	//int client_id;  /* Client ID */
 	char server_ip[INET_ADDRSTRLEN];  /* IP address of spp-ctl */
 	int server_port;  /* Port Number of spp-ctl */
 };
diff --git a/src/pcap/spp_pcap.c b/src/pcap/spp_pcap.c
index 57cc0bb..b69ffdd 100644
--- a/src/pcap/spp_pcap.c
+++ b/src/pcap/spp_pcap.c
@@ -177,28 +177,6 @@ usage(const char *progname)
 		, progname);
 }
 
-/**
- * Convert string type of client ID to integer and return SPPWK_RET_OK, or
- * SPPWK_RET_NG if failed.
- */
-static int
-client_id_toi(const char *client_id_str, int *client_id)
-{
-	int id = 0;
-	char *endptr = NULL;
-
-	id = strtol(client_id_str, &endptr, 0);
-	if (unlikely(client_id_str == endptr) || unlikely(*endptr != '\0'))
-		return SPPWK_RET_NG;
-
-	if (id >= RTE_MAX_LCORE)
-		return SPPWK_RET_NG;
-
-	*client_id = id;
-	RTE_LOG(DEBUG, SPP_PCAP, "Set client id = %d\n", *client_id);
-	return SPPWK_RET_OK;
-}
-
 /* Parse `--fsize` option and get the value */
 static int
 parse_fsize(const char *fsize_str, uint64_t *fsize)
@@ -263,6 +241,7 @@ parse_captured_port(const char *port_str, enum port_type *iface_type,
 static int
 parse_app_args(int argc, char *argv[])
 {
+	int cli_id;  /* Client ID. */
 	char *ctl_ip;  /* IP address of spp_ctl. */
 	int ctl_port;  /* Port num to connect spp_ctl. */
 	char cap_port_str[PORT_STR_SIZE];  /* Captured port. */
@@ -307,12 +286,11 @@ parse_app_args(int argc, char *argv[])
 			&option_index)) != EOF) {
 		switch (opt) {
 		case SPP_LONGOPT_RETVAL_CLIENT_ID:
-			if (client_id_toi(optarg,
-					&g_startup_param.client_id) !=
-								SPPWK_RET_OK) {
+			if (parse_client_id(&cli_id, optarg) != SPPWK_RET_OK) {
 				usage(progname);
 				return SPPWK_RET_NG;
 			}
+			set_client_id(cli_id);
 			proc_flg = 1;
 			break;
 		case SPP_LONGOPT_RETVAL_OUT_DIR:
@@ -367,8 +345,7 @@ parse_app_args(int argc, char *argv[])
 	RTE_LOG(INFO, SPP_PCAP,
 			"Parsed app args ('--client-id %d', '-s %s:%d', "
 			"'-c %s', '--out-dir %s', '--fsize %ld')\n",
-			g_startup_param.client_id, ctl_ip, ctl_port,
-			cap_port_str,
+			cli_id, ctl_ip, ctl_port, cap_port_str,
 			g_pcap_option.compress_file_path,
 			g_pcap_option.fsize_limit);
 	return SPPWK_RET_OK;
@@ -1031,8 +1008,8 @@ main(int argc, char *argv[])
 		/* create ring */
 		char ring_name[PORT_STR_SIZE];
 		memset(ring_name, 0x00, PORT_STR_SIZE);
-		snprintf(ring_name, PORT_STR_SIZE,  "cap_ring_%d",
-						g_startup_param.client_id);
+		snprintf(ring_name, PORT_STR_SIZE, "cap_ring_%d",
+				get_client_id());
 		g_pcap_option.cap_ring = rte_ring_create(ring_name,
 					rte_align32pow2(RING_SIZE),
 					rte_socket_id(), 0);
diff --git a/src/spp-ctl/spp_ctl.py b/src/spp-ctl/spp_ctl.py
index f276442..ce1a2e2 100644
--- a/src/spp-ctl/spp_ctl.py
+++ b/src/spp-ctl/spp_ctl.py
@@ -139,6 +139,7 @@ class Controller(object):
 
     def get_processes(self):
         procs = []
+        LOG.info('get_proesses: {}'.format(self.procs.values()))
         for proc in self.procs.values():
             p = {"type": proc.type}
             if proc.id != spp_proc.ID_PRIMARY:
-- 
2.17.1



------------------------------

Message: 3
Date: Mon, 24 Jun 2019 19:45:22 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] spp-ctl: add updating for no existing sec procs
Message-ID: <20190624104522.25087-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

If secondary process is died, spp-ctl cannot find the event and does
not update list of secondary processes. As the result, spp-ctl returns
an invalid message for inquiring status.

This update is to add a method _update_proc() for updating the list run
before making the result message. In the method, spp-ctl tries to
retrieve status of all processes and remove entries of the list if it
is failed.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/spp-ctl/spp_ctl.py | 37 +++++++++++++++++++++++++++++--------
 1 file changed, 29 insertions(+), 8 deletions(-)

diff --git a/src/spp-ctl/spp_ctl.py b/src/spp-ctl/spp_ctl.py
index ce1a2e2..93b87dd 100644
--- a/src/spp-ctl/spp_ctl.py
+++ b/src/spp-ctl/spp_ctl.py
@@ -118,13 +118,17 @@ class Controller(object):
 
     @staticmethod
     def _send_command(conn, command):
-        conn.sendall(command.encode())
-        data = conn.recv(MSG_SIZE)
-        if data and len(data) == MSG_SIZE:
-            # could not receive data at once. recieve remining data.
-            data += self._continue_recv(conn)
-        if data:
-            data = data.decode()
+        data = None
+        try:
+            conn.sendall(command.encode())
+            data = conn.recv(MSG_SIZE)
+            if data and len(data) == MSG_SIZE:
+                # could not receive data at once. recieve remining data.
+                data += self._continue_recv(conn)
+            if data:
+                data = data.decode()
+        except Exception as e:
+            LOG.info("Error: {}".format(e))
         return data
 
     def _get_proc(self, conn):
@@ -137,9 +141,26 @@ class Controller(object):
             if sec_id is not None:
                 return proc(sec_id, conn)
 
+    def _update_procs(self):
+        """Remove no existing processes from `self.procs`."""
+        removed_ids = []
+        for idx, proc in self.procs.items():
+            if proc.id != spp_proc.ID_PRIMARY:
+                try:
+                    # Check the process can be accessed. If not, go
+                    # to except block.
+                    proc.get_status()
+                except Exception as e:
+                    LOG.error(e)
+                    removed_ids.append(idx)
+        for idx in removed_ids:
+            LOG.info("Remove no existing {}:{}.".format(
+                self.procs[idx].type, self.procs[idx].id))
+            del self.procs[idx]
+
     def get_processes(self):
         procs = []
-        LOG.info('get_proesses: {}'.format(self.procs.values()))
+        self._update_procs()
         for proc in self.procs.values():
             p = {"type": proc.type}
             if proc.id != spp_proc.ID_PRIMARY:
-- 
2.17.1



------------------------------

Message: 4
Date: Mon, 24 Jun 2019 19:45:30 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] spp-ctl: add API for getting CPU usage
Message-ID: <20190624104530.25143-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

API for getting CPU usage is intended to be used for suggesting unused
lcores for `pri; launch` command.

This update is also revise method of primary for getting status to be
the same as other secondary processes.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/spp-ctl/spp_ctl.py    | 54 ++++++++++++++++++++++++++++++++++++++-
 src/spp-ctl/spp_proc.py   |  6 +----
 src/spp-ctl/spp_webapi.py | 18 ++++++++-----
 3 files changed, 66 insertions(+), 12 deletions(-)

diff --git a/src/spp-ctl/spp_ctl.py b/src/spp-ctl/spp_ctl.py
index 93b87dd..ea19aa6 100644
--- a/src/spp-ctl/spp_ctl.py
+++ b/src/spp-ctl/spp_ctl.py
@@ -18,12 +18,12 @@ import spp_webapi
 
 LOG = logging.getLogger(__name__)
 
-
 MSG_SIZE = 4096
 
 # relative path of `cpu_layout.py`
 CPU_LAYOUT_TOOL = 'tools/helpers/cpu_layout.py'
 
+
 class Controller(object):
 
     def __init__(self, host, pri_port, sec_port, api_port):
@@ -143,6 +143,7 @@ class Controller(object):
 
     def _update_procs(self):
         """Remove no existing processes from `self.procs`."""
+
         removed_ids = []
         for idx, proc in self.procs.items():
             if proc.id != spp_proc.ID_PRIMARY:
@@ -168,6 +169,57 @@ class Controller(object):
             procs.append(p)
         return procs
 
+    def get_cpu_usage(self):
+        """Get cpu usage from each of status of SPP processes.
+
+        If process returns invalid message or cannot connect, remove
+        it from `self.procs` as in _update_procs().
+        """
+
+        removed_ids = []
+        cpus = []
+        for idx, proc in self.procs.items():
+            try:
+                # Check the process can be accessed. If not, go
+                # to except block.
+                stat = proc.get_status()
+                if proc.id == spp_proc.ID_PRIMARY:
+                    cpus.append(
+                            {'proc-type': proc.type,
+                                'master-lcore': stat['lcores'][0],
+                                'lcores': stat['lcores']})
+                elif proc.type == 'nfv':
+                    cpus.append(
+                            {'proc-type': proc.type,
+                                'client-id': proc.id,
+                                'master-lcore': stat['master-lcore'],
+                                'lcores': stat['lcores']})
+                elif proc.type in ['vf', 'mirror', 'pcap']:
+                    master_lcore = stat['info']['master-lcore']
+                    lcores = [stat['info']['master-lcore']]
+                    # TODO(yasufum) revise tag name 'core'.
+                    for val in stat['info']['core']:
+                        lcores.append(val['core'])
+                    cpus.append(
+                            {'proc-type': proc.type,
+                                'client-id': proc.id,
+                                'master-lcore': master_lcore,
+                                'lcores': lcores})
+                else:
+                    LOG.debug('No supported proc type: {}'.format(
+                        roc.type))
+
+            except Exception as e:
+                LOG.error("get_cpu_usage: {}".format(e))
+                removed_ids.append(idx)
+
+        for idx in removed_ids:
+            LOG.info("Remove no existing {}:{}.".format(
+                self.procs[idx].type, self.procs[idx].id))
+            del self.procs[idx]
+
+        return cpus
+
     def get_cpu_layout(self):
         """Get cpu layout with helper tool 'cpu_layout.py'."""
 
diff --git a/src/spp-ctl/spp_proc.py b/src/spp-ctl/spp_proc.py
index cdd7b49..fe7ecea 100644
--- a/src/spp-ctl/spp_proc.py
+++ b/src/spp-ctl/spp_proc.py
@@ -284,12 +284,8 @@ class PrimaryProc(SppProc):
     def __init__(self, conn):
         super(PrimaryProc, self).__init__(TYPE_PRIMARY, ID_PRIMARY, conn)
 
-    @staticmethod
-    def _decode_reply(data):
-        return data.strip('\0')
-
     @exec_command
-    def status(self):
+    def get_status(self):
         return "status"
 
     @exec_command
diff --git a/src/spp-ctl/spp_webapi.py b/src/spp-ctl/spp_webapi.py
index 3ad34d0..7f2baad 100644
--- a/src/spp-ctl/spp_webapi.py
+++ b/src/spp-ctl/spp_webapi.py
@@ -53,7 +53,7 @@ class BaseHandler(bottle.Bottle):
             if if_type not in ["phy", "vhost", "ring", "pcap", "nullpmd"]:
                 raise
             int(if_num)
-        except:
+        except Exception:
             raise KeyInvalid('port', port)
 
     def log_url(self):
@@ -152,16 +152,22 @@ class V1Handler(BaseHandler):
 
     def set_route(self):
         self.route('/processes', 'GET', callback=self.get_processes)
-        self.route('/cpus', 'GET', callback=self.get_cpu_layout)
+        self.route('/cpu_usage', 'GET', callback=self.get_cpu_usage)
+        self.route('/cpu_layout', 'GET', callback=self.get_cpu_layout)
 
     def get_processes(self):
         LOG.info("get processes called.")
         return self.ctrl.get_processes()
 
+    def get_cpu_usage(self):
+        LOG.info("get cpu usage called.")
+        return self.ctrl.get_cpu_usage()
+
     def get_cpu_layout(self):
         LOG.info("get cpu layout called.")
         return self.ctrl.get_cpu_layout()
 
+
 class V1VFCommon(object):
     """Define common methods for vf and mirror handler."""
 
@@ -251,7 +257,7 @@ class V1VFHandler(BaseHandler, V1VFCommon):
                     if vlan['operation'] == "add":
                         int(vlan['id'])
                         int(vlan['pcp'])
-                except:
+                except Exception:
                     raise KeyInvalid('vlan', vlan)
 
     def vf_comp_port(self, proc, name, body):
@@ -277,7 +283,7 @@ class V1VFHandler(BaseHandler, V1VFCommon):
     def _validate_mac(self, mac_address):
         try:
             netaddr.EUI(mac_address)
-        except:
+        except Exception:
             raise KeyInvalid('mac_address', mac_address)
 
     def _validate_vf_classifier(self, body):
@@ -296,7 +302,7 @@ class V1VFHandler(BaseHandler, V1VFCommon):
         if body['type'] == "vlan":
             try:
                 int(body['vlan'])
-            except:
+            except Exception:
                 raise KeyInvalid('vlan', body.get('vlan'))
 
     def vf_classifier(self, proc, body):
@@ -466,7 +472,7 @@ class V1PrimaryHandler(BaseHandler):
 
     def get_status(self):
         proc = self._get_proc()
-        return self.convert_status(proc.status())
+        return proc.get_status()
 
     def clear_status(self):
         proc = self._get_proc()
-- 
2.17.1



End of spp Digest, Vol 31, Issue 22
***********************************


From yasufum.o@gmail.com Mon Jun 24 19:45:39 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd103.ddreams.local
 (zssg-mailmd103.ddreams.local [10.160.123.98]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL001YIN8JR160@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 19:45:55 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd103.ddreams.local by
 zssg-mailmd103.ddreams.local (dDREAMS) id <0PTL00Y1QN8JP800@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:45:55 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd103.ddreams.local
 (dDREAMS) with ESMTP id <0PTL007VEN8JCYA0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:45:55 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf105.ddreams.local (Postfix) with ESMTP id 43FF47E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:45:55 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 42D7C8E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:45:55 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 37FA88E6058	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:45:55 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 148708E6052	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:45:54 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf105.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:45:54 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjrFs000311;	Mon,
 24 Jun 2019 19:45:53 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5OAjrAr000310;	Mon, 24 Jun 2019 19:45:53 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5OAjrpW000307	for unknown; Mon,
 24 Jun 2019 19:45:53 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjrCv007978 for
 unknown; Mon, 24 Jun 2019 19:45:53 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjrdD007975; Mon,
 24 Jun 2019 19:45:53 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjrE0008953;	Mon,
 24 Jun 2019 19:45:53 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5OAjrJp008949	for unknown; Mon, 24 Jun 2019 19:45:53 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjqWn023448 for
 unknown; Mon, 24 Jun 2019 19:45:52 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAjqNC023442 for
 unknown; Mon, 24 Jun 2019 19:45:52 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5OAjkat020909	for unknown; Mon,
 24 Jun 2019 19:45:52 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id C92D81BF01;	Mon, 24 Jun 2019 12:45:45 +0200 (CEST)
Received: from mail-pl1-f169.google.com
 (mail-pl1-f169.google.com [209.85.214.169]) by dpdk.org (Postfix)
 with ESMTP id 712082C2B for <spp@dpdk.org>; Mon,
 24 Jun 2019 12:45:44 +0200 (CEST)
Received: by mail-pl1-f169.google.com with SMTP id t7so6645088plr.11 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 03:45:44 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id e6sm12150092pfn.71.2019.06.24.03.45.42
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 03:45:42 -0700 (PDT)
Date: Mon, 24 Jun 2019 19:45:39 +0900
From: yasufum.o@gmail.com
Subject: [spp 04431] [spp] [PATCH] controller: move completion of pri launch
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624104539.25196-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04431
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=rvakY1MHAlV8G5tTzF4SqrqzFDmqDDDZewTD8nGWMak=;
 b=Zhq2ModVEQYoyjb5rWjJ+ET1LZtFmn/U4Z9p7h1nc6nH1WmZGnt+/Ekv9i8nN8Nq16
 cTE3m5g6lK8xXPA0puPK330KCLqGwx7i0yKkJoRYlEtKyiGepPrM/VdS/gJ+75B3Od+G
 ckQ7wAMosM7flFaWk3cznvB93k/ZsgtM09z3AkLyAMLymKEJQIje1d9PfohKv+bP7KWV
 rNKZRzNQMNvewG8Mm368WVtr4fJHvgPNQgZ7eAV/MsmjihGb5JonDBGrUPARYzBbwvpV
 71fNlZliJeF3w0aG6u1ljnpgEIRtnDE44jd+tdGpgzCaWIzun6GyPFYjA7Ml1DKvrsmL vkLg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=rvakY1MHAlV8G5tTzF4SqrqzFDmqDDDZewTD8nGWMak=;
 b=L6lu/umtbXNFIsESuUr/azVoTKNnm7AwD11v81O6ltv/OPdxXCTwgVFhOzxwKFX8nE
 ScfN1Y8I9lA7/1AnFLXlRI2ZHGS/ZQSnV0UsJvYLO3KXC7sdHn3rFZXRyr33gAzSOavg
 fr2sNiXyTDjBHWZdY5625yFCZj2NOaGDD8XxqDM3B3UODAi42v5TQ2KVobY3FwmH6bPM
 gJtlf+nLJshUzL/Z6SgF4Zk9YqdR3vcU3hKHis+B//I7FkbRuVRZ90BAGfXG/rFa2OcI
 1PHM6+5jvMdTk4rRVjwvfwo16LvHuCgDZmelpeBhgquoBaIC8LfoFI/O250gPtcTlHaI TnKQ==
X-Gm-Message-State: APjAAAX4RhL5yvUwJyY0Kc6G2/zSRq11Lfh7eWNQMFr0Byz3+Q+h9j6J
 uI6DIsM4oCq0nv9iAAMIIJHddHUu
X-Google-Smtp-Source:
 APXvYqw0rsM0HvMSqxZzTM2eWl+E/oFf6zjnjhgdCWF4e+f0D7pViyLOs4gt+z3Nc7xdvAXw7OPZcg==
X-Received: by 2002:a17:902:28:: with SMTP id
 37mr78328606pla.188.1561373143375; Mon, 24 Jun 2019 03:45:43 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 184
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move completion of `pri; launch` command defined in
complete() method to out side and add new method _setup_launch_opts()
because it is getting long.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/pri.py | 152 +++++++++++++++++----------------
 1 file changed, 78 insertions(+), 74 deletions(-)

diff --git a/src/controller/commands/pri.py b/src/controller/commands/pri.py
index 6089137..97f8780 100644
--- a/src/controller/commands/pri.py
+++ b/src/controller/commands/pri.py
@@ -155,6 +155,83 @@ class SppPrimary(object):
                     rid=rports['id'], rx=rports['rx'], tx=rports['tx'],
                     rx_drop=rports['rx_drop'], tx_drop=rports['tx_drop']))
 
+    def _setup_launch_opts(self, tokens, cli_config):
+        """Make options for launch cmd from config params."""
+
+        if 'max_secondary' in cli_config.keys():
+            max_secondary = int(cli_config['max_secondary']['val'])
+
+            if (tokens[2] in spp_common.SEC_TYPES) and \
+                    (int(tokens[3])-1 in range(max_secondary)):
+                ptype = tokens[2]
+                sid = tokens[3]
+
+                if ptype == 'nfv':
+                    opt_sid = '-n'
+                else:
+                    opt_sid = '--client-id'
+
+                # Need to replace port from `7777` of spp-ctl to `6666`
+                # of secondary process.
+                server_addr = common.current_server_addr()
+                server_addr = server_addr.replace('7777', '6666')
+
+                # Lcore ID of worker lcore starts from sec ID in
+                # default.
+                lcore_base = int(sid)
+
+                # Define rest of worker lcores from config dynamically.
+                if ptype == 'nfv':  # one worker lcore is enough
+                    if 'sec_nfv_nof_lcores' in cli_config.keys():
+                        tmpkey = 'sec_nfv_nof_lcores'
+                        nof_workers = int(
+                                cli_config[tmpkey]['val'])
+
+                elif ptype == 'vf':
+                    if 'sec_vf_nof_lcores' in cli_config.keys():
+                        nof_workers = int(
+                                cli_config['sec_vf_nof_lcores']['val'])
+
+                elif ptype == 'mirror':  # two worker cores
+                    if 'sec_mirror_nof_lcores' in cli_config.keys():
+                        tmpkey = 'sec_mirror_nof_lcores'
+                        nof_workers = int(
+                                cli_config[tmpkey]['val'])
+
+                elif ptype == 'pcap':  # at least two worker cores
+                    if 'sec_pcap_nof_lcores' in cli_config.keys():
+                        tmpkey = 'sec_pcap_nof_lcores'
+                        nof_workers = int(
+                                cli_config[tmpkey]['val'])
+
+                    if 'sec_pcap_port' in cli_config.keys():
+                        temp = '-c {}'.format(
+                                cli_config['sec_pcap_port']['val'])
+
+                        self.launch_template = '{} {}'.format(
+                            self.launch_template, temp)
+
+                last_core = lcore_base + nof_workers - 1
+
+                # Decide lcore option based on configured number of
+                # lcores.
+                if last_core == lcore_base:
+                    rest_core = '{}'.format(last_core)
+                else:
+                    rest_core = '{}-{}'.format(lcore_base, last_core)
+
+                temp = self._setup_launch_template(
+                        cli_config, self.launch_template)
+                candidates = [temp.format(
+                    wlcores=rest_core, opt_sid=opt_sid, sid=sid,
+                    sec_addr=server_addr)]
+        else:
+            logger.error(
+                    'Error: max_secondary is not defined in config')
+            candidates = []
+
+        return candidates
+
     # TODO(yasufum) add checking for cli_config has keys
     def complete(self, text, line, begidx, endidx, cli_config):
         """Completion for primary process commands.
@@ -191,80 +268,7 @@ class SppPrimary(object):
                     candidates = []
 
             elif len(tokens) == 5 and tokens[1] == 'launch':
-                # TODO(yasufum) move this long completion to method.
-
-                if 'max_secondary' in cli_config.keys():
-                    max_secondary = int(cli_config['max_secondary']['val'])
-
-                    if (tokens[2] in spp_common.SEC_TYPES) and \
-                            (int(tokens[3])-1 in range(max_secondary)):
-                        ptype = tokens[2]
-                        sid = tokens[3]
-
-                        if ptype == 'nfv':
-                            opt_sid = '-n'
-                        else:
-                            opt_sid = '--client-id'
-
-                        # Need to replace port from `7777` of spp-ctl to `6666`
-                        # of secondary process.
-                        server_addr = common.current_server_addr()
-                        server_addr = server_addr.replace('7777', '6666')
-
-                        # Lcore ID of worker lcore starts from sec ID in
-                        # default.
-                        lcore_base = int(sid)
-
-                        # Define rest of worker lcores from config dynamically.
-                        if ptype == 'nfv':  # one worker lcore is enough
-                            if 'sec_nfv_nof_lcores' in cli_config.keys():
-                                tmpkey = 'sec_nfv_nof_lcores'
-                                nof_workers = int(
-                                        cli_config[tmpkey]['val'])
-
-                        elif ptype == 'vf':
-                            if 'sec_vf_nof_lcores' in cli_config.keys():
-                                nof_workers = int(
-                                        cli_config['sec_vf_nof_lcores']['val'])
-
-                        elif ptype == 'mirror':  # two worker cores
-                            if 'sec_mirror_nof_lcores' in cli_config.keys():
-                                tmpkey = 'sec_mirror_nof_lcores'
-                                nof_workers = int(
-                                        cli_config[tmpkey]['val'])
-
-                        elif ptype == 'pcap':  # at least two worker cores
-                            if 'sec_pcap_nof_lcores' in cli_config.keys():
-                                tmpkey = 'sec_pcap_nof_lcores'
-                                nof_workers = int(
-                                        cli_config[tmpkey]['val'])
-
-                            if 'sec_pcap_port' in cli_config.keys():
-                                temp = '-c {}'.format(
-                                        cli_config['sec_pcap_port']['val'])
-
-                                self.launch_template = '{} {}'.format(
-                                    self.launch_template, temp)
-
-                        last_core = lcore_base + nof_workers - 1
-
-                        # Decide lcore option based on configured number of
-                        # lcores.
-                        if last_core == lcore_base:
-                            rest_core = '{}'.format(last_core)
-                        else:
-                            rest_core = '{}-{}'.format(lcore_base, last_core)
-
-                        temp = self._setup_launch_template(
-                                cli_config, self.launch_template)
-                        candidates = [temp.format(
-                            wlcores=rest_core, opt_sid=opt_sid, sid=sid,
-                            sec_addr=server_addr)]
-
-                else:
-                    logger.error(
-                            'Error: max_secondary is not defined in config')
-                    candidates = []
+                candidates = self._setup_launch_opts(tokens, cli_config)
 
         if not text:
             completions = candidates
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 19:45:50 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd105.ddreams.local
 (zssg-mailmd105.ddreams.local [10.160.123.100])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL001ZDN8TR160@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 19:46:05 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd105.ddreams.local by
 zssg-mailmd105.ddreams.local (dDREAMS) id <0PTL00F1AN8T9V00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:46:05 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd105.ddreams.local
 (dDREAMS) with ESMTP id <0PTL01CQFN8T6T60@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:46:05 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf106.ddreams.local (Postfix) with ESMTP id 8AAB37E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:46:05 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 899388E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:46:05 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 7EE0C8E6042	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:46:05 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 28D318E6042	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:46:05 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf106.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:46:05 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAk47O000338;	Mon,
 24 Jun 2019 19:46:04 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5OAk41F000337;	Mon, 24 Jun 2019 19:46:04 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5OAk41m000334	for unknown; Mon,
 24 Jun 2019 19:46:04 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAk42f008022 for
 unknown; Mon, 24 Jun 2019 19:46:04 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAk4p5008019; Mon,
 24 Jun 2019 19:46:04 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAk4f5008967;	Mon,
 24 Jun 2019 19:46:04 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5OAk4EG008963	for unknown; Mon, 24 Jun 2019 19:46:04 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAk3wR023475 for
 unknown; Mon, 24 Jun 2019 19:46:03 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAk3x1023469 for
 unknown; Mon, 24 Jun 2019 19:46:03 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5OAjvcT020936	for unknown; Mon,
 24 Jun 2019 19:46:03 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id D87C01BF01;	Mon, 24 Jun 2019 12:45:56 +0200 (CEST)
Received: from mail-pl1-f175.google.com
 (mail-pl1-f175.google.com [209.85.214.175]) by dpdk.org (Postfix)
 with ESMTP id 7A8FF2C2B for <spp@dpdk.org>; Mon,
 24 Jun 2019 12:45:55 +0200 (CEST)
Received: by mail-pl1-f175.google.com with SMTP id m7so6636807pls.8 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 03:45:55 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id i17sm7345237pgn.71.2019.06.24.03.45.53
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 03:45:54 -0700 (PDT)
Date: Mon, 24 Jun 2019 19:45:50 +0900
From: yasufum.o@gmail.com
Subject: [spp 04432] [spp] [PATCH] controller: suggest empty lcores for launch
 cmd
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624104550.25253-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04432
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=cocnIIoRNnT7SS9AHHJoeXcPXiYt7e2PBEn54nCQzhw=;
 b=qSKx9tcqucGuBzNlzGyyACZ2xl1jVMY71AZZ3uXI0Qdi4OfY4TwiFmAa3mvmTKv7lH
 dDqyqf8MeL3C1GVyHsXKEcxMWn26krR5rZBt2+RoiFQEy2aTfrLRCZ/npDyBg5EFsY5E
 J306GhZ+1+Cma3C3LmSMFCpHLLYsb5+sQuAyq/ShrlgzqxfG1FbfPazo10MWRvmBt+nc
 jVSMEx4ZA3ftNFmVbNZeZ+YKDC//tiGYuFpRNZIh+N/lN3d8dqbdcLfdxk5mjXHN5bUk
 JvHUz5dyoO8VVI0SsTf64JX3P/3D5RstX8+atnEqkfoGBzxuFp9Y0y2BTbhy1QbcJ970 NeAA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=cocnIIoRNnT7SS9AHHJoeXcPXiYt7e2PBEn54nCQzhw=;
 b=mwg5iHmI5mNL24OrP427WIOY0g66yRXgmantWS/SCXDXPl6V3Oqn5ohJ5Ek3UfLATx
 NnQW/+qfjZoevEjgQ29yKgl8ITax0zXOUe5rCfoJTnEntyPRowRk4vKl5oBX+zAEqwl1
 3TzGxWUK+OHf7ozwOXFQKTz/fNHEHhVW/MfxmXMWFISH+qo+nbff1IY/WHiXHA6ObOYz
 OdGj0X5uOHGXcBa3eAij4LiYyMqgMb9bZGqjqf1cnjiGGLxkNcaiA7VxXXrAmF+qw/V9
 w5neTSB3u1J1WmuAYOgy96RwfwqhaxMoO3gZZ2IbFDZy6GkClLrLO9QAwopDSsiLyVKY /fag==
X-Gm-Message-State: APjAAAU1IALhv5OM/yNXUQFMAHHGJlJVogvcsE8qqc1BI+jxuXiYv2ww
 jzWm1r9hB19PGSgFQbJgMht/DFGk
X-Google-Smtp-Source:
 APXvYqwg53h/te+F2imr8xWuOc8lVXniCjkV0un3UvVyga89K271b0Smn3od9cZ/f/HZJDNmBHZ4QQ==
X-Received: by 2002:a17:902:7297:: with SMTP id
 d23mr134370364pll.254.1561373154571; Mon, 24 Jun 2019 03:45:54 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 246
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is for completion of `pri; launch` command to suggest slave
lcores while checking lcore usage. Master lcore and number of slave
lcores are defined as config params, and each of slave lcores are
selected from empty lcores. CPU layout and usage are retrieved via
spp-ctl REST APIs.

This update does not support a case if there are not enough number of
empty lcores yet, for which SPP CLI should show warning or interrupt to
run the command.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/pri.py    | 142 ++++++++++++++++++++++++------
 src/controller/config/default.yml |   4 +-
 2 files changed, 117 insertions(+), 29 deletions(-)

diff --git a/src/controller/commands/pri.py b/src/controller/commands/pri.py
index 97f8780..654b7dd 100644
--- a/src/controller/commands/pri.py
+++ b/src/controller/commands/pri.py
@@ -27,7 +27,7 @@ class SppPrimary(object):
 
         # TODO(yasufum) replace placeholders __XXX__ to {keyword}.
         # Setup template of args for `pri; launch`
-        temp = "-l __BASE_LCORE__,{wlcores} "
+        temp = "-l __MASTER_LCORE__,{slcores} "
         temp = temp + "__MEM__ "
         temp = temp + "-- "
         temp = temp + "{opt_sid} {sid} "  # '-n 1' or '--client-id 1'
@@ -155,6 +155,79 @@ class SppPrimary(object):
                     rid=rports['id'], rx=rports['rx'], tx=rports['tx'],
                     rx_drop=rports['rx_drop'], tx_drop=rports['tx_drop']))
 
+    def _get_empty_lcores(self):
+        """Get lcore usage from spp-ctl for making launch options.
+
+        Return value is a double dimension list of unsed lcores.
+          [[2,3,...], [16,17,...]]
+
+        To get the result, get CPU layout as an list first, then remove
+        used lcores from the list.
+        """
+
+        sockets = []  # A set of CPU sockets.
+        # Get list of CPU layout
+        res = self.spp_ctl_cli.get('cpu_layout')
+        if res is not None:
+            if res.status_code == 200:
+                try:
+                    # Get layout of each of sockets as an array.
+                    # [[0,1,2,3,..., 15], [16,17,18],...]]
+                    socket = []
+                    for sock in res.json():
+                        for ent in sock['cores']:
+                            socket.append(ent['lcores'])
+                    socket.sort()
+                    socket = sum(socket, [])
+                    sockets.append(socket)
+
+                except KeyError as e:
+                    print('Error: {} is not defined!'.format(e))
+
+        # Get list of used lcores.
+        res = self.spp_ctl_cli.get('cpu_usage')
+        if res is not None:
+            if res.status_code == 200:
+                try:
+                    p_master_lcore = None
+                    s_master_lcore = None
+                    p_slave_lcores = []
+                    s_slave_lcores = []
+
+                    cpu_usage = res.json()
+                    for ent in cpu_usage:
+                        if ent['proc-type'] == 'primary':
+                            p_master_lcore = ent['master-lcore']
+                            p_slave_lcores.append(ent['lcores'])
+                        else:
+                            s_master_lcore = ent['master-lcore']
+                            s_slave_lcores.append(ent['lcores'])
+
+                    # Remove duplicated lcores and make them unique.
+                    # sum() is used for flattening two dimension list.
+                    p_slave_lcores = list(set(sum(p_slave_lcores, [])))
+                    s_slave_lcores = list(set(sum(s_slave_lcores, [])))
+
+                    # Remove used lcores from `sockets`.
+                    for socket in sockets:
+                        if p_master_lcore is not None:
+                            if p_master_lcore in socket:
+                                socket.remove(p_master_lcore)
+                        if s_master_lcore is not None:
+                            if s_master_lcore in socket:
+                                socket.remove(s_master_lcore)
+                        for l in p_slave_lcores:
+                            if l in socket:
+                                socket.remove(l)
+                        for l in s_slave_lcores:
+                            if l in socket:
+                                socket.remove(l)
+
+                except KeyError as e:
+                    print('Error: {} is not defined!'.format(e))
+
+        return sockets
+
     def _setup_launch_opts(self, tokens, cli_config):
         """Make options for launch cmd from config params."""
 
@@ -164,8 +237,13 @@ class SppPrimary(object):
             if (tokens[2] in spp_common.SEC_TYPES) and \
                     (int(tokens[3])-1 in range(max_secondary)):
                 ptype = tokens[2]
+
+                # TODO(yasufum) Not accept if given sec ID is already
+                # used.
                 sid = tokens[3]
 
+                # Option of secondary ID is different between spp_nfv
+                # and others.
                 if ptype == 'nfv':
                     opt_sid = '-n'
                 else:
@@ -176,34 +254,27 @@ class SppPrimary(object):
                 server_addr = common.current_server_addr()
                 server_addr = server_addr.replace('7777', '6666')
 
-                # Lcore ID of worker lcore starts from sec ID in
-                # default.
-                lcore_base = int(sid)
-
-                # Define rest of worker lcores from config dynamically.
-                if ptype == 'nfv':  # one worker lcore is enough
+                # Define number of slave lcores and other options
+                # from config.
+                if ptype == 'nfv':  # one slave lcore is enough
                     if 'sec_nfv_nof_lcores' in cli_config.keys():
                         tmpkey = 'sec_nfv_nof_lcores'
-                        nof_workers = int(
+                        nof_slaves = int(
                                 cli_config[tmpkey]['val'])
-
                 elif ptype == 'vf':
                     if 'sec_vf_nof_lcores' in cli_config.keys():
-                        nof_workers = int(
+                        nof_slaves = int(
                                 cli_config['sec_vf_nof_lcores']['val'])
-
-                elif ptype == 'mirror':  # two worker cores
+                elif ptype == 'mirror':  # two slave lcores
                     if 'sec_mirror_nof_lcores' in cli_config.keys():
                         tmpkey = 'sec_mirror_nof_lcores'
-                        nof_workers = int(
+                        nof_slaves = int(
                                 cli_config[tmpkey]['val'])
-
-                elif ptype == 'pcap':  # at least two worker cores
+                elif ptype == 'pcap':  # at least two slave lcores
                     if 'sec_pcap_nof_lcores' in cli_config.keys():
                         tmpkey = 'sec_pcap_nof_lcores'
-                        nof_workers = int(
+                        nof_slaves = int(
                                 cli_config[tmpkey]['val'])
-
                     if 'sec_pcap_port' in cli_config.keys():
                         temp = '-c {}'.format(
                                 cli_config['sec_pcap_port']['val'])
@@ -211,20 +282,37 @@ class SppPrimary(object):
                         self.launch_template = '{} {}'.format(
                             self.launch_template, temp)
 
-                last_core = lcore_base + nof_workers - 1
+                # Get and flatten empty lcores on each of sockets.
+                empty_lcores = self._get_empty_lcores()
+                empty_lcores = sum(empty_lcores, [])
+
+                if 'sec_m_lcore' in cli_config.keys():
+                    m_lcore_id = int(cli_config['sec_m_lcore']['val'])
 
                 # Decide lcore option based on configured number of
                 # lcores.
-                if last_core == lcore_base:
-                    rest_core = '{}'.format(last_core)
-                else:
-                    rest_core = '{}-{}'.format(lcore_base, last_core)
-
+                slave_lcores = []
+                for l in empty_lcores:
+                    # Master lcore ID should be smaller than slaves.
+                    if l > m_lcore_id:
+                        slave_lcores.append(str(l))
+                    # TODO(yasufum) warn if enough number of empty
+                    # lcores cannot be assinged.
+                    if len(slave_lcores) > (nof_slaves - 1):
+                        break
+
+                # TODO(yasufum) make smarter form, for example,
+                # change '1,2,3' to '1-3'.
+                slave_lcores = ','.join(slave_lcores)
+
+                # Replace labels in template with actual params to make
+                # candidate options.
                 temp = self._setup_launch_template(
                         cli_config, self.launch_template)
                 candidates = [temp.format(
-                    wlcores=rest_core, opt_sid=opt_sid, sid=sid,
+                    slcores=slave_lcores, opt_sid=opt_sid, sid=sid,
                     sec_addr=server_addr)]
+
         else:
             logger.error(
                     'Error: max_secondary is not defined in config')
@@ -287,9 +375,9 @@ class SppPrimary(object):
             sec_mem = cli_config['sec_mem']['val']
         template = template.replace('__MEM__', sec_mem)
 
-        if 'sec_base_lcore' in cli_config.keys():
-            sec_base_lcore = cli_config['sec_base_lcore']['val']
-        template = template.replace('__BASE_LCORE__', str(sec_base_lcore))
+        if 'sec_m_lcore' in cli_config.keys():
+            sec_m_lcore = cli_config['sec_m_lcore']['val']
+        template = template.replace('__MASTER_LCORE__', str(sec_m_lcore))
 
         if 'sec_vhost_cli' in cli_config.keys():
             if cli_config['sec_vhost_cli']['val']:
diff --git a/src/controller/config/default.yml b/src/controller/config/default.yml
index 7625451..a746c9a 100644
--- a/src/controller/config/default.yml
+++ b/src/controller/config/default.yml
@@ -13,9 +13,9 @@ topo_size:
 sec_mem:
     val: -m 512
     desc: Mem size
-sec_base_lcore:
+sec_m_lcore:
     val: 1
-    desc: Shared lcore among secondaries
+    desc: Shared master lcore among secondaries
 sec_wait_launch:
     val: 0.5
     desc: Wait for launching secondary process in sec
-- 
2.17.1



From spp-request@dpdk.org Mon Jun 24 19:46:03 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd103.ddreams.local
 (zssg-mailmd103.ddreams.local [10.160.123.98]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL0010BN92R170@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 19:46:14 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd103.ddreams.local by
 zssg-mailmd103.ddreams.local (dDREAMS) id <0PTL00Z06N92CS00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:46:14 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd103.ddreams.local
 (dDREAMS) with ESMTP id <0PTL007Y9N92CYA0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:46:14 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf101.ddreams.local (Postfix) with ESMTP id 1F2317E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:46:14 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 1E0558E6051	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:46:14 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 1323A8E6054	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:46:14 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id BDED68E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:46:13 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf101.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:46:13 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAkDnl000373;	Mon,
 24 Jun 2019 19:46:13 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5OAkDHb000372;	Mon, 24 Jun 2019 19:46:13 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5OAkDcQ000369	for unknown; Mon,
 24 Jun 2019 19:46:13 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAkD4T023549 for
 unknown; Mon, 24 Jun 2019 19:46:13 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAkCV0023545 for
 unknown; Mon, 24 Jun 2019 19:46:13 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5OAk6oc020965	for unknown; Mon,
 24 Jun 2019 19:46:12 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id F1A1E1BED0	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 24 Jun 2019 12:46:05 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 23
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 24 Jun 2019 12:46:03 +0200
Message-id: <mailman.23416.1561373163.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH] controller: move completion of pri launch
      (yasufum.o@gmail.com)
   2. [PATCH] controller: suggest empty lcores for launch cmd
      (yasufum.o@gmail.com)
   3. [PATCH] docs: add API refs for cpu_layout and cpu_usage
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon, 24 Jun 2019 19:45:39 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] controller: move completion of pri launch
Message-ID: <20190624104539.25196-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move completion of `pri; launch` command defined in
complete() method to out side and add new method _setup_launch_opts()
because it is getting long.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/pri.py | 152 +++++++++++++++++----------------
 1 file changed, 78 insertions(+), 74 deletions(-)

diff --git a/src/controller/commands/pri.py b/src/controller/commands/pri.py
index 6089137..97f8780 100644
--- a/src/controller/commands/pri.py
+++ b/src/controller/commands/pri.py
@@ -155,6 +155,83 @@ class SppPrimary(object):
                     rid=rports['id'], rx=rports['rx'], tx=rports['tx'],
                     rx_drop=rports['rx_drop'], tx_drop=rports['tx_drop']))
 
+    def _setup_launch_opts(self, tokens, cli_config):
+        """Make options for launch cmd from config params."""
+
+        if 'max_secondary' in cli_config.keys():
+            max_secondary = int(cli_config['max_secondary']['val'])
+
+            if (tokens[2] in spp_common.SEC_TYPES) and \
+                    (int(tokens[3])-1 in range(max_secondary)):
+                ptype = tokens[2]
+                sid = tokens[3]
+
+                if ptype == 'nfv':
+                    opt_sid = '-n'
+                else:
+                    opt_sid = '--client-id'
+
+                # Need to replace port from `7777` of spp-ctl to `6666`
+                # of secondary process.
+                server_addr = common.current_server_addr()
+                server_addr = server_addr.replace('7777', '6666')
+
+                # Lcore ID of worker lcore starts from sec ID in
+                # default.
+                lcore_base = int(sid)
+
+                # Define rest of worker lcores from config dynamically.
+                if ptype == 'nfv':  # one worker lcore is enough
+                    if 'sec_nfv_nof_lcores' in cli_config.keys():
+                        tmpkey = 'sec_nfv_nof_lcores'
+                        nof_workers = int(
+                                cli_config[tmpkey]['val'])
+
+                elif ptype == 'vf':
+                    if 'sec_vf_nof_lcores' in cli_config.keys():
+                        nof_workers = int(
+                                cli_config['sec_vf_nof_lcores']['val'])
+
+                elif ptype == 'mirror':  # two worker cores
+                    if 'sec_mirror_nof_lcores' in cli_config.keys():
+                        tmpkey = 'sec_mirror_nof_lcores'
+                        nof_workers = int(
+                                cli_config[tmpkey]['val'])
+
+                elif ptype == 'pcap':  # at least two worker cores
+                    if 'sec_pcap_nof_lcores' in cli_config.keys():
+                        tmpkey = 'sec_pcap_nof_lcores'
+                        nof_workers = int(
+                                cli_config[tmpkey]['val'])
+
+                    if 'sec_pcap_port' in cli_config.keys():
+                        temp = '-c {}'.format(
+                                cli_config['sec_pcap_port']['val'])
+
+                        self.launch_template = '{} {}'.format(
+                            self.launch_template, temp)
+
+                last_core = lcore_base + nof_workers - 1
+
+                # Decide lcore option based on configured number of
+                # lcores.
+                if last_core == lcore_base:
+                    rest_core = '{}'.format(last_core)
+                else:
+                    rest_core = '{}-{}'.format(lcore_base, last_core)
+
+                temp = self._setup_launch_template(
+                        cli_config, self.launch_template)
+                candidates = [temp.format(
+                    wlcores=rest_core, opt_sid=opt_sid, sid=sid,
+                    sec_addr=server_addr)]
+        else:
+            logger.error(
+                    'Error: max_secondary is not defined in config')
+            candidates = []
+
+        return candidates
+
     # TODO(yasufum) add checking for cli_config has keys
     def complete(self, text, line, begidx, endidx, cli_config):
         """Completion for primary process commands.
@@ -191,80 +268,7 @@ class SppPrimary(object):
                     candidates = []
 
             elif len(tokens) == 5 and tokens[1] == 'launch':
-                # TODO(yasufum) move this long completion to method.
-
-                if 'max_secondary' in cli_config.keys():
-                    max_secondary = int(cli_config['max_secondary']['val'])
-
-                    if (tokens[2] in spp_common.SEC_TYPES) and \
-                            (int(tokens[3])-1 in range(max_secondary)):
-                        ptype = tokens[2]
-                        sid = tokens[3]
-
-                        if ptype == 'nfv':
-                            opt_sid = '-n'
-                        else:
-                            opt_sid = '--client-id'
-
-                        # Need to replace port from `7777` of spp-ctl to `6666`
-                        # of secondary process.
-                        server_addr = common.current_server_addr()
-                        server_addr = server_addr.replace('7777', '6666')
-
-                        # Lcore ID of worker lcore starts from sec ID in
-                        # default.
-                        lcore_base = int(sid)
-
-                        # Define rest of worker lcores from config dynamically.
-                        if ptype == 'nfv':  # one worker lcore is enough
-                            if 'sec_nfv_nof_lcores' in cli_config.keys():
-                                tmpkey = 'sec_nfv_nof_lcores'
-                                nof_workers = int(
-                                        cli_config[tmpkey]['val'])
-
-                        elif ptype == 'vf':
-                            if 'sec_vf_nof_lcores' in cli_config.keys():
-                                nof_workers = int(
-                                        cli_config['sec_vf_nof_lcores']['val'])
-
-                        elif ptype == 'mirror':  # two worker cores
-                            if 'sec_mirror_nof_lcores' in cli_config.keys():
-                                tmpkey = 'sec_mirror_nof_lcores'
-                                nof_workers = int(
-                                        cli_config[tmpkey]['val'])
-
-                        elif ptype == 'pcap':  # at least two worker cores
-                            if 'sec_pcap_nof_lcores' in cli_config.keys():
-                                tmpkey = 'sec_pcap_nof_lcores'
-                                nof_workers = int(
-                                        cli_config[tmpkey]['val'])
-
-                            if 'sec_pcap_port' in cli_config.keys():
-                                temp = '-c {}'.format(
-                                        cli_config['sec_pcap_port']['val'])
-
-                                self.launch_template = '{} {}'.format(
-                                    self.launch_template, temp)
-
-                        last_core = lcore_base + nof_workers - 1
-
-                        # Decide lcore option based on configured number of
-                        # lcores.
-                        if last_core == lcore_base:
-                            rest_core = '{}'.format(last_core)
-                        else:
-                            rest_core = '{}-{}'.format(lcore_base, last_core)
-
-                        temp = self._setup_launch_template(
-                                cli_config, self.launch_template)
-                        candidates = [temp.format(
-                            wlcores=rest_core, opt_sid=opt_sid, sid=sid,
-                            sec_addr=server_addr)]
-
-                else:
-                    logger.error(
-                            'Error: max_secondary is not defined in config')
-                    candidates = []
+                candidates = self._setup_launch_opts(tokens, cli_config)
 
         if not text:
             completions = candidates
-- 
2.17.1



------------------------------

Message: 2
Date: Mon, 24 Jun 2019 19:45:50 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] controller: suggest empty lcores for launch cmd
Message-ID: <20190624104550.25253-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is for completion of `pri; launch` command to suggest slave
lcores while checking lcore usage. Master lcore and number of slave
lcores are defined as config params, and each of slave lcores are
selected from empty lcores. CPU layout and usage are retrieved via
spp-ctl REST APIs.

This update does not support a case if there are not enough number of
empty lcores yet, for which SPP CLI should show warning or interrupt to
run the command.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/pri.py    | 142 ++++++++++++++++++++++++------
 src/controller/config/default.yml |   4 +-
 2 files changed, 117 insertions(+), 29 deletions(-)

diff --git a/src/controller/commands/pri.py b/src/controller/commands/pri.py
index 97f8780..654b7dd 100644
--- a/src/controller/commands/pri.py
+++ b/src/controller/commands/pri.py
@@ -27,7 +27,7 @@ class SppPrimary(object):
 
         # TODO(yasufum) replace placeholders __XXX__ to {keyword}.
         # Setup template of args for `pri; launch`
-        temp = "-l __BASE_LCORE__,{wlcores} "
+        temp = "-l __MASTER_LCORE__,{slcores} "
         temp = temp + "__MEM__ "
         temp = temp + "-- "
         temp = temp + "{opt_sid} {sid} "  # '-n 1' or '--client-id 1'
@@ -155,6 +155,79 @@ class SppPrimary(object):
                     rid=rports['id'], rx=rports['rx'], tx=rports['tx'],
                     rx_drop=rports['rx_drop'], tx_drop=rports['tx_drop']))
 
+    def _get_empty_lcores(self):
+        """Get lcore usage from spp-ctl for making launch options.
+
+        Return value is a double dimension list of unsed lcores.
+          [[2,3,...], [16,17,...]]
+
+        To get the result, get CPU layout as an list first, then remove
+        used lcores from the list.
+        """
+
+        sockets = []  # A set of CPU sockets.
+        # Get list of CPU layout
+        res = self.spp_ctl_cli.get('cpu_layout')
+        if res is not None:
+            if res.status_code == 200:
+                try:
+                    # Get layout of each of sockets as an array.
+                    # [[0,1,2,3,..., 15], [16,17,18],...]]
+                    socket = []
+                    for sock in res.json():
+                        for ent in sock['cores']:
+                            socket.append(ent['lcores'])
+                    socket.sort()
+                    socket = sum(socket, [])
+                    sockets.append(socket)
+
+                except KeyError as e:
+                    print('Error: {} is not defined!'.format(e))
+
+        # Get list of used lcores.
+        res = self.spp_ctl_cli.get('cpu_usage')
+        if res is not None:
+            if res.status_code == 200:
+                try:
+                    p_master_lcore = None
+                    s_master_lcore = None
+                    p_slave_lcores = []
+                    s_slave_lcores = []
+
+                    cpu_usage = res.json()
+                    for ent in cpu_usage:
+                        if ent['proc-type'] == 'primary':
+                            p_master_lcore = ent['master-lcore']
+                            p_slave_lcores.append(ent['lcores'])
+                        else:
+                            s_master_lcore = ent['master-lcore']
+                            s_slave_lcores.append(ent['lcores'])
+
+                    # Remove duplicated lcores and make them unique.
+                    # sum() is used for flattening two dimension list.
+                    p_slave_lcores = list(set(sum(p_slave_lcores, [])))
+                    s_slave_lcores = list(set(sum(s_slave_lcores, [])))
+
+                    # Remove used lcores from `sockets`.
+                    for socket in sockets:
+                        if p_master_lcore is not None:
+                            if p_master_lcore in socket:
+                                socket.remove(p_master_lcore)
+                        if s_master_lcore is not None:
+                            if s_master_lcore in socket:
+                                socket.remove(s_master_lcore)
+                        for l in p_slave_lcores:
+                            if l in socket:
+                                socket.remove(l)
+                        for l in s_slave_lcores:
+                            if l in socket:
+                                socket.remove(l)
+
+                except KeyError as e:
+                    print('Error: {} is not defined!'.format(e))
+
+        return sockets
+
     def _setup_launch_opts(self, tokens, cli_config):
         """Make options for launch cmd from config params."""
 
@@ -164,8 +237,13 @@ class SppPrimary(object):
             if (tokens[2] in spp_common.SEC_TYPES) and \
                     (int(tokens[3])-1 in range(max_secondary)):
                 ptype = tokens[2]
+
+                # TODO(yasufum) Not accept if given sec ID is already
+                # used.
                 sid = tokens[3]
 
+                # Option of secondary ID is different between spp_nfv
+                # and others.
                 if ptype == 'nfv':
                     opt_sid = '-n'
                 else:
@@ -176,34 +254,27 @@ class SppPrimary(object):
                 server_addr = common.current_server_addr()
                 server_addr = server_addr.replace('7777', '6666')
 
-                # Lcore ID of worker lcore starts from sec ID in
-                # default.
-                lcore_base = int(sid)
-
-                # Define rest of worker lcores from config dynamically.
-                if ptype == 'nfv':  # one worker lcore is enough
+                # Define number of slave lcores and other options
+                # from config.
+                if ptype == 'nfv':  # one slave lcore is enough
                     if 'sec_nfv_nof_lcores' in cli_config.keys():
                         tmpkey = 'sec_nfv_nof_lcores'
-                        nof_workers = int(
+                        nof_slaves = int(
                                 cli_config[tmpkey]['val'])
-
                 elif ptype == 'vf':
                     if 'sec_vf_nof_lcores' in cli_config.keys():
-                        nof_workers = int(
+                        nof_slaves = int(
                                 cli_config['sec_vf_nof_lcores']['val'])
-
-                elif ptype == 'mirror':  # two worker cores
+                elif ptype == 'mirror':  # two slave lcores
                     if 'sec_mirror_nof_lcores' in cli_config.keys():
                         tmpkey = 'sec_mirror_nof_lcores'
-                        nof_workers = int(
+                        nof_slaves = int(
                                 cli_config[tmpkey]['val'])
-
-                elif ptype == 'pcap':  # at least two worker cores
+                elif ptype == 'pcap':  # at least two slave lcores
                     if 'sec_pcap_nof_lcores' in cli_config.keys():
                         tmpkey = 'sec_pcap_nof_lcores'
-                        nof_workers = int(
+                        nof_slaves = int(
                                 cli_config[tmpkey]['val'])
-
                     if 'sec_pcap_port' in cli_config.keys():
                         temp = '-c {}'.format(
                                 cli_config['sec_pcap_port']['val'])
@@ -211,20 +282,37 @@ class SppPrimary(object):
                         self.launch_template = '{} {}'.format(
                             self.launch_template, temp)
 
-                last_core = lcore_base + nof_workers - 1
+                # Get and flatten empty lcores on each of sockets.
+                empty_lcores = self._get_empty_lcores()
+                empty_lcores = sum(empty_lcores, [])
+
+                if 'sec_m_lcore' in cli_config.keys():
+                    m_lcore_id = int(cli_config['sec_m_lcore']['val'])
 
                 # Decide lcore option based on configured number of
                 # lcores.
-                if last_core == lcore_base:
-                    rest_core = '{}'.format(last_core)
-                else:
-                    rest_core = '{}-{}'.format(lcore_base, last_core)
-
+                slave_lcores = []
+                for l in empty_lcores:
+                    # Master lcore ID should be smaller than slaves.
+                    if l > m_lcore_id:
+                        slave_lcores.append(str(l))
+                    # TODO(yasufum) warn if enough number of empty
+                    # lcores cannot be assinged.
+                    if len(slave_lcores) > (nof_slaves - 1):
+                        break
+
+                # TODO(yasufum) make smarter form, for example,
+                # change '1,2,3' to '1-3'.
+                slave_lcores = ','.join(slave_lcores)
+
+                # Replace labels in template with actual params to make
+                # candidate options.
                 temp = self._setup_launch_template(
                         cli_config, self.launch_template)
                 candidates = [temp.format(
-                    wlcores=rest_core, opt_sid=opt_sid, sid=sid,
+                    slcores=slave_lcores, opt_sid=opt_sid, sid=sid,
                     sec_addr=server_addr)]
+
         else:
             logger.error(
                     'Error: max_secondary is not defined in config')
@@ -287,9 +375,9 @@ class SppPrimary(object):
             sec_mem = cli_config['sec_mem']['val']
         template = template.replace('__MEM__', sec_mem)
 
-        if 'sec_base_lcore' in cli_config.keys():
-            sec_base_lcore = cli_config['sec_base_lcore']['val']
-        template = template.replace('__BASE_LCORE__', str(sec_base_lcore))
+        if 'sec_m_lcore' in cli_config.keys():
+            sec_m_lcore = cli_config['sec_m_lcore']['val']
+        template = template.replace('__MASTER_LCORE__', str(sec_m_lcore))
 
         if 'sec_vhost_cli' in cli_config.keys():
             if cli_config['sec_vhost_cli']['val']:
diff --git a/src/controller/config/default.yml b/src/controller/config/default.yml
index 7625451..a746c9a 100644
--- a/src/controller/config/default.yml
+++ b/src/controller/config/default.yml
@@ -13,9 +13,9 @@ topo_size:
 sec_mem:
     val: -m 512
     desc: Mem size
-sec_base_lcore:
+sec_m_lcore:
     val: 1
-    desc: Shared lcore among secondaries
+    desc: Shared master lcore among secondaries
 sec_wait_launch:
     val: 0.5
     desc: Wait for launching secondary process in sec
-- 
2.17.1



------------------------------

Message: 3
Date: Mon, 24 Jun 2019 19:45:58 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] docs: add API refs for cpu_layout and cpu_usage
Message-ID: <20190624104558.25306-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to add REST APIs for cpu_layout and cpu_usage of a server
on which spp-ctl running.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 docs/guides/api_ref/proc_independ.rst | 218 +++++++++++++++++++++++---
 1 file changed, 193 insertions(+), 25 deletions(-)

diff --git a/docs/guides/api_ref/proc_independ.rst b/docs/guides/api_ref/proc_independ.rst
index 52e3002..c6180fa 100644
--- a/docs/guides/api_ref/proc_independ.rst
+++ b/docs/guides/api_ref/proc_independ.rst
@@ -4,49 +4,60 @@
 
 .. _spp_ctl_rest_api_proc_independ:
 
-API Independent of Process Type
-===============================
+Independent of Process Type
+===========================
+
 
 GET /v1/processes
 -----------------
 
-Show the SPP processes connected to the ``spp-ctl``.
+Show SPP processes connected with ``spp-ctl``.
 
-* Normarl response codes: 200
 
+Response
+~~~~~~~~
 
-Request example
-~~~~~~~~~~~~~~~
+An array of dict of processes in which process type and secondary ID are
+defined. So, primary process does not have this ID.
 
-.. code-block:: console
+.. _table_spp_ctl_processes_codes:
 
-    $ curl -X GET -H 'application/json' \
-    http://127.0.0.1:7777/v1/processes
+.. table:: Response code of getting processes.
 
+    +-------+-----------------------+
+    | Value | Description           |
+    |       |                       |
+    +=======+=======================+
+    | 200   | Normal response code. |
+    +-------+-----------------------+
 
-Response
-~~~~~~~~
+.. _table_spp_ctl_processes:
 
-An array of process objects.
+.. table:: Response params of getting processes.
 
-Process objects:
+    +-----------+---------+--------------------------------------------------+
+    | Name      | Type    | Description                                      |
+    |           |         |                                                  |
+    +===========+=========+==================================================+
+    | type      | string  | Process type such as ``primary``, ``nfv`` or so. |
+    +-----------+---------+--------------------------------------------------+
+    | client-id | integer | Secondary ID, so ``primary`` does not have it.   |
+    +-----------+---------+--------------------------------------------------+
 
-.. _table_spp_ctl_processes:
 
-.. table:: Response params of getting processes info.
+Examples
+~~~~~~~~
 
-    +-----------+---------+-----------------------------------------------------------------+
-    | Name      | Type    | Description                                                     |
-    |           |         |                                                                 |
-    +===========+=========+=================================================================+
-    | type      | string  | process type. one of ``primary``, ``nfv`` or ``vf``.            |
-    +-----------+---------+-----------------------------------------------------------------+
-    | client-id | integer | client id. if type is ``primary`` this member does not exist.   |
-    +-----------+---------+-----------------------------------------------------------------+
+Request
+^^^^^^^
 
+.. code-block:: console
 
-Response example
-~~~~~~~~~~~~~~~~
+    $ curl -X GET -H 'application/json' \
+    http://127.0.0.1:7777/v1/processes
+
+Response
+^^^^^^^^
 
 .. code-block:: json
 
@@ -63,3 +74,160 @@ Response example
         "client-id": 2
       }
     ]
+
+
+GET /v1/cpu_layout
+------------------
+
+Show CPU layout of a server on which ``spp-ctl`` running.
+
+
+Response
+~~~~~~~~
+
+An array of CPU socket params which consists of each of physical core ID and
+logical cores if hyper threading is enabled.
+
+.. _table_spp_ctl_cpu_layout_codes:
+
+.. table:: Response code of CPU layout.
+
+    +-------+-----------------------+
+    | Value | Description           |
+    |       |                       |
+    +=======+=======================+
+    | 200   | Normal response code. |
+    +-------+-----------------------+
+
+
+.. _table_spp_ctl_cpu_layout:
+
+.. table:: Response params of getting CPU layout.
+
+    +-----------+---------+-------------------------------+
+    | Name      | Type    | Description                   |
+    |           |         |                               |
+    +===========+=========+===============================+
+    | cores     | array   | Set of cores on a socket.     |
+    +-----------+---------+-------------------------------+
+    | core_id   | integer | ID of physical core.          |
+    +-----------+---------+-------------------------------+
+    | lcores    | array   | Set of IDs of logical cores.  |
+    +-----------+---------+-------------------------------+
+    | socket_id | integer | Socket ID.                    |
+    +-----------+---------+-------------------------------+
+
+Examples
+~~~~~~~~
+
+Request
+^^^^^^^
+
+.. code-block:: console
+
+    $ curl -X GET -H 'application/json' \
+    http://127.0.0.1:7777/v1/cpu_layout
+
+Response
+^^^^^^^^
+
+.. code-block:: json
+
+    [
+      {
+        "cores": [
+          {
+            "core_id": 1,
+            "lcores": [2, 3]
+          },
+          {
+            "core_id": 0,
+            "lcores": [0, 1]
+          },
+          ...
+          {
+            "core_id": 2,
+            "lcores": [4, 5]
+          }
+        ],
+        "socket_id": 0
+      }
+    ]
+
+
+GET /v1/cpu_usage
+------------------
+
+Show CPU usage of a server on which ``spp-ctl`` running.
+
+
+Response
+~~~~~~~~
+
+An array of CPU usage of each of SPP processes. This usage consists of
+two params, master lcore and lcore set including master and slaves.
+
+.. _table_spp_ctl_cpu_layout_codes:
+
+.. table:: Response code of CPU layout.
+
+    +-------+-----------------------+
+    | Value | Description           |
+    |       |                       |
+    +=======+=======================+
+    | 200   | Normal response code. |
+    +-------+-----------------------+
+
+
+.. _table_spp_ctl_cpu_layout:
+
+.. table:: Response params of getting CPU layout.
+
+    +--------------+---------+-----------------------------------------------+
+    | Name         | Type    | Description                                   |
+    |              |         |                                               |
+    +==============+=========+===============================================+
+    | proc-type    | string  | Proc type such as ``primary``, ``nfv`` or so. |
+    +--------------+---------+-----------------------------------------------+
+    | master-lcore | integer | Lcore ID of master.                           |
+    +--------------+---------+-----------------------------------------------+
+    | lcores       | array   | All of Lcore IDs including master and slaves. |
+    +--------------+---------+-----------------------------------------------+
+
+Examples
+~~~~~~~~
+
+Request
+^^^^^^^
+
+.. code-block:: console
+
+    $ curl -X GET -H 'application/json' \
+    http://127.0.0.1:7777/v1/cpu_usage
+
+Response
+^^^^^^^^
+
+.. code-block:: json
+
+    [
+      {
+        "proc-type": "primary",
+        "master-lcore": 0,
+        "lcores": [
+          0
+        ]
+      },
+      {
+        "proc-type": "nfv",
+        "client-id": 2,
+        "master-lcore": 1,
+        "lcores": [1, 2]
+      },
+      {
+        "proc-type": "vf",
+        "client-id": 3,
+        "master-lcore": 1,
+        "lcores": [1, 3, 4, 5]
+      }
+    ]
-- 
2.17.1



End of spp Digest, Vol 31, Issue 23
***********************************


From yasufum.o@gmail.com Mon Jun 24 19:45:58 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL0010DN92R170@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 19:46:14 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTL00Q2SN92Z600@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:46:14 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00907N927Y70@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 19:46:14 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf105.ddreams.local (Postfix) with ESMTP id 317027E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:46:14 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 309158E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:46:14 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 2F1DE8E605D	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:46:14 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 29D3C8E6058	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 19:46:13 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf105.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 19:46:13 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAkCW4000366;	Mon,
 24 Jun 2019 19:46:12 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5OAkCuC000365;	Mon, 24 Jun 2019 19:46:12 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5OAkCLp000362	for unknown; Mon,
 24 Jun 2019 19:46:12 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAkCRn008053 for
 unknown; Mon, 24 Jun 2019 19:46:12 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAkClB008050; Mon,
 24 Jun 2019 19:46:12 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAkCC0008992;	Mon,
 24 Jun 2019 19:46:12 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5OAkC84008988	for unknown; Mon, 24 Jun 2019 19:46:12 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAkB8j023533 for
 unknown; Mon, 24 Jun 2019 19:46:12 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5OAkBS5023526 for
 unknown; Mon, 24 Jun 2019 19:46:11 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5OAk5N1020959	for unknown; Mon,
 24 Jun 2019 19:46:11 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id E71FB1BED8;	Mon, 24 Jun 2019 12:46:04 +0200 (CEST)
Received: from mail-pf1-f196.google.com
 (mail-pf1-f196.google.com [209.85.210.196]) by dpdk.org (Postfix)
 with ESMTP id 68C892AB for <spp@dpdk.org>; Mon,
 24 Jun 2019 12:46:03 +0200 (CEST)
Received: by mail-pf1-f196.google.com with SMTP id r1so7266207pfq.12 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 03:46:03 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id k19sm4470865pgl.42.2019.06.24.03.46.01
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 03:46:02 -0700 (PDT)
Date: Mon, 24 Jun 2019 19:45:58 +0900
From: yasufum.o@gmail.com
Subject: [spp 04433] [spp] [PATCH] docs: add API refs for cpu_layout and
 cpu_usage
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624104558.25306-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04433
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=kkhh6+SrPZgmlllABDkUyznSdyqL3hIJGaPrkWUY5Fg=;
 b=m0oRuBKs7JYwD0vfW9n2OUlLxAIQbS4gBi7AsIpFJoOErUy8Ly+u0bZaJpBGTYaFxj
 ZgMQixGGRzRY/8dZbRZfZXQWO613DTB5iLeAeT4+2VW+7qYB/swZdGkFFZzyqA/pYkGe
 wAe7sIFweatBghtCQ8m/wZlpwcoMut8fl1TVG/q6Mt06exDw+RYJo1gH6KIiLHe3uKLz
 XXW6FQS51GN+Atf/B9d1PQsKM5J3ul3br9pUrtAUnkqK2cJcqRAeyphUp81MYaXzQ7RR
 Qk9Xkyp6t/Yyv3tQldLWmiMIvdR3B3hl9Y+5RJfhq+a+DRfqI1pKWbhpWs8ckZol3rZh NCHQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=kkhh6+SrPZgmlllABDkUyznSdyqL3hIJGaPrkWUY5Fg=;
 b=IsJ0Ht+pMuz37F/yEFwCefoihsKGIVi6TG1+viru/LrfQ++nV3rXrdbyEKqynirgfM
 J9OLRTL4idpkLF21FVWfE2WVU9lofEuwAlKp4RdRDNFyeiNkV7oL8h5RctdJmWCNl193
 W/F2+pgVs2AvhFLumzyeC1oBcU2YJc10c2qyMPYNKB7ztZbLt81CKSVXQcrwiuAUyk+i
 uIABZW/ROFrzsSKaNWUXhPVTle+OuU2EV5zgbTwHO4EzEmKxSkT0aW4j08yP5MO7CmTa
 dVDZxDw3JxSKFSPm+veAEK761fUp5IC7fbcDMc7ospw5J9PnyBxhXh0PofYcZqyN6+lp 9mmA==
X-Gm-Message-State: APjAAAU5A3+iJedYeTbaDcDV+juBpAYpWRmCHuTXByMDprploUWqhLvm
 PMDakvrhv047nc+PfAQAaBPqbn4k
X-Google-Smtp-Source:
 APXvYqxQEyL4Gs8JOEWc+21IsVYW4aylexAto5+/fPQb4OpvwIWcU/0Dy/5q8IFBhiy0JdqO50LXBw==
X-Received: by 2002:a65:4841:: with SMTP id i1mr32768673pgs.37.1561373162411;
 Mon, 24 Jun 2019 03:46:02 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 264
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to add REST APIs for cpu_layout and cpu_usage of a server
on which spp-ctl running.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 docs/guides/api_ref/proc_independ.rst | 218 +++++++++++++++++++++++---
 1 file changed, 193 insertions(+), 25 deletions(-)

diff --git a/docs/guides/api_ref/proc_independ.rst b/docs/guides/api_ref/proc_independ.rst
index 52e3002..c6180fa 100644
--- a/docs/guides/api_ref/proc_independ.rst
+++ b/docs/guides/api_ref/proc_independ.rst
@@ -4,49 +4,60 @@
 
 .. _spp_ctl_rest_api_proc_independ:
 
-API Independent of Process Type
-===============================
+Independent of Process Type
+===========================
+
 
 GET /v1/processes
 -----------------
 
-Show the SPP processes connected to the ``spp-ctl``.
+Show SPP processes connected with ``spp-ctl``.
 
-* Normarl response codes: 200
 
+Response
+~~~~~~~~
 
-Request example
-~~~~~~~~~~~~~~~
+An array of dict of processes in which process type and secondary ID are
+defined. So, primary process does not have this ID.
 
-.. code-block:: console
+.. _table_spp_ctl_processes_codes:
 
-    $ curl -X GET -H 'application/json' \
-    http://127.0.0.1:7777/v1/processes
+.. table:: Response code of getting processes.
 
+    +-------+-----------------------+
+    | Value | Description           |
+    |       |                       |
+    +=======+=======================+
+    | 200   | Normal response code. |
+    +-------+-----------------------+
 
-Response
-~~~~~~~~
+.. _table_spp_ctl_processes:
 
-An array of process objects.
+.. table:: Response params of getting processes.
 
-Process objects:
+    +-----------+---------+--------------------------------------------------+
+    | Name      | Type    | Description                                      |
+    |           |         |                                                  |
+    +===========+=========+==================================================+
+    | type      | string  | Process type such as ``primary``, ``nfv`` or so. |
+    +-----------+---------+--------------------------------------------------+
+    | client-id | integer | Secondary ID, so ``primary`` does not have it.   |
+    +-----------+---------+--------------------------------------------------+
 
-.. _table_spp_ctl_processes:
 
-.. table:: Response params of getting processes info.
+Examples
+~~~~~~~~
 
-    +-----------+---------+-----------------------------------------------------------------+
-    | Name      | Type    | Description                                                     |
-    |           |         |                                                                 |
-    +===========+=========+=================================================================+
-    | type      | string  | process type. one of ``primary``, ``nfv`` or ``vf``.            |
-    +-----------+---------+-----------------------------------------------------------------+
-    | client-id | integer | client id. if type is ``primary`` this member does not exist.   |
-    +-----------+---------+-----------------------------------------------------------------+
+Request
+^^^^^^^
 
+.. code-block:: console
 
-Response example
-~~~~~~~~~~~~~~~~
+    $ curl -X GET -H 'application/json' \
+    http://127.0.0.1:7777/v1/processes
+
+Response
+^^^^^^^^
 
 .. code-block:: json
 
@@ -63,3 +74,160 @@ Response example
         "client-id": 2
       }
     ]
+
+
+GET /v1/cpu_layout
+------------------
+
+Show CPU layout of a server on which ``spp-ctl`` running.
+
+
+Response
+~~~~~~~~
+
+An array of CPU socket params which consists of each of physical core ID and
+logical cores if hyper threading is enabled.
+
+.. _table_spp_ctl_cpu_layout_codes:
+
+.. table:: Response code of CPU layout.
+
+    +-------+-----------------------+
+    | Value | Description           |
+    |       |                       |
+    +=======+=======================+
+    | 200   | Normal response code. |
+    +-------+-----------------------+
+
+
+.. _table_spp_ctl_cpu_layout:
+
+.. table:: Response params of getting CPU layout.
+
+    +-----------+---------+-------------------------------+
+    | Name      | Type    | Description                   |
+    |           |         |                               |
+    +===========+=========+===============================+
+    | cores     | array   | Set of cores on a socket.     |
+    +-----------+---------+-------------------------------+
+    | core_id   | integer | ID of physical core.          |
+    +-----------+---------+-------------------------------+
+    | lcores    | array   | Set of IDs of logical cores.  |
+    +-----------+---------+-------------------------------+
+    | socket_id | integer | Socket ID.                    |
+    +-----------+---------+-------------------------------+
+
+Examples
+~~~~~~~~
+
+Request
+^^^^^^^
+
+.. code-block:: console
+
+    $ curl -X GET -H 'application/json' \
+    http://127.0.0.1:7777/v1/cpu_layout
+
+Response
+^^^^^^^^
+
+.. code-block:: json
+
+    [
+      {
+        "cores": [
+          {
+            "core_id": 1,
+            "lcores": [2, 3]
+          },
+          {
+            "core_id": 0,
+            "lcores": [0, 1]
+          },
+          ...
+          {
+            "core_id": 2,
+            "lcores": [4, 5]
+          }
+        ],
+        "socket_id": 0
+      }
+    ]
+
+
+GET /v1/cpu_usage
+------------------
+
+Show CPU usage of a server on which ``spp-ctl`` running.
+
+
+Response
+~~~~~~~~
+
+An array of CPU usage of each of SPP processes. This usage consists of
+two params, master lcore and lcore set including master and slaves.
+
+.. _table_spp_ctl_cpu_layout_codes:
+
+.. table:: Response code of CPU layout.
+
+    +-------+-----------------------+
+    | Value | Description           |
+    |       |                       |
+    +=======+=======================+
+    | 200   | Normal response code. |
+    +-------+-----------------------+
+
+
+.. _table_spp_ctl_cpu_layout:
+
+.. table:: Response params of getting CPU layout.
+
+    +--------------+---------+-----------------------------------------------+
+    | Name         | Type    | Description                                   |
+    |              |         |                                               |
+    +==============+=========+===============================================+
+    | proc-type    | string  | Proc type such as ``primary``, ``nfv`` or so. |
+    +--------------+---------+-----------------------------------------------+
+    | master-lcore | integer | Lcore ID of master.                           |
+    +--------------+---------+-----------------------------------------------+
+    | lcores       | array   | All of Lcore IDs including master and slaves. |
+    +--------------+---------+-----------------------------------------------+
+
+Examples
+~~~~~~~~
+
+Request
+^^^^^^^
+
+.. code-block:: console
+
+    $ curl -X GET -H 'application/json' \
+    http://127.0.0.1:7777/v1/cpu_usage
+
+Response
+^^^^^^^^
+
+.. code-block:: json
+
+    [
+      {
+        "proc-type": "primary",
+        "master-lcore": 0,
+        "lcores": [
+          0
+        ]
+      },
+      {
+        "proc-type": "nfv",
+        "client-id": 2,
+        "master-lcore": 1,
+        "lcores": [1, 2]
+      },
+      {
+        "proc-type": "vf",
+        "client-id": 3,
+        "master-lcore": 1,
+        "lcores": [1, 3, 4, 5]
+      }
+    ]
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 15:21:22 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd105.ddreams.local
 (zssg-mailmd105.ddreams.local [10.160.123.100])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL01558B071J50@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 15:21:43 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd105.ddreams.local by
 zssg-mailmd105.ddreams.local (dDREAMS) id <0PTL0101AB072Y00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 15:21:43 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd105.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00HTHB076JB0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 15:21:43 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id ADB397E603B	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 15:21:43 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id ACB118E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 15:21:43 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id AB6078E6060	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 15:21:43 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 6BAEF8E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 15:21:42 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 15:21:42 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6LguY004704;	Mon,
 24 Jun 2019 15:21:42 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O6LgZn004703;	Mon, 24 Jun 2019 15:21:42 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O6Lgw1004700	for unknown; Mon,
 24 Jun 2019 15:21:42 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6Lfko029563 for
 unknown; Mon, 24 Jun 2019 15:21:41 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6LfF1029559; Mon,
 24 Jun 2019 15:21:41 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6Lfi8010604;	Mon,
 24 Jun 2019 15:21:41 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O6LflS010600	for unknown; Mon, 24 Jun 2019 15:21:41 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6LffA016629 for
 unknown; Mon, 24 Jun 2019 15:21:41 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6Lf3i016623 for
 unknown; Mon, 24 Jun 2019 15:21:41 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O6LYFG015093	for unknown; Mon,
 24 Jun 2019 15:21:40 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id D064D1BF4B;	Mon, 24 Jun 2019 08:21:33 +0200 (CEST)
Received: from mail-pg1-f196.google.com
 (mail-pg1-f196.google.com [209.85.215.196]) by dpdk.org (Postfix)
 with ESMTP id 5C5031BF03 for <spp@dpdk.org>; Mon,
 24 Jun 2019 08:21:32 +0200 (CEST)
Received: by mail-pg1-f196.google.com with SMTP id z19so3576540pgl.12 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 23:21:32 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id u20sm9832860pfm.145.2019.06.23.23.21.30
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 23:21:31 -0700 (PDT)
Date: Mon, 24 Jun 2019 15:21:22 +0900
From: yasufum.o@gmail.com
Subject: [spp 04386] [spp] [PATCH] shared/sec: fix comment of order of port
 ability
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624062122.22399-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04386
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=8qgRKQDS9z1UwKtrAr9HufkkHwmAmt4xBHZhiv2pEVU=;
 b=fKol+dAeYXUZ1c6TZP1XhbaD3g83l72OTT+HikWu/DJ0NMfHbfdZQYoKxymWHi3LIH
 rHI/IwRzmsboqtONqWzvUWk2cjDZ4uJnf0cFpZnMNt2wUJ1yn/KaFvkSlpLQjW05/AfA
 /wTUczZ/kwqe7qEGBNlzrBZSkr8k93zGdJ5bmi+EyFemdEV+7pzmDI+NCQ8DtAZU1NcJ
 VgC5oDaRHykHAJ2doQElX6haZYvhceqAo1E0jBcEIQnDhgddwhusZkpHV1syx7LeGN5d
 kZYTZM7sny04ARj7MZZ7uWtTC8Eh9jPKy12hZcVbcA4YPSdlWyq68Gk1cw88zbdHu7Ki rOYQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=8qgRKQDS9z1UwKtrAr9HufkkHwmAmt4xBHZhiv2pEVU=;
 b=tSQyZC3Xo4OVvmiFrDQkPvn8GxdI0BXyg2ltr8VuSz2DCP2SmjNt65lq2GijEmAx2P
 7GOb9djJ28FCYJWtGFFrZTmZjgfvamCN40Su9gxkUNUqmbb5TCBPLUXlbKgH9eKHPGBG
 AT+CVkrzNPqotamsrtfXsZSH502S2cqQDRUkMSqse4VEsRtYcZFZr0xVFOqIKlNxR8jv
 gC4Or0P3p1q/1CL3S96arTHuNmRHiHbZQLV87z31d449cFSLotIZQVNi3ShW32+8XUz/
 7w0Aircoi0jcd0iQ1uwK0jHmVGyPOCqjrLLwMwnzB743gU3e6kiqdIyuuoK4+VEsnr6L y+nw==
X-Gm-Message-State: APjAAAUZ3qR09eM6B1Oou24VcH4R1EZmnK0g/5ErEzYu5ExrQXcFStq4
 /dYrb027C8e963jDLnEv8SziCcNJ
X-Google-Smtp-Source:
 APXvYqwM8nP068b2OShJUQCduCh15s8qp+U6Cv4Had+ojKBUtnnMocaQ5sGZ2lQEzHQ2dPkw3KQghQ==
X-Received: by 2002:a17:90a:26a1:: with SMTP id
 m30mr23281808pje.59.1561357291461; Sun, 23 Jun 2019 23:21:31 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 28
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

The order of members of enum `sppwk_port_abl_ops` should be the same as
`PORT_ABILITY_STAT_LIST` and it is described as comment, but the name of
enum is different. This update is to correct the name to
`sppwk_port_abl_ops`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/shared/secondary/spp_worker_th/cmd_res_formatter.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index 21024b9..9c0c873 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -35,7 +35,7 @@ const char *SPPWK_PROC_TYPE_LIST[] = {
 
 /**
  * List of port abilities. The order of items should be same as the order of
- * enum `spp_port_ability_type` in spp_vf.h.
+ * enum `sppwk_port_abl_ops` in spp_vf.h.
  */
 const char *PORT_ABILITY_STAT_LIST[] = {
 	"none",
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 15:21:37 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd106.ddreams.local
 (zssg-mailmd106.ddreams.local [10.160.123.101])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL0158QB0K1J50@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 15:21:56 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd106.ddreams.local by
 zssg-mailmd106.ddreams.local (dDREAMS) id <0PTL00I08B0KS500@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 15:21:56 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd106.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00C7RB0K5R40@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 15:21:56 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id 180A17E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 15:21:56 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 163108E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 15:21:56 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 0AAAF8E6056	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 15:21:56 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 709FA8E6058	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 15:21:55 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 15:21:55 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6Lt4p004780;	Mon,
 24 Jun 2019 15:21:55 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O6Lt4R004779;	Mon, 24 Jun 2019 15:21:55 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O6LtHt004776	for unknown; Mon,
 24 Jun 2019 15:21:55 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6LsXM029661 for
 unknown; Mon, 24 Jun 2019 15:21:54 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6Lsg3029658; Mon,
 24 Jun 2019 15:21:54 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6LseS010647;	Mon,
 24 Jun 2019 15:21:54 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O6LslX010643	for unknown; Mon, 24 Jun 2019 15:21:54 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6Ls7E016677 for
 unknown; Mon, 24 Jun 2019 15:21:54 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6Ls4i016674 for
 unknown; Mon, 24 Jun 2019 15:21:54 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O6LlSW015126	for unknown; Mon,
 24 Jun 2019 15:21:53 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id E8BBE1BF4E;	Mon, 24 Jun 2019 08:21:46 +0200 (CEST)
Received: from mail-pg1-f175.google.com
 (mail-pg1-f175.google.com [209.85.215.175]) by dpdk.org (Postfix)
 with ESMTP id 7E0F91BF03 for <spp@dpdk.org>; Mon,
 24 Jun 2019 08:21:45 +0200 (CEST)
Received: by mail-pg1-f175.google.com with SMTP id n2so6515318pgp.11 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 23:21:45 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id o32sm2845696pje.9.2019.06.23.23.21.42
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 23:21:43 -0700 (PDT)
Date: Mon, 24 Jun 2019 15:21:37 +0900
From: yasufum.o@gmail.com
Subject: [spp 04387] [spp] [PATCH] shared/sec: move exec_one_cmd from shared dir
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624062137.22452-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04387
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=RPxTa5Ng6c/I9iI6IjvMCNp0JJr5fJFHsYutXjpDvK4=;
 b=EyZrf9d8MRsQ46ex4H47MSJs48UARJMruu1SEQ5NupxBGvqI6FKL0J0acxZ2kx9Er+
 RqETyy2PnB2O+uvMMsKsuUoEQl+3s549OixDOyMbGdm1YZVSG2cinlycrvxXPcaB1Bwt
 SDDDeviW7FFHfOAK9cCl0W8mO1yA//IwMtL3r66jDB4xU6FZ/30GoRPw6c7aMCrTPS82
 9/EJ9SvdS3HxVDIqCHzsGBzqV4f4Rl48vT+vpkjYSHcGttXoRD+DkRpajif/r7D2Wit+
 dDZZzX4/rK6JT9qPFuUqQcW2csM5fOyzMllZh68Bix2qd5X31NBr/ZRUbNuLEBCcVfy4 xO9Q==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=RPxTa5Ng6c/I9iI6IjvMCNp0JJr5fJFHsYutXjpDvK4=;
 b=gGXTMBmTcqpOfeFIrVqJcRpky9KDuB4PUkZ4MdIJRJ59i8p9Vf1Pirwj73gfi53717
 fAmMSbR5IeEOIlx+Ky1goM0USKbGnxt8N7Md4twwoKrfRGh2kFhvnTszX2HmLuuxFCsY
 TBUXjqQ6kR7OyFaebT3coayGlKKqTlvrP/bh0+WeM6yt0q+Y8L2JfSgU3DL3dkMhZ0hf
 mkw/Zku/QoRQWzTZD/MuZ4YIRiE7fBBGLAw4ctjBJ8yL15RdNevcdY2WaRDx2vzGI+Lq
 QdmXSiuDGbaCnOQfgPQOau7QikUJhxA3pY57XB82a/tkS5oRKJXdRuevjM0wmpIvjclM FVMw==
X-Gm-Message-State: APjAAAXdC3XaPomXO17Pu21ViQYW8I1/mI3Gc23XykadgiC0ZH/gKByt
 BOqNqEvuja+9tC2QYdfuydgZ8CNj
X-Google-Smtp-Source:
 APXvYqyiZCXwelkeKo8gJ3eZwIe+F64SfOk4siY9v1rdz7omggm8Kr6MN4iDvPFFhH2tAlMtSHkzCg==
X-Received: by 2002:a17:90a:cf0d:: with SMTP id
 h13mr22764727pju.63.1561357304116; Sun, 23 Jun 2019 23:21:44 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 1249
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

exec_one_cmd() and functions called in it are defined in shared
directory, but including worker type specific code.

This update is to move these functions to under each of `src/vf` and
`src/mirror` dirs. Each exec_one_cmd() is defined under these
dirs and called from shared function exec_cmds() in `cmd_runner.c`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/Makefile                           |   2 +-
 src/mirror/mir_cmd_runner.c                   | 288 ++++++++++++
 .../secondary/spp_worker_th/cmd_runner.c      | 413 +-----------------
 .../secondary/spp_worker_th/cmd_runner.h      |   4 +
 .../secondary/spp_worker_th/mirror_deps.h     |   3 +
 src/shared/secondary/spp_worker_th/vf_deps.h  |   3 +
 src/vf/Makefile                               |   3 +-
 src/vf/vf_cmd_runner.c                        | 411 +++++++++++++++++
 8 files changed, 713 insertions(+), 414 deletions(-)
 create mode 100644 src/mirror/mir_cmd_runner.c
 create mode 100644 src/vf/vf_cmd_runner.c

diff --git a/src/mirror/Makefile b/src/mirror/Makefile
index 7e666f5..f584fd1 100644
--- a/src/mirror/Makefile
+++ b/src/mirror/Makefile
@@ -15,7 +15,7 @@ SPP_SEC_DIR = ../shared/secondary
 SPP_WKT_DIR = ../shared/secondary/spp_worker_th
 
 # all source are stored in SRCS-y
-SRCS-y := spp_mirror.c
+SRCS-y := spp_mirror.c mir_cmd_runner.c
 SRCS-y += ../shared/common.c
 SRCS-y += $(SPP_SEC_DIR)/utils.c $(SPP_SEC_DIR)/add_port.c
 SRCS-y += $(SPP_SEC_DIR)/json_helper.c
diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
new file mode 100644
index 0000000..5731628
--- /dev/null
+++ b/src/mirror/mir_cmd_runner.c
@@ -0,0 +1,288 @@
+/* SPDX-License-Identifier: BSD-3-Clause
+ * Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
+ */
+
+#include "shared/secondary/return_codes.h"
+#include "shared/secondary/spp_worker_th/cmd_parser.h"
+#include "shared/secondary/spp_worker_th/cmd_runner.h"
+#include "shared/secondary/spp_worker_th/mirror_deps.h"
+
+#define RTE_LOGTYPE_MIR_CMD_RUNNER RTE_LOGTYPE_USER1
+
+/* Assign worker thread or remove on specified lcore. */
+/* TODO(yasufum) revise func name for removing the term `component`. */
+static int
+update_comp(enum sppwk_action wk_action, const char *name,
+		unsigned int lcore_id, enum sppwk_worker_type wk_type)
+{
+	int ret;
+	int ret_del;
+	int comp_lcore_id = 0;
+	unsigned int tmp_lcore_id = 0;
+	struct sppwk_comp_info *comp_info = NULL;
+	/* TODO(yasufum) revise `core` to be more specific. */
+	struct core_info *core = NULL;
+	struct core_mng_info *info = NULL;
+	struct sppwk_comp_info *comp_info_base = NULL;
+	/* TODO(yasufum) revise `core_info` which is same as struct name. */
+	struct core_mng_info *core_info = NULL;
+	int *change_core = NULL;
+	int *change_component = NULL;
+
+	sppwk_get_mng_data(NULL, NULL, &comp_info_base, &core_info,
+				&change_core, &change_component, NULL);
+
+	switch (wk_action) {
+	case SPPWK_ACT_START:
+		info = (core_info + lcore_id);
+		if (info->status == SPP_CORE_UNUSE) {
+			RTE_LOG(ERR, MIR_CMD_RUNNER, "Core %d is not available because "
+				"it is in SPP_CORE_UNUSE state.\n", lcore_id);
+			return SPP_RET_NG;
+		}
+
+		comp_lcore_id = sppwk_get_lcore_id(name);
+		if (comp_lcore_id >= 0) {
+			RTE_LOG(ERR, MIR_CMD_RUNNER, "Component name '%s' is already "
+				"used.\n", name);
+			return SPP_RET_NG;
+		}
+
+		comp_lcore_id = get_free_lcore_id();
+		if (comp_lcore_id < 0) {
+			RTE_LOG(ERR, MIR_CMD_RUNNER, "Cannot assign component over the "
+				"maximum number.\n");
+			return SPP_RET_NG;
+		}
+
+		core = &info->core[info->upd_index];
+
+		comp_info = (comp_info_base + comp_lcore_id);
+		memset(comp_info, 0x00, sizeof(struct sppwk_comp_info));
+		strcpy(comp_info->name, name);
+		comp_info->wk_type = wk_type;
+		comp_info->lcore_id = lcore_id;
+		comp_info->comp_id = comp_lcore_id;
+
+		core->id[core->num] = comp_lcore_id;
+		core->num++;
+		ret = SPP_RET_OK;
+		tmp_lcore_id = lcore_id;
+		*(change_component + comp_lcore_id) = 1;
+		break;
+
+	case SPPWK_ACT_STOP:
+		comp_lcore_id = sppwk_get_lcore_id(name);
+		if (comp_lcore_id < 0)
+			return SPP_RET_OK;
+
+		comp_info = (comp_info_base + comp_lcore_id);
+		tmp_lcore_id = comp_info->lcore_id;
+		memset(comp_info, 0x00, sizeof(struct sppwk_comp_info));
+
+		info = (core_info + tmp_lcore_id);
+		core = &info->core[info->upd_index];
+
+		/* The latest lcore is released if worker thread is stopped. */
+		ret_del = del_comp_info(comp_lcore_id, core->num, core->id);
+		if (ret_del >= 0)
+			core->num--;
+
+		ret = SPP_RET_OK;
+		*(change_component + comp_lcore_id) = 0;
+		break;
+
+	default:  /* Unexpected case. */
+		ret = SPP_RET_NG;
+		break;
+	}
+
+	*(change_core + tmp_lcore_id) = 1;
+	return ret;
+}
+
+/* Check if over the maximum num of rx and tx ports of component. */
+static int
+check_mir_port_count(enum spp_port_rxtx rxtx, int num_rx, int num_tx)
+{
+	RTE_LOG(INFO, MIR_CMD_RUNNER, "port count, port_type=%d,"
+				" rx=%d, tx=%d\n", rxtx, num_rx, num_tx);
+	if (rxtx == SPP_PORT_RXTX_RX)
+		num_rx++;
+	else
+		num_tx++;
+	/* Add rx or tx port appointed in port_type. */
+	RTE_LOG(INFO, MIR_CMD_RUNNER, "Num of ports after count up,"
+				" port_type=%d, rx=%d, tx=%d\n",
+				rxtx, num_rx, num_tx);
+	if (num_rx > 1 || num_tx > 2)
+		return SPP_RET_NG;
+
+	return SPP_RET_OK;
+}
+
+/* Port add or del to execute it */
+static int
+update_port(enum sppwk_action wk_action,
+		const struct sppwk_port_idx *port,
+		enum spp_port_rxtx rxtx,
+		const char *name,
+		const struct spp_port_ability *ability)
+{
+	int ret = SPP_RET_NG;
+	int port_idx;
+	int ret_del = -1;
+	int comp_lcore_id = 0;
+	int cnt = 0;
+	struct sppwk_comp_info *comp_info = NULL;
+	struct sppwk_port_info *port_info = NULL;
+	int *nof_ports = NULL;
+	struct sppwk_port_info **ports = NULL;
+	struct sppwk_comp_info *comp_info_base = NULL;
+	int *change_component = NULL;
+
+	comp_lcore_id = sppwk_get_lcore_id(name);
+	if (comp_lcore_id < 0) {
+		RTE_LOG(ERR, MIR_CMD_RUNNER, "Unknown component by port command. "
+				"(component = %s)\n", name);
+		return SPP_RET_NG;
+	}
+	sppwk_get_mng_data(NULL, NULL,
+			&comp_info_base, NULL, NULL, &change_component, NULL);
+	comp_info = (comp_info_base + comp_lcore_id);
+	port_info = get_sppwk_port(port->iface_type, port->iface_no);
+	if (rxtx == SPP_PORT_RXTX_RX) {
+		nof_ports = &comp_info->nof_rx;
+		ports = comp_info->rx_ports;
+	} else {
+		nof_ports = &comp_info->nof_tx;
+		ports = comp_info->tx_ports;
+	}
+
+	switch (wk_action) {
+	case SPPWK_ACT_ADD:
+		/* Check if over the maximum num of ports of component. */
+		if (check_mir_port_count(rxtx, comp_info->nof_rx,
+				comp_info->nof_tx) != SPP_RET_OK)
+			return SPP_RET_NG;
+
+		/* Check if the port_info is included in array `ports`. */
+		port_idx = get_idx_port_info(port_info, *nof_ports, ports);
+		if (port_idx >= SPP_RET_OK) {
+			/* registered */
+			/* TODO(yasufum) confirm it is needed for spp_mirror. */
+			if (ability->ops == SPPWK_PORT_ABL_OPS_ADD_VLANTAG) {
+				while ((cnt < SPP_PORT_ABILITY_MAX) &&
+					    (port_info->ability[cnt].ops !=
+					    SPPWK_PORT_ABL_OPS_ADD_VLANTAG))
+					cnt++;
+				if (cnt >= SPP_PORT_ABILITY_MAX) {
+					RTE_LOG(ERR, MIR_CMD_RUNNER, "update VLAN tag "
+						"Non-registratio\n");
+					return SPP_RET_NG;
+				}
+				memcpy(&port_info->ability[cnt], ability,
+					sizeof(struct spp_port_ability));
+
+				ret = SPP_RET_OK;
+				break;
+			}
+			return SPP_RET_OK;
+		}
+
+		if (*nof_ports >= RTE_MAX_ETHPORTS) {
+			RTE_LOG(ERR, MIR_CMD_RUNNER, "Cannot assign port over the "
+				"maximum number.\n");
+			return SPP_RET_NG;
+		}
+
+		if (ability->ops != SPPWK_PORT_ABL_OPS_NONE) {
+			while ((cnt < SPP_PORT_ABILITY_MAX) &&
+					(port_info->ability[cnt].ops !=
+					SPPWK_PORT_ABL_OPS_NONE)) {
+				cnt++;
+			}
+			if (cnt >= SPP_PORT_ABILITY_MAX) {
+				RTE_LOG(ERR, MIR_CMD_RUNNER,
+						"No space of port ability.\n");
+				return SPP_RET_NG;
+			}
+			memcpy(&port_info->ability[cnt], ability,
+					sizeof(struct spp_port_ability));
+		}
+
+		port_info->iface_type = port->iface_type;
+		ports[*nof_ports] = port_info;
+		(*nof_ports)++;
+
+		ret = SPP_RET_OK;
+		break;
+
+	case SPPWK_ACT_DEL:
+		for (cnt = 0; cnt < SPP_PORT_ABILITY_MAX; cnt++) {
+			if (port_info->ability[cnt].ops ==
+					SPPWK_PORT_ABL_OPS_NONE)
+				continue;
+
+			if (port_info->ability[cnt].rxtx == rxtx)
+				memset(&port_info->ability[cnt], 0x00,
+					sizeof(struct spp_port_ability));
+		}
+
+		ret_del = delete_port_info(port_info, *nof_ports, ports);
+		if (ret_del == 0)
+			(*nof_ports)--; /* If deleted, decrement number. */
+
+		ret = SPP_RET_OK;
+		break;
+
+	default:  /* This case cannot be happend without invlid wk_action. */
+		return SPP_RET_NG;
+	}
+
+	*(change_component + comp_lcore_id) = 1;
+	return ret;
+}
+
+/* Execute one command. */
+int
+exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
+{
+	int ret;
+
+	RTE_LOG(INFO, MIR_CMD_RUNNER, "Exec `%s` cmd.\n",
+			sppwk_cmd_type_str(cmd->type));
+
+	switch (cmd->type) {
+	case SPPWK_CMDTYPE_WORKER:
+		ret = update_comp(
+				cmd->spec.comp.wk_action,
+				cmd->spec.comp.name,
+				cmd->spec.comp.core,
+				cmd->spec.comp.wk_type);
+		if (ret == 0) {
+			RTE_LOG(INFO, MIR_CMD_RUNNER, "Exec flush.\n");
+			ret = flush_cmd();
+		}
+		break;
+
+	case SPPWK_CMDTYPE_PORT:
+		RTE_LOG(INFO, MIR_CMD_RUNNER, "with action `%s`.\n",
+				sppwk_action_str(cmd->spec.port.wk_action));
+		ret = update_port(cmd->spec.port.wk_action,
+				&cmd->spec.port.port, cmd->spec.port.rxtx,
+				cmd->spec.port.name, &cmd->spec.port.ability);
+		if (ret == 0) {
+			RTE_LOG(INFO, MIR_CMD_RUNNER, "Exec flush.\n");
+			ret = flush_cmd();
+		}
+		break;
+
+	default:
+		/* Do nothing. */
+		ret = SPP_RET_OK;
+		break;
+	}
+
+	return ret;
+}
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 7c4c91c..64aef19 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -29,363 +29,8 @@ enum cmd_res_code {
 	CMD_INVALID,
 };
 
-/* Update classifier table with given action, add or del. */
-static int
-update_cls_table(enum sppwk_action wk_action,
-		enum spp_classifier_type type __attribute__ ((unused)),
-		int vid, const char *mac_str,
-		const struct sppwk_port_idx *port)
-{
-	/**
-	 * Use two types of mac addr in int64_t and uint64_t because first
-	 * one is checked if converted value from string  is negative for error.
-	 * If it is invalid, convert it to uint64_t.
-	 */
-	int64_t mac_int64;
-	uint64_t mac_uint64;
-	struct sppwk_port_info *port_info;
-
-	RTE_LOG(DEBUG, WK_CMD_RUNNER, "Called __func__ with "
-			"type `mac`, mac_addr `%s`, and port `%d:%d`.\n",
-			mac_str, port->iface_type, port->iface_no);
-
-	mac_int64 = sppwk_convert_mac_str_to_int64(mac_str);
-	if (unlikely(mac_int64 == -1)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER, "Invalid MAC address `%s`.\n",
-				mac_str);
-		return SPP_RET_NG;
-	}
-	mac_uint64 = (uint64_t)mac_int64;
-
-	port_info = get_sppwk_port(port->iface_type, port->iface_no);
-	if (unlikely(port_info == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER, "Failed to get port %d:%d.\n",
-				port->iface_type, port->iface_no);
-		return SPP_RET_NG;
-	}
-	if (unlikely(port_info->iface_type == UNDEF)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER, "Port %d:%d doesn't exist.\n",
-				port->iface_type, port->iface_no);
-		return SPP_RET_NG;
-	}
-
-	if (wk_action == SPPWK_ACT_DEL) {
-		if ((port_info->cls_attrs.vlantag.vid != 0) &&
-				port_info->cls_attrs.vlantag.vid != vid) {
-			RTE_LOG(ERR, WK_CMD_RUNNER,
-					"Unexpected VLAN ID `%d`.\n", vid);
-			return SPP_RET_NG;
-		}
-		if ((port_info->cls_attrs.mac_addr != 0) &&
-				port_info->cls_attrs.mac_addr != mac_uint64) {
-			RTE_LOG(ERR, WK_CMD_RUNNER, "Unexpected MAC %s.\n",
-					mac_str);
-			return SPP_RET_NG;
-		}
-
-		/* Initialize deleted attributes again. */
-		port_info->cls_attrs.vlantag.vid = ETH_VLAN_ID_MAX;
-		port_info->cls_attrs.mac_addr = 0;
-		memset(port_info->cls_attrs.mac_addr_str, 0x00, STR_LEN_SHORT);
-	} else if (wk_action == SPPWK_ACT_ADD) {
-		if (unlikely(port_info->cls_attrs.vlantag.vid !=
-				ETH_VLAN_ID_MAX)) {
-			/* TODO(yasufum) why two vids are required in msg ? */
-			RTE_LOG(ERR, WK_CMD_RUNNER, "Used port %d:%d, vid %d != %d.\n",
-					port->iface_type, port->iface_no,
-					port_info->cls_attrs.vlantag.vid, vid);
-			return SPP_RET_NG;
-		}
-		if (unlikely(port_info->cls_attrs.mac_addr != 0)) {
-			/* TODO(yasufum) why two macs are required in msg ? */
-			RTE_LOG(ERR, WK_CMD_RUNNER, "Used port %d:%d, mac %s != %s.\n",
-					port->iface_type, port->iface_no,
-					port_info->cls_attrs.mac_addr_str,
-					mac_str);
-			return SPP_RET_NG;
-		}
-
-		/* Update attrs with validated params. */
-		port_info->cls_attrs.vlantag.vid = vid;
-		port_info->cls_attrs.mac_addr = mac_uint64;
-		strcpy(port_info->cls_attrs.mac_addr_str, mac_str);
-	}
-
-	set_component_change_port(port_info, SPP_PORT_RXTX_TX);
-	return SPP_RET_OK;
-}
-
-/* Assign worker thread or remove on specified lcore. */
-/* TODO(yasufum) revise func name for removing the term `component`. */
-static int
-update_comp(enum sppwk_action wk_action, const char *name,
-		unsigned int lcore_id, enum sppwk_worker_type wk_type)
-{
-	int ret;
-	int ret_del;
-	int comp_lcore_id = 0;
-	unsigned int tmp_lcore_id = 0;
-	struct sppwk_comp_info *comp_info = NULL;
-	/* TODO(yasufum) revise `core` to be more specific. */
-	struct core_info *core = NULL;
-	struct core_mng_info *info = NULL;
-	struct sppwk_comp_info *comp_info_base = NULL;
-	/* TODO(yasufum) revise `core_info` which is same as struct name. */
-	struct core_mng_info *core_info = NULL;
-	int *change_core = NULL;
-	int *change_component = NULL;
-
-	sppwk_get_mng_data(NULL, NULL, &comp_info_base, &core_info,
-				&change_core, &change_component, NULL);
-
-	switch (wk_action) {
-	case SPPWK_ACT_START:
-		info = (core_info + lcore_id);
-		if (info->status == SPP_CORE_UNUSE) {
-			RTE_LOG(ERR, WK_CMD_RUNNER, "Core %d is not available because "
-				"it is in SPP_CORE_UNUSE state.\n", lcore_id);
-			return SPP_RET_NG;
-		}
-
-		comp_lcore_id = sppwk_get_lcore_id(name);
-		if (comp_lcore_id >= 0) {
-			RTE_LOG(ERR, WK_CMD_RUNNER, "Component name '%s' is already "
-				"used.\n", name);
-			return SPP_RET_NG;
-		}
-
-		comp_lcore_id = get_free_lcore_id();
-		if (comp_lcore_id < 0) {
-			RTE_LOG(ERR, WK_CMD_RUNNER, "Cannot assign component over the "
-				"maximum number.\n");
-			return SPP_RET_NG;
-		}
-
-		core = &info->core[info->upd_index];
-
-		comp_info = (comp_info_base + comp_lcore_id);
-		memset(comp_info, 0x00, sizeof(struct sppwk_comp_info));
-		strcpy(comp_info->name, name);
-		comp_info->wk_type = wk_type;
-		comp_info->lcore_id = lcore_id;
-		comp_info->comp_id = comp_lcore_id;
-
-		core->id[core->num] = comp_lcore_id;
-		core->num++;
-		ret = SPP_RET_OK;
-		tmp_lcore_id = lcore_id;
-		*(change_component + comp_lcore_id) = 1;
-		break;
-
-	case SPPWK_ACT_STOP:
-		comp_lcore_id = sppwk_get_lcore_id(name);
-		if (comp_lcore_id < 0)
-			return SPP_RET_OK;
-
-		comp_info = (comp_info_base + comp_lcore_id);
-		tmp_lcore_id = comp_info->lcore_id;
-		memset(comp_info, 0x00, sizeof(struct sppwk_comp_info));
-
-		info = (core_info + tmp_lcore_id);
-		core = &info->core[info->upd_index];
-
-		/**
-		 * TODO(yasufum) check if this ifdef is simply removed by
-		 * running other than spp_vf.
-		 */
-#ifdef SPP_VF_MODULE
-		/* initialize classifier information */
-		if (comp_info->wk_type == SPPWK_TYPE_CLS)
-			init_classifier_info(comp_lcore_id);
-#endif /* SPP_VF_MODULE */
-
-		/* The latest lcore is released if worker thread is stopped. */
-		ret_del = del_comp_info(comp_lcore_id, core->num, core->id);
-		if (ret_del >= 0)
-			core->num--;
-
-		ret = SPP_RET_OK;
-		*(change_component + comp_lcore_id) = 0;
-		break;
-
-	default:  /* Unexpected case. */
-		ret = SPP_RET_NG;
-		break;
-	}
-
-	*(change_core + tmp_lcore_id) = 1;
-	return ret;
-}
-
-/* Check if over the maximum num of rx and tx ports of component. */
-static int
-check_port_count(int component_type, enum spp_port_rxtx rxtx, int num_rx,
-								int num_tx)
-{
-	RTE_LOG(INFO, WK_CMD_RUNNER, "port count, port_type=%d,"
-				" rx=%d, tx=%d\n", rxtx, num_rx, num_tx);
-	if (rxtx == SPP_PORT_RXTX_RX)
-		num_rx++;
-	else
-		num_tx++;
-	/* Add rx or tx port appointed in port_type. */
-	RTE_LOG(INFO, WK_CMD_RUNNER, "Num of ports after count up,"
-				" port_type=%d, rx=%d, tx=%d\n",
-				rxtx, num_rx, num_tx);
-	switch (component_type) {
-	case SPPWK_TYPE_FWD:
-		if (num_rx > 1 || num_tx > 1)
-			return SPP_RET_NG;
-		break;
-
-	case SPPWK_TYPE_MRG:
-		if (num_tx > 1)
-			return SPP_RET_NG;
-		break;
-
-	case SPPWK_TYPE_CLS:
-		if (num_rx > 1)
-			return SPP_RET_NG;
-		break;
-
-	case SPPWK_TYPE_MIR:
-		if (num_rx > 1 || num_tx > 2)
-			return SPP_RET_NG;
-		break;
-
-	default:
-		/* Illegal component type. */
-		return SPP_RET_NG;
-	}
-
-	return SPP_RET_OK;
-}
-
-/* Port add or del to execute it */
-static int
-update_port(enum sppwk_action wk_action,
-		const struct sppwk_port_idx *port,
-		enum spp_port_rxtx rxtx,
-		const char *name,
-		const struct spp_port_ability *ability)
-{
-	int ret = SPP_RET_NG;
-	int port_idx;
-	int ret_del = -1;
-	int comp_lcore_id = 0;
-	int cnt = 0;
-	struct sppwk_comp_info *comp_info = NULL;
-	struct sppwk_port_info *port_info = NULL;
-	int *nof_ports = NULL;
-	struct sppwk_port_info **ports = NULL;
-	struct sppwk_comp_info *comp_info_base = NULL;
-	int *change_component = NULL;
-
-	comp_lcore_id = sppwk_get_lcore_id(name);
-	if (comp_lcore_id < 0) {
-		RTE_LOG(ERR, WK_CMD_RUNNER, "Unknown component by port command. "
-				"(component = %s)\n", name);
-		return SPP_RET_NG;
-	}
-	sppwk_get_mng_data(NULL, NULL,
-			&comp_info_base, NULL, NULL, &change_component, NULL);
-	comp_info = (comp_info_base + comp_lcore_id);
-	port_info = get_sppwk_port(port->iface_type, port->iface_no);
-	if (rxtx == SPP_PORT_RXTX_RX) {
-		nof_ports = &comp_info->nof_rx;
-		ports = comp_info->rx_ports;
-	} else {
-		nof_ports = &comp_info->nof_tx;
-		ports = comp_info->tx_ports;
-	}
-
-	switch (wk_action) {
-	case SPPWK_ACT_ADD:
-		/* Check if over the maximum num of ports of component. */
-		if (check_port_count(comp_info->wk_type, rxtx,
-				comp_info->nof_rx,
-				comp_info->nof_tx) != SPP_RET_OK)
-			return SPP_RET_NG;
-
-		/* Check if the port_info is included in array `ports`. */
-		port_idx = get_idx_port_info(port_info, *nof_ports, ports);
-		if (port_idx >= SPP_RET_OK) {
-			/* registered */
-			if (ability->ops == SPPWK_PORT_ABL_OPS_ADD_VLANTAG) {
-				while ((cnt < SPP_PORT_ABILITY_MAX) &&
-					    (port_info->ability[cnt].ops !=
-					    SPPWK_PORT_ABL_OPS_ADD_VLANTAG))
-					cnt++;
-				if (cnt >= SPP_PORT_ABILITY_MAX) {
-					RTE_LOG(ERR, WK_CMD_RUNNER, "update VLAN tag "
-						"Non-registratio\n");
-					return SPP_RET_NG;
-				}
-				memcpy(&port_info->ability[cnt], ability,
-					sizeof(struct spp_port_ability));
-
-				ret = SPP_RET_OK;
-				break;
-			}
-			return SPP_RET_OK;
-		}
-
-		if (*nof_ports >= RTE_MAX_ETHPORTS) {
-			RTE_LOG(ERR, WK_CMD_RUNNER, "Cannot assign port over the "
-				"maximum number.\n");
-			return SPP_RET_NG;
-		}
-
-		if (ability->ops != SPPWK_PORT_ABL_OPS_NONE) {
-			while ((cnt < SPP_PORT_ABILITY_MAX) &&
-					(port_info->ability[cnt].ops !=
-					SPPWK_PORT_ABL_OPS_NONE)) {
-				cnt++;
-			}
-			if (cnt >= SPP_PORT_ABILITY_MAX) {
-				RTE_LOG(ERR, WK_CMD_RUNNER,
-						"No space of port ability.\n");
-				return SPP_RET_NG;
-			}
-			memcpy(&port_info->ability[cnt], ability,
-					sizeof(struct spp_port_ability));
-		}
-
-		port_info->iface_type = port->iface_type;
-		ports[*nof_ports] = port_info;
-		(*nof_ports)++;
-
-		ret = SPP_RET_OK;
-		break;
-
-	case SPPWK_ACT_DEL:
-		for (cnt = 0; cnt < SPP_PORT_ABILITY_MAX; cnt++) {
-			if (port_info->ability[cnt].ops ==
-					SPPWK_PORT_ABL_OPS_NONE)
-				continue;
-
-			if (port_info->ability[cnt].rxtx == rxtx)
-				memset(&port_info->ability[cnt], 0x00,
-					sizeof(struct spp_port_ability));
-		}
-
-		ret_del = delete_port_info(port_info, *nof_ports, ports);
-		if (ret_del == 0)
-			(*nof_ports)--; /* If deleted, decrement number. */
-
-		ret = SPP_RET_OK;
-		break;
-
-	default:  /* This case cannot be happend without invlid wk_action. */
-		return SPP_RET_NG;
-	}
-
-	*(change_component + comp_lcore_id) = 1;
-	return ret;
-}
-
 /* Activate temporarily stored command. */
-static int
+int
 flush_cmd(void)
 {
 	int ret;
@@ -408,62 +53,6 @@ flush_cmd(void)
 	return ret;
 }
 
-/* Execute one command. */
-static int
-exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
-{
-	int ret;
-
-	RTE_LOG(INFO, WK_CMD_RUNNER, "Exec `%s` cmd.\n",
-			sppwk_cmd_type_str(cmd->type));
-
-	switch (cmd->type) {
-	case SPPWK_CMDTYPE_CLS_MAC:
-	case SPPWK_CMDTYPE_CLS_VLAN:
-		ret = update_cls_table(cmd->spec.cls_table.wk_action,
-				cmd->spec.cls_table.type,
-				cmd->spec.cls_table.vid,
-				cmd->spec.cls_table.mac,
-				&cmd->spec.cls_table.port);
-		if (ret == 0) {
-			RTE_LOG(INFO, WK_CMD_RUNNER, "Exec flush.\n");
-			ret = flush_cmd();
-		}
-		break;
-
-	case SPPWK_CMDTYPE_WORKER:
-		ret = update_comp(
-				cmd->spec.comp.wk_action,
-				cmd->spec.comp.name,
-				cmd->spec.comp.core,
-				cmd->spec.comp.wk_type);
-		if (ret == 0) {
-			RTE_LOG(INFO, WK_CMD_RUNNER, "Exec flush.\n");
-			ret = flush_cmd();
-		}
-		break;
-
-	case SPPWK_CMDTYPE_PORT:
-		RTE_LOG(INFO, WK_CMD_RUNNER, "with action `%s`.\n",
-				sppwk_action_str(cmd->spec.port.wk_action));
-		ret = update_port(cmd->spec.port.wk_action,
-				&cmd->spec.port.port, cmd->spec.port.rxtx,
-				cmd->spec.port.name, &cmd->spec.port.ability);
-		if (ret == 0) {
-			RTE_LOG(INFO, WK_CMD_RUNNER, "Exec flush.\n");
-			ret = flush_cmd();
-		}
-		break;
-
-	default:
-		/* Do nothing. */
-		ret = SPP_RET_OK;
-		break;
-	}
-
-	return ret;
-}
-
 /* Get error message of parsing from given wk_err_msg object. */
 static const char *
 get_parse_err_msg(
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.h b/src/shared/secondary/spp_worker_th/cmd_runner.h
index 5d85733..3a71e3e 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.h
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.h
@@ -15,6 +15,10 @@
 
 #include "cmd_utils.h"
 
+/**
+ */
+int flush_cmd(void);
+
 /**
  * Setup connection for accepting commands from spp-ctl.
  *
diff --git a/src/shared/secondary/spp_worker_th/mirror_deps.h b/src/shared/secondary/spp_worker_th/mirror_deps.h
index bfa715d..55ba913 100644
--- a/src/shared/secondary/spp_worker_th/mirror_deps.h
+++ b/src/shared/secondary/spp_worker_th/mirror_deps.h
@@ -6,6 +6,9 @@
 #define __SPP_WORKER_TH_MIRROR_DEPS_H__
 
 #include "cmd_utils.h"
+#include "cmd_parser.h"
+
+int exec_one_cmd(const struct sppwk_cmd_attrs *cmd);
 
 /**
  * Update mirror info.
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 73e0f9a..6a78ef5 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -8,6 +8,7 @@
 #include <rte_malloc.h>
 #include <rte_hash.h>
 #include "cmd_utils.h"
+#include "cmd_parser.h"
 
 /** Number of VLAN ID */
 #define NOF_VLAN 4096
@@ -53,6 +54,8 @@ free_mac_classifier(struct mac_classifier *mac_clf)
 	rte_free(mac_clf);
 }
 
+int exec_one_cmd(const struct sppwk_cmd_attrs *cmd);
+
 /**
  * Update classifier info.
  *
diff --git a/src/vf/Makefile b/src/vf/Makefile
index dd5a100..83d1f14 100644
--- a/src/vf/Makefile
+++ b/src/vf/Makefile
@@ -23,10 +23,11 @@ SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
 SRCS-y += $(SPP_WKT_DIR)/spp_port.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
+SRCS-y += ../shared/common.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_runner.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_utils.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_res_formatter.c
-SRCS-y += ../shared/common.c
+SRCS-y += vf_cmd_runner.c
 
 CFLAGS += -DALLOW_EXPERIMENTAL_API
 CFLAGS += $(WERROR_FLAGS) -O3 -MMD
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
new file mode 100644
index 0000000..2fb071e
--- /dev/null
+++ b/src/vf/vf_cmd_runner.c
@@ -0,0 +1,411 @@
+/* SPDX-License-Identifier: BSD-3-Clause
+ * Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
+ */
+
+#include "classifier_mac.h"
+#include "shared/secondary/return_codes.h"
+#include "shared/secondary/spp_worker_th/cmd_parser.h"
+#include "shared/secondary/spp_worker_th/cmd_runner.h"
+#include "shared/secondary/spp_worker_th/vf_deps.h"
+
+#define RTE_LOGTYPE_VF_CMD_RUNNER RTE_LOGTYPE_USER1
+
+/* Update classifier table with given action, add or del. */
+static int
+update_cls_table(enum sppwk_action wk_action,
+		enum spp_classifier_type type __attribute__ ((unused)),
+		int vid, const char *mac_str,
+		const struct sppwk_port_idx *port)
+{
+	/**
+	 * Use two types of mac addr in int64_t and uint64_t because first
+	 * one is checked if converted value from string  is negative for error.
+	 * If it is invalid, convert it to uint64_t.
+	 */
+	int64_t mac_int64;
+	uint64_t mac_uint64;
+	struct sppwk_port_info *port_info;
+
+	RTE_LOG(DEBUG, VF_CMD_RUNNER, "Called __func__ with "
+			"type `mac`, mac_addr `%s`, and port `%d:%d`.\n",
+			mac_str, port->iface_type, port->iface_no);
+
+	mac_int64 = sppwk_convert_mac_str_to_int64(mac_str);
+	if (unlikely(mac_int64 == -1)) {
+		RTE_LOG(ERR, VF_CMD_RUNNER, "Invalid MAC address `%s`.\n",
+				mac_str);
+		return SPP_RET_NG;
+	}
+	mac_uint64 = (uint64_t)mac_int64;
+
+	port_info = get_sppwk_port(port->iface_type, port->iface_no);
+	if (unlikely(port_info == NULL)) {
+		RTE_LOG(ERR, VF_CMD_RUNNER, "Failed to get port %d:%d.\n",
+				port->iface_type, port->iface_no);
+		return SPP_RET_NG;
+	}
+	if (unlikely(port_info->iface_type == UNDEF)) {
+		RTE_LOG(ERR, VF_CMD_RUNNER, "Port %d:%d doesn't exist.\n",
+				port->iface_type, port->iface_no);
+		return SPP_RET_NG;
+	}
+
+	if (wk_action == SPPWK_ACT_DEL) {
+		if ((port_info->cls_attrs.vlantag.vid != 0) &&
+				port_info->cls_attrs.vlantag.vid != vid) {
+			RTE_LOG(ERR, VF_CMD_RUNNER,
+					"Unexpected VLAN ID `%d`.\n", vid);
+			return SPP_RET_NG;
+		}
+		if ((port_info->cls_attrs.mac_addr != 0) &&
+				port_info->cls_attrs.mac_addr != mac_uint64) {
+			RTE_LOG(ERR, VF_CMD_RUNNER, "Unexpected MAC %s.\n",
+					mac_str);
+			return SPP_RET_NG;
+		}
+
+		/* Initialize deleted attributes again. */
+		port_info->cls_attrs.vlantag.vid = ETH_VLAN_ID_MAX;
+		port_info->cls_attrs.mac_addr = 0;
+		memset(port_info->cls_attrs.mac_addr_str, 0x00, STR_LEN_SHORT);
+	} else if (wk_action == SPPWK_ACT_ADD) {
+		if (unlikely(port_info->cls_attrs.vlantag.vid !=
+				ETH_VLAN_ID_MAX)) {
+			/* TODO(yasufum) why two vids are required in msg ? */
+			RTE_LOG(ERR, VF_CMD_RUNNER, "Used port %d:%d, vid %d != %d.\n",
+					port->iface_type, port->iface_no,
+					port_info->cls_attrs.vlantag.vid, vid);
+			return SPP_RET_NG;
+		}
+		if (unlikely(port_info->cls_attrs.mac_addr != 0)) {
+			/* TODO(yasufum) why two macs are required in msg ? */
+			RTE_LOG(ERR, VF_CMD_RUNNER, "Used port %d:%d, mac %s != %s.\n",
+					port->iface_type, port->iface_no,
+					port_info->cls_attrs.mac_addr_str,
+					mac_str);
+			return SPP_RET_NG;
+		}
+
+		/* Update attrs with validated params. */
+		port_info->cls_attrs.vlantag.vid = vid;
+		port_info->cls_attrs.mac_addr = mac_uint64;
+		strcpy(port_info->cls_attrs.mac_addr_str, mac_str);
+	}
+
+	set_component_change_port(port_info, SPP_PORT_RXTX_TX);
+	return SPP_RET_OK;
+}
+
+/* Assign worker thread or remove on specified lcore. */
+/* TODO(yasufum) revise func name for removing term `component` or `comp`. */
+static int
+update_comp(enum sppwk_action wk_action, const char *name,
+		unsigned int lcore_id, enum sppwk_worker_type wk_type)
+{
+	int ret;
+	int ret_del;
+	int comp_lcore_id = 0;
+	unsigned int tmp_lcore_id = 0;
+	struct sppwk_comp_info *comp_info = NULL;
+	/* TODO(yasufum) revise `core` to be more specific. */
+	struct core_info *core = NULL;
+	struct core_mng_info *info = NULL;
+	struct sppwk_comp_info *comp_info_base = NULL;
+	/* TODO(yasufum) revise `core_info` which is same as struct name. */
+	struct core_mng_info *core_info = NULL;
+	int *change_core = NULL;
+	int *change_component = NULL;
+
+	sppwk_get_mng_data(NULL, NULL, &comp_info_base, &core_info,
+				&change_core, &change_component, NULL);
+
+	switch (wk_action) {
+	case SPPWK_ACT_START:
+		info = (core_info + lcore_id);
+		if (info->status == SPP_CORE_UNUSE) {
+			RTE_LOG(ERR, VF_CMD_RUNNER, "Core %d is not available because "
+				"it is in SPP_CORE_UNUSE state.\n", lcore_id);
+			return SPP_RET_NG;
+		}
+
+		comp_lcore_id = sppwk_get_lcore_id(name);
+		if (comp_lcore_id >= 0) {
+			RTE_LOG(ERR, VF_CMD_RUNNER, "Component name '%s' is already "
+				"used.\n", name);
+			return SPP_RET_NG;
+		}
+
+		comp_lcore_id = get_free_lcore_id();
+		if (comp_lcore_id < 0) {
+			RTE_LOG(ERR, VF_CMD_RUNNER, "Cannot assign component over the "
+				"maximum number.\n");
+			return SPP_RET_NG;
+		}
+
+		core = &info->core[info->upd_index];
+
+		comp_info = (comp_info_base + comp_lcore_id);
+		memset(comp_info, 0x00, sizeof(struct sppwk_comp_info));
+		strcpy(comp_info->name, name);
+		comp_info->wk_type = wk_type;
+		comp_info->lcore_id = lcore_id;
+		comp_info->comp_id = comp_lcore_id;
+
+		core->id[core->num] = comp_lcore_id;
+		core->num++;
+		ret = SPP_RET_OK;
+		tmp_lcore_id = lcore_id;
+		*(change_component + comp_lcore_id) = 1;
+		break;
+
+	case SPPWK_ACT_STOP:
+		comp_lcore_id = sppwk_get_lcore_id(name);
+		if (comp_lcore_id < 0)
+			return SPP_RET_OK;
+
+		comp_info = (comp_info_base + comp_lcore_id);
+		tmp_lcore_id = comp_info->lcore_id;
+		memset(comp_info, 0x00, sizeof(struct sppwk_comp_info));
+
+		info = (core_info + tmp_lcore_id);
+		core = &info->core[info->upd_index];
+
+		/* initialize classifier information */
+		if (comp_info->wk_type == SPPWK_TYPE_CLS)
+			init_classifier_info(comp_lcore_id);
+
+		/* The latest lcore is released if worker thread is stopped. */
+		ret_del = del_comp_info(comp_lcore_id, core->num, core->id);
+		if (ret_del >= 0)
+			core->num--;
+
+		ret = SPP_RET_OK;
+		*(change_component + comp_lcore_id) = 0;
+		break;
+
+	default:  /* Unexpected case. */
+		ret = SPP_RET_NG;
+		break;
+	}
+
+	*(change_core + tmp_lcore_id) = 1;
+	return ret;
+}
+
+/* Check if over the maximum num of rx and tx ports of component. */
+static int
+check_vf_port_count(int component_type, enum spp_port_rxtx rxtx, int num_rx,
+								int num_tx)
+{
+	RTE_LOG(INFO, VF_CMD_RUNNER, "port count, port_type=%d,"
+				" rx=%d, tx=%d\n", rxtx, num_rx, num_tx);
+	if (rxtx == SPP_PORT_RXTX_RX)
+		num_rx++;
+	else
+		num_tx++;
+	/* Add rx or tx port appointed in port_type. */
+	RTE_LOG(INFO, VF_CMD_RUNNER, "Num of ports after count up,"
+				" port_type=%d, rx=%d, tx=%d\n",
+				rxtx, num_rx, num_tx);
+	switch (component_type) {
+	case SPPWK_TYPE_FWD:
+		if (num_rx > 1 || num_tx > 1)
+			return SPP_RET_NG;
+		break;
+
+	case SPPWK_TYPE_MRG:
+		if (num_tx > 1)
+			return SPP_RET_NG;
+		break;
+
+	case SPPWK_TYPE_CLS:
+		if (num_rx > 1)
+			return SPP_RET_NG;
+		break;
+
+	default:
+		/* Illegal component type. */
+		return SPP_RET_NG;
+	}
+
+	return SPP_RET_OK;
+}
+
+/* Port add or del to execute it */
+static int
+update_port(enum sppwk_action wk_action,
+		const struct sppwk_port_idx *port,
+		enum spp_port_rxtx rxtx,
+		const char *name,
+		const struct spp_port_ability *ability)
+{
+	int ret = SPP_RET_NG;
+	int port_idx;
+	int ret_del = -1;
+	int comp_lcore_id = 0;
+	int cnt = 0;
+	struct sppwk_comp_info *comp_info = NULL;
+	struct sppwk_port_info *port_info = NULL;
+	int *nof_ports = NULL;
+	struct sppwk_port_info **ports = NULL;
+	struct sppwk_comp_info *comp_info_base = NULL;
+	int *change_component = NULL;
+
+	comp_lcore_id = sppwk_get_lcore_id(name);
+	if (comp_lcore_id < 0) {
+		RTE_LOG(ERR, VF_CMD_RUNNER, "Unknown component by port command. "
+				"(component = %s)\n", name);
+		return SPP_RET_NG;
+	}
+	sppwk_get_mng_data(NULL, NULL,
+			&comp_info_base, NULL, NULL, &change_component, NULL);
+	comp_info = (comp_info_base + comp_lcore_id);
+	port_info = get_sppwk_port(port->iface_type, port->iface_no);
+	if (rxtx == SPP_PORT_RXTX_RX) {
+		nof_ports = &comp_info->nof_rx;
+		ports = comp_info->rx_ports;
+	} else {
+		nof_ports = &comp_info->nof_tx;
+		ports = comp_info->tx_ports;
+	}
+
+	switch (wk_action) {
+	case SPPWK_ACT_ADD:
+		/* Check if over the maximum num of ports of component. */
+		if (check_vf_port_count(comp_info->wk_type, rxtx,
+				comp_info->nof_rx,
+				comp_info->nof_tx) != SPP_RET_OK)
+			return SPP_RET_NG;
+
+		/* Check if the port_info is included in array `ports`. */
+		port_idx = get_idx_port_info(port_info, *nof_ports, ports);
+		if (port_idx >= SPP_RET_OK) {
+			/* registered */
+			if (ability->ops == SPPWK_PORT_ABL_OPS_ADD_VLANTAG) {
+				while ((cnt < SPP_PORT_ABILITY_MAX) &&
+					    (port_info->ability[cnt].ops !=
+					    SPPWK_PORT_ABL_OPS_ADD_VLANTAG))
+					cnt++;
+				if (cnt >= SPP_PORT_ABILITY_MAX) {
+					RTE_LOG(ERR, VF_CMD_RUNNER, "update VLAN tag "
+						"Non-registratio\n");
+					return SPP_RET_NG;
+				}
+				memcpy(&port_info->ability[cnt], ability,
+					sizeof(struct spp_port_ability));
+
+				ret = SPP_RET_OK;
+				break;
+			}
+			return SPP_RET_OK;
+		}
+
+		if (*nof_ports >= RTE_MAX_ETHPORTS) {
+			RTE_LOG(ERR, VF_CMD_RUNNER, "Cannot assign port over the "
+				"maximum number.\n");
+			return SPP_RET_NG;
+		}
+
+		if (ability->ops != SPPWK_PORT_ABL_OPS_NONE) {
+			while ((cnt < SPP_PORT_ABILITY_MAX) &&
+					(port_info->ability[cnt].ops !=
+					SPPWK_PORT_ABL_OPS_NONE)) {
+				cnt++;
+			}
+			if (cnt >= SPP_PORT_ABILITY_MAX) {
+				RTE_LOG(ERR, VF_CMD_RUNNER,
+						"No space of port ability.\n");
+				return SPP_RET_NG;
+			}
+			memcpy(&port_info->ability[cnt], ability,
+					sizeof(struct spp_port_ability));
+		}
+
+		port_info->iface_type = port->iface_type;
+		ports[*nof_ports] = port_info;
+		(*nof_ports)++;
+
+		ret = SPP_RET_OK;
+		break;
+
+	case SPPWK_ACT_DEL:
+		for (cnt = 0; cnt < SPP_PORT_ABILITY_MAX; cnt++) {
+			if (port_info->ability[cnt].ops ==
+					SPPWK_PORT_ABL_OPS_NONE)
+				continue;
+
+			if (port_info->ability[cnt].rxtx == rxtx)
+				memset(&port_info->ability[cnt], 0x00,
+					sizeof(struct spp_port_ability));
+		}
+
+		ret_del = delete_port_info(port_info, *nof_ports, ports);
+		if (ret_del == 0)
+			(*nof_ports)--; /* If deleted, decrement number. */
+
+		ret = SPP_RET_OK;
+		break;
+
+	default:  /* This case cannot be happend without invlid wk_action. */
+		return SPP_RET_NG;
+	}
+
+	*(change_component + comp_lcore_id) = 1;
+	return ret;
+}
+
+/* Execute one command. */
+int
+exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
+{
+	int ret;
+
+	RTE_LOG(INFO, VF_CMD_RUNNER, "Exec `%s` cmd.\n",
+			sppwk_cmd_type_str(cmd->type));
+
+	switch (cmd->type) {
+	case SPPWK_CMDTYPE_CLS_MAC:
+	case SPPWK_CMDTYPE_CLS_VLAN:
+		ret = update_cls_table(cmd->spec.cls_table.wk_action,
+				cmd->spec.cls_table.type,
+				cmd->spec.cls_table.vid,
+				cmd->spec.cls_table.mac,
+				&cmd->spec.cls_table.port);
+		if (ret == 0) {
+			RTE_LOG(INFO, VF_CMD_RUNNER, "Exec flush.\n");
+			ret = flush_cmd();
+		}
+		break;
+
+	case SPPWK_CMDTYPE_WORKER:
+		ret = update_comp(
+				cmd->spec.comp.wk_action,
+				cmd->spec.comp.name,
+				cmd->spec.comp.core,
+				cmd->spec.comp.wk_type);
+		if (ret == 0) {
+			RTE_LOG(INFO, VF_CMD_RUNNER, "Exec flush.\n");
+			ret = flush_cmd();
+		}
+		break;
+
+	case SPPWK_CMDTYPE_PORT:
+		RTE_LOG(INFO, VF_CMD_RUNNER, "with action `%s`.\n",
+				sppwk_action_str(cmd->spec.port.wk_action));
+		ret = update_port(cmd->spec.port.wk_action,
+				&cmd->spec.port.port, cmd->spec.port.rxtx,
+				cmd->spec.port.name, &cmd->spec.port.ability);
+		if (ret == 0) {
+			RTE_LOG(INFO, VF_CMD_RUNNER, "Exec flush.\n");
+			ret = flush_cmd();
+		}
+		break;
+
+	default:
+		/* Do nothing. */
+		ret = SPP_RET_OK;
+		break;
+	}
+
+	return ret;
+}
-- 
2.17.1



From spp-request@dpdk.org Mon Jun 24 15:21:46 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL01598B0L1J50@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 15:21:57 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTL01B10B0LZZ00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 15:21:57 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00TJ2B0LU7B0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 15:21:57 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf105.ddreams.local (Postfix) with ESMTP id 24F4F7E603A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 15:21:57 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 229228E6060	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 15:21:57 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 175298E6068	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 15:21:57 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id E9BEF8E6060	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 15:21:55 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf105.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 15:21:55 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6LtVx004787;	Mon,
 24 Jun 2019 15:21:55 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O6LtLU004786;	Mon, 24 Jun 2019 15:21:55 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O6LtpW004783	for unknown; Mon,
 24 Jun 2019 15:21:55 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6Ltft016706 for
 unknown; Mon, 24 Jun 2019 15:21:55 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6LtFh016703 for
 unknown; Mon, 24 Jun 2019 15:21:55 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O6LmMr015131	for unknown; Mon,
 24 Jun 2019 15:21:54 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 03DB81BF52	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 24 Jun 2019 08:21:48 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 11
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 24 Jun 2019 08:21:46 +0200
Message-id: <mailman.23388.1561357306.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH 12/13] shared/sec: remove local funcs from header
      (yasufum.o@gmail.com)
   2. [PATCH 13/13] shared/sec: refactor comments for JSON
      formatter (yasufum.o@gmail.com)
   3. [PATCH] shared/sec: fix comment of order of port ability
      (yasufum.o@gmail.com)
   4. [PATCH] shared/sec: move exec_one_cmd from shared dir
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon, 24 Jun 2019 13:36:12 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 12/13] shared/sec: remove local funcs from
	header
Message-ID: <20190624043613.19271-13-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Some of functions start with `add_` defined in `cmd_res_formatter.h` are
not used from outside. This update is to remove these functions from
header file without add_client_id() and add_classifier_table().

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../spp_worker_th/cmd_res_formatter.c         | 21 ++++++++++++++-----
 .../spp_worker_th/cmd_res_formatter.h         | 13 ------------
 2 files changed, 16 insertions(+), 18 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index ab08fcd..24b5608 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -10,6 +10,17 @@
 
 #define RTE_LOGTYPE_WK_CMD_RES_FMT RTE_LOGTYPE_USER1
 
+/* Proto type declaration for a list of operator functions. */
+static int append_result_value(const char *name, char **output, void *tmp);
+static int append_error_details_value(const char *name, char **output,
+		void *tmp);
+static int add_interface(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+static int add_master_lcore(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+static int add_core(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+
 /**
  * List of worker process type. The order of items should be same as the order
  * of enum `secondary_type` in cmd_utils.h.
@@ -78,7 +89,7 @@ struct cmd_response response_info_list[] = {
 };
 
 /* append a command result for JSON format */
-int
+static int
 append_result_value(const char *name, char **output, void *tmp)
 {
 	const struct cmd_result *result = tmp;
@@ -86,7 +97,7 @@ append_result_value(const char *name, char **output, void *tmp)
 }
 
 /* append error details for JSON format */
-int
+static int
 append_error_details_value(const char *name, char **output, void *tmp)
 {
 	int ret = SPP_RET_NG;
@@ -672,7 +683,7 @@ add_client_id(const char *name, char **output,
 }
 
 /* Add entry of port to a response in JSON such as "phy:0". */
-int
+static int
 add_interface(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
@@ -706,7 +717,7 @@ add_interface(const char *name, char **output,
 }
 
 /* Add entry of master lcore to a response in JSON. */
-int
+static int
 add_master_lcore(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
@@ -716,7 +727,7 @@ add_master_lcore(const char *name, char **output,
 }
 
 /* Add entry of core info of worker to a response in JSON such as "core:0". */
-int
+static int
 add_core(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
index d9481e3..cf5f81b 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
@@ -32,10 +32,6 @@ struct cmd_response {
 	int (*func)(const char *name, char **output, void *tmp);
 };
 
-int append_result_value(const char *name, char **output, void *tmp);
-
-int append_error_details_value(const char *name, char **output, void *tmp);
-
 int append_interface_array(char **output, const enum port_type type);
 
 int append_process_type_value(const char *name, char **output,
@@ -82,15 +78,6 @@ int append_info_value(const char *name, char **output);
 int add_client_id(const char *name, char **output,
 		void *tmp __attribute__ ((unused)));
 
-int add_interface(const char *name, char **output,
-		void *tmp __attribute__ ((unused)));
-
-int add_master_lcore(const char *name, char **output,
-		void *tmp __attribute__ ((unused)));
-
-int add_core(const char *name, char **output,
-		void *tmp __attribute__ ((unused)));
-
 int add_classifier_table(const char *name, char **output,
 		void *tmp __attribute__ ((unused)));
 #endif
-- 
2.17.1



------------------------------

Message: 2
Date: Mon, 24 Jun 2019 13:36:13 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 13/13] shared/sec: refactor comments for JSON
	formatter
Message-ID: <20190624043613.19271-14-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to refactor comments for JSON formatter.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../spp_worker_th/cmd_res_formatter.c         | 68 ++++++++++++-------
 1 file changed, 43 insertions(+), 25 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index 24b5608..21024b9 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -88,7 +88,7 @@ struct cmd_response response_info_list[] = {
 	{ "", NULL }
 };
 
-/* append a command result for JSON format */
+/* Append a command result in JSON format. */
 static int
 append_result_value(const char *name, char **output, void *tmp)
 {
@@ -96,7 +96,7 @@ append_result_value(const char *name, char **output, void *tmp)
 	return append_json_str_value(output, name, result->result);
 }
 
-/* append error details for JSON format */
+/* Append error details in JSON format. */
 static int
 append_error_details_value(const char *name, char **output, void *tmp)
 {
@@ -110,9 +110,7 @@ append_error_details_value(const char *name, char **output, void *tmp)
 	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
 	if (unlikely(tmp_buff == NULL)) {
 		RTE_LOG(ERR, WK_CMD_RES_FMT,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s)\n",
-				name);
+				"Fail to alloc buf for `%s`.\n", name);
 		return SPP_RET_NG;
 	}
 
@@ -135,7 +133,7 @@ is_port_flushed(enum port_type iface_type, int iface_no)
 	return port->ethdev_port_id >= 0;
 }
 
-/* append a list of interface numbers */
+/* Append index number as comma separated format such as `0, 1, ...`. */
 int
 append_interface_array(char **output, const enum port_type type)
 {
@@ -151,14 +149,12 @@ append_interface_array(char **output, const enum port_type type)
 		*output = spp_strbuf_append(*output, tmp_str, strlen(tmp_str));
 		if (unlikely(*output == NULL)) {
 			RTE_LOG(ERR, WK_CMD_RES_FMT,
-					"Interface number failed to add. "
-					"(type = %d)\n", type);
+				/* TODO(yasufum) replace %d to string. */
+				"Failed to add index for type `%d`.\n", type);
 			return SPP_RET_NG;
 		}
-
 		port_cnt++;
 	}
-
 	return SPP_RET_OK;
 }
 
@@ -519,7 +515,10 @@ append_response_list_value(char **output, struct cmd_response *responses,
 	return SPP_RET_OK;
 }
 
-/* append a list of command results for JSON format. */
+/**
+ * Setup `results` section in JSON msg. This is an example.
+ *   "results": [ { "result": "success" } ]
+ */
 int
 append_command_results_value(const char *name, char **output,
 		int num, struct cmd_result *results)
@@ -527,27 +526,26 @@ append_command_results_value(const char *name, char **output,
 	int ret = SPP_RET_NG;
 	int i;
 	char *tmp_buff1, *tmp_buff2;
+
+	/* Setup result statement step by step with two buffers. */
 	tmp_buff1 = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
 	if (unlikely(tmp_buff1 == NULL)) {
 		RTE_LOG(ERR, WK_CMD_RES_FMT,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s, buff=1)\n",
-				name);
+				"Faield to alloc 1st buf for `%s`.\n", name);
 		return SPP_RET_NG;
 	}
-
 	tmp_buff2 = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
 	if (unlikely(tmp_buff2 == NULL)) {
 		spp_strbuf_free(tmp_buff1);
 		RTE_LOG(ERR, WK_CMD_RES_FMT,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s, buff=2)\n",
-				name);
+				"Faield to alloc 2nd buf for `%s`.\n", name);
 		return SPP_RET_NG;
 	}
 
 	for (i = 0; i < num; i++) {
 		tmp_buff1[0] = '\0';
+
+		/* Setup key-val pair such as `"result": "success"` */
 		ret = append_response_list_value(&tmp_buff1,
 				response_result_list, &results[i]);
 		if (unlikely(ret < 0)) {
@@ -556,22 +554,41 @@ append_command_results_value(const char *name, char **output,
 			return SPP_RET_NG;
 		}
 
+		/* Surround key-val pair such as `{ "result": "success" }`. */
 		ret = append_json_block_brackets(&tmp_buff2, "", tmp_buff1);
 		if (unlikely(ret < 0)) {
 			spp_strbuf_free(tmp_buff1);
 			spp_strbuf_free(tmp_buff2);
 			return SPP_RET_NG;
 		}
-
 	}
 
+	/**
+	 * Setup result statement such as
+	 * `"results": [ { "result": "success" } ]`.
+	 */
 	ret = append_json_array_brackets(output, name, tmp_buff2);
+
 	spp_strbuf_free(tmp_buff1);
 	spp_strbuf_free(tmp_buff2);
 	return ret;
 }
 
-/* append a list of status information for JSON format. */
+/**
+ * Setup response of `status` command.
+ *
+ * This is an example of the response.
+ *   "results": [ { "result": "success" } ],
+ *   "info": {
+ *       "client-id": 2,
+ *       "phy": [ 0, 1 ], "vhost": [  ], "ring": [  ],
+ *       "master-lcore": 1,
+ *       "core": [
+ *           {"core": 2, "type": "unuse"}, {"core": 3, "type": "unuse"}, ...
+ *       ],
+ *       "classifier_table": [  ]
+ *   }
+ */
 int
 append_info_value(const char *name, char **output)
 {
@@ -579,19 +596,19 @@ append_info_value(const char *name, char **output)
 	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
 	if (unlikely(tmp_buff == NULL)) {
 		RTE_LOG(ERR, WK_CMD_RES_FMT,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s)\n",
+				"Failed to get empty buf for append `%s`.\n",
 				name);
 		return SPP_RET_NG;
 	}
 
-	ret = append_response_list_value(&tmp_buff,
-			response_info_list, NULL);
+	/* Setup JSON msg in value of `info` key. */
+	ret = append_response_list_value(&tmp_buff, response_info_list, NULL);
 	if (unlikely(ret < SPP_RET_OK)) {
 		spp_strbuf_free(tmp_buff);
 		return SPP_RET_NG;
 	}
 
+	/* Setup response of JSON msg. */
 	ret = append_json_block_brackets(output, name, tmp_buff);
 	spp_strbuf_free(tmp_buff);
 	return ret;
@@ -674,7 +691,8 @@ wk_get_client_id(void)
  * of struct `cmd_response` which are for making each of parts of command
  * response.
  */
-/* Add entry of client ID to a response in JSON. */
+
+/* Add entry of client ID such as `"client-id": 1` to a response in JSON. */
 int
 add_client_id(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
-- 
2.17.1



------------------------------

Message: 3
Date: Mon, 24 Jun 2019 15:21:22 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] shared/sec: fix comment of order of port
	ability
Message-ID: <20190624062122.22399-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

The order of members of enum `sppwk_port_abl_ops` should be the same as
`PORT_ABILITY_STAT_LIST` and it is described as comment, but the name of
enum is different. This update is to correct the name to
`sppwk_port_abl_ops`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/shared/secondary/spp_worker_th/cmd_res_formatter.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index 21024b9..9c0c873 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -35,7 +35,7 @@ const char *SPPWK_PROC_TYPE_LIST[] = {
 
 /**
  * List of port abilities. The order of items should be same as the order of
- * enum `spp_port_ability_type` in spp_vf.h.
+ * enum `sppwk_port_abl_ops` in spp_vf.h.
  */
 const char *PORT_ABILITY_STAT_LIST[] = {
 	"none",
-- 
2.17.1



------------------------------

Message: 4
Date: Mon, 24 Jun 2019 15:21:37 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] shared/sec: move exec_one_cmd from shared dir
Message-ID: <20190624062137.22452-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

exec_one_cmd() and functions called in it are defined in shared
directory, but including worker type specific code.

This update is to move these functions to under each of `src/vf` and
`src/mirror` dirs. Each exec_one_cmd() is defined under these
dirs and called from shared function exec_cmds() in `cmd_runner.c`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/Makefile                           |   2 +-
 src/mirror/mir_cmd_runner.c                   | 288 ++++++++++++
 .../secondary/spp_worker_th/cmd_runner.c      | 413 +-----------------
 .../secondary/spp_worker_th/cmd_runner.h      |   4 +
 .../secondary/spp_worker_th/mirror_deps.h     |   3 +
 src/shared/secondary/spp_worker_th/vf_deps.h  |   3 +
 src/vf/Makefile                               |   3 +-
 src/vf/vf_cmd_runner.c                        | 411 +++++++++++++++++
 8 files changed, 713 insertions(+), 414 deletions(-)
 create mode 100644 src/mirror/mir_cmd_runner.c
 create mode 100644 src/vf/vf_cmd_runner.c

diff --git a/src/mirror/Makefile b/src/mirror/Makefile
index 7e666f5..f584fd1 100644
--- a/src/mirror/Makefile
+++ b/src/mirror/Makefile
@@ -15,7 +15,7 @@ SPP_SEC_DIR = ../shared/secondary
 SPP_WKT_DIR = ../shared/secondary/spp_worker_th
 
 # all source are stored in SRCS-y
-SRCS-y := spp_mirror.c
+SRCS-y := spp_mirror.c mir_cmd_runner.c
 SRCS-y += ../shared/common.c
 SRCS-y += $(SPP_SEC_DIR)/utils.c $(SPP_SEC_DIR)/add_port.c
 SRCS-y += $(SPP_SEC_DIR)/json_helper.c
diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
new file mode 100644
index 0000000..5731628
--- /dev/null
+++ b/src/mirror/mir_cmd_runner.c
@@ -0,0 +1,288 @@
+/* SPDX-License-Identifier: BSD-3-Clause
+ * Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
+ */
+
+#include "shared/secondary/return_codes.h"
+#include "shared/secondary/spp_worker_th/cmd_parser.h"
+#include "shared/secondary/spp_worker_th/cmd_runner.h"
+#include "shared/secondary/spp_worker_th/mirror_deps.h"
+
+#define RTE_LOGTYPE_MIR_CMD_RUNNER RTE_LOGTYPE_USER1
+
+/* Assign worker thread or remove on specified lcore. */
+/* TODO(yasufum) revise func name for removing the term `component`. */
+static int
+update_comp(enum sppwk_action wk_action, const char *name,
+		unsigned int lcore_id, enum sppwk_worker_type wk_type)
+{
+	int ret;
+	int ret_del;
+	int comp_lcore_id = 0;
+	unsigned int tmp_lcore_id = 0;
+	struct sppwk_comp_info *comp_info = NULL;
+	/* TODO(yasufum) revise `core` to be more specific. */
+	struct core_info *core = NULL;
+	struct core_mng_info *info = NULL;
+	struct sppwk_comp_info *comp_info_base = NULL;
+	/* TODO(yasufum) revise `core_info` which is same as struct name. */
+	struct core_mng_info *core_info = NULL;
+	int *change_core = NULL;
+	int *change_component = NULL;
+
+	sppwk_get_mng_data(NULL, NULL, &comp_info_base, &core_info,
+				&change_core, &change_component, NULL);
+
+	switch (wk_action) {
+	case SPPWK_ACT_START:
+		info = (core_info + lcore_id);
+		if (info->status == SPP_CORE_UNUSE) {
+			RTE_LOG(ERR, MIR_CMD_RUNNER, "Core %d is not available because "
+				"it is in SPP_CORE_UNUSE state.\n", lcore_id);
+			return SPP_RET_NG;
+		}
+
+		comp_lcore_id = sppwk_get_lcore_id(name);
+		if (comp_lcore_id >= 0) {
+			RTE_LOG(ERR, MIR_CMD_RUNNER, "Component name '%s' is already "
+				"used.\n", name);
+			return SPP_RET_NG;
+		}
+
+		comp_lcore_id = get_free_lcore_id();
+		if (comp_lcore_id < 0) {
+			RTE_LOG(ERR, MIR_CMD_RUNNER, "Cannot assign component over the "
+				"maximum number.\n");
+			return SPP_RET_NG;
+		}
+
+		core = &info->core[info->upd_index];
+
+		comp_info = (comp_info_base + comp_lcore_id);
+		memset(comp_info, 0x00, sizeof(struct sppwk_comp_info));
+		strcpy(comp_info->name, name);
+		comp_info->wk_type = wk_type;
+		comp_info->lcore_id = lcore_id;
+		comp_info->comp_id = comp_lcore_id;
+
+		core->id[core->num] = comp_lcore_id;
+		core->num++;
+		ret = SPP_RET_OK;
+		tmp_lcore_id = lcore_id;
+		*(change_component + comp_lcore_id) = 1;
+		break;
+
+	case SPPWK_ACT_STOP:
+		comp_lcore_id = sppwk_get_lcore_id(name);
+		if (comp_lcore_id < 0)
+			return SPP_RET_OK;
+
+		comp_info = (comp_info_base + comp_lcore_id);
+		tmp_lcore_id = comp_info->lcore_id;
+		memset(comp_info, 0x00, sizeof(struct sppwk_comp_info));
+
+		info = (core_info + tmp_lcore_id);
+		core = &info->core[info->upd_index];
+
+		/* The latest lcore is released if worker thread is stopped. */
+		ret_del = del_comp_info(comp_lcore_id, core->num, core->id);
+		if (ret_del >= 0)
+			core->num--;
+
+		ret = SPP_RET_OK;
+		*(change_component + comp_lcore_id) = 0;
+		break;
+
+	default:  /* Unexpected case. */
+		ret = SPP_RET_NG;
+		break;
+	}
+
+	*(change_core + tmp_lcore_id) = 1;
+	return ret;
+}
+
+/* Check if over the maximum num of rx and tx ports of component. */
+static int
+check_mir_port_count(enum spp_port_rxtx rxtx, int num_rx, int num_tx)
+{
+	RTE_LOG(INFO, MIR_CMD_RUNNER, "port count, port_type=%d,"
+				" rx=%d, tx=%d\n", rxtx, num_rx, num_tx);
+	if (rxtx == SPP_PORT_RXTX_RX)
+		num_rx++;
+	else
+		num_tx++;
+	/* Add rx or tx port appointed in port_type. */
+	RTE_LOG(INFO, MIR_CMD_RUNNER, "Num of ports after count up,"
+				" port_type=%d, rx=%d, tx=%d\n",
+				rxtx, num_rx, num_tx);
+	if (num_rx > 1 || num_tx > 2)
+		return SPP_RET_NG;
+
+	return SPP_RET_OK;
+}
+
+/* Port add or del to execute it */
+static int
+update_port(enum sppwk_action wk_action,
+		const struct sppwk_port_idx *port,
+		enum spp_port_rxtx rxtx,
+		const char *name,
+		const struct spp_port_ability *ability)
+{
+	int ret = SPP_RET_NG;
+	int port_idx;
+	int ret_del = -1;
+	int comp_lcore_id = 0;
+	int cnt = 0;
+	struct sppwk_comp_info *comp_info = NULL;
+	struct sppwk_port_info *port_info = NULL;
+	int *nof_ports = NULL;
+	struct sppwk_port_info **ports = NULL;
+	struct sppwk_comp_info *comp_info_base = NULL;
+	int *change_component = NULL;
+
+	comp_lcore_id = sppwk_get_lcore_id(name);
+	if (comp_lcore_id < 0) {
+		RTE_LOG(ERR, MIR_CMD_RUNNER, "Unknown component by port command. "
+				"(component = %s)\n", name);
+		return SPP_RET_NG;
+	}
+	sppwk_get_mng_data(NULL, NULL,
+			&comp_info_base, NULL, NULL, &change_component, NULL);
+	comp_info = (comp_info_base + comp_lcore_id);
+	port_info = get_sppwk_port(port->iface_type, port->iface_no);
+	if (rxtx == SPP_PORT_RXTX_RX) {
+		nof_ports = &comp_info->nof_rx;
+		ports = comp_info->rx_ports;
+	} else {
+		nof_ports = &comp_info->nof_tx;
+		ports = comp_info->tx_ports;
+	}
+
+	switch (wk_action) {
+	case SPPWK_ACT_ADD:
+		/* Check if over the maximum num of ports of component. */
+		if (check_mir_port_count(rxtx, comp_info->nof_rx,
+				comp_info->nof_tx) != SPP_RET_OK)
+			return SPP_RET_NG;
+
+		/* Check if the port_info is included in array `ports`. */
+		port_idx = get_idx_port_info(port_info, *nof_ports, ports);
+		if (port_idx >= SPP_RET_OK) {
+			/* registered */
+			/* TODO(yasufum) confirm it is needed for spp_mirror. */
+			if (ability->ops == SPPWK_PORT_ABL_OPS_ADD_VLANTAG) {
+				while ((cnt < SPP_PORT_ABILITY_MAX) &&
+					    (port_info->ability[cnt].ops !=
+					    SPPWK_PORT_ABL_OPS_ADD_VLANTAG))
+					cnt++;
+				if (cnt >= SPP_PORT_ABILITY_MAX) {
+					RTE_LOG(ERR, MIR_CMD_RUNNER, "update VLAN tag "
+						"Non-registratio\n");
+					return SPP_RET_NG;
+				}
+				memcpy(&port_info->ability[cnt], ability,
+					sizeof(struct spp_port_ability));
+
+				ret = SPP_RET_OK;
+				break;
+			}
+			return SPP_RET_OK;
+		}
+
+		if (*nof_ports >= RTE_MAX_ETHPORTS) {
+			RTE_LOG(ERR, MIR_CMD_RUNNER, "Cannot assign port over the "
+				"maximum number.\n");
+			return SPP_RET_NG;
+		}
+
+		if (ability->ops != SPPWK_PORT_ABL_OPS_NONE) {
+			while ((cnt < SPP_PORT_ABILITY_MAX) &&
+					(port_info->ability[cnt].ops !=
+					SPPWK_PORT_ABL_OPS_NONE)) {
+				cnt++;
+			}
+			if (cnt >= SPP_PORT_ABILITY_MAX) {
+				RTE_LOG(ERR, MIR_CMD_RUNNER,
+						"No space of port ability.\n");
+				return SPP_RET_NG;
+			}
+			memcpy(&port_info->ability[cnt], ability,
+					sizeof(struct spp_port_ability));
+		}
+
+		port_info->iface_type = port->iface_type;
+		ports[*nof_ports] = port_info;
+		(*nof_ports)++;
+
+		ret = SPP_RET_OK;
+		break;
+
+	case SPPWK_ACT_DEL:
+		for (cnt = 0; cnt < SPP_PORT_ABILITY_MAX; cnt++) {
+			if (port_info->ability[cnt].ops ==
+					SPPWK_PORT_ABL_OPS_NONE)
+				continue;
+
+			if (port_info->ability[cnt].rxtx == rxtx)
+				memset(&port_info->ability[cnt], 0x00,
+					sizeof(struct spp_port_ability));
+		}
+
+		ret_del = delete_port_info(port_info, *nof_ports, ports);
+		if (ret_del == 0)
+			(*nof_ports)--; /* If deleted, decrement number. */
+
+		ret = SPP_RET_OK;
+		break;
+
+	default:  /* This case cannot be happend without invlid wk_action. */
+		return SPP_RET_NG;
+	}
+
+	*(change_component + comp_lcore_id) = 1;
+	return ret;
+}
+
+/* Execute one command. */
+int
+exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
+{
+	int ret;
+
+	RTE_LOG(INFO, MIR_CMD_RUNNER, "Exec `%s` cmd.\n",
+			sppwk_cmd_type_str(cmd->type));
+
+	switch (cmd->type) {
+	case SPPWK_CMDTYPE_WORKER:
+		ret = update_comp(
+				cmd->spec.comp.wk_action,
+				cmd->spec.comp.name,
+				cmd->spec.comp.core,
+				cmd->spec.comp.wk_type);
+		if (ret == 0) {
+			RTE_LOG(INFO, MIR_CMD_RUNNER, "Exec flush.\n");
+			ret = flush_cmd();
+		}
+		break;
+
+	case SPPWK_CMDTYPE_PORT:
+		RTE_LOG(INFO, MIR_CMD_RUNNER, "with action `%s`.\n",
+				sppwk_action_str(cmd->spec.port.wk_action));
+		ret = update_port(cmd->spec.port.wk_action,
+				&cmd->spec.port.port, cmd->spec.port.rxtx,
+				cmd->spec.port.name, &cmd->spec.port.ability);
+		if (ret == 0) {
+			RTE_LOG(INFO, MIR_CMD_RUNNER, "Exec flush.\n");
+			ret = flush_cmd();
+		}
+		break;
+
+	default:
+		/* Do nothing. */
+		ret = SPP_RET_OK;
+		break;
+	}
+
+	return ret;
+}
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 7c4c91c..64aef19 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -29,363 +29,8 @@ enum cmd_res_code {
 	CMD_INVALID,
 };
 
-/* Update classifier table with given action, add or del. */
-static int
-update_cls_table(enum sppwk_action wk_action,
-		enum spp_classifier_type type __attribute__ ((unused)),
-		int vid, const char *mac_str,
-		const struct sppwk_port_idx *port)
-{
-	/**
-	 * Use two types of mac addr in int64_t and uint64_t because first
-	 * one is checked if converted value from string  is negative for error.
-	 * If it is invalid, convert it to uint64_t.
-	 */
-	int64_t mac_int64;
-	uint64_t mac_uint64;
-	struct sppwk_port_info *port_info;
-
-	RTE_LOG(DEBUG, WK_CMD_RUNNER, "Called __func__ with "
-			"type `mac`, mac_addr `%s`, and port `%d:%d`.\n",
-			mac_str, port->iface_type, port->iface_no);
-
-	mac_int64 = sppwk_convert_mac_str_to_int64(mac_str);
-	if (unlikely(mac_int64 == -1)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER, "Invalid MAC address `%s`.\n",
-				mac_str);
-		return SPP_RET_NG;
-	}
-	mac_uint64 = (uint64_t)mac_int64;
-
-	port_info = get_sppwk_port(port->iface_type, port->iface_no);
-	if (unlikely(port_info == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER, "Failed to get port %d:%d.\n",
-				port->iface_type, port->iface_no);
-		return SPP_RET_NG;
-	}
-	if (unlikely(port_info->iface_type == UNDEF)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER, "Port %d:%d doesn't exist.\n",
-				port->iface_type, port->iface_no);
-		return SPP_RET_NG;
-	}
-
-	if (wk_action == SPPWK_ACT_DEL) {
-		if ((port_info->cls_attrs.vlantag.vid != 0) &&
-				port_info->cls_attrs.vlantag.vid != vid) {
-			RTE_LOG(ERR, WK_CMD_RUNNER,
-					"Unexpected VLAN ID `%d`.\n", vid);
-			return SPP_RET_NG;
-		}
-		if ((port_info->cls_attrs.mac_addr != 0) &&
-				port_info->cls_attrs.mac_addr != mac_uint64) {
-			RTE_LOG(ERR, WK_CMD_RUNNER, "Unexpected MAC %s.\n",
-					mac_str);
-			return SPP_RET_NG;
-		}
-
-		/* Initialize deleted attributes again. */
-		port_info->cls_attrs.vlantag.vid = ETH_VLAN_ID_MAX;
-		port_info->cls_attrs.mac_addr = 0;
-		memset(port_info->cls_attrs.mac_addr_str, 0x00, STR_LEN_SHORT);
-	} else if (wk_action == SPPWK_ACT_ADD) {
-		if (unlikely(port_info->cls_attrs.vlantag.vid !=
-				ETH_VLAN_ID_MAX)) {
-			/* TODO(yasufum) why two vids are required in msg ? */
-			RTE_LOG(ERR, WK_CMD_RUNNER, "Used port %d:%d, vid %d != %d.\n",
-					port->iface_type, port->iface_no,
-					port_info->cls_attrs.vlantag.vid, vid);
-			return SPP_RET_NG;
-		}
-		if (unlikely(port_info->cls_attrs.mac_addr != 0)) {
-			/* TODO(yasufum) why two macs are required in msg ? */
-			RTE_LOG(ERR, WK_CMD_RUNNER, "Used port %d:%d, mac %s != %s.\n",
-					port->iface_type, port->iface_no,
-					port_info->cls_attrs.mac_addr_str,
-					mac_str);
-			return SPP_RET_NG;
-		}
-
-		/* Update attrs with validated params. */
-		port_info->cls_attrs.vlantag.vid = vid;
-		port_info->cls_attrs.mac_addr = mac_uint64;
-		strcpy(port_info->cls_attrs.mac_addr_str, mac_str);
-	}
-
-	set_component_change_port(port_info, SPP_PORT_RXTX_TX);
-	return SPP_RET_OK;
-}
-
-/* Assign worker thread or remove on specified lcore. */
-/* TODO(yasufum) revise func name for removing the term `component`. */
-static int
-update_comp(enum sppwk_action wk_action, const char *name,
-		unsigned int lcore_id, enum sppwk_worker_type wk_type)
-{
-	int ret;
-	int ret_del;
-	int comp_lcore_id = 0;
-	unsigned int tmp_lcore_id = 0;
-	struct sppwk_comp_info *comp_info = NULL;
-	/* TODO(yasufum) revise `core` to be more specific. */
-	struct core_info *core = NULL;
-	struct core_mng_info *info = NULL;
-	struct sppwk_comp_info *comp_info_base = NULL;
-	/* TODO(yasufum) revise `core_info` which is same as struct name. */
-	struct core_mng_info *core_info = NULL;
-	int *change_core = NULL;
-	int *change_component = NULL;
-
-	sppwk_get_mng_data(NULL, NULL, &comp_info_base, &core_info,
-				&change_core, &change_component, NULL);
-
-	switch (wk_action) {
-	case SPPWK_ACT_START:
-		info = (core_info + lcore_id);
-		if (info->status == SPP_CORE_UNUSE) {
-			RTE_LOG(ERR, WK_CMD_RUNNER, "Core %d is not available because "
-				"it is in SPP_CORE_UNUSE state.\n", lcore_id);
-			return SPP_RET_NG;
-		}
-
-		comp_lcore_id = sppwk_get_lcore_id(name);
-		if (comp_lcore_id >= 0) {
-			RTE_LOG(ERR, WK_CMD_RUNNER, "Component name '%s' is already "
-				"used.\n", name);
-			return SPP_RET_NG;
-		}
-
-		comp_lcore_id = get_free_lcore_id();
-		if (comp_lcore_id < 0) {
-			RTE_LOG(ERR, WK_CMD_RUNNER, "Cannot assign component over the "
-				"maximum number.\n");
-			return SPP_RET_NG;
-		}
-
-		core = &info->core[info->upd_index];
-
-		comp_info = (comp_info_base + comp_lcore_id);
-		memset(comp_info, 0x00, sizeof(struct sppwk_comp_info));
-		strcpy(comp_info->name, name);
-		comp_info->wk_type = wk_type;
-		comp_info->lcore_id = lcore_id;
-		comp_info->comp_id = comp_lcore_id;
-
-		core->id[core->num] = comp_lcore_id;
-		core->num++;
-		ret = SPP_RET_OK;
-		tmp_lcore_id = lcore_id;
-		*(change_component + comp_lcore_id) = 1;
-		break;
-
-	case SPPWK_ACT_STOP:
-		comp_lcore_id = sppwk_get_lcore_id(name);
-		if (comp_lcore_id < 0)
-			return SPP_RET_OK;
-
-		comp_info = (comp_info_base + comp_lcore_id);
-		tmp_lcore_id = comp_info->lcore_id;
-		memset(comp_info, 0x00, sizeof(struct sppwk_comp_info));
-
-		info = (core_info + tmp_lcore_id);
-		core = &info->core[info->upd_index];
-
-		/**
-		 * TODO(yasufum) check if this ifdef is simply removed by
-		 * running other than spp_vf.
-		 */
-#ifdef SPP_VF_MODULE
-		/* initialize classifier information */
-		if (comp_info->wk_type == SPPWK_TYPE_CLS)
-			init_classifier_info(comp_lcore_id);
-#endif /* SPP_VF_MODULE */
-
-		/* The latest lcore is released if worker thread is stopped. */
-		ret_del = del_comp_info(comp_lcore_id, core->num, core->id);
-		if (ret_del >= 0)
-			core->num--;
-
-		ret = SPP_RET_OK;
-		*(change_component + comp_lcore_id) = 0;
-		break;
-
-	default:  /* Unexpected case. */
-		ret = SPP_RET_NG;
-		break;
-	}
-
-	*(change_core + tmp_lcore_id) = 1;
-	return ret;
-}
-
-/* Check if over the maximum num of rx and tx ports of component. */
-static int
-check_port_count(int component_type, enum spp_port_rxtx rxtx, int num_rx,
-								int num_tx)
-{
-	RTE_LOG(INFO, WK_CMD_RUNNER, "port count, port_type=%d,"
-				" rx=%d, tx=%d\n", rxtx, num_rx, num_tx);
-	if (rxtx == SPP_PORT_RXTX_RX)
-		num_rx++;
-	else
-		num_tx++;
-	/* Add rx or tx port appointed in port_type. */
-	RTE_LOG(INFO, WK_CMD_RUNNER, "Num of ports after count up,"
-				" port_type=%d, rx=%d, tx=%d\n",
-				rxtx, num_rx, num_tx);
-	switch (component_type) {
-	case SPPWK_TYPE_FWD:
-		if (num_rx > 1 || num_tx > 1)
-			return SPP_RET_NG;
-		break;
-
-	case SPPWK_TYPE_MRG:
-		if (num_tx > 1)
-			return SPP_RET_NG;
-		break;
-
-	case SPPWK_TYPE_CLS:
-		if (num_rx > 1)
-			return SPP_RET_NG;
-		break;
-
-	case SPPWK_TYPE_MIR:
-		if (num_rx > 1 || num_tx > 2)
-			return SPP_RET_NG;
-		break;
-
-	default:
-		/* Illegal component type. */
-		return SPP_RET_NG;
-	}
-
-	return SPP_RET_OK;
-}
-
-/* Port add or del to execute it */
-static int
-update_port(enum sppwk_action wk_action,
-		const struct sppwk_port_idx *port,
-		enum spp_port_rxtx rxtx,
-		const char *name,
-		const struct spp_port_ability *ability)
-{
-	int ret = SPP_RET_NG;
-	int port_idx;
-	int ret_del = -1;
-	int comp_lcore_id = 0;
-	int cnt = 0;
-	struct sppwk_comp_info *comp_info = NULL;
-	struct sppwk_port_info *port_info = NULL;
-	int *nof_ports = NULL;
-	struct sppwk_port_info **ports = NULL;
-	struct sppwk_comp_info *comp_info_base = NULL;
-	int *change_component = NULL;
-
-	comp_lcore_id = sppwk_get_lcore_id(name);
-	if (comp_lcore_id < 0) {
-		RTE_LOG(ERR, WK_CMD_RUNNER, "Unknown component by port command. "
-				"(component = %s)\n", name);
-		return SPP_RET_NG;
-	}
-	sppwk_get_mng_data(NULL, NULL,
-			&comp_info_base, NULL, NULL, &change_component, NULL);
-	comp_info = (comp_info_base + comp_lcore_id);
-	port_info = get_sppwk_port(port->iface_type, port->iface_no);
-	if (rxtx == SPP_PORT_RXTX_RX) {
-		nof_ports = &comp_info->nof_rx;
-		ports = comp_info->rx_ports;
-	} else {
-		nof_ports = &comp_info->nof_tx;
-		ports = comp_info->tx_ports;
-	}
-
-	switch (wk_action) {
-	case SPPWK_ACT_ADD:
-		/* Check if over the maximum num of ports of component. */
-		if (check_port_count(comp_info->wk_type, rxtx,
-				comp_info->nof_rx,
-				comp_info->nof_tx) != SPP_RET_OK)
-			return SPP_RET_NG;
-
-		/* Check if the port_info is included in array `ports`. */
-		port_idx = get_idx_port_info(port_info, *nof_ports, ports);
-		if (port_idx >= SPP_RET_OK) {
-			/* registered */
-			if (ability->ops == SPPWK_PORT_ABL_OPS_ADD_VLANTAG) {
-				while ((cnt < SPP_PORT_ABILITY_MAX) &&
-					    (port_info->ability[cnt].ops !=
-					    SPPWK_PORT_ABL_OPS_ADD_VLANTAG))
-					cnt++;
-				if (cnt >= SPP_PORT_ABILITY_MAX) {
-					RTE_LOG(ERR, WK_CMD_RUNNER, "update VLAN tag "
-						"Non-registratio\n");
-					return SPP_RET_NG;
-				}
-				memcpy(&port_info->ability[cnt], ability,
-					sizeof(struct spp_port_ability));
-
-				ret = SPP_RET_OK;
-				break;
-			}
-			return SPP_RET_OK;
-		}
-
-		if (*nof_ports >= RTE_MAX_ETHPORTS) {
-			RTE_LOG(ERR, WK_CMD_RUNNER, "Cannot assign port over the "
-				"maximum number.\n");
-			return SPP_RET_NG;
-		}
-
-		if (ability->ops != SPPWK_PORT_ABL_OPS_NONE) {
-			while ((cnt < SPP_PORT_ABILITY_MAX) &&
-					(port_info->ability[cnt].ops !=
-					SPPWK_PORT_ABL_OPS_NONE)) {
-				cnt++;
-			}
-			if (cnt >= SPP_PORT_ABILITY_MAX) {
-				RTE_LOG(ERR, WK_CMD_RUNNER,
-						"No space of port ability.\n");
-				return SPP_RET_NG;
-			}
-			memcpy(&port_info->ability[cnt], ability,
-					sizeof(struct spp_port_ability));
-		}
-
-		port_info->iface_type = port->iface_type;
-		ports[*nof_ports] = port_info;
-		(*nof_ports)++;
-
-		ret = SPP_RET_OK;
-		break;
-
-	case SPPWK_ACT_DEL:
-		for (cnt = 0; cnt < SPP_PORT_ABILITY_MAX; cnt++) {
-			if (port_info->ability[cnt].ops ==
-					SPPWK_PORT_ABL_OPS_NONE)
-				continue;
-
-			if (port_info->ability[cnt].rxtx == rxtx)
-				memset(&port_info->ability[cnt], 0x00,
-					sizeof(struct spp_port_ability));
-		}
-
-		ret_del = delete_port_info(port_info, *nof_ports, ports);
-		if (ret_del == 0)
-			(*nof_ports)--; /* If deleted, decrement number. */
-
-		ret = SPP_RET_OK;
-		break;
-
-	default:  /* This case cannot be happend without invlid wk_action. */
-		return SPP_RET_NG;
-	}
-
-	*(change_component + comp_lcore_id) = 1;
-	return ret;
-}
-
 /* Activate temporarily stored command. */
-static int
+int
 flush_cmd(void)
 {
 	int ret;
@@ -408,62 +53,6 @@ flush_cmd(void)
 	return ret;
 }
 
-/* Execute one command. */
-static int
-exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
-{
-	int ret;
-
-	RTE_LOG(INFO, WK_CMD_RUNNER, "Exec `%s` cmd.\n",
-			sppwk_cmd_type_str(cmd->type));
-
-	switch (cmd->type) {
-	case SPPWK_CMDTYPE_CLS_MAC:
-	case SPPWK_CMDTYPE_CLS_VLAN:
-		ret = update_cls_table(cmd->spec.cls_table.wk_action,
-				cmd->spec.cls_table.type,
-				cmd->spec.cls_table.vid,
-				cmd->spec.cls_table.mac,
-				&cmd->spec.cls_table.port);
-		if (ret == 0) {
-			RTE_LOG(INFO, WK_CMD_RUNNER, "Exec flush.\n");
-			ret = flush_cmd();
-		}
-		break;
-
-	case SPPWK_CMDTYPE_WORKER:
-		ret = update_comp(
-				cmd->spec.comp.wk_action,
-				cmd->spec.comp.name,
-				cmd->spec.comp.core,
-				cmd->spec.comp.wk_type);
-		if (ret == 0) {
-			RTE_LOG(INFO, WK_CMD_RUNNER, "Exec flush.\n");
-			ret = flush_cmd();
-		}
-		break;
-
-	case SPPWK_CMDTYPE_PORT:
-		RTE_LOG(INFO, WK_CMD_RUNNER, "with action `%s`.\n",
-				sppwk_action_str(cmd->spec.port.wk_action));
-		ret = update_port(cmd->spec.port.wk_action,
-				&cmd->spec.port.port, cmd->spec.port.rxtx,
-				cmd->spec.port.name, &cmd->spec.port.ability);
-		if (ret == 0) {
-			RTE_LOG(INFO, WK_CMD_RUNNER, "Exec flush.\n");
-			ret = flush_cmd();
-		}
-		break;
-
-	default:
-		/* Do nothing. */
-		ret = SPP_RET_OK;
-		break;
-	}
-
-	return ret;
-}
-
 /* Get error message of parsing from given wk_err_msg object. */
 static const char *
 get_parse_err_msg(
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.h b/src/shared/secondary/spp_worker_th/cmd_runner.h
index 5d85733..3a71e3e 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.h
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.h
@@ -15,6 +15,10 @@
 
 #include "cmd_utils.h"
 
+/**
+ */
+int flush_cmd(void);
+
 /**
  * Setup connection for accepting commands from spp-ctl.
  *
diff --git a/src/shared/secondary/spp_worker_th/mirror_deps.h b/src/shared/secondary/spp_worker_th/mirror_deps.h
index bfa715d..55ba913 100644
--- a/src/shared/secondary/spp_worker_th/mirror_deps.h
+++ b/src/shared/secondary/spp_worker_th/mirror_deps.h
@@ -6,6 +6,9 @@
 #define __SPP_WORKER_TH_MIRROR_DEPS_H__
 
 #include "cmd_utils.h"
+#include "cmd_parser.h"
+
+int exec_one_cmd(const struct sppwk_cmd_attrs *cmd);
 
 /**
  * Update mirror info.
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 73e0f9a..6a78ef5 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -8,6 +8,7 @@
 #include <rte_malloc.h>
 #include <rte_hash.h>
 #include "cmd_utils.h"
+#include "cmd_parser.h"
 
 /** Number of VLAN ID */
 #define NOF_VLAN 4096
@@ -53,6 +54,8 @@ free_mac_classifier(struct mac_classifier *mac_clf)
 	rte_free(mac_clf);
 }
 
+int exec_one_cmd(const struct sppwk_cmd_attrs *cmd);
+
 /**
  * Update classifier info.
  *
diff --git a/src/vf/Makefile b/src/vf/Makefile
index dd5a100..83d1f14 100644
--- a/src/vf/Makefile
+++ b/src/vf/Makefile
@@ -23,10 +23,11 @@ SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
 SRCS-y += $(SPP_WKT_DIR)/spp_port.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
+SRCS-y += ../shared/common.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_runner.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_utils.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_res_formatter.c
-SRCS-y += ../shared/common.c
+SRCS-y += vf_cmd_runner.c
 
 CFLAGS += -DALLOW_EXPERIMENTAL_API
 CFLAGS += $(WERROR_FLAGS) -O3 -MMD
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
new file mode 100644
index 0000000..2fb071e
--- /dev/null
+++ b/src/vf/vf_cmd_runner.c
@@ -0,0 +1,411 @@
+/* SPDX-License-Identifier: BSD-3-Clause
+ * Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
+ */
+
+#include "classifier_mac.h"
+#include "shared/secondary/return_codes.h"
+#include "shared/secondary/spp_worker_th/cmd_parser.h"
+#include "shared/secondary/spp_worker_th/cmd_runner.h"
+#include "shared/secondary/spp_worker_th/vf_deps.h"
+
+#define RTE_LOGTYPE_VF_CMD_RUNNER RTE_LOGTYPE_USER1
+
+/* Update classifier table with given action, add or del. */
+static int
+update_cls_table(enum sppwk_action wk_action,
+		enum spp_classifier_type type __attribute__ ((unused)),
+		int vid, const char *mac_str,
+		const struct sppwk_port_idx *port)
+{
+	/**
+	 * Use two types of mac addr in int64_t and uint64_t because first
+	 * one is checked if converted value from string  is negative for error.
+	 * If it is invalid, convert it to uint64_t.
+	 */
+	int64_t mac_int64;
+	uint64_t mac_uint64;
+	struct sppwk_port_info *port_info;
+
+	RTE_LOG(DEBUG, VF_CMD_RUNNER, "Called __func__ with "
+			"type `mac`, mac_addr `%s`, and port `%d:%d`.\n",
+			mac_str, port->iface_type, port->iface_no);
+
+	mac_int64 = sppwk_convert_mac_str_to_int64(mac_str);
+	if (unlikely(mac_int64 == -1)) {
+		RTE_LOG(ERR, VF_CMD_RUNNER, "Invalid MAC address `%s`.\n",
+				mac_str);
+		return SPP_RET_NG;
+	}
+	mac_uint64 = (uint64_t)mac_int64;
+
+	port_info = get_sppwk_port(port->iface_type, port->iface_no);
+	if (unlikely(port_info == NULL)) {
+		RTE_LOG(ERR, VF_CMD_RUNNER, "Failed to get port %d:%d.\n",
+				port->iface_type, port->iface_no);
+		return SPP_RET_NG;
+	}
+	if (unlikely(port_info->iface_type == UNDEF)) {
+		RTE_LOG(ERR, VF_CMD_RUNNER, "Port %d:%d doesn't exist.\n",
+				port->iface_type, port->iface_no);
+		return SPP_RET_NG;
+	}
+
+	if (wk_action == SPPWK_ACT_DEL) {
+		if ((port_info->cls_attrs.vlantag.vid != 0) &&
+				port_info->cls_attrs.vlantag.vid != vid) {
+			RTE_LOG(ERR, VF_CMD_RUNNER,
+					"Unexpected VLAN ID `%d`.\n", vid);
+			return SPP_RET_NG;
+		}
+		if ((port_info->cls_attrs.mac_addr != 0) &&
+				port_info->cls_attrs.mac_addr != mac_uint64) {
+			RTE_LOG(ERR, VF_CMD_RUNNER, "Unexpected MAC %s.\n",
+					mac_str);
+			return SPP_RET_NG;
+		}
+
+		/* Initialize deleted attributes again. */
+		port_info->cls_attrs.vlantag.vid = ETH_VLAN_ID_MAX;
+		port_info->cls_attrs.mac_addr = 0;
+		memset(port_info->cls_attrs.mac_addr_str, 0x00, STR_LEN_SHORT);
+	} else if (wk_action == SPPWK_ACT_ADD) {
+		if (unlikely(port_info->cls_attrs.vlantag.vid !=
+				ETH_VLAN_ID_MAX)) {
+			/* TODO(yasufum) why two vids are required in msg ? */
+			RTE_LOG(ERR, VF_CMD_RUNNER, "Used port %d:%d, vid %d != %d.\n",
+					port->iface_type, port->iface_no,
+					port_info->cls_attrs.vlantag.vid, vid);
+			return SPP_RET_NG;
+		}
+		if (unlikely(port_info->cls_attrs.mac_addr != 0)) {
+			/* TODO(yasufum) why two macs are required in msg ? */
+			RTE_LOG(ERR, VF_CMD_RUNNER, "Used port %d:%d, mac %s != %s.\n",
+					port->iface_type, port->iface_no,
+					port_info->cls_attrs.mac_addr_str,
+					mac_str);
+			return SPP_RET_NG;
+		}
+
+		/* Update attrs with validated params. */
+		port_info->cls_attrs.vlantag.vid = vid;
+		port_info->cls_attrs.mac_addr = mac_uint64;
+		strcpy(port_info->cls_attrs.mac_addr_str, mac_str);
+	}
+
+	set_component_change_port(port_info, SPP_PORT_RXTX_TX);
+	return SPP_RET_OK;
+}
+
+/* Assign worker thread or remove on specified lcore. */
+/* TODO(yasufum) revise func name for removing term `component` or `comp`. */
+static int
+update_comp(enum sppwk_action wk_action, const char *name,
+		unsigned int lcore_id, enum sppwk_worker_type wk_type)
+{
+	int ret;
+	int ret_del;
+	int comp_lcore_id = 0;
+	unsigned int tmp_lcore_id = 0;
+	struct sppwk_comp_info *comp_info = NULL;
+	/* TODO(yasufum) revise `core` to be more specific. */
+	struct core_info *core = NULL;
+	struct core_mng_info *info = NULL;
+	struct sppwk_comp_info *comp_info_base = NULL;
+	/* TODO(yasufum) revise `core_info` which is same as struct name. */
+	struct core_mng_info *core_info = NULL;
+	int *change_core = NULL;
+	int *change_component = NULL;
+
+	sppwk_get_mng_data(NULL, NULL, &comp_info_base, &core_info,
+				&change_core, &change_component, NULL);
+
+	switch (wk_action) {
+	case SPPWK_ACT_START:
+		info = (core_info + lcore_id);
+		if (info->status == SPP_CORE_UNUSE) {
+			RTE_LOG(ERR, VF_CMD_RUNNER, "Core %d is not available because "
+				"it is in SPP_CORE_UNUSE state.\n", lcore_id);
+			return SPP_RET_NG;
+		}
+
+		comp_lcore_id = sppwk_get_lcore_id(name);
+		if (comp_lcore_id >= 0) {
+			RTE_LOG(ERR, VF_CMD_RUNNER, "Component name '%s' is already "
+				"used.\n", name);
+			return SPP_RET_NG;
+		}
+
+		comp_lcore_id = get_free_lcore_id();
+		if (comp_lcore_id < 0) {
+			RTE_LOG(ERR, VF_CMD_RUNNER, "Cannot assign component over the "
+				"maximum number.\n");
+			return SPP_RET_NG;
+		}
+
+		core = &info->core[info->upd_index];
+
+		comp_info = (comp_info_base + comp_lcore_id);
+		memset(comp_info, 0x00, sizeof(struct sppwk_comp_info));
+		strcpy(comp_info->name, name);
+		comp_info->wk_type = wk_type;
+		comp_info->lcore_id = lcore_id;
+		comp_info->comp_id = comp_lcore_id;
+
+		core->id[core->num] = comp_lcore_id;
+		core->num++;
+		ret = SPP_RET_OK;
+		tmp_lcore_id = lcore_id;
+		*(change_component + comp_lcore_id) = 1;
+		break;
+
+	case SPPWK_ACT_STOP:
+		comp_lcore_id = sppwk_get_lcore_id(name);
+		if (comp_lcore_id < 0)
+			return SPP_RET_OK;
+
+		comp_info = (comp_info_base + comp_lcore_id);
+		tmp_lcore_id = comp_info->lcore_id;
+		memset(comp_info, 0x00, sizeof(struct sppwk_comp_info));
+
+		info = (core_info + tmp_lcore_id);
+		core = &info->core[info->upd_index];
+
+		/* initialize classifier information */
+		if (comp_info->wk_type == SPPWK_TYPE_CLS)
+			init_classifier_info(comp_lcore_id);
+
+		/* The latest lcore is released if worker thread is stopped. */
+		ret_del = del_comp_info(comp_lcore_id, core->num, core->id);
+		if (ret_del >= 0)
+			core->num--;
+
+		ret = SPP_RET_OK;
+		*(change_component + comp_lcore_id) = 0;
+		break;
+
+	default:  /* Unexpected case. */
+		ret = SPP_RET_NG;
+		break;
+	}
+
+	*(change_core + tmp_lcore_id) = 1;
+	return ret;
+}
+
+/* Check if over the maximum num of rx and tx ports of component. */
+static int
+check_vf_port_count(int component_type, enum spp_port_rxtx rxtx, int num_rx,
+								int num_tx)
+{
+	RTE_LOG(INFO, VF_CMD_RUNNER, "port count, port_type=%d,"
+				" rx=%d, tx=%d\n", rxtx, num_rx, num_tx);
+	if (rxtx == SPP_PORT_RXTX_RX)
+		num_rx++;
+	else
+		num_tx++;
+	/* Add rx or tx port appointed in port_type. */
+	RTE_LOG(INFO, VF_CMD_RUNNER, "Num of ports after count up,"
+				" port_type=%d, rx=%d, tx=%d\n",
+				rxtx, num_rx, num_tx);
+	switch (component_type) {
+	case SPPWK_TYPE_FWD:
+		if (num_rx > 1 || num_tx > 1)
+			return SPP_RET_NG;
+		break;
+
+	case SPPWK_TYPE_MRG:
+		if (num_tx > 1)
+			return SPP_RET_NG;
+		break;
+
+	case SPPWK_TYPE_CLS:
+		if (num_rx > 1)
+			return SPP_RET_NG;
+		break;
+
+	default:
+		/* Illegal component type. */
+		return SPP_RET_NG;
+	}
+
+	return SPP_RET_OK;
+}
+
+/* Port add or del to execute it */
+static int
+update_port(enum sppwk_action wk_action,
+		const struct sppwk_port_idx *port,
+		enum spp_port_rxtx rxtx,
+		const char *name,
+		const struct spp_port_ability *ability)
+{
+	int ret = SPP_RET_NG;
+	int port_idx;
+	int ret_del = -1;
+	int comp_lcore_id = 0;
+	int cnt = 0;
+	struct sppwk_comp_info *comp_info = NULL;
+	struct sppwk_port_info *port_info = NULL;
+	int *nof_ports = NULL;
+	struct sppwk_port_info **ports = NULL;
+	struct sppwk_comp_info *comp_info_base = NULL;
+	int *change_component = NULL;
+
+	comp_lcore_id = sppwk_get_lcore_id(name);
+	if (comp_lcore_id < 0) {
+		RTE_LOG(ERR, VF_CMD_RUNNER, "Unknown component by port command. "
+				"(component = %s)\n", name);
+		return SPP_RET_NG;
+	}
+	sppwk_get_mng_data(NULL, NULL,
+			&comp_info_base, NULL, NULL, &change_component, NULL);
+	comp_info = (comp_info_base + comp_lcore_id);
+	port_info = get_sppwk_port(port->iface_type, port->iface_no);
+	if (rxtx == SPP_PORT_RXTX_RX) {
+		nof_ports = &comp_info->nof_rx;
+		ports = comp_info->rx_ports;
+	} else {
+		nof_ports = &comp_info->nof_tx;
+		ports = comp_info->tx_ports;
+	}
+
+	switch (wk_action) {
+	case SPPWK_ACT_ADD:
+		/* Check if over the maximum num of ports of component. */
+		if (check_vf_port_count(comp_info->wk_type, rxtx,
+				comp_info->nof_rx,
+				comp_info->nof_tx) != SPP_RET_OK)
+			return SPP_RET_NG;
+
+		/* Check if the port_info is included in array `ports`. */
+		port_idx = get_idx_port_info(port_info, *nof_ports, ports);
+		if (port_idx >= SPP_RET_OK) {
+			/* registered */
+			if (ability->ops == SPPWK_PORT_ABL_OPS_ADD_VLANTAG) {
+				while ((cnt < SPP_PORT_ABILITY_MAX) &&
+					    (port_info->ability[cnt].ops !=
+					    SPPWK_PORT_ABL_OPS_ADD_VLANTAG))
+					cnt++;
+				if (cnt >= SPP_PORT_ABILITY_MAX) {
+					RTE_LOG(ERR, VF_CMD_RUNNER, "update VLAN tag "
+						"Non-registratio\n");
+					return SPP_RET_NG;
+				}
+				memcpy(&port_info->ability[cnt], ability,
+					sizeof(struct spp_port_ability));
+
+				ret = SPP_RET_OK;
+				break;
+			}
+			return SPP_RET_OK;
+		}
+
+		if (*nof_ports >= RTE_MAX_ETHPORTS) {
+			RTE_LOG(ERR, VF_CMD_RUNNER, "Cannot assign port over the "
+				"maximum number.\n");
+			return SPP_RET_NG;
+		}
+
+		if (ability->ops != SPPWK_PORT_ABL_OPS_NONE) {
+			while ((cnt < SPP_PORT_ABILITY_MAX) &&
+					(port_info->ability[cnt].ops !=
+					SPPWK_PORT_ABL_OPS_NONE)) {
+				cnt++;
+			}
+			if (cnt >= SPP_PORT_ABILITY_MAX) {
+				RTE_LOG(ERR, VF_CMD_RUNNER,
+						"No space of port ability.\n");
+				return SPP_RET_NG;
+			}
+			memcpy(&port_info->ability[cnt], ability,
+					sizeof(struct spp_port_ability));
+		}
+
+		port_info->iface_type = port->iface_type;
+		ports[*nof_ports] = port_info;
+		(*nof_ports)++;
+
+		ret = SPP_RET_OK;
+		break;
+
+	case SPPWK_ACT_DEL:
+		for (cnt = 0; cnt < SPP_PORT_ABILITY_MAX; cnt++) {
+			if (port_info->ability[cnt].ops ==
+					SPPWK_PORT_ABL_OPS_NONE)
+				continue;
+
+			if (port_info->ability[cnt].rxtx == rxtx)
+				memset(&port_info->ability[cnt], 0x00,
+					sizeof(struct spp_port_ability));
+		}
+
+		ret_del = delete_port_info(port_info, *nof_ports, ports);
+		if (ret_del == 0)
+			(*nof_ports)--; /* If deleted, decrement number. */
+
+		ret = SPP_RET_OK;
+		break;
+
+	default:  /* This case cannot be happend without invlid wk_action. */
+		return SPP_RET_NG;
+	}
+
+	*(change_component + comp_lcore_id) = 1;
+	return ret;
+}
+
+/* Execute one command. */
+int
+exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
+{
+	int ret;
+
+	RTE_LOG(INFO, VF_CMD_RUNNER, "Exec `%s` cmd.\n",
+			sppwk_cmd_type_str(cmd->type));
+
+	switch (cmd->type) {
+	case SPPWK_CMDTYPE_CLS_MAC:
+	case SPPWK_CMDTYPE_CLS_VLAN:
+		ret = update_cls_table(cmd->spec.cls_table.wk_action,
+				cmd->spec.cls_table.type,
+				cmd->spec.cls_table.vid,
+				cmd->spec.cls_table.mac,
+				&cmd->spec.cls_table.port);
+		if (ret == 0) {
+			RTE_LOG(INFO, VF_CMD_RUNNER, "Exec flush.\n");
+			ret = flush_cmd();
+		}
+		break;
+
+	case SPPWK_CMDTYPE_WORKER:
+		ret = update_comp(
+				cmd->spec.comp.wk_action,
+				cmd->spec.comp.name,
+				cmd->spec.comp.core,
+				cmd->spec.comp.wk_type);
+		if (ret == 0) {
+			RTE_LOG(INFO, VF_CMD_RUNNER, "Exec flush.\n");
+			ret = flush_cmd();
+		}
+		break;
+
+	case SPPWK_CMDTYPE_PORT:
+		RTE_LOG(INFO, VF_CMD_RUNNER, "with action `%s`.\n",
+				sppwk_action_str(cmd->spec.port.wk_action));
+		ret = update_port(cmd->spec.port.wk_action,
+				&cmd->spec.port.port, cmd->spec.port.rxtx,
+				cmd->spec.port.name, &cmd->spec.port.ability);
+		if (ret == 0) {
+			RTE_LOG(INFO, VF_CMD_RUNNER, "Exec flush.\n");
+			ret = flush_cmd();
+		}
+		break;
+
+	default:
+		/* Do nothing. */
+		ret = SPP_RET_OK;
+		break;
+	}
+
+	return ret;
+}
-- 
2.17.1



End of spp Digest, Vol 31, Issue 11
***********************************


From yasufum.o@gmail.com Mon Jun 24 15:21:49 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL015AQB0T1J50@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 15:22:05 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTL00S3UB0TMZ00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 15:22:05 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTL003CGB0T1980@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 15:22:05 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id DAA877E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 15:22:05 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id D95008E6058	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 15:22:05 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id CE5558E6054	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 15:22:05 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 5E8BB8E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 15:22:05 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 15:22:05 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6M5o3004837;	Mon,
 24 Jun 2019 15:22:05 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O6M5Qe004836;	Mon, 24 Jun 2019 15:22:05 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O6M4H5004833	for unknown; Mon,
 24 Jun 2019 15:22:05 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6M4gR029735 for
 unknown; Mon, 24 Jun 2019 15:22:04 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6M4cd029731; Mon,
 24 Jun 2019 15:22:04 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6M4tP010689;	Mon,
 24 Jun 2019 15:22:04 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O6M4Cq010685	for unknown; Mon, 24 Jun 2019 15:22:04 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6M4ql016770 for
 unknown; Mon, 24 Jun 2019 15:22:04 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6M4i1016764 for
 unknown; Mon, 24 Jun 2019 15:22:04 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O6Lvhu015191	for unknown; Mon,
 24 Jun 2019 15:22:03 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 143C71BF4E;	Mon, 24 Jun 2019 08:21:57 +0200 (CEST)
Received: from mail-pl1-f196.google.com
 (mail-pl1-f196.google.com [209.85.214.196]) by dpdk.org (Postfix)
 with ESMTP id 7A2CF1BF03 for <spp@dpdk.org>; Mon,
 24 Jun 2019 08:21:55 +0200 (CEST)
Received: by mail-pl1-f196.google.com with SMTP id i2so6284701plt.1 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 23:21:55 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id a12sm16732405pjh.1.2019.06.23.23.21.52
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 23:21:53 -0700 (PDT)
Date: Mon, 24 Jun 2019 15:21:49 +0900
From: yasufum.o@gmail.com
Subject: [spp 04388] [spp] [PATCH] shared/sec: move getter funcs for worker
 status
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624062149.22505-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04388
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=8LqLFnZxNXITncVo4J31muojIcE+iW11S6ihNceNxJw=;
 b=kdB22TXyIxSab8i8TFYHNEGtYZdIYeIzulM9wSfbxYzsN9TIULvcwAcdYJkqcJZBR9
 MoLu5MnwZpZtFF0/mqNKzAbLVL1AJHa2oBReREUeiRzpYz4Q/CPdBuFZS9V4X6oq+dWN
 YsPxUdUM/kO8IW7Bs2cZtqYH56YayP0hmlM3M4jaG+YQWRZK7hG+3gTrJV4pyrm+XTHP
 KOfxwc1JUxLmjc1IW0hCx1Ce9hIaAgyTnhbOdbVfByldlvbXpMHYdpXFEanGKRA3vPzv
 qNRo0Hy1qNXThlPWeQi6rCIVv2keAE6QztDJ4TBtWP9nesPY1UXtN4YLhXRi+JNO6zTn 1TMQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=8LqLFnZxNXITncVo4J31muojIcE+iW11S6ihNceNxJw=;
 b=oqYR7l2sokEIxvjoiHE8iCunYz3b7nCAyH2m/u2FyEj8wX1TJOud5ryZ+a49988+Vj
 zmrN4qNtsEmCotCtQHsRqksddMq3Yv8VvRmjS7mdGRNp3MtXQPwqmWgN9C2PN3X7kbli
 jsTtLeibnZFxYD5kORENDuznAX9RIgrwEjvqvZBK3fdZFj+kA3Fj3ZXcObH3Y2dK0uzS
 yV+ncYO/7PIQzrIfv1HjXx7T2PmrCDj60C9f3dpUQaizzimSG9oKKU23+W6TATB9ctpB
 wflEeo5p6nEaXsUZuLAdxA/H0pSCugPJHEv4aw1bD0BX5ch/LQqWntDXlaC0dk4yN416 3LTw==
X-Gm-Message-State: APjAAAVnVDsF2LGwcFRGOGHUwWOCecihMWRdfipCq0N15PwmWVujJjpy
 +CZw8vJmExuet9gAdbevKWuRjIp6
X-Google-Smtp-Source:
 APXvYqw+TnCEdondPB1tZLliuCeU1vihdpgrFStusBaQwPAsuoZNzopc2Jfrx8GDr/uhmbSRVwLd1w==
X-Received: by 2002:a17:902:722:: with SMTP id
 31mr28288218pli.163.1561357314362; Sun, 23 Jun 2019 23:21:54 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 769
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Following getter functinos for spp_vf and spp_mirror are defined in
shared directory and worker specific tasks are compiled by using
`#ifdef SPP_VF_MODULE` and `#ifdef SPP_MIRROR_MODULE` selectively.
  * get_forwarder_status()
  * get_classifier_status()
  * get_mirror_status()

However, it tends to be messed up because common and specific functions
are mixed up. It should be separated cleanly. This update is to fix the
issue by reorganizing them and remove ifdef switches.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/mir_cmd_runner.c                   | 86 ++++++++++++++++
 src/mirror/spp_mirror.c                       | 89 ++++++++---------
 src/mirror/spp_mirror.h                       | 28 ++++++
 .../spp_worker_th/cmd_res_formatter.c         | 94 ------------------
 .../secondary/spp_worker_th/mirror_deps.h     | 15 +--
 src/shared/secondary/spp_worker_th/vf_deps.h  | 27 +----
 src/vf/classifier_mac.h                       | 20 ++++
 src/vf/spp_forward.c                          | 98 +++++++++----------
 src/vf/spp_forward.h                          | 21 ++++
 src/vf/vf_cmd_runner.c                        | 92 +++++++++++++++++
 10 files changed, 347 insertions(+), 223 deletions(-)
 create mode 100644 src/mirror/spp_mirror.h

diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index 5731628..461e85c 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -2,9 +2,13 @@
  * Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
  */
 
+#include "spp_mirror.h"
 #include "shared/secondary/return_codes.h"
+#include "shared/secondary/string_buffer.h"
+#include "shared/secondary/json_helper.h"
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
+#include "shared/secondary/spp_worker_th/cmd_res_formatter.h"
 #include "shared/secondary/spp_worker_th/mirror_deps.h"
 
 #define RTE_LOGTYPE_MIR_CMD_RUNNER RTE_LOGTYPE_USER1
@@ -286,3 +290,85 @@ exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
 
 	return ret;
 }
+
+/* Iterate core information to create response to status command */
+static int
+spp_iterate_core_info(struct spp_iterate_core_params *params)
+{
+	int ret;
+	int lcore_id, cnt;
+	struct core_info *core = NULL;
+	struct sppwk_comp_info *comp_info_base = NULL;
+	struct sppwk_comp_info *comp_info = NULL;
+
+	RTE_LCORE_FOREACH_SLAVE(lcore_id) {
+		if (spp_get_core_status(lcore_id) == SPP_CORE_UNUSE)
+			continue;
+
+		core = get_core_info(lcore_id);
+		if (core->num == 0) {
+			ret = (*params->element_proc)(
+				params, lcore_id,
+				"", SPPWK_TYPE_NONE_STR,
+				0, NULL, 0, NULL);
+			if (unlikely(ret != 0)) {
+				RTE_LOG(ERR, MIR_CMD_RUNNER,
+						"Cannot iterate core "
+						"information. "
+						"(core = %d, type = %d)\n",
+						lcore_id, SPPWK_TYPE_NONE);
+				return SPP_RET_NG;
+			}
+			continue;
+		}
+
+		for (cnt = 0; cnt < core->num; cnt++) {
+			sppwk_get_mng_data(NULL, NULL, &comp_info_base,
+							NULL, NULL, NULL, NULL);
+			comp_info = (comp_info_base + core->id[cnt]);
+			ret = get_mirror_status(lcore_id, core->id[cnt],
+					params);
+
+			if (unlikely(ret != 0)) {
+				RTE_LOG(ERR, MIR_CMD_RUNNER,
+						"Cannot iterate core "
+						"information. "
+						"(core = %d, type = %d)\n",
+						lcore_id, comp_info->wk_type);
+				return SPP_RET_NG;
+			}
+		}
+	}
+
+	return SPP_RET_OK;
+}
+
+/* Add entry of core info of worker to a response in JSON such as "core:0". */
+int
+add_core(const char *name, char **output,
+		void *tmp __attribute__ ((unused)))
+{
+	int ret = SPP_RET_NG;
+	struct spp_iterate_core_params itr_params;
+	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, MIR_CMD_RUNNER,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = %s)\n",
+				name);
+		return SPP_RET_NG;
+	}
+
+	itr_params.output = tmp_buff;
+	itr_params.element_proc = append_core_element_value;
+
+	ret = spp_iterate_core_info(&itr_params);
+	if (unlikely(ret != SPP_RET_OK)) {
+		spp_strbuf_free(itr_params.output);
+		return SPP_RET_NG;
+	}
+
+	ret = append_json_array_brackets(output, name, itr_params.output);
+	spp_strbuf_free(itr_params.output);
+	return ret;
+}
diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index c00cad6..2cae48a 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -9,6 +9,7 @@
 #include <rte_common.h>
 #include <rte_cycles.h>
 
+#include "spp_mirror.h"
 #include "shared/common.h"
 #include "shared/secondary/return_codes.h"
 #include "shared/secondary/utils.h"
@@ -457,50 +458,6 @@ mirror_proc(int id)
 	return SPP_RET_OK;
 }
 
-/* Mirror get component status */
-int
-get_mirror_status(unsigned int lcore_id, int id,
-		struct spp_iterate_core_params *params)
-{
-	int ret = SPP_RET_NG;
-	int cnt;
-	const char *component_type = NULL;
-	struct mirror_info *info = &g_mirror_info[id];
-	struct mirror_path *path = &info->path[info->ref_index];
-	struct sppwk_port_idx rx_ports[RTE_MAX_ETHPORTS];
-	struct sppwk_port_idx tx_ports[RTE_MAX_ETHPORTS];
-
-	if (unlikely(path->wk_type == SPPWK_TYPE_NONE)) {
-		RTE_LOG(ERR, MIRROR,
-			"Mirror is not used. (id=%d, lcore=%d, type=%d)\n",
-			id, lcore_id, path->wk_type);
-		return SPP_RET_NG;
-	}
-
-	component_type = SPPWK_TYPE_MIR_STR;
-
-	memset(rx_ports, 0x00, sizeof(rx_ports));
-	for (cnt = 0; cnt < path->nof_rx; cnt++) {
-		rx_ports[cnt].iface_type = path->ports[cnt].rx.iface_type;
-		rx_ports[cnt].iface_no   = path->ports[cnt].rx.iface_no;
-	}
-
-	memset(tx_ports, 0x00, sizeof(tx_ports));
-	for (cnt = 0; cnt < path->nof_tx; cnt++) {
-		tx_ports[cnt].iface_type = path->ports[cnt].tx.iface_type;
-		tx_ports[cnt].iface_no   = path->ports[cnt].tx.iface_no;
-	}
-
-	/* Set the information with the function specified by the command. */
-	ret = (*params->element_proc)(params, lcore_id, path->name,
-			component_type, path->nof_rx, rx_ports, path->nof_tx,
-			tx_ports);
-	if (unlikely(ret != 0))
-		return SPP_RET_NG;
-
-	return SPP_RET_OK;
-}
-
 /* Main process of slave core */
 static int
 slave_main(void *arg __attribute__ ((unused)))
@@ -706,3 +663,47 @@ main(int argc, char *argv[])
 	RTE_LOG(INFO, MIRROR, "spp_mirror exit.\n");
 	return ret;
 }
+
+/* Mirror get component status */
+int
+get_mirror_status(unsigned int lcore_id, int id,
+		struct spp_iterate_core_params *params)
+{
+	int ret = SPP_RET_NG;
+	int cnt;
+	const char *component_type = NULL;
+	struct mirror_info *info = &g_mirror_info[id];
+	struct mirror_path *path = &info->path[info->ref_index];
+	struct sppwk_port_idx rx_ports[RTE_MAX_ETHPORTS];
+	struct sppwk_port_idx tx_ports[RTE_MAX_ETHPORTS];
+
+	if (unlikely(path->wk_type == SPPWK_TYPE_NONE)) {
+		RTE_LOG(ERR, MIRROR,
+			"Mirror is not used. (id=%d, lcore=%d, type=%d)\n",
+			id, lcore_id, path->wk_type);
+		return SPP_RET_NG;
+	}
+
+	component_type = SPPWK_TYPE_MIR_STR;
+
+	memset(rx_ports, 0x00, sizeof(rx_ports));
+	for (cnt = 0; cnt < path->nof_rx; cnt++) {
+		rx_ports[cnt].iface_type = path->ports[cnt].rx.iface_type;
+		rx_ports[cnt].iface_no   = path->ports[cnt].rx.iface_no;
+	}
+
+	memset(tx_ports, 0x00, sizeof(tx_ports));
+	for (cnt = 0; cnt < path->nof_tx; cnt++) {
+		tx_ports[cnt].iface_type = path->ports[cnt].tx.iface_type;
+		tx_ports[cnt].iface_no   = path->ports[cnt].tx.iface_no;
+	}
+
+	/* Set the information with the function specified by the command. */
+	ret = (*params->element_proc)(params, lcore_id, path->name,
+			component_type, path->nof_rx, rx_ports, path->nof_tx,
+			tx_ports);
+	if (unlikely(ret != 0))
+		return SPP_RET_NG;
+
+	return SPP_RET_OK;
+}
diff --git a/src/mirror/spp_mirror.h b/src/mirror/spp_mirror.h
new file mode 100644
index 0000000..c742541
--- /dev/null
+++ b/src/mirror/spp_mirror.h
@@ -0,0 +1,28 @@
+/* SPDX-License-Identifier: BSD-3-Clause
+ * Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
+ */
+
+#ifndef __SPP_MIRROR_H__
+#define __SPP_MIRROR_H__
+
+#include "shared/secondary/spp_worker_th/cmd_utils.h"
+
+/**
+ * Get mirror status.
+ *
+ * @param lcore_id Lcore ID for forwarder and merger.
+ * @param id Unique component ID.
+ * @param params Pointer to detailed data of mirror status.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
+ */
+/**
+ * TODO(yasufum) Consider to move this function to `mir_cmd_runner.c`.
+ * This function is called only from `mir_cmd_runner.c`, but
+ * must be defined in `spp_mirror.c` because it refers g_mirror_info defined
+ * in this file. It is bad dependency for the global variable.
+ */
+int get_mirror_status(unsigned int lcore_id, int id,
+		struct spp_iterate_core_params *params);
+
+#endif /* __SPP_MIRROR_H__ */
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index 9c0c873..bfe13e5 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -18,8 +18,6 @@ static int add_interface(const char *name, char **output,
 		void *tmp __attribute__ ((unused)));
 static int add_master_lcore(const char *name, char **output,
 		void *tmp __attribute__ ((unused)));
-static int add_core(const char *name, char **output,
-		void *tmp __attribute__ ((unused)));
 
 /**
  * List of worker process type. The order of items should be same as the order
@@ -614,68 +612,6 @@ append_info_value(const char *name, char **output)
 	return ret;
 }
 
-/* Iterate core information to create response to status command */
-static int
-spp_iterate_core_info(struct spp_iterate_core_params *params)
-{
-	int ret;
-	int lcore_id, cnt;
-	struct core_info *core = NULL;
-	struct sppwk_comp_info *comp_info_base = NULL;
-	struct sppwk_comp_info *comp_info = NULL;
-
-	RTE_LCORE_FOREACH_SLAVE(lcore_id) {
-		if (spp_get_core_status(lcore_id) == SPP_CORE_UNUSE)
-			continue;
-
-		core = get_core_info(lcore_id);
-		if (core->num == 0) {
-			ret = (*params->element_proc)(
-				params, lcore_id,
-				"", SPPWK_TYPE_NONE_STR,
-				0, NULL, 0, NULL);
-			if (unlikely(ret != 0)) {
-				RTE_LOG(ERR, WK_CMD_RES_FMT,
-						"Cannot iterate core "
-						"information. "
-						"(core = %d, type = %d)\n",
-						lcore_id, SPPWK_TYPE_NONE);
-				return SPP_RET_NG;
-			}
-			continue;
-		}
-
-		for (cnt = 0; cnt < core->num; cnt++) {
-			sppwk_get_mng_data(NULL, NULL, &comp_info_base,
-							NULL, NULL, NULL, NULL);
-			comp_info = (comp_info_base + core->id[cnt]);
-#ifdef SPP_VF_MODULE
-			if (comp_info->wk_type == SPPWK_TYPE_CLS) {
-				ret = get_classifier_status(lcore_id,
-						core->id[cnt], params);
-			} else {
-				ret = get_forwarder_status(lcore_id,
-						core->id[cnt], params);
-			}
-#endif /* SPP_VF_MODULE */
-#ifdef SPP_MIRROR_MODULE
-			ret = get_mirror_status(lcore_id, core->id[cnt],
-					params);
-#endif /* SPP_MIRROR_MODULE */
-			if (unlikely(ret != 0)) {
-				RTE_LOG(ERR, WK_CMD_RES_FMT,
-						"Cannot iterate core "
-						"information. "
-						"(core = %d, type = %d)\n",
-						lcore_id, comp_info->wk_type);
-				return SPP_RET_NG;
-			}
-		}
-	}
-
-	return SPP_RET_OK;
-}
-
 /* TODO(yasufum) move to another file for util funcs. */
 /* Get client ID from global command params. */
 static int
@@ -744,36 +680,6 @@ add_master_lcore(const char *name, char **output,
 	return ret;
 }
 
-/* Add entry of core info of worker to a response in JSON such as "core:0". */
-static int
-add_core(const char *name, char **output,
-		void *tmp __attribute__ ((unused)))
-{
-	int ret = SPP_RET_NG;
-	struct spp_iterate_core_params itr_params;
-	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RES_FMT,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s)\n",
-				name);
-		return SPP_RET_NG;
-	}
-
-	itr_params.output = tmp_buff;
-	itr_params.element_proc = append_core_element_value;
-
-	ret = spp_iterate_core_info(&itr_params);
-	if (unlikely(ret != SPP_RET_OK)) {
-		spp_strbuf_free(itr_params.output);
-		return SPP_RET_NG;
-	}
-
-	ret = append_json_array_brackets(output, name, itr_params.output);
-	spp_strbuf_free(itr_params.output);
-	return ret;
-}
-
 #ifdef SPP_VF_MODULE
 /* Iterate classifier_table to create response to status command */
 static int
diff --git a/src/shared/secondary/spp_worker_th/mirror_deps.h b/src/shared/secondary/spp_worker_th/mirror_deps.h
index 55ba913..2cf0fd9 100644
--- a/src/shared/secondary/spp_worker_th/mirror_deps.h
+++ b/src/shared/secondary/spp_worker_th/mirror_deps.h
@@ -10,6 +10,9 @@
 
 int exec_one_cmd(const struct sppwk_cmd_attrs *cmd);
 
+int add_core(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+
 /**
  * Update mirror info.
  *
@@ -19,16 +22,4 @@ int exec_one_cmd(const struct sppwk_cmd_attrs *cmd);
  */
 int update_mirror(struct sppwk_comp_info *wk_comp_info);
 
-/**
- * Get mirror status.
- *
- * @param lcore_id Lcore ID for forwarder and merger.
- * @param id Unique component ID.
- * @param params Pointer to detailed data of mirror status.
- * @retval SPP_RET_OK If succeeded.
- * @retval SPP_RET_NG If failed.
- */
-int get_mirror_status(unsigned int lcore_id, int id,
-		struct spp_iterate_core_params *params);
-
 #endif  /* __SPP_WORKER_TH_MIRROR_DEPS_H__ */
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 6a78ef5..2ec700e 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -43,6 +43,9 @@ struct cls_comp_info {
 	struct cls_port_info tx_ports_i[RTE_MAX_ETHPORTS];  /* TX info. */
 };
 
+int add_core(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+
 /* Release instance of mac classifier. */
 static inline void
 free_mac_classifier(struct mac_classifier *mac_clf)
@@ -87,28 +90,4 @@ void uninit_component_info(struct cls_comp_info *cmp_info);
 int add_classifier_table_val(
 		struct spp_iterate_classifier_table_params *params);
 
-/**
- * Get classifier status.
- *
- * @param[in] lcore_id Lcore ID for classifier.
- * @param[in] id Unique component ID.
- * @param[in,out] params Pointer to detailed data of classifier status.
- * @retval SPP_RET_OK If succeeded.
- * @retval SPP_RET_NG If failed.
- */
-int get_classifier_status(unsigned int lcore_id, int id,
-		struct spp_iterate_core_params *params);
-
-/**
- * Get forwarder status.
- *
- * @param lcore_id Lcore ID for forwarder and merger.
- * @param id Unique component ID.
- * @param params Pointer detailed data of forwarder and merger status.
- * @retval SPP_RET_OK If succeeded.
- * @retval SPP_RET_NG If failed.
- */
-int get_forwarder_status(unsigned int lcore_id, int id,
-		struct spp_iterate_core_params *params);
-
 #endif  /* _SPPWK_TH_VF_DEPS_H_ */
diff --git a/src/vf/classifier_mac.h b/src/vf/classifier_mac.h
index 21433e6..521e1d6 100644
--- a/src/vf/classifier_mac.h
+++ b/src/vf/classifier_mac.h
@@ -5,6 +5,8 @@
 #ifndef _CLASSIFIER_MAC_H_
 #define _CLASSIFIER_MAC_H_
 
+#include "shared/secondary/spp_worker_th/cmd_utils.h"
+
 /**
  * @file
  * SPP Classifier
@@ -59,4 +61,22 @@ int spp_classifier_mac_do(int id);
 int add_classifier_table_val(
 		struct spp_iterate_classifier_table_params *params);
 
+/**
+ * Get classifier status.
+ *
+ * @param[in] lcore_id Lcore ID for classifier.
+ * @param[in] id Unique component ID.
+ * @param[in,out] params Pointer to detailed data of classifier status.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
+ */
+/**
+ * TODO(yasufum) Consider to move this function to `vf_cmd_runner.c`.
+ * This function is called only from `vf_cmd_runner.c`, but
+ * must be defined in `classifier_mac.c` because it refers g_mng_info defined
+ * in this file. It is bad dependency for the global variable.
+ */
+int get_classifier_status(unsigned int lcore_id, int id,
+		struct spp_iterate_core_params *params);
+
 #endif /* _CLASSIFIER_MAC_H_ */
diff --git a/src/vf/spp_forward.c b/src/vf/spp_forward.c
index d381c92..07031f7 100644
--- a/src/vf/spp_forward.c
+++ b/src/vf/spp_forward.c
@@ -50,6 +50,55 @@ spp_forward_init(void)
 	}
 }
 
+/* Get forwarder status. */
+int
+get_forwarder_status(unsigned int lcore_id, int id,
+		struct spp_iterate_core_params *params)
+{
+	int ret = SPP_RET_NG;
+	int cnt;
+	const char *component_type = NULL;
+	struct forward_info *fwd_info = &g_forward_info[id];
+	struct forward_path *fwd_path = &fwd_info->path[fwd_info->ref_index];
+	struct sppwk_port_idx rx_ports[RTE_MAX_ETHPORTS];
+	struct sppwk_port_idx tx_ports[RTE_MAX_ETHPORTS];
+
+	if (unlikely(fwd_path->wk_type == SPPWK_TYPE_NONE)) {
+		RTE_LOG(ERR, FORWARD,
+				"Forwarder is not used. "
+				"(id=%d, lcore=%d, type=%d).\n",
+				id, lcore_id, fwd_path->wk_type);
+		return SPP_RET_NG;
+	}
+
+	if (fwd_path->wk_type == SPPWK_TYPE_MRG)
+		component_type = SPPWK_TYPE_MRG_STR;
+	else
+		component_type = SPPWK_TYPE_FWD_STR;
+
+	memset(rx_ports, 0x00, sizeof(rx_ports));
+	for (cnt = 0; cnt < fwd_path->num_rx; cnt++) {
+		rx_ports[cnt].iface_type = fwd_path->ports[cnt].rx.iface_type;
+		rx_ports[cnt].iface_no = fwd_path->ports[cnt].rx.iface_no;
+	}
+
+	memset(tx_ports, 0x00, sizeof(tx_ports));
+	for (cnt = 0; cnt < fwd_path->num_tx; cnt++) {
+		tx_ports[cnt].iface_type = fwd_path->ports[cnt].tx.iface_type;
+		tx_ports[cnt].iface_no = fwd_path->ports[cnt].tx.iface_no;
+	}
+
+	/* Set the information with the function specified by the command. */
+	ret = (*params->element_proc)(
+		params, lcore_id,
+		fwd_path->name, component_type,
+		fwd_path->num_rx, rx_ports, fwd_path->num_tx, tx_ports);
+	if (unlikely(ret != SPP_RET_OK))
+		return SPP_RET_NG;
+
+	return SPP_RET_OK;
+}
+
 /* Update forward info */
 int
 update_forwarder(struct sppwk_comp_info *comp_info)
@@ -182,52 +231,3 @@ spp_forward(int id)
 	}
 	return SPP_RET_OK;
 }
-
-/* Get forwarder status */
-int
-get_forwarder_status(unsigned int lcore_id, int id,
-		struct spp_iterate_core_params *params)
-{
-	int ret = SPP_RET_NG;
-	int cnt;
-	const char *component_type = NULL;
-	struct forward_info *fwd_info = &g_forward_info[id];
-	struct forward_path *fwd_path = &fwd_info->path[fwd_info->ref_index];
-	struct sppwk_port_idx rx_ports[RTE_MAX_ETHPORTS];
-	struct sppwk_port_idx tx_ports[RTE_MAX_ETHPORTS];
-
-	if (unlikely(fwd_path->wk_type == SPPWK_TYPE_NONE)) {
-		RTE_LOG(ERR, FORWARD,
-				"Forwarder is not used. "
-				"(id=%d, lcore=%d, type=%d).\n",
-				id, lcore_id, fwd_path->wk_type);
-		return SPP_RET_NG;
-	}
-
-	if (fwd_path->wk_type == SPPWK_TYPE_MRG)
-		component_type = SPPWK_TYPE_MRG_STR;
-	else
-		component_type = SPPWK_TYPE_FWD_STR;
-
-	memset(rx_ports, 0x00, sizeof(rx_ports));
-	for (cnt = 0; cnt < fwd_path->num_rx; cnt++) {
-		rx_ports[cnt].iface_type = fwd_path->ports[cnt].rx.iface_type;
-		rx_ports[cnt].iface_no = fwd_path->ports[cnt].rx.iface_no;
-	}
-
-	memset(tx_ports, 0x00, sizeof(tx_ports));
-	for (cnt = 0; cnt < fwd_path->num_tx; cnt++) {
-		tx_ports[cnt].iface_type = fwd_path->ports[cnt].tx.iface_type;
-		tx_ports[cnt].iface_no = fwd_path->ports[cnt].tx.iface_no;
-	}
-
-	/* Set the information with the function specified by the command. */
-	ret = (*params->element_proc)(
-		params, lcore_id,
-		fwd_path->name, component_type,
-		fwd_path->num_rx, rx_ports, fwd_path->num_tx, tx_ports);
-	if (unlikely(ret != SPP_RET_OK))
-		return SPP_RET_NG;
-
-	return SPP_RET_OK;
-}
diff --git a/src/vf/spp_forward.h b/src/vf/spp_forward.h
index 4da083c..37b1e3c 100644
--- a/src/vf/spp_forward.h
+++ b/src/vf/spp_forward.h
@@ -5,6 +5,8 @@
 #ifndef __SPP_FORWARD_H__
 #define __SPP_FORWARD_H__
 
+#include "shared/secondary/spp_worker_th/cmd_utils.h"
+
 /**
  * @file
  * SPP Forwarder and Merger
@@ -35,4 +37,23 @@ void spp_forward_init(void);
  */
 int spp_forward(int id);
 
+/**
+ * Get forwarder status.
+ *
+ * @param lcore_id Lcore ID for forwarder and merger.
+ * @param id Unique component ID.
+ * @param params Pointer detailed data of forwarder and merger status.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
+ */
+/**
+ * TODO(yasufum) Consider to move this function to `vf_cmd_runner.c`.
+ * This function is called only from `vf_cmd_runner.c`, but
+ * must be defined in `spp_forward.c` because it refers g_forward_info defined
+ * in this file. It is bad dependency for the global variable.
+ */
+int
+get_forwarder_status(unsigned int lcore_id, int id,
+		struct spp_iterate_core_params *params);
+
 #endif /* __SPP_FORWARD_H__ */
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index 2fb071e..182a917 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -3,9 +3,13 @@
  */
 
 #include "classifier_mac.h"
+#include "spp_forward.h"
 #include "shared/secondary/return_codes.h"
+#include "shared/secondary/string_buffer.h"
+#include "shared/secondary/json_helper.h"
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
+#include "shared/secondary/spp_worker_th/cmd_res_formatter.h"
 #include "shared/secondary/spp_worker_th/vf_deps.h"
 
 #define RTE_LOGTYPE_VF_CMD_RUNNER RTE_LOGTYPE_USER1
@@ -409,3 +413,91 @@ exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
 
 	return ret;
 }
+
+/* Iterate core information to create response to status command */
+static int
+spp_iterate_core_info(struct spp_iterate_core_params *params)
+{
+	int ret;
+	int lcore_id, cnt;
+	struct core_info *core = NULL;
+	struct sppwk_comp_info *comp_info_base = NULL;
+	struct sppwk_comp_info *comp_info = NULL;
+
+	RTE_LCORE_FOREACH_SLAVE(lcore_id) {
+		if (spp_get_core_status(lcore_id) == SPP_CORE_UNUSE)
+			continue;
+
+		core = get_core_info(lcore_id);
+		if (core->num == 0) {
+			ret = (*params->element_proc)(
+				params, lcore_id,
+				"", SPPWK_TYPE_NONE_STR,
+				0, NULL, 0, NULL);
+			if (unlikely(ret != 0)) {
+				RTE_LOG(ERR, VF_CMD_RUNNER,
+						"Cannot iterate core "
+						"information. "
+						"(core = %d, type = %d)\n",
+						lcore_id, SPPWK_TYPE_NONE);
+				return SPP_RET_NG;
+			}
+			continue;
+		}
+
+		for (cnt = 0; cnt < core->num; cnt++) {
+			sppwk_get_mng_data(NULL, NULL, &comp_info_base,
+							NULL, NULL, NULL, NULL);
+			comp_info = (comp_info_base + core->id[cnt]);
+
+			if (comp_info->wk_type == SPPWK_TYPE_CLS) {
+				ret = get_classifier_status(lcore_id,
+						core->id[cnt], params);
+			} else {
+				ret = get_forwarder_status(lcore_id,
+						core->id[cnt], params);
+			}
+
+			if (unlikely(ret != 0)) {
+				RTE_LOG(ERR, VF_CMD_RUNNER,
+						"Cannot iterate core "
+						"information. "
+						"(core = %d, type = %d)\n",
+						lcore_id, comp_info->wk_type);
+				return SPP_RET_NG;
+			}
+		}
+	}
+
+	return SPP_RET_OK;
+}
+
+/* Add entry of core info of worker to a response in JSON such as "core:0". */
+int
+add_core(const char *name, char **output,
+		void *tmp __attribute__ ((unused)))
+{
+	int ret = SPP_RET_NG;
+	struct spp_iterate_core_params itr_params;
+	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, VF_CMD_RUNNER,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = %s)\n",
+				name);
+		return SPP_RET_NG;
+	}
+
+	itr_params.output = tmp_buff;
+	itr_params.element_proc = append_core_element_value;
+
+	ret = spp_iterate_core_info(&itr_params);
+	if (unlikely(ret != SPP_RET_OK)) {
+		spp_strbuf_free(itr_params.output);
+		return SPP_RET_NG;
+	}
+
+	ret = append_json_array_brackets(output, name, itr_params.output);
+	spp_strbuf_free(itr_params.output);
+	return ret;
+}
-- 
2.17.1



From spp-request@dpdk.org Mon Jun 24 15:22:10 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL015DYB181J50@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 15:22:20 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTL01C2KB18O300@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 15:22:20 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00TYTB18U7B0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 15:22:20 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id 28E097E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 15:22:20 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 270D58E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 15:22:20 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 1C2548E6054	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 15:22:20 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 08FEC8E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 15:22:19 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 15:22:18 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6MITh004883;	Mon,
 24 Jun 2019 15:22:18 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O6MIst004882;	Mon, 24 Jun 2019 15:22:18 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O6MIpX004879	for unknown; Mon,
 24 Jun 2019 15:22:18 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6MIr5016935 for
 unknown; Mon, 24 Jun 2019 15:22:18 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6MI2H016932 for
 unknown; Mon, 24 Jun 2019 15:22:18 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O6MBrh015257	for unknown; Mon,
 24 Jun 2019 15:22:17 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 34FBE1BF51	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 24 Jun 2019 08:22:11 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 12
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 24 Jun 2019 08:22:10 +0200
Message-id: <mailman.23390.1561357330.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH] shared/sec: move getter funcs for worker status
      (yasufum.o@gmail.com)
   2. [PATCH] shared/sec: remove update_comp_info from shared
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon, 24 Jun 2019 15:21:49 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] shared/sec: move getter funcs for worker status
Message-ID: <20190624062149.22505-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Following getter functinos for spp_vf and spp_mirror are defined in
shared directory and worker specific tasks are compiled by using
`#ifdef SPP_VF_MODULE` and `#ifdef SPP_MIRROR_MODULE` selectively.
  * get_forwarder_status()
  * get_classifier_status()
  * get_mirror_status()

However, it tends to be messed up because common and specific functions
are mixed up. It should be separated cleanly. This update is to fix the
issue by reorganizing them and remove ifdef switches.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/mir_cmd_runner.c                   | 86 ++++++++++++++++
 src/mirror/spp_mirror.c                       | 89 ++++++++---------
 src/mirror/spp_mirror.h                       | 28 ++++++
 .../spp_worker_th/cmd_res_formatter.c         | 94 ------------------
 .../secondary/spp_worker_th/mirror_deps.h     | 15 +--
 src/shared/secondary/spp_worker_th/vf_deps.h  | 27 +----
 src/vf/classifier_mac.h                       | 20 ++++
 src/vf/spp_forward.c                          | 98 +++++++++----------
 src/vf/spp_forward.h                          | 21 ++++
 src/vf/vf_cmd_runner.c                        | 92 +++++++++++++++++
 10 files changed, 347 insertions(+), 223 deletions(-)
 create mode 100644 src/mirror/spp_mirror.h

diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index 5731628..461e85c 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -2,9 +2,13 @@
  * Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
  */
 
+#include "spp_mirror.h"
 #include "shared/secondary/return_codes.h"
+#include "shared/secondary/string_buffer.h"
+#include "shared/secondary/json_helper.h"
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
+#include "shared/secondary/spp_worker_th/cmd_res_formatter.h"
 #include "shared/secondary/spp_worker_th/mirror_deps.h"
 
 #define RTE_LOGTYPE_MIR_CMD_RUNNER RTE_LOGTYPE_USER1
@@ -286,3 +290,85 @@ exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
 
 	return ret;
 }
+
+/* Iterate core information to create response to status command */
+static int
+spp_iterate_core_info(struct spp_iterate_core_params *params)
+{
+	int ret;
+	int lcore_id, cnt;
+	struct core_info *core = NULL;
+	struct sppwk_comp_info *comp_info_base = NULL;
+	struct sppwk_comp_info *comp_info = NULL;
+
+	RTE_LCORE_FOREACH_SLAVE(lcore_id) {
+		if (spp_get_core_status(lcore_id) == SPP_CORE_UNUSE)
+			continue;
+
+		core = get_core_info(lcore_id);
+		if (core->num == 0) {
+			ret = (*params->element_proc)(
+				params, lcore_id,
+				"", SPPWK_TYPE_NONE_STR,
+				0, NULL, 0, NULL);
+			if (unlikely(ret != 0)) {
+				RTE_LOG(ERR, MIR_CMD_RUNNER,
+						"Cannot iterate core "
+						"information. "
+						"(core = %d, type = %d)\n",
+						lcore_id, SPPWK_TYPE_NONE);
+				return SPP_RET_NG;
+			}
+			continue;
+		}
+
+		for (cnt = 0; cnt < core->num; cnt++) {
+			sppwk_get_mng_data(NULL, NULL, &comp_info_base,
+							NULL, NULL, NULL, NULL);
+			comp_info = (comp_info_base + core->id[cnt]);
+			ret = get_mirror_status(lcore_id, core->id[cnt],
+					params);
+
+			if (unlikely(ret != 0)) {
+				RTE_LOG(ERR, MIR_CMD_RUNNER,
+						"Cannot iterate core "
+						"information. "
+						"(core = %d, type = %d)\n",
+						lcore_id, comp_info->wk_type);
+				return SPP_RET_NG;
+			}
+		}
+	}
+
+	return SPP_RET_OK;
+}
+
+/* Add entry of core info of worker to a response in JSON such as "core:0". */
+int
+add_core(const char *name, char **output,
+		void *tmp __attribute__ ((unused)))
+{
+	int ret = SPP_RET_NG;
+	struct spp_iterate_core_params itr_params;
+	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, MIR_CMD_RUNNER,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = %s)\n",
+				name);
+		return SPP_RET_NG;
+	}
+
+	itr_params.output = tmp_buff;
+	itr_params.element_proc = append_core_element_value;
+
+	ret = spp_iterate_core_info(&itr_params);
+	if (unlikely(ret != SPP_RET_OK)) {
+		spp_strbuf_free(itr_params.output);
+		return SPP_RET_NG;
+	}
+
+	ret = append_json_array_brackets(output, name, itr_params.output);
+	spp_strbuf_free(itr_params.output);
+	return ret;
+}
diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index c00cad6..2cae48a 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -9,6 +9,7 @@
 #include <rte_common.h>
 #include <rte_cycles.h>
 
+#include "spp_mirror.h"
 #include "shared/common.h"
 #include "shared/secondary/return_codes.h"
 #include "shared/secondary/utils.h"
@@ -457,50 +458,6 @@ mirror_proc(int id)
 	return SPP_RET_OK;
 }
 
-/* Mirror get component status */
-int
-get_mirror_status(unsigned int lcore_id, int id,
-		struct spp_iterate_core_params *params)
-{
-	int ret = SPP_RET_NG;
-	int cnt;
-	const char *component_type = NULL;
-	struct mirror_info *info = &g_mirror_info[id];
-	struct mirror_path *path = &info->path[info->ref_index];
-	struct sppwk_port_idx rx_ports[RTE_MAX_ETHPORTS];
-	struct sppwk_port_idx tx_ports[RTE_MAX_ETHPORTS];
-
-	if (unlikely(path->wk_type == SPPWK_TYPE_NONE)) {
-		RTE_LOG(ERR, MIRROR,
-			"Mirror is not used. (id=%d, lcore=%d, type=%d)\n",
-			id, lcore_id, path->wk_type);
-		return SPP_RET_NG;
-	}
-
-	component_type = SPPWK_TYPE_MIR_STR;
-
-	memset(rx_ports, 0x00, sizeof(rx_ports));
-	for (cnt = 0; cnt < path->nof_rx; cnt++) {
-		rx_ports[cnt].iface_type = path->ports[cnt].rx.iface_type;
-		rx_ports[cnt].iface_no   = path->ports[cnt].rx.iface_no;
-	}
-
-	memset(tx_ports, 0x00, sizeof(tx_ports));
-	for (cnt = 0; cnt < path->nof_tx; cnt++) {
-		tx_ports[cnt].iface_type = path->ports[cnt].tx.iface_type;
-		tx_ports[cnt].iface_no   = path->ports[cnt].tx.iface_no;
-	}
-
-	/* Set the information with the function specified by the command. */
-	ret = (*params->element_proc)(params, lcore_id, path->name,
-			component_type, path->nof_rx, rx_ports, path->nof_tx,
-			tx_ports);
-	if (unlikely(ret != 0))
-		return SPP_RET_NG;
-
-	return SPP_RET_OK;
-}
-
 /* Main process of slave core */
 static int
 slave_main(void *arg __attribute__ ((unused)))
@@ -706,3 +663,47 @@ main(int argc, char *argv[])
 	RTE_LOG(INFO, MIRROR, "spp_mirror exit.\n");
 	return ret;
 }
+
+/* Mirror get component status */
+int
+get_mirror_status(unsigned int lcore_id, int id,
+		struct spp_iterate_core_params *params)
+{
+	int ret = SPP_RET_NG;
+	int cnt;
+	const char *component_type = NULL;
+	struct mirror_info *info = &g_mirror_info[id];
+	struct mirror_path *path = &info->path[info->ref_index];
+	struct sppwk_port_idx rx_ports[RTE_MAX_ETHPORTS];
+	struct sppwk_port_idx tx_ports[RTE_MAX_ETHPORTS];
+
+	if (unlikely(path->wk_type == SPPWK_TYPE_NONE)) {
+		RTE_LOG(ERR, MIRROR,
+			"Mirror is not used. (id=%d, lcore=%d, type=%d)\n",
+			id, lcore_id, path->wk_type);
+		return SPP_RET_NG;
+	}
+
+	component_type = SPPWK_TYPE_MIR_STR;
+
+	memset(rx_ports, 0x00, sizeof(rx_ports));
+	for (cnt = 0; cnt < path->nof_rx; cnt++) {
+		rx_ports[cnt].iface_type = path->ports[cnt].rx.iface_type;
+		rx_ports[cnt].iface_no   = path->ports[cnt].rx.iface_no;
+	}
+
+	memset(tx_ports, 0x00, sizeof(tx_ports));
+	for (cnt = 0; cnt < path->nof_tx; cnt++) {
+		tx_ports[cnt].iface_type = path->ports[cnt].tx.iface_type;
+		tx_ports[cnt].iface_no   = path->ports[cnt].tx.iface_no;
+	}
+
+	/* Set the information with the function specified by the command. */
+	ret = (*params->element_proc)(params, lcore_id, path->name,
+			component_type, path->nof_rx, rx_ports, path->nof_tx,
+			tx_ports);
+	if (unlikely(ret != 0))
+		return SPP_RET_NG;
+
+	return SPP_RET_OK;
+}
diff --git a/src/mirror/spp_mirror.h b/src/mirror/spp_mirror.h
new file mode 100644
index 0000000..c742541
--- /dev/null
+++ b/src/mirror/spp_mirror.h
@@ -0,0 +1,28 @@
+/* SPDX-License-Identifier: BSD-3-Clause
+ * Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
+ */
+
+#ifndef __SPP_MIRROR_H__
+#define __SPP_MIRROR_H__
+
+#include "shared/secondary/spp_worker_th/cmd_utils.h"
+
+/**
+ * Get mirror status.
+ *
+ * @param lcore_id Lcore ID for forwarder and merger.
+ * @param id Unique component ID.
+ * @param params Pointer to detailed data of mirror status.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
+ */
+/**
+ * TODO(yasufum) Consider to move this function to `mir_cmd_runner.c`.
+ * This function is called only from `mir_cmd_runner.c`, but
+ * must be defined in `spp_mirror.c` because it refers g_mirror_info defined
+ * in this file. It is bad dependency for the global variable.
+ */
+int get_mirror_status(unsigned int lcore_id, int id,
+		struct spp_iterate_core_params *params);
+
+#endif /* __SPP_MIRROR_H__ */
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index 9c0c873..bfe13e5 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -18,8 +18,6 @@ static int add_interface(const char *name, char **output,
 		void *tmp __attribute__ ((unused)));
 static int add_master_lcore(const char *name, char **output,
 		void *tmp __attribute__ ((unused)));
-static int add_core(const char *name, char **output,
-		void *tmp __attribute__ ((unused)));
 
 /**
  * List of worker process type. The order of items should be same as the order
@@ -614,68 +612,6 @@ append_info_value(const char *name, char **output)
 	return ret;
 }
 
-/* Iterate core information to create response to status command */
-static int
-spp_iterate_core_info(struct spp_iterate_core_params *params)
-{
-	int ret;
-	int lcore_id, cnt;
-	struct core_info *core = NULL;
-	struct sppwk_comp_info *comp_info_base = NULL;
-	struct sppwk_comp_info *comp_info = NULL;
-
-	RTE_LCORE_FOREACH_SLAVE(lcore_id) {
-		if (spp_get_core_status(lcore_id) == SPP_CORE_UNUSE)
-			continue;
-
-		core = get_core_info(lcore_id);
-		if (core->num == 0) {
-			ret = (*params->element_proc)(
-				params, lcore_id,
-				"", SPPWK_TYPE_NONE_STR,
-				0, NULL, 0, NULL);
-			if (unlikely(ret != 0)) {
-				RTE_LOG(ERR, WK_CMD_RES_FMT,
-						"Cannot iterate core "
-						"information. "
-						"(core = %d, type = %d)\n",
-						lcore_id, SPPWK_TYPE_NONE);
-				return SPP_RET_NG;
-			}
-			continue;
-		}
-
-		for (cnt = 0; cnt < core->num; cnt++) {
-			sppwk_get_mng_data(NULL, NULL, &comp_info_base,
-							NULL, NULL, NULL, NULL);
-			comp_info = (comp_info_base + core->id[cnt]);
-#ifdef SPP_VF_MODULE
-			if (comp_info->wk_type == SPPWK_TYPE_CLS) {
-				ret = get_classifier_status(lcore_id,
-						core->id[cnt], params);
-			} else {
-				ret = get_forwarder_status(lcore_id,
-						core->id[cnt], params);
-			}
-#endif /* SPP_VF_MODULE */
-#ifdef SPP_MIRROR_MODULE
-			ret = get_mirror_status(lcore_id, core->id[cnt],
-					params);
-#endif /* SPP_MIRROR_MODULE */
-			if (unlikely(ret != 0)) {
-				RTE_LOG(ERR, WK_CMD_RES_FMT,
-						"Cannot iterate core "
-						"information. "
-						"(core = %d, type = %d)\n",
-						lcore_id, comp_info->wk_type);
-				return SPP_RET_NG;
-			}
-		}
-	}
-
-	return SPP_RET_OK;
-}
-
 /* TODO(yasufum) move to another file for util funcs. */
 /* Get client ID from global command params. */
 static int
@@ -744,36 +680,6 @@ add_master_lcore(const char *name, char **output,
 	return ret;
 }
 
-/* Add entry of core info of worker to a response in JSON such as "core:0". */
-static int
-add_core(const char *name, char **output,
-		void *tmp __attribute__ ((unused)))
-{
-	int ret = SPP_RET_NG;
-	struct spp_iterate_core_params itr_params;
-	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RES_FMT,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s)\n",
-				name);
-		return SPP_RET_NG;
-	}
-
-	itr_params.output = tmp_buff;
-	itr_params.element_proc = append_core_element_value;
-
-	ret = spp_iterate_core_info(&itr_params);
-	if (unlikely(ret != SPP_RET_OK)) {
-		spp_strbuf_free(itr_params.output);
-		return SPP_RET_NG;
-	}
-
-	ret = append_json_array_brackets(output, name, itr_params.output);
-	spp_strbuf_free(itr_params.output);
-	return ret;
-}
-
 #ifdef SPP_VF_MODULE
 /* Iterate classifier_table to create response to status command */
 static int
diff --git a/src/shared/secondary/spp_worker_th/mirror_deps.h b/src/shared/secondary/spp_worker_th/mirror_deps.h
index 55ba913..2cf0fd9 100644
--- a/src/shared/secondary/spp_worker_th/mirror_deps.h
+++ b/src/shared/secondary/spp_worker_th/mirror_deps.h
@@ -10,6 +10,9 @@
 
 int exec_one_cmd(const struct sppwk_cmd_attrs *cmd);
 
+int add_core(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+
 /**
  * Update mirror info.
  *
@@ -19,16 +22,4 @@ int exec_one_cmd(const struct sppwk_cmd_attrs *cmd);
  */
 int update_mirror(struct sppwk_comp_info *wk_comp_info);
 
-/**
- * Get mirror status.
- *
- * @param lcore_id Lcore ID for forwarder and merger.
- * @param id Unique component ID.
- * @param params Pointer to detailed data of mirror status.
- * @retval SPP_RET_OK If succeeded.
- * @retval SPP_RET_NG If failed.
- */
-int get_mirror_status(unsigned int lcore_id, int id,
-		struct spp_iterate_core_params *params);
-
 #endif  /* __SPP_WORKER_TH_MIRROR_DEPS_H__ */
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 6a78ef5..2ec700e 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -43,6 +43,9 @@ struct cls_comp_info {
 	struct cls_port_info tx_ports_i[RTE_MAX_ETHPORTS];  /* TX info. */
 };
 
+int add_core(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+
 /* Release instance of mac classifier. */
 static inline void
 free_mac_classifier(struct mac_classifier *mac_clf)
@@ -87,28 +90,4 @@ void uninit_component_info(struct cls_comp_info *cmp_info);
 int add_classifier_table_val(
 		struct spp_iterate_classifier_table_params *params);
 
-/**
- * Get classifier status.
- *
- * @param[in] lcore_id Lcore ID for classifier.
- * @param[in] id Unique component ID.
- * @param[in,out] params Pointer to detailed data of classifier status.
- * @retval SPP_RET_OK If succeeded.
- * @retval SPP_RET_NG If failed.
- */
-int get_classifier_status(unsigned int lcore_id, int id,
-		struct spp_iterate_core_params *params);
-
-/**
- * Get forwarder status.
- *
- * @param lcore_id Lcore ID for forwarder and merger.
- * @param id Unique component ID.
- * @param params Pointer detailed data of forwarder and merger status.
- * @retval SPP_RET_OK If succeeded.
- * @retval SPP_RET_NG If failed.
- */
-int get_forwarder_status(unsigned int lcore_id, int id,
-		struct spp_iterate_core_params *params);
-
 #endif  /* _SPPWK_TH_VF_DEPS_H_ */
diff --git a/src/vf/classifier_mac.h b/src/vf/classifier_mac.h
index 21433e6..521e1d6 100644
--- a/src/vf/classifier_mac.h
+++ b/src/vf/classifier_mac.h
@@ -5,6 +5,8 @@
 #ifndef _CLASSIFIER_MAC_H_
 #define _CLASSIFIER_MAC_H_
 
+#include "shared/secondary/spp_worker_th/cmd_utils.h"
+
 /**
  * @file
  * SPP Classifier
@@ -59,4 +61,22 @@ int spp_classifier_mac_do(int id);
 int add_classifier_table_val(
 		struct spp_iterate_classifier_table_params *params);
 
+/**
+ * Get classifier status.
+ *
+ * @param[in] lcore_id Lcore ID for classifier.
+ * @param[in] id Unique component ID.
+ * @param[in,out] params Pointer to detailed data of classifier status.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
+ */
+/**
+ * TODO(yasufum) Consider to move this function to `vf_cmd_runner.c`.
+ * This function is called only from `vf_cmd_runner.c`, but
+ * must be defined in `classifier_mac.c` because it refers g_mng_info defined
+ * in this file. It is bad dependency for the global variable.
+ */
+int get_classifier_status(unsigned int lcore_id, int id,
+		struct spp_iterate_core_params *params);
+
 #endif /* _CLASSIFIER_MAC_H_ */
diff --git a/src/vf/spp_forward.c b/src/vf/spp_forward.c
index d381c92..07031f7 100644
--- a/src/vf/spp_forward.c
+++ b/src/vf/spp_forward.c
@@ -50,6 +50,55 @@ spp_forward_init(void)
 	}
 }
 
+/* Get forwarder status. */
+int
+get_forwarder_status(unsigned int lcore_id, int id,
+		struct spp_iterate_core_params *params)
+{
+	int ret = SPP_RET_NG;
+	int cnt;
+	const char *component_type = NULL;
+	struct forward_info *fwd_info = &g_forward_info[id];
+	struct forward_path *fwd_path = &fwd_info->path[fwd_info->ref_index];
+	struct sppwk_port_idx rx_ports[RTE_MAX_ETHPORTS];
+	struct sppwk_port_idx tx_ports[RTE_MAX_ETHPORTS];
+
+	if (unlikely(fwd_path->wk_type == SPPWK_TYPE_NONE)) {
+		RTE_LOG(ERR, FORWARD,
+				"Forwarder is not used. "
+				"(id=%d, lcore=%d, type=%d).\n",
+				id, lcore_id, fwd_path->wk_type);
+		return SPP_RET_NG;
+	}
+
+	if (fwd_path->wk_type == SPPWK_TYPE_MRG)
+		component_type = SPPWK_TYPE_MRG_STR;
+	else
+		component_type = SPPWK_TYPE_FWD_STR;
+
+	memset(rx_ports, 0x00, sizeof(rx_ports));
+	for (cnt = 0; cnt < fwd_path->num_rx; cnt++) {
+		rx_ports[cnt].iface_type = fwd_path->ports[cnt].rx.iface_type;
+		rx_ports[cnt].iface_no = fwd_path->ports[cnt].rx.iface_no;
+	}
+
+	memset(tx_ports, 0x00, sizeof(tx_ports));
+	for (cnt = 0; cnt < fwd_path->num_tx; cnt++) {
+		tx_ports[cnt].iface_type = fwd_path->ports[cnt].tx.iface_type;
+		tx_ports[cnt].iface_no = fwd_path->ports[cnt].tx.iface_no;
+	}
+
+	/* Set the information with the function specified by the command. */
+	ret = (*params->element_proc)(
+		params, lcore_id,
+		fwd_path->name, component_type,
+		fwd_path->num_rx, rx_ports, fwd_path->num_tx, tx_ports);
+	if (unlikely(ret != SPP_RET_OK))
+		return SPP_RET_NG;
+
+	return SPP_RET_OK;
+}
+
 /* Update forward info */
 int
 update_forwarder(struct sppwk_comp_info *comp_info)
@@ -182,52 +231,3 @@ spp_forward(int id)
 	}
 	return SPP_RET_OK;
 }
-
-/* Get forwarder status */
-int
-get_forwarder_status(unsigned int lcore_id, int id,
-		struct spp_iterate_core_params *params)
-{
-	int ret = SPP_RET_NG;
-	int cnt;
-	const char *component_type = NULL;
-	struct forward_info *fwd_info = &g_forward_info[id];
-	struct forward_path *fwd_path = &fwd_info->path[fwd_info->ref_index];
-	struct sppwk_port_idx rx_ports[RTE_MAX_ETHPORTS];
-	struct sppwk_port_idx tx_ports[RTE_MAX_ETHPORTS];
-
-	if (unlikely(fwd_path->wk_type == SPPWK_TYPE_NONE)) {
-		RTE_LOG(ERR, FORWARD,
-				"Forwarder is not used. "
-				"(id=%d, lcore=%d, type=%d).\n",
-				id, lcore_id, fwd_path->wk_type);
-		return SPP_RET_NG;
-	}
-
-	if (fwd_path->wk_type == SPPWK_TYPE_MRG)
-		component_type = SPPWK_TYPE_MRG_STR;
-	else
-		component_type = SPPWK_TYPE_FWD_STR;
-
-	memset(rx_ports, 0x00, sizeof(rx_ports));
-	for (cnt = 0; cnt < fwd_path->num_rx; cnt++) {
-		rx_ports[cnt].iface_type = fwd_path->ports[cnt].rx.iface_type;
-		rx_ports[cnt].iface_no = fwd_path->ports[cnt].rx.iface_no;
-	}
-
-	memset(tx_ports, 0x00, sizeof(tx_ports));
-	for (cnt = 0; cnt < fwd_path->num_tx; cnt++) {
-		tx_ports[cnt].iface_type = fwd_path->ports[cnt].tx.iface_type;
-		tx_ports[cnt].iface_no = fwd_path->ports[cnt].tx.iface_no;
-	}
-
-	/* Set the information with the function specified by the command. */
-	ret = (*params->element_proc)(
-		params, lcore_id,
-		fwd_path->name, component_type,
-		fwd_path->num_rx, rx_ports, fwd_path->num_tx, tx_ports);
-	if (unlikely(ret != SPP_RET_OK))
-		return SPP_RET_NG;
-
-	return SPP_RET_OK;
-}
diff --git a/src/vf/spp_forward.h b/src/vf/spp_forward.h
index 4da083c..37b1e3c 100644
--- a/src/vf/spp_forward.h
+++ b/src/vf/spp_forward.h
@@ -5,6 +5,8 @@
 #ifndef __SPP_FORWARD_H__
 #define __SPP_FORWARD_H__
 
+#include "shared/secondary/spp_worker_th/cmd_utils.h"
+
 /**
  * @file
  * SPP Forwarder and Merger
@@ -35,4 +37,23 @@ void spp_forward_init(void);
  */
 int spp_forward(int id);
 
+/**
+ * Get forwarder status.
+ *
+ * @param lcore_id Lcore ID for forwarder and merger.
+ * @param id Unique component ID.
+ * @param params Pointer detailed data of forwarder and merger status.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
+ */
+/**
+ * TODO(yasufum) Consider to move this function to `vf_cmd_runner.c`.
+ * This function is called only from `vf_cmd_runner.c`, but
+ * must be defined in `spp_forward.c` because it refers g_forward_info defined
+ * in this file. It is bad dependency for the global variable.
+ */
+int
+get_forwarder_status(unsigned int lcore_id, int id,
+		struct spp_iterate_core_params *params);
+
 #endif /* __SPP_FORWARD_H__ */
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index 2fb071e..182a917 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -3,9 +3,13 @@
  */
 
 #include "classifier_mac.h"
+#include "spp_forward.h"
 #include "shared/secondary/return_codes.h"
+#include "shared/secondary/string_buffer.h"
+#include "shared/secondary/json_helper.h"
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
+#include "shared/secondary/spp_worker_th/cmd_res_formatter.h"
 #include "shared/secondary/spp_worker_th/vf_deps.h"
 
 #define RTE_LOGTYPE_VF_CMD_RUNNER RTE_LOGTYPE_USER1
@@ -409,3 +413,91 @@ exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
 
 	return ret;
 }
+
+/* Iterate core information to create response to status command */
+static int
+spp_iterate_core_info(struct spp_iterate_core_params *params)
+{
+	int ret;
+	int lcore_id, cnt;
+	struct core_info *core = NULL;
+	struct sppwk_comp_info *comp_info_base = NULL;
+	struct sppwk_comp_info *comp_info = NULL;
+
+	RTE_LCORE_FOREACH_SLAVE(lcore_id) {
+		if (spp_get_core_status(lcore_id) == SPP_CORE_UNUSE)
+			continue;
+
+		core = get_core_info(lcore_id);
+		if (core->num == 0) {
+			ret = (*params->element_proc)(
+				params, lcore_id,
+				"", SPPWK_TYPE_NONE_STR,
+				0, NULL, 0, NULL);
+			if (unlikely(ret != 0)) {
+				RTE_LOG(ERR, VF_CMD_RUNNER,
+						"Cannot iterate core "
+						"information. "
+						"(core = %d, type = %d)\n",
+						lcore_id, SPPWK_TYPE_NONE);
+				return SPP_RET_NG;
+			}
+			continue;
+		}
+
+		for (cnt = 0; cnt < core->num; cnt++) {
+			sppwk_get_mng_data(NULL, NULL, &comp_info_base,
+							NULL, NULL, NULL, NULL);
+			comp_info = (comp_info_base + core->id[cnt]);
+
+			if (comp_info->wk_type == SPPWK_TYPE_CLS) {
+				ret = get_classifier_status(lcore_id,
+						core->id[cnt], params);
+			} else {
+				ret = get_forwarder_status(lcore_id,
+						core->id[cnt], params);
+			}
+
+			if (unlikely(ret != 0)) {
+				RTE_LOG(ERR, VF_CMD_RUNNER,
+						"Cannot iterate core "
+						"information. "
+						"(core = %d, type = %d)\n",
+						lcore_id, comp_info->wk_type);
+				return SPP_RET_NG;
+			}
+		}
+	}
+
+	return SPP_RET_OK;
+}
+
+/* Add entry of core info of worker to a response in JSON such as "core:0". */
+int
+add_core(const char *name, char **output,
+		void *tmp __attribute__ ((unused)))
+{
+	int ret = SPP_RET_NG;
+	struct spp_iterate_core_params itr_params;
+	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, VF_CMD_RUNNER,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = %s)\n",
+				name);
+		return SPP_RET_NG;
+	}
+
+	itr_params.output = tmp_buff;
+	itr_params.element_proc = append_core_element_value;
+
+	ret = spp_iterate_core_info(&itr_params);
+	if (unlikely(ret != SPP_RET_OK)) {
+		spp_strbuf_free(itr_params.output);
+		return SPP_RET_NG;
+	}
+
+	ret = append_json_array_brackets(output, name, itr_params.output);
+	spp_strbuf_free(itr_params.output);
+	return ret;
+}
-- 
2.17.1



------------------------------

Message: 2
Date: Mon, 24 Jun 2019 15:22:03 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] shared/sec: remove update_comp_info from shared
Message-ID: <20190624062203.22560-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move update_comp_info() from shared dir to each of
workers because it has ifdef switches to select each of worker specific
tasks. Ifdef switches are removed by this update.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/mir_cmd_runner.c                   | 29 +++++++++++++
 .../secondary/spp_worker_th/cmd_runner.c      | 10 +++--
 .../secondary/spp_worker_th/cmd_utils.c       | 42 +------------------
 .../secondary/spp_worker_th/cmd_utils.h       |  8 ----
 .../secondary/spp_worker_th/mirror_deps.h     | 10 +++++
 src/shared/secondary/spp_worker_th/vf_deps.h  | 10 +++++
 src/vf/vf_cmd_runner.c                        | 34 +++++++++++++++
 7 files changed, 91 insertions(+), 52 deletions(-)

diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index 461e85c..0cbd79d 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -372,3 +372,32 @@ add_core(const char *name, char **output,
 	spp_strbuf_free(itr_params.output);
 	return ret;
 }
+
+/* Activate temporarily stored component info while flushing. */
+int
+update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp)
+{
+	int ret = 0;
+	int cnt = 0;
+	struct sppwk_comp_info *comp_info = NULL;
+
+	for (cnt = 0; cnt < RTE_MAX_LCORE; cnt++) {
+		if (*(p_change_comp + cnt) == 0)
+			continue;
+
+		comp_info = (p_comp_info + cnt);
+		spp_port_ability_update(comp_info);
+
+		ret = update_mirror(comp_info);
+		RTE_LOG(DEBUG, MIR_CMD_RUNNER, "Update mirror.\n");
+
+		if (unlikely(ret < 0)) {
+			RTE_LOG(ERR, MIR_CMD_RUNNER, "Flush error. "
+					"( component = %s, type = %d)\n",
+					comp_info->name,
+					comp_info->wk_type);
+			return SPP_RET_NG;
+		}
+	}
+	return SPP_RET_OK;
+}
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 64aef19..68436f3 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -34,10 +34,12 @@ int
 flush_cmd(void)
 {
 	int ret;
-	struct cancel_backup_info *backup_info = NULL;
+	int *p_change_comp;
+	struct sppwk_comp_info *p_comp_info;
+	struct cancel_backup_info *backup_info;
 
-	sppwk_get_mng_data(NULL, NULL, NULL,
-				NULL, NULL, NULL, &backup_info);
+	sppwk_get_mng_data(NULL, NULL, &p_comp_info,
+				NULL, NULL, &p_change_comp, &backup_info);
 
 	ret = update_port_info();
 	if (ret < SPP_RET_OK)
@@ -47,7 +49,7 @@ flush_cmd(void)
 	update_lcore_info();
 
 	/* TODO(yasufum) confirm why no checking for returned value. */
-	ret = update_comp_info();
+	ret = update_comp_info(p_comp_info, p_change_comp);
 
 	backup_mng_info(backup_info);
 	return ret;
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 098c8c1..5a089c6 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -25,13 +25,14 @@
 #define RTE_LOGTYPE_APP RTE_LOGTYPE_USER1
 
 /* A set of pointers of management data */
+/* TODO(yasufum) change names start with `p_change` because it wrong meanig. */
 struct mng_data_info {
 	struct startup_param *p_startup_param;
 	struct iface_info *p_iface_info;
 	struct sppwk_comp_info *p_component_info;
 	struct core_mng_info *p_core_info;
 	int *p_change_core;
-	int *p_change_component;
+	int *p_change_component;  /* Set of flags for udpated components */
 	struct cancel_backup_info *p_backup_info;
 	unsigned int main_lcore_id;
 };
@@ -874,45 +875,6 @@ update_lcore_info(void)
 	}
 }
 
-/* Activate temporarily stored component info while flushing. */
-int
-update_comp_info(void)
-{
-	int ret = 0;
-	int cnt = 0;
-	struct sppwk_comp_info *comp_info = NULL;
-	int *p_change_comp = g_mng_data.p_change_component;
-	struct sppwk_comp_info *p_comp_info = g_mng_data.p_component_info;
-
-	for (cnt = 0; cnt < RTE_MAX_LCORE; cnt++) {
-		if (*(p_change_comp + cnt) == 0)
-			continue;
-
-		comp_info = (p_comp_info + cnt);
-		spp_port_ability_update(comp_info);
-
-#ifdef SPP_VF_MODULE
-		if (comp_info->wk_type == SPPWK_TYPE_CLS)
-			ret = update_classifier(comp_info);
-		else
-			ret = update_forwarder(comp_info);
-#endif /* SPP_VF_MODULE */
-
-#ifdef SPP_MIRROR_MODULE
-		ret = update_mirror(comp_info);
-#endif /* SPP_MIRROR_MODULE */
-
-		if (unlikely(ret < 0)) {
-			RTE_LOG(ERR, APP, "Flush error. "
-					"( component = %s, type = %d)\n",
-					comp_info->name,
-					comp_info->wk_type);
-			return SPP_RET_NG;
-		}
-	}
-	return SPP_RET_OK;
-}
-
 /**
  * Generate a formatted string of combination from interface type and
  * number and assign to given 'port'
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index f9d7015..b0009c3 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -521,14 +521,6 @@ int update_port_info(void);
 /* Activate temporarily stored lcore info while flushing. */
 void update_lcore_info(void);
 
-/**
- * Activate temporarily stored component info while flushing.
- *
- * @retval SPP_RET_OK If succeeded.
- * @retval SPP_RET_NG If failed.
- */
-int update_comp_info(void);
-
 /**
  * Port type to string.
  *
diff --git a/src/shared/secondary/spp_worker_th/mirror_deps.h b/src/shared/secondary/spp_worker_th/mirror_deps.h
index 2cf0fd9..ef32697 100644
--- a/src/shared/secondary/spp_worker_th/mirror_deps.h
+++ b/src/shared/secondary/spp_worker_th/mirror_deps.h
@@ -22,4 +22,14 @@ int add_core(const char *name, char **output,
  */
 int update_mirror(struct sppwk_comp_info *wk_comp_info);
 
+/**
+ * Activate temporarily stored component info while flushing.
+ *
+ * @param[in] p_comp_info Info of component.
+ * @param[in] p_change_comp Pointer to a set of Flags for udpated component.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
+ */
+int update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp);
+
 #endif  /* __SPP_WORKER_TH_MIRROR_DEPS_H__ */
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 2ec700e..ded5b1d 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -90,4 +90,14 @@ void uninit_component_info(struct cls_comp_info *cmp_info);
 int add_classifier_table_val(
 		struct spp_iterate_classifier_table_params *params);
 
+/**
+ * Activate temporarily stored component info while flushing.
+ *
+ * @param[in] p_comp_info Info of component.
+ * @param[in] p_change_comp Pointer to a set of Flags for udpated component.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
+ */
+int update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp);
+
 #endif  /* _SPPWK_TH_VF_DEPS_H_ */
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index 182a917..e832e18 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -501,3 +501,37 @@ add_core(const char *name, char **output,
 	spp_strbuf_free(itr_params.output);
 	return ret;
 }
+
+/* Activate temporarily stored component info while flushing. */
+int
+update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp)
+{
+	int ret = 0;
+	int cnt = 0;
+	struct sppwk_comp_info *comp_info = NULL;
+
+	for (cnt = 0; cnt < RTE_MAX_LCORE; cnt++) {
+		if (*(p_change_comp + cnt) == 0)
+			continue;
+
+		comp_info = (p_comp_info + cnt);
+		spp_port_ability_update(comp_info);
+
+		if (comp_info->wk_type == SPPWK_TYPE_CLS) {
+			ret = update_classifier(comp_info);
+			RTE_LOG(DEBUG, VF_CMD_RUNNER, "Update classifier.\n");
+		} else {
+			ret = update_forwarder(comp_info);
+			RTE_LOG(DEBUG, VF_CMD_RUNNER, "Update forwarder.\n");
+		}
+
+		if (unlikely(ret < 0)) {
+			RTE_LOG(ERR, VF_CMD_RUNNER, "Flush error. "
+					"( component = %s, type = %d)\n",
+					comp_info->name,
+					comp_info->wk_type);
+			return SPP_RET_NG;
+		}
+	}
+	return SPP_RET_OK;
+}
-- 
2.17.1



End of spp Digest, Vol 31, Issue 12
***********************************


From yasufum.o@gmail.com Mon Jun 24 15:22:03 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL015E0B181J50@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 15:22:20 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTL01C4MB187Q00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 15:22:20 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00TYVB18U7B0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 15:22:20 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id 3628A7E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 15:22:20 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 3435A8E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 15:22:20 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 28E8D8E605C	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 15:22:20 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 630D98E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 15:22:19 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 15:22:19 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6MJXV004891;	Mon,
 24 Jun 2019 15:22:19 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O6MJMq004889;	Mon, 24 Jun 2019 15:22:19 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O6MJtP004886	for unknown; Mon,
 24 Jun 2019 15:22:19 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6MIuX029865 for
 unknown; Mon, 24 Jun 2019 15:22:18 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6MIF0029860; Mon,
 24 Jun 2019 15:22:18 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6MIrr010735;	Mon,
 24 Jun 2019 15:22:18 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O6MIeZ010731	for unknown; Mon, 24 Jun 2019 15:22:18 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6MIDH016924 for
 unknown; Mon, 24 Jun 2019 15:22:18 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6MIY4016920 for
 unknown; Mon, 24 Jun 2019 15:22:18 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O6MBXj015253	for unknown; Mon,
 24 Jun 2019 15:22:17 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 2BBE51BF4B;	Mon, 24 Jun 2019 08:22:11 +0200 (CEST)
Received: from mail-pg1-f171.google.com
 (mail-pg1-f171.google.com [209.85.215.171]) by dpdk.org (Postfix)
 with ESMTP id AB4981BF48 for <spp@dpdk.org>; Mon,
 24 Jun 2019 08:22:09 +0200 (CEST)
Received: by mail-pg1-f171.google.com with SMTP id m4so5928157pgk.0 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 23:22:09 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id t29sm14724946pfq.156.2019.06.23.23.22.07
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 23:22:08 -0700 (PDT)
Date: Mon, 24 Jun 2019 15:22:03 +0900
From: yasufum.o@gmail.com
Subject: [spp 04389] [spp] [PATCH] shared/sec: remove update_comp_info from
 shared
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624062203.22560-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04389
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=GwlHVwC0mTsc9iOe1zl6zeQA58WF4nzrsqqj39iztWY=;
 b=Ush66NJO4nNLvUYqaB1ZQS7BjWj1Mcn8DQEvu9Sonxe+JHo1eEp8Mg77afkwX9pn/C
 P3EXuULckAxUfswPof/3vcmYaiHSLerK0wGRUOC4tCGOdVbGkt2Mf1wXapf5ku0lK9r6
 rtMQuGU9q2xW906tiB7I7aj6R9ELTTgDBHjnNdyhjO3ZfJAq/kBzpqJkfJZBdzzmUV6o
 PZZNmSmraiXyvYAObYtuwJf8TnHTcZ+H9x4FzxSpc08EwJ9Nipuf5VWLsLWDm7z6Cpbp
 VMLnqCvN16kQgaU/YbO/avjx3REz3acIHpAh8/j8Z4azQDoXTtntfFabvrlL/pvNsEt5 HeGQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=GwlHVwC0mTsc9iOe1zl6zeQA58WF4nzrsqqj39iztWY=;
 b=PSigfKxxu5RKR10lxVLFanSAxexINUjBds6IARnCc2hQiK7QOKDjZukcqKItOZDK4F
 yDvQdY5yB5+huE9BhWs6E1P9vOWFIcui/we6BcqA3BoAS/ZApZsu1B6KTAjygLUxOsLF
 8HBrIxGSfADca5STW0mkSq3+vYXuqwwGasHHTttFsfRUk7SruKeoo7Lam5Vvgd+0DqAU
 pjlfkN+tZssVcJGmrWNgUyw4PI6quGXtGP6TTFQlgBUcCY11KC0uRs4RuvgirW3aO5Vc
 RePQ7/Vr5iwmgzdJ8o6xc83jCDqmy1ByfMpW2CdN1aBcqqzBzmx8k9P0UJ35kJLTMs5u jyTA==
X-Gm-Message-State: APjAAAU/QBsqYuR1K3cvO1vXN39Fj9W8xMom5mYF7GaE0ZbZ61n3elW/
 WFmEKLIC2ZMRs7vm32ErCXWE5MUs
X-Google-Smtp-Source:
 APXvYqyHHbC1FUI5J14XZhUJvmOnyfqpTJF+2g8gkLlZN0LziGldznSOxIixxVBNwGWOGihAR9C8Rw==
X-Received: by 2002:a63:b547:: with SMTP id u7mr32134017pgo.322.1561357328676;
 Sun, 23 Jun 2019 23:22:08 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 251
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move update_comp_info() from shared dir to each of
workers because it has ifdef switches to select each of worker specific
tasks. Ifdef switches are removed by this update.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/mir_cmd_runner.c                   | 29 +++++++++++++
 .../secondary/spp_worker_th/cmd_runner.c      | 10 +++--
 .../secondary/spp_worker_th/cmd_utils.c       | 42 +------------------
 .../secondary/spp_worker_th/cmd_utils.h       |  8 ----
 .../secondary/spp_worker_th/mirror_deps.h     | 10 +++++
 src/shared/secondary/spp_worker_th/vf_deps.h  | 10 +++++
 src/vf/vf_cmd_runner.c                        | 34 +++++++++++++++
 7 files changed, 91 insertions(+), 52 deletions(-)

diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index 461e85c..0cbd79d 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -372,3 +372,32 @@ add_core(const char *name, char **output,
 	spp_strbuf_free(itr_params.output);
 	return ret;
 }
+
+/* Activate temporarily stored component info while flushing. */
+int
+update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp)
+{
+	int ret = 0;
+	int cnt = 0;
+	struct sppwk_comp_info *comp_info = NULL;
+
+	for (cnt = 0; cnt < RTE_MAX_LCORE; cnt++) {
+		if (*(p_change_comp + cnt) == 0)
+			continue;
+
+		comp_info = (p_comp_info + cnt);
+		spp_port_ability_update(comp_info);
+
+		ret = update_mirror(comp_info);
+		RTE_LOG(DEBUG, MIR_CMD_RUNNER, "Update mirror.\n");
+
+		if (unlikely(ret < 0)) {
+			RTE_LOG(ERR, MIR_CMD_RUNNER, "Flush error. "
+					"( component = %s, type = %d)\n",
+					comp_info->name,
+					comp_info->wk_type);
+			return SPP_RET_NG;
+		}
+	}
+	return SPP_RET_OK;
+}
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 64aef19..68436f3 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -34,10 +34,12 @@ int
 flush_cmd(void)
 {
 	int ret;
-	struct cancel_backup_info *backup_info = NULL;
+	int *p_change_comp;
+	struct sppwk_comp_info *p_comp_info;
+	struct cancel_backup_info *backup_info;
 
-	sppwk_get_mng_data(NULL, NULL, NULL,
-				NULL, NULL, NULL, &backup_info);
+	sppwk_get_mng_data(NULL, NULL, &p_comp_info,
+				NULL, NULL, &p_change_comp, &backup_info);
 
 	ret = update_port_info();
 	if (ret < SPP_RET_OK)
@@ -47,7 +49,7 @@ flush_cmd(void)
 	update_lcore_info();
 
 	/* TODO(yasufum) confirm why no checking for returned value. */
-	ret = update_comp_info();
+	ret = update_comp_info(p_comp_info, p_change_comp);
 
 	backup_mng_info(backup_info);
 	return ret;
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 098c8c1..5a089c6 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -25,13 +25,14 @@
 #define RTE_LOGTYPE_APP RTE_LOGTYPE_USER1
 
 /* A set of pointers of management data */
+/* TODO(yasufum) change names start with `p_change` because it wrong meanig. */
 struct mng_data_info {
 	struct startup_param *p_startup_param;
 	struct iface_info *p_iface_info;
 	struct sppwk_comp_info *p_component_info;
 	struct core_mng_info *p_core_info;
 	int *p_change_core;
-	int *p_change_component;
+	int *p_change_component;  /* Set of flags for udpated components */
 	struct cancel_backup_info *p_backup_info;
 	unsigned int main_lcore_id;
 };
@@ -874,45 +875,6 @@ update_lcore_info(void)
 	}
 }
 
-/* Activate temporarily stored component info while flushing. */
-int
-update_comp_info(void)
-{
-	int ret = 0;
-	int cnt = 0;
-	struct sppwk_comp_info *comp_info = NULL;
-	int *p_change_comp = g_mng_data.p_change_component;
-	struct sppwk_comp_info *p_comp_info = g_mng_data.p_component_info;
-
-	for (cnt = 0; cnt < RTE_MAX_LCORE; cnt++) {
-		if (*(p_change_comp + cnt) == 0)
-			continue;
-
-		comp_info = (p_comp_info + cnt);
-		spp_port_ability_update(comp_info);
-
-#ifdef SPP_VF_MODULE
-		if (comp_info->wk_type == SPPWK_TYPE_CLS)
-			ret = update_classifier(comp_info);
-		else
-			ret = update_forwarder(comp_info);
-#endif /* SPP_VF_MODULE */
-
-#ifdef SPP_MIRROR_MODULE
-		ret = update_mirror(comp_info);
-#endif /* SPP_MIRROR_MODULE */
-
-		if (unlikely(ret < 0)) {
-			RTE_LOG(ERR, APP, "Flush error. "
-					"( component = %s, type = %d)\n",
-					comp_info->name,
-					comp_info->wk_type);
-			return SPP_RET_NG;
-		}
-	}
-	return SPP_RET_OK;
-}
-
 /**
  * Generate a formatted string of combination from interface type and
  * number and assign to given 'port'
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index f9d7015..b0009c3 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -521,14 +521,6 @@ int update_port_info(void);
 /* Activate temporarily stored lcore info while flushing. */
 void update_lcore_info(void);
 
-/**
- * Activate temporarily stored component info while flushing.
- *
- * @retval SPP_RET_OK If succeeded.
- * @retval SPP_RET_NG If failed.
- */
-int update_comp_info(void);
-
 /**
  * Port type to string.
  *
diff --git a/src/shared/secondary/spp_worker_th/mirror_deps.h b/src/shared/secondary/spp_worker_th/mirror_deps.h
index 2cf0fd9..ef32697 100644
--- a/src/shared/secondary/spp_worker_th/mirror_deps.h
+++ b/src/shared/secondary/spp_worker_th/mirror_deps.h
@@ -22,4 +22,14 @@ int add_core(const char *name, char **output,
  */
 int update_mirror(struct sppwk_comp_info *wk_comp_info);
 
+/**
+ * Activate temporarily stored component info while flushing.
+ *
+ * @param[in] p_comp_info Info of component.
+ * @param[in] p_change_comp Pointer to a set of Flags for udpated component.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
+ */
+int update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp);
+
 #endif  /* __SPP_WORKER_TH_MIRROR_DEPS_H__ */
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 2ec700e..ded5b1d 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -90,4 +90,14 @@ void uninit_component_info(struct cls_comp_info *cmp_info);
 int add_classifier_table_val(
 		struct spp_iterate_classifier_table_params *params);
 
+/**
+ * Activate temporarily stored component info while flushing.
+ *
+ * @param[in] p_comp_info Info of component.
+ * @param[in] p_change_comp Pointer to a set of Flags for udpated component.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
+ */
+int update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp);
+
 #endif  /* _SPPWK_TH_VF_DEPS_H_ */
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index 182a917..e832e18 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -501,3 +501,37 @@ add_core(const char *name, char **output,
 	spp_strbuf_free(itr_params.output);
 	return ret;
 }
+
+/* Activate temporarily stored component info while flushing. */
+int
+update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp)
+{
+	int ret = 0;
+	int cnt = 0;
+	struct sppwk_comp_info *comp_info = NULL;
+
+	for (cnt = 0; cnt < RTE_MAX_LCORE; cnt++) {
+		if (*(p_change_comp + cnt) == 0)
+			continue;
+
+		comp_info = (p_comp_info + cnt);
+		spp_port_ability_update(comp_info);
+
+		if (comp_info->wk_type == SPPWK_TYPE_CLS) {
+			ret = update_classifier(comp_info);
+			RTE_LOG(DEBUG, VF_CMD_RUNNER, "Update classifier.\n");
+		} else {
+			ret = update_forwarder(comp_info);
+			RTE_LOG(DEBUG, VF_CMD_RUNNER, "Update forwarder.\n");
+		}
+
+		if (unlikely(ret < 0)) {
+			RTE_LOG(ERR, VF_CMD_RUNNER, "Flush error. "
+					"( component = %s, type = %d)\n",
+					comp_info->name,
+					comp_info->wk_type);
+			return SPP_RET_NG;
+		}
+	}
+	return SPP_RET_OK;
+}
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 15:22:15 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL015GKB1J1J50@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 15:22:31 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTL01D1CB1J1R00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 15:22:31 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00T41B1JU7C0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 15:22:31 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id 2AE447E6038	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 15:22:31 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 29FC78E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 15:22:31 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 283CF8E605D	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 15:22:31 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 847408E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 15:22:30 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 15:22:30 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6MUPk004997;	Mon,
 24 Jun 2019 15:22:30 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O6MUco004996;	Mon, 24 Jun 2019 15:22:30 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O6MUud004993	for unknown; Mon,
 24 Jun 2019 15:22:30 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6MTJK029926 for
 unknown; Mon, 24 Jun 2019 15:22:29 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6MToi029923; Mon,
 24 Jun 2019 15:22:29 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6MTYN010756;	Mon,
 24 Jun 2019 15:22:29 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O6MTPH010752	for unknown; Mon, 24 Jun 2019 15:22:29 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6MTZN017095 for
 unknown; Mon, 24 Jun 2019 15:22:29 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6MTBh017088 for
 unknown; Mon, 24 Jun 2019 15:22:29 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O6MM59015350	for unknown; Mon,
 24 Jun 2019 15:22:28 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 4764B1BF4B;	Mon, 24 Jun 2019 08:22:22 +0200 (CEST)
Received: from mail-pl1-f193.google.com
 (mail-pl1-f193.google.com [209.85.214.193]) by dpdk.org (Postfix)
 with ESMTP id C82F81BF48 for <spp@dpdk.org>; Mon,
 24 Jun 2019 08:22:20 +0200 (CEST)
Received: by mail-pl1-f193.google.com with SMTP id i2so6285299plt.1 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 23:22:20 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id m5sm9447177pjl.24.2019.06.23.23.22.18
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 23:22:19 -0700 (PDT)
Date: Mon, 24 Jun 2019 15:22:15 +0900
From: yasufum.o@gmail.com
Subject: [spp 04390] [spp] [PATCH] shared/sec: move get_comp_type_from_str
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624062215.22613-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04390
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=Yzu6gxQd8DM44SoRszzB80y2UkBB6b83UXEFWcKgzqc=;
 b=FamgqFyPE5zJ+ZaMcjNtQ1f34vBFE6bfm2LX6Df6FkB8sciI4bttPPpmwf8T6z7p/f
 La2WiGd8/JS2elqCHKzJCY9BCTL6ua2ETXA1kgPt5ZskoxAOInSlX0WEqWQWNaRCgDJh
 9FoZce8P2ccxkCuuwfUM4rRxg7fZPkmUJyVcvNo8M8THeHyDZrAyc4mvyoOe288y830M
 pncUVr5uZBDQyPW5uLGyy2cL/5qKLm83/2kDPe4VahqyTbwZsx1pwVDv648hmZTkFy/A
 x41CMb5LCCn2Lf6D9N4epIQqUeKP8Ywf/PmCene3lhi6TN51LZHt0U0cB107gs2LXJTI uqMQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=Yzu6gxQd8DM44SoRszzB80y2UkBB6b83UXEFWcKgzqc=;
 b=TKlDZ4U6tTtoj7LqplzNLj8Z4ogfZNzJxhNFcTEdDjGU8Fgfs3eVVuh4+JhY00+eDw
 lYn7VZw6P4HSPLv7QRtwdc8U/ay7qwRfAy48t4xayFOiBGclJo7HSoJEZOiikC1LdQx8
 qVYgm+IAKCAUMiMqyME8EMnvBS6V+s8eolT1B/MRXJGy3Oz2e5ZBQlPlh/FnbRYwMPHZ
 SzsUyZpgrXQCsCVuusN1N9MBO1ORApPVTHZ6IothAf0wwYPzjxK+xngCJDECDKIzNwLU
 293FAIz8/FYcgOZ8qr0OlqD/LUrgzGOhPR+s+tk/CikGQ3qrl7xMRIRObTa0aRsFSie/ m8IQ==
X-Gm-Message-State: APjAAAWFl5EFK9h1o6HKuXU218R199LgSkg20ux5GjFedCMylTs0FHKx
 +aRNIPIBugEICiVDM6hlxROTFh72
X-Google-Smtp-Source:
 APXvYqwm6Ce4wBTpuDHqqINHI/qEbdTjCV/NVIKID9wEfMmLX8of2pZS3pS4iPwB/1KTg8WOJhnoyA==
X-Received: by 2002:a17:902:7583:: with SMTP id
 j3mr28194001pll.196.1561357339927; Sun, 23 Jun 2019 23:22:19 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 136
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move get_comp_type_from_str() from shared dir to each
of workers. It is to remove ifdef switches.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/mir_cmd_runner.c                   | 13 ++++++++
 .../secondary/spp_worker_th/cmd_parser.c      | 31 ++-----------------
 .../secondary/spp_worker_th/mirror_deps.h     |  2 ++
 src/shared/secondary/spp_worker_th/vf_deps.h  |  1 +
 src/vf/vf_cmd_runner.c                        | 20 ++++++++++++
 5 files changed, 38 insertions(+), 29 deletions(-)

diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index 0cbd79d..5f0932a 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -401,3 +401,16 @@ update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp)
 	}
 	return SPP_RET_OK;
 }
+
+/* Get component type from string of its name. */
+enum sppwk_worker_type
+get_comp_type_from_str(const char *type_str)
+{
+	RTE_LOG(DEBUG, MIR_CMD_RUNNER, "type_str is %s\n", type_str);
+
+	if (strncmp(type_str, SPPWK_TYPE_MIR_STR,
+			strlen(SPPWK_TYPE_MIR_STR)+1) == 0)
+		return SPPWK_TYPE_MIR;
+
+	return SPPWK_TYPE_NONE;
+}
diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.c b/src/shared/secondary/spp_worker_th/cmd_parser.c
index 200e41b..fcec28b 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.c
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.c
@@ -10,6 +10,8 @@
 #include <rte_branch_prediction.h>
 
 #include "cmd_parser.h"
+#include "vf_deps.h"
+#include "mirror_deps.h"
 #include "shared/secondary/return_codes.h"
 
 #define RTE_LOGTYPE_WK_CMD_PARSER RTE_LOGTYPE_USER1
@@ -177,35 +179,6 @@ parse_resource_uid(const char *res_uid,
 	return SPP_RET_OK;
 }
 
-/* Get component type from string of its name. */
-/* TODO(yasufum) should be worker local, separated for vf and mirror. */
-static enum sppwk_worker_type
-get_comp_type_from_str(const char *type_str)
-{
-	RTE_LOG(DEBUG, WK_CMD_PARSER, "type_str is %s\n", type_str);
-
-#ifdef SPP_VF_MODULE
-	if (strncmp(type_str, CORE_TYPE_CLASSIFIER_MAC_STR,
-			strlen(CORE_TYPE_CLASSIFIER_MAC_STR)+1) == 0) {
-		return SPPWK_TYPE_CLS;
-	} else if (strncmp(type_str, CORE_TYPE_MERGE_STR,
-			strlen(CORE_TYPE_MERGE_STR)+1) == 0) {
-		return SPPWK_TYPE_MRG;
-	} else if (strncmp(type_str, CORE_TYPE_FORWARD_STR,
-			strlen(CORE_TYPE_FORWARD_STR)+1) == 0) {
-		return SPPWK_TYPE_FWD;
-	}
-#endif /* SPP_VF_MODULE */
-
-#ifdef SPP_MIRROR_MODULE
-	if (strncmp(type_str, SPPWK_TYPE_MIR_STR,
-			strlen(SPPWK_TYPE_MIR_STR)+1) == 0)
-		return SPPWK_TYPE_MIR;
-#endif /* SPP_MIRROR_MODULE */
-
-	return SPPWK_TYPE_NONE;
-}
-
 /* Format error message object and return error code for an error case. */
 /* TODO(yasufum) confirm usage of `set_parse_error` and
  * `set_detailed_parse_error`, which should be used ?
diff --git a/src/shared/secondary/spp_worker_th/mirror_deps.h b/src/shared/secondary/spp_worker_th/mirror_deps.h
index ef32697..43326ed 100644
--- a/src/shared/secondary/spp_worker_th/mirror_deps.h
+++ b/src/shared/secondary/spp_worker_th/mirror_deps.h
@@ -32,4 +32,6 @@ int update_mirror(struct sppwk_comp_info *wk_comp_info);
  */
 int update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp);
 
+enum sppwk_worker_type get_comp_type_from_str(const char *type_str);
+
 #endif  /* __SPP_WORKER_TH_MIRROR_DEPS_H__ */
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index ded5b1d..81fc18f 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -100,4 +100,5 @@ int add_classifier_table_val(
  */
 int update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp);
 
+enum sppwk_worker_type get_comp_type_from_str(const char *type_str);
 #endif  /* _SPPWK_TH_VF_DEPS_H_ */
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index e832e18..c7d34a6 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -535,3 +535,23 @@ update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp)
 	}
 	return SPP_RET_OK;
 }
+
+/* Get component type from string of its name. */
+enum sppwk_worker_type
+get_comp_type_from_str(const char *type_str)
+{
+	RTE_LOG(DEBUG, VF_CMD_RUNNER, "type_str is %s\n", type_str);
+
+	if (strncmp(type_str, CORE_TYPE_CLASSIFIER_MAC_STR,
+			strlen(CORE_TYPE_CLASSIFIER_MAC_STR)+1) == 0) {
+		return SPPWK_TYPE_CLS;
+	} else if (strncmp(type_str, CORE_TYPE_MERGE_STR,
+			strlen(CORE_TYPE_MERGE_STR)+1) == 0) {
+		return SPPWK_TYPE_MRG;
+	} else if (strncmp(type_str, CORE_TYPE_FORWARD_STR,
+			strlen(CORE_TYPE_FORWARD_STR)+1) == 0) {
+		return SPPWK_TYPE_FWD;
+	}
+
+	return SPPWK_TYPE_NONE;
+}
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 15:22:25 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd106.ddreams.local
 (zssg-mailmd106.ddreams.local [10.160.123.101])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL015K1B1V1J50@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 15:22:43 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd106.ddreams.local by
 zssg-mailmd106.ddreams.local (dDREAMS) id <0PTL00K22B1V7N00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 15:22:43 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd106.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00C7AB1V5R50@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 15:22:43 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf101.ddreams.local (Postfix) with ESMTP id 15B607E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 15:22:43 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 149798E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 15:22:43 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 094188E6054	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 15:22:43 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id AF8588E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 15:22:41 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf101.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 15:22:41 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6MfcE005012;	Mon,
 24 Jun 2019 15:22:41 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O6Mf2E005011;	Mon, 24 Jun 2019 15:22:41 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O6Mf3x005007	for unknown; Mon,
 24 Jun 2019 15:22:41 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6MeVR029992 for
 unknown; Mon, 24 Jun 2019 15:22:41 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6Mes8029989; Mon,
 24 Jun 2019 15:22:40 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6MeJt010792;	Mon,
 24 Jun 2019 15:22:40 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O6MeVf010788	for unknown; Mon, 24 Jun 2019 15:22:40 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6Me3u017182 for
 unknown; Mon, 24 Jun 2019 15:22:40 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O6MeJM017178 for
 unknown; Mon, 24 Jun 2019 15:22:40 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O6MXQB015403	for unknown; Mon,
 24 Jun 2019 15:22:39 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 5DBB11BF4B;	Mon, 24 Jun 2019 08:22:33 +0200 (CEST)
Received: from mail-pf1-f193.google.com
 (mail-pf1-f193.google.com [209.85.210.193]) by dpdk.org (Postfix)
 with ESMTP id 92EF31BF48 for <spp@dpdk.org>; Mon,
 24 Jun 2019 08:22:31 +0200 (CEST)
Received: by mail-pf1-f193.google.com with SMTP id t16so6875971pfe.11 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 23:22:31 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id j1sm1126788pfa.73.2019.06.23.23.22.29
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 23:22:30 -0700 (PDT)
Date: Mon, 24 Jun 2019 15:22:25 +0900
From: yasufum.o@gmail.com
Subject: [spp 04391] [spp] [PATCH] shared/sec: add ifdef switch for deps headers
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624062225.22666-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04391
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=UnHseczSDLKcHAcLbJBrtJ9fOIqiX0dqW55DNkTMOoI=;
 b=k+/q3oY7xNLppv8cGdQ8pMCkGO2xfIeIQ2StyIvbNTE3m9NfiOmg9Rf0tX1QKwUZ+d
 g5D3wJufx9Y+uu6PMEkCojCSmoODe8JpDKSZZwNvLH4CNBbeohgDXwr6aSexn2IQEvrL
 yX/7S4Acmp5zNKeD6GJltkj0+Vc9HlZOTsKABzoNsA9aG3YSk2BZmYOKpGKwnADAAIu0
 G715r/csQbsQdYsdY5uyoT7D3pFSGseTXuW4Fjs4XPBAl8jnkBTFsNz2WogbEUkbRVfB
 Pjh66ig6ex2BwasFqnd76gi3YF/EADgBrfGjHF99rjR4UWPuqYglKqSEQOH9n0e8QL0v XhYA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=UnHseczSDLKcHAcLbJBrtJ9fOIqiX0dqW55DNkTMOoI=;
 b=HIQz84r7J4CkrIvQuGIVZ+r0fzl6GI8Wyzr0qRMorXJ/INzzyb+6tUf44aBRRCHsoD
 IhjGMJoBAviCQh7t22nIvm4blRCwuZxvTm9+/ut5cE27pBT62NGv7pRLBsnIzrheKLWY
 HMq/3dptJedZNEnk0HSZzWbxK7KszYlQkiLmG/hnDvdoJYSV+94u38z9AKCIQGq41f1E
 tsL+OJKYLGqR2OAmfRKbTxU9Dtz5hFu7VfnLXnK15xVGwLtTlGWk7zU61He2QskXxHuU
 LwbcBzn3DsVgvBMHGwKoPxL7bPZ2mWv54CKbjVHKgKQpnWRBFBC4akznYe8VIlJvixl/ Pg1w==
X-Gm-Message-State: APjAAAX+1Im6ncNaamJeAXe6K85DA0D8Pc/BVSuj0Fy5xMr1Boyfl+1U
 K0ViiQWPIUZWPU8T4fJpSFyO5TFQ
X-Google-Smtp-Source:
 APXvYqxP78fLI/cwx//qZYOb6G8wx/xevpQOomdGYIBrkbAMM6t+F9/A1FGYaD0C3985RDNqTRArmQ==
X-Received: by 2002:a17:90a:d587:: with SMTP id
 v7mr23436721pju.28.1561357350762; Sun, 23 Jun 2019 23:22:30 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 123
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to switch `vf_deps.h` and `mirror_deps.h` in shared dir
for compiling each of worker processes.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/shared/secondary/spp_worker_th/cmd_parser.c    |  8 +++++++-
 .../secondary/spp_worker_th/cmd_res_formatter.c    |  8 +++++++-
 src/shared/secondary/spp_worker_th/cmd_runner.c    | 14 ++++++++++----
 src/shared/secondary/spp_worker_th/cmd_utils.c     | 10 ++++++++--
 src/shared/secondary/spp_worker_th/vf_deps.h       |  1 +
 5 files changed, 33 insertions(+), 8 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.c b/src/shared/secondary/spp_worker_th/cmd_parser.c
index fcec28b..5a2fb82 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.c
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.c
@@ -10,9 +10,15 @@
 #include <rte_branch_prediction.h>
 
 #include "cmd_parser.h"
+#include "shared/secondary/return_codes.h"
+
+#ifdef SPP_VF_MODULE
 #include "vf_deps.h"
+#endif
+
+#ifdef SPP_MIRROR_MODULE
 #include "mirror_deps.h"
-#include "shared/secondary/return_codes.h"
+#endif
 
 #define RTE_LOGTYPE_WK_CMD_PARSER RTE_LOGTYPE_USER1
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index bfe13e5..f389939 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -4,9 +4,15 @@
 
 #include "cmd_res_formatter.h"
 #include "cmd_utils.h"
+#include "shared/secondary/json_helper.h"
+
+#ifdef SPP_VF_MODULE
 #include "vf_deps.h"
+#endif
+
+#ifdef SPP_MIRROR_MODULE
 #include "mirror_deps.h"
-#include "shared/secondary/json_helper.h"
+#endif
 
 #define RTE_LOGTYPE_WK_CMD_RES_FMT RTE_LOGTYPE_USER1
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 68436f3..3684a2c 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -9,14 +9,20 @@
 #include <rte_branch_prediction.h>
 
 #include "cmd_runner.h"
-#include "vf_deps.h"
-#include "mirror_deps.h"
 #include "spp_port.h"
-#include "shared/secondary/string_buffer.h"
-#include "shared/secondary/json_helper.h"
 #include "cmd_res_formatter.h"
 #include "conn_spp_ctl.h"
 #include "cmd_parser.h"
+#include "shared/secondary/string_buffer.h"
+#include "shared/secondary/json_helper.h"
+
+#ifdef SPP_VF_MODULE
+#include "vf_deps.h"
+#endif
+
+#ifdef SPP_MIRROR_MODULE
+#include "mirror_deps.h"
+#endif
 
 #define RTE_LOGTYPE_WK_CMD_RUNNER RTE_LOGTYPE_USER1
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 5a089c6..e61f59c 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -11,12 +11,18 @@
 #include <rte_log.h>
 #include <rte_branch_prediction.h>
 
-#include "vf_deps.h"
-#include "mirror_deps.h"
 #include "shared/secondary/return_codes.h"
 #include "cmd_utils.h"
 #include "spp_port.h"
 
+#ifdef SPP_VF_MODULE
+#include "vf_deps.h"
+#endif
+
+#ifdef SPP_MIRROR_MODULE
+#include "mirror_deps.h"
+#endif
+
 #include "shared/secondary/add_port.h"
 #include "shared/secondary/utils.h"
 
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 81fc18f..7d77e87 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -101,4 +101,5 @@ int add_classifier_table_val(
 int update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp);
 
 enum sppwk_worker_type get_comp_type_from_str(const char *type_str);
+
 #endif  /* _SPPWK_TH_VF_DEPS_H_ */
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 16:10:24 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00D4JD9WFR70@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 16:10:44 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTL0092YD9WGQ00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:10:44 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00ZMND9WPPD0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:10:44 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id 635697E603D	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:10:44 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 61FAA8E605E	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:10:44 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 605308E605C	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:10:44 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 40D768E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:10:43 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:10:43 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7AhSR016826;	Mon,
 24 Jun 2019 16:10:43 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O7AhgF016825;	Mon, 24 Jun 2019 16:10:43 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O7AgF9016822	for unknown; Mon,
 24 Jun 2019 16:10:42 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Agqi021055 for
 unknown; Mon, 24 Jun 2019 16:10:42 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Ag4h021051; Mon,
 24 Jun 2019 16:10:42 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7AgaX016910;	Mon,
 24 Jun 2019 16:10:42 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O7AgkU016906	for unknown; Mon, 24 Jun 2019 16:10:42 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Af6S030848 for
 unknown; Mon, 24 Jun 2019 16:10:42 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7AfYZ030844 for
 unknown; Mon, 24 Jun 2019 16:10:41 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O7AZ2u023131	for unknown; Mon,
 24 Jun 2019 16:10:41 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id B018D1BDD2;	Mon, 24 Jun 2019 09:10:34 +0200 (CEST)
Received: from mail-pf1-f177.google.com
 (mail-pf1-f177.google.com [209.85.210.177]) by dpdk.org (Postfix)
 with ESMTP id 071E31BCAC for <spp@dpdk.org>; Mon,
 24 Jun 2019 09:10:33 +0200 (CEST)
Received: by mail-pf1-f177.google.com with SMTP id y15so2322361pfn.5 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 00:10:32 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id 128sm10928965pfd.66.2019.06.24.00.10.30
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 00:10:31 -0700 (PDT)
Date: Mon, 24 Jun 2019 16:10:24 +0900
From: yasufum.o@gmail.com
Subject: [spp 04392] [spp] [PATCH 0/2] Move spp_vf specific funcs from shared
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624071026.23286-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04392
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=OdAoipwjsvd2tYfWExEHEYQqpdMjb1eqdVcgLAxiOho=;
 b=cw8NswwHmOoTUikk1qRfZxD+58JLbxKm3ZxgrTXQj9xqpI4nd8avStMIrExhT/gJ+n
 mE7hsFUQOfdLMTcSfUb5wZFOY27A/R2XaElNwD0Yi7Fa7VuLeNED/NRbHieh60AuKkva
 f2Kl2mtYeMP1qNt8hCRLdL+FmtR6CHwhUxxBhUWzAnrUxyZyRnVc+aRBaqV6wtqcjAA8
 JMpbihaDLWJStv41w6U80jzoGyI4JwHU/78c+E6npi/wnt6yeFl3gtEoArj0NbRuLxuy
 PZNjgReCLFA1YHNKr1d25cmOl72YUOZ8FRUYkblfVtEnHriCmRJKVfZ4BFLl5YaUKnu8 W+qg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=OdAoipwjsvd2tYfWExEHEYQqpdMjb1eqdVcgLAxiOho=;
 b=gXEfB36X31To3T2/MiPakx7UUKa5EHs+GEWT0cT82kesU1Tk/CflRdBATJQJkYJF2C
 t708csXs9qOyJkbAEEQVvM3fAlnTQVpkTFPXh8w55lCei6OU7oDiqrZjVonXfSe63nqu
 y6B2GRYMPvJ+XgC2CwMkarGCcwiaLq6NGzbm5MUkDn6x11YzX8DetBY78MUvnFHgGY8Q
 Yp7zy2Owu2j3/OW2bd3kg7Uj4cJKQ+33rZP2hUlzzvt2JpQC+Shj86L7Y64Yu4sE+/zc
 r9olhX+1vwk2Ji6GFWchY7FrqjtezLe/z5xf3XdC5aEG4ffJ3ydrNxbEcrwynSqON8B7 Whqg==
X-Gm-Message-State: APjAAAWeVf+M2GRiCx0EKD2kPs06IpJ8K1/nZq7ZYVs5IzcyS3YCJLU2
 Xk4+g3wa/9NU1rjV0uNpTbBUuWp6
X-Google-Smtp-Source:
 APXvYqysKodrycN6z/Js/N0E8kQzQSV3TuxwNuSivG4gIu0xd/F7i/DHpA/KaO0JfROl9Ub9t5xJ3w==
X-Received: by 2002:a63:f349:: with SMTP id t9mr30290530pgj.296.1561360232124;
 Mon, 24 Jun 2019 00:10:32 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 19
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This series of patches is to move functions used only for spp_vf from
shared to spp_vf's directory.

Yasufumi Ogawa (2):
  shared/sec: move append_classifier_element_value
  shared/sec: move func add_classifier_table

 .../spp_worker_th/cmd_res_formatter.c         | 126 ------------------
 .../spp_worker_th/cmd_res_formatter.h         |   6 -
 src/shared/secondary/spp_worker_th/vf_deps.h  |   9 ++
 src/vf/classifier_mac.c                       |  57 ++++++++
 src/vf/vf_cmd_runner.c                        |  71 +++++++++-
 5 files changed, 136 insertions(+), 133 deletions(-)

-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 16:10:25 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00D5FD9YFR70@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 16:10:46 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTL00950D9YAJ00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:10:46 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00ZNLD9YPPD0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:10:46 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id 85EF67E603B	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:10:46 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 837928E6058	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:10:46 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 820248E605C	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:10:46 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 113178E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:10:46 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:10:46 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7AjW9016834;	Mon,
 24 Jun 2019 16:10:45 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O7Ajcx016833;	Mon, 24 Jun 2019 16:10:45 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O7Aj5O016830	for unknown; Mon,
 24 Jun 2019 16:10:45 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7AjBu021080 for
 unknown; Mon, 24 Jun 2019 16:10:45 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Ajfe021077; Mon,
 24 Jun 2019 16:10:45 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Ajvb016917;	Mon,
 24 Jun 2019 16:10:45 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O7Ajcu016913	for unknown; Mon, 24 Jun 2019 16:10:45 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Ai07030889 for
 unknown; Mon, 24 Jun 2019 16:10:44 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7AioG030883 for
 unknown; Mon, 24 Jun 2019 16:10:44 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O7Ac5Z023147	for unknown; Mon,
 24 Jun 2019 16:10:44 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id C4C611BEF6;	Mon, 24 Jun 2019 09:10:37 +0200 (CEST)
Received: from mail-pf1-f196.google.com
 (mail-pf1-f196.google.com [209.85.210.196]) by dpdk.org (Postfix)
 with ESMTP id 7D2521BED2 for <spp@dpdk.org>; Mon,
 24 Jun 2019 09:10:36 +0200 (CEST)
Received: by mail-pf1-f196.google.com with SMTP id p184so6960209pfp.7 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 00:10:36 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id 128sm10928965pfd.66.2019.06.24.00.10.33
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 00:10:35 -0700 (PDT)
Date: Mon, 24 Jun 2019 16:10:25 +0900
From: yasufum.o@gmail.com
Subject: [spp 04393] [spp] [PATCH 1/2] shared/sec: move
 append_classifier_element_value
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624071026.23286-2-yasufum.o@gmail.com>
In-reply-to: <20190624071026.23286-1-yasufum.o@gmail.com>
References: <20190624071026.23286-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04393
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=ngd34gyMp/RffRuHD76u6YQ3oorRz8W9EgsIAkCtGsQ=;
 b=otInfTfEdeUE/97xTbDDTOyjmkqhBIcBJ7P1RdYmaVBO56VCNYTnu6yPfn+f/UfNvW
 pZewYMi9KdbxO5JjGqFmrXlpiGob3lxpq6iv6Oj3vhs0qhDXehHHDK4tdWYWy3EOT5ye
 t2xwsuDpKPkBwAv8uf+EbvUZs8oLU7QIxJqFPZXBe2n30G2mzkFJG/E+9lSevb899Eif
 1+BK2EFK6il6iIyRf2tqo2BEvOEVTvWZ/YqEWMk6fmntP11xwv/kNWuc1nqSFD3w64CV
 AU+c+G1w5L5D38uxS1tH2UFpQawTprbVx+ES2mMHhhLAIP+GMjEQgRKv3RgRi/2bI3kg cqmw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=ngd34gyMp/RffRuHD76u6YQ3oorRz8W9EgsIAkCtGsQ=;
 b=mpRWuZE1PIKBX5+1x7Cimaefik2R2twGhBhU0XSQ7e6ZwKdCcyUwpaFDWjOIFWXfZu
 d58FqN9lLZAvMLqUYvSiFdAR1qLQLiAO0T6vFtHkhYqngIqeW8071H4MZY/rXJ6nuvVx
 OkE/O7YCyAQfiNymC/WjMS0p4SZW6WfxjVIgaEu15rtIehkJoB69Pv4zNBVep2fK76Fs
 J8+yaZV3vZlkll7bZfC93YbfX6357ho4M8J2smYmRbJkBAdC2YMu4hWvtSmmaXRho85c
 +yCI9gHmvvN/HbAFHWWw9103hB9jlISGHgZNHjyeZ8hzKpDyiKjEKIHdM2fOTzU5KbAm tT9w==
X-Gm-Message-State: APjAAAUqT1BYA6IlmA1GurhnzuaOoWzd0YvC8/B2/h09IhTWBpOmuuAR
 BBjqaNNjHwjtqZouzG3UuTk3R/YB
X-Google-Smtp-Source:
 APXvYqzA6Vqz4P469eiqxI0Bgeh0RPr5hJirUv2W4Hk2CEwabsrvVoNHS5jDnxgteNc/72tTEi5Ulg==
X-Received: by 2002:a63:d24f:: with SMTP id t15mr28241638pgi.301.1561360235589;
 Mon, 24 Jun 2019 00:10:35 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 210
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move append_classifier_element_value() from shared dir
to spp_vf's dir because this functions is for spp_vf.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../spp_worker_th/cmd_res_formatter.c         | 71 -------------------
 .../spp_worker_th/cmd_res_formatter.h         |  6 --
 src/vf/vf_cmd_runner.c                        | 70 ++++++++++++++++++
 3 files changed, 70 insertions(+), 77 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index f389939..a0c22d2 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -48,18 +48,6 @@ const char *PORT_ABILITY_STAT_LIST[] = {
 	"",  /* termination */
 };
 
-/**
- * List of classifier type. The order of items should be same as the order of
- * enum `spp_classifier_type` defined in cmd_utils.h.
- */
-/* TODO(yasufum) fix similar var in cmd_parser.c */
-const char *CLS_TYPE_A_LIST[] = {
-	"none",
-	"mac",
-	"vlan",
-	"",  /* termination */
-};
-
 /* command response result string list */
 struct cmd_response response_result_list[] = {
 	{ "result", append_result_value },
@@ -402,65 +390,6 @@ append_core_element_value(
 	return ret;
 }
 
-#ifdef SPP_VF_MODULE
-/**
- * Operator function called in iterator for getting each of entries of
- * classifier table named as iterate_adding_mac_entry().
- */
-int
-append_classifier_element_value(
-		struct spp_iterate_classifier_table_params *params,
-		enum spp_classifier_type type,
-		int vid, const char *mac,
-		const struct sppwk_port_idx *port)
-{
-	int ret = SPP_RET_NG;
-	char *buff, *tmp_buff;
-	char port_str[CMD_TAG_APPEND_SIZE];
-	char value_str[STR_LEN_SHORT];
-	buff = params->output;
-	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RES_FMT,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = classifier_table)\n");
-		return ret;
-	}
-
-	spp_format_port_string(port_str, port->iface_type, port->iface_no);
-
-	ret = append_json_str_value(&tmp_buff, "type", CLS_TYPE_A_LIST[type]);
-	if (unlikely(ret < SPP_RET_OK))
-		return ret;
-
-	memset(value_str, 0x00, STR_LEN_SHORT);
-	switch (type) {
-	case SPP_CLASSIFIER_TYPE_MAC:
-		sprintf(value_str, "%s", mac);
-		break;
-	case SPP_CLASSIFIER_TYPE_VLAN:
-		sprintf(value_str, "%d/%s", vid, mac);
-		break;
-	default:
-		/* not used */
-		break;
-	}
-
-	ret = append_json_str_value(&tmp_buff, "value", value_str);
-	if (unlikely(ret < 0))
-		return ret;
-
-	ret = append_json_str_value(&tmp_buff, "port", port_str);
-	if (unlikely(ret < SPP_RET_OK))
-		return ret;
-
-	ret = append_json_block_brackets(&buff, "", tmp_buff);
-	spp_strbuf_free(tmp_buff);
-	params->output = buff;
-	return ret;
-}
-#endif /* SPP_VF_MODULE */
-
 /* append string of command response list for JSON format */
 int
 append_response_list_value(char **output, struct cmd_response *responses,
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
index cf5f81b..6ae2c5d 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
@@ -56,12 +56,6 @@ int append_core_element_value(struct spp_iterate_core_params *params,
 		const int num_rx, const struct sppwk_port_idx *rx_ports,
 		const int num_tx, const struct sppwk_port_idx *tx_ports);
 
-int append_classifier_element_value(
-		struct spp_iterate_classifier_table_params *params,
-		enum spp_classifier_type type,
-		int vid, const char *mac,
-		const struct sppwk_port_idx *port);
-
 int append_response_list_value(char **output, struct cmd_response *responses,
 		void *tmp);
 
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index c7d34a6..ecb36ff 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -14,6 +14,18 @@
 
 #define RTE_LOGTYPE_VF_CMD_RUNNER RTE_LOGTYPE_USER1
 
+/**
+ * List of classifier type. The order of items should be same as the order of
+ * enum `spp_classifier_type` defined in cmd_utils.h.
+ */
+/* TODO(yasufum) fix similar var in cmd_parser.c */
+const char *CLS_TYPE_A_LIST[] = {
+	"none",
+	"mac",
+	"vlan",
+	"",  /* termination */
+};
+
 /* Update classifier table with given action, add or del. */
 static int
 update_cls_table(enum sppwk_action wk_action,
@@ -536,7 +548,65 @@ update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp)
 	return SPP_RET_OK;
 }
 
+/**
+ * Operator function called in iterator for getting each of entries of
+ * classifier table named as iterate_adding_mac_entry().
+ */
+int
+append_classifier_element_value(
+		struct spp_iterate_classifier_table_params *params,
+		enum spp_classifier_type type,
+		int vid, const char *mac,
+		const struct sppwk_port_idx *port)
+{
+	int ret = SPP_RET_NG;
+	char *buff, *tmp_buff;
+	char port_str[CMD_TAG_APPEND_SIZE];
+	char value_str[STR_LEN_SHORT];
+	buff = params->output;
+	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, VF_CMD_RUNNER,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = classifier_table)\n");
+		return ret;
+	}
+
+	spp_format_port_string(port_str, port->iface_type, port->iface_no);
+
+	ret = append_json_str_value(&tmp_buff, "type", CLS_TYPE_A_LIST[type]);
+	if (unlikely(ret < SPP_RET_OK))
+		return ret;
+
+	memset(value_str, 0x00, STR_LEN_SHORT);
+	switch (type) {
+	case SPP_CLASSIFIER_TYPE_MAC:
+		sprintf(value_str, "%s", mac);
+		break;
+	case SPP_CLASSIFIER_TYPE_VLAN:
+		sprintf(value_str, "%d/%s", vid, mac);
+		break;
+	default:
+		/* not used */
+		break;
+	}
+
+	ret = append_json_str_value(&tmp_buff, "value", value_str);
+	if (unlikely(ret < 0))
+		return ret;
+
+	ret = append_json_str_value(&tmp_buff, "port", port_str);
+	if (unlikely(ret < SPP_RET_OK))
+		return ret;
+
+	ret = append_json_block_brackets(&buff, "", tmp_buff);
+	spp_strbuf_free(tmp_buff);
+	params->output = buff;
+	return ret;
+}
+
 /* Get component type from string of its name. */
+/* TODO(yasufum) consider to create and move to vf_cmd_parser.c */
 enum sppwk_worker_type
 get_comp_type_from_str(const char *type_str)
 {
-- 
2.17.1



From spp-request@dpdk.org Mon Jun 24 16:10:44 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd105.ddreams.local
 (zssg-mailmd105.ddreams.local [10.160.123.100])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL00D74DA5FR70@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 16:10:53 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd105.ddreams.local by
 zssg-mailmd105.ddreams.local (dDREAMS) id <0PTL00G06DA5UV00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:10:53 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd105.ddreams.local
 (dDREAMS) with ESMTP id <0PTL001M2DA5I980@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:10:53 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf101.ddreams.local (Postfix) with ESMTP id CC16F7E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:10:53 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id C43DB8E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:10:53 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id B9BE28E605A	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:10:53 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 6ECAD8E605B	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:10:53 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf101.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:10:53 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7ArCL016855;	Mon,
 24 Jun 2019 16:10:53 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O7Artn016854;	Mon, 24 Jun 2019 16:10:53 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O7ArwF016851	for unknown; Mon,
 24 Jun 2019 16:10:53 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7AqdY030936 for
 unknown; Mon, 24 Jun 2019 16:10:53 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7AqXV030933 for
 unknown; Mon, 24 Jun 2019 16:10:52 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O7Aku4023183	for unknown; Mon,
 24 Jun 2019 16:10:52 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id DE3641BEF6	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 24 Jun 2019 09:10:45 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 13
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 24 Jun 2019 09:10:44 +0200
Message-id: <mailman.23394.1561360244.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH] shared/sec: move get_comp_type_from_str
      (yasufum.o@gmail.com)
   2. [PATCH] shared/sec: add ifdef switch for deps headers
      (yasufum.o@gmail.com)
   3. [PATCH 0/2] Move spp_vf specific funcs from shared
      (yasufum.o@gmail.com)
   4. [PATCH 1/2] shared/sec: move append_classifier_element_value
      (yasufum.o@gmail.com)
   5. [PATCH 2/2] shared/sec: move func add_classifier_table
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon, 24 Jun 2019 15:22:15 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] shared/sec: move get_comp_type_from_str
Message-ID: <20190624062215.22613-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move get_comp_type_from_str() from shared dir to each
of workers. It is to remove ifdef switches.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/mir_cmd_runner.c                   | 13 ++++++++
 .../secondary/spp_worker_th/cmd_parser.c      | 31 ++-----------------
 .../secondary/spp_worker_th/mirror_deps.h     |  2 ++
 src/shared/secondary/spp_worker_th/vf_deps.h  |  1 +
 src/vf/vf_cmd_runner.c                        | 20 ++++++++++++
 5 files changed, 38 insertions(+), 29 deletions(-)

diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index 0cbd79d..5f0932a 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -401,3 +401,16 @@ update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp)
 	}
 	return SPP_RET_OK;
 }
+
+/* Get component type from string of its name. */
+enum sppwk_worker_type
+get_comp_type_from_str(const char *type_str)
+{
+	RTE_LOG(DEBUG, MIR_CMD_RUNNER, "type_str is %s\n", type_str);
+
+	if (strncmp(type_str, SPPWK_TYPE_MIR_STR,
+			strlen(SPPWK_TYPE_MIR_STR)+1) == 0)
+		return SPPWK_TYPE_MIR;
+
+	return SPPWK_TYPE_NONE;
+}
diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.c b/src/shared/secondary/spp_worker_th/cmd_parser.c
index 200e41b..fcec28b 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.c
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.c
@@ -10,6 +10,8 @@
 #include <rte_branch_prediction.h>
 
 #include "cmd_parser.h"
+#include "vf_deps.h"
+#include "mirror_deps.h"
 #include "shared/secondary/return_codes.h"
 
 #define RTE_LOGTYPE_WK_CMD_PARSER RTE_LOGTYPE_USER1
@@ -177,35 +179,6 @@ parse_resource_uid(const char *res_uid,
 	return SPP_RET_OK;
 }
 
-/* Get component type from string of its name. */
-/* TODO(yasufum) should be worker local, separated for vf and mirror. */
-static enum sppwk_worker_type
-get_comp_type_from_str(const char *type_str)
-{
-	RTE_LOG(DEBUG, WK_CMD_PARSER, "type_str is %s\n", type_str);
-
-#ifdef SPP_VF_MODULE
-	if (strncmp(type_str, CORE_TYPE_CLASSIFIER_MAC_STR,
-			strlen(CORE_TYPE_CLASSIFIER_MAC_STR)+1) == 0) {
-		return SPPWK_TYPE_CLS;
-	} else if (strncmp(type_str, CORE_TYPE_MERGE_STR,
-			strlen(CORE_TYPE_MERGE_STR)+1) == 0) {
-		return SPPWK_TYPE_MRG;
-	} else if (strncmp(type_str, CORE_TYPE_FORWARD_STR,
-			strlen(CORE_TYPE_FORWARD_STR)+1) == 0) {
-		return SPPWK_TYPE_FWD;
-	}
-#endif /* SPP_VF_MODULE */
-
-#ifdef SPP_MIRROR_MODULE
-	if (strncmp(type_str, SPPWK_TYPE_MIR_STR,
-			strlen(SPPWK_TYPE_MIR_STR)+1) == 0)
-		return SPPWK_TYPE_MIR;
-#endif /* SPP_MIRROR_MODULE */
-
-	return SPPWK_TYPE_NONE;
-}
-
 /* Format error message object and return error code for an error case. */
 /* TODO(yasufum) confirm usage of `set_parse_error` and
  * `set_detailed_parse_error`, which should be used ?
diff --git a/src/shared/secondary/spp_worker_th/mirror_deps.h b/src/shared/secondary/spp_worker_th/mirror_deps.h
index ef32697..43326ed 100644
--- a/src/shared/secondary/spp_worker_th/mirror_deps.h
+++ b/src/shared/secondary/spp_worker_th/mirror_deps.h
@@ -32,4 +32,6 @@ int update_mirror(struct sppwk_comp_info *wk_comp_info);
  */
 int update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp);
 
+enum sppwk_worker_type get_comp_type_from_str(const char *type_str);
+
 #endif  /* __SPP_WORKER_TH_MIRROR_DEPS_H__ */
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index ded5b1d..81fc18f 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -100,4 +100,5 @@ int add_classifier_table_val(
  */
 int update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp);
 
+enum sppwk_worker_type get_comp_type_from_str(const char *type_str);
 #endif  /* _SPPWK_TH_VF_DEPS_H_ */
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index e832e18..c7d34a6 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -535,3 +535,23 @@ update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp)
 	}
 	return SPP_RET_OK;
 }
+
+/* Get component type from string of its name. */
+enum sppwk_worker_type
+get_comp_type_from_str(const char *type_str)
+{
+	RTE_LOG(DEBUG, VF_CMD_RUNNER, "type_str is %s\n", type_str);
+
+	if (strncmp(type_str, CORE_TYPE_CLASSIFIER_MAC_STR,
+			strlen(CORE_TYPE_CLASSIFIER_MAC_STR)+1) == 0) {
+		return SPPWK_TYPE_CLS;
+	} else if (strncmp(type_str, CORE_TYPE_MERGE_STR,
+			strlen(CORE_TYPE_MERGE_STR)+1) == 0) {
+		return SPPWK_TYPE_MRG;
+	} else if (strncmp(type_str, CORE_TYPE_FORWARD_STR,
+			strlen(CORE_TYPE_FORWARD_STR)+1) == 0) {
+		return SPPWK_TYPE_FWD;
+	}
+
+	return SPPWK_TYPE_NONE;
+}
-- 
2.17.1



------------------------------

Message: 2
Date: Mon, 24 Jun 2019 15:22:25 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] shared/sec: add ifdef switch for deps headers
Message-ID: <20190624062225.22666-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to switch `vf_deps.h` and `mirror_deps.h` in shared dir
for compiling each of worker processes.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/shared/secondary/spp_worker_th/cmd_parser.c    |  8 +++++++-
 .../secondary/spp_worker_th/cmd_res_formatter.c    |  8 +++++++-
 src/shared/secondary/spp_worker_th/cmd_runner.c    | 14 ++++++++++----
 src/shared/secondary/spp_worker_th/cmd_utils.c     | 10 ++++++++--
 src/shared/secondary/spp_worker_th/vf_deps.h       |  1 +
 5 files changed, 33 insertions(+), 8 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.c b/src/shared/secondary/spp_worker_th/cmd_parser.c
index fcec28b..5a2fb82 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.c
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.c
@@ -10,9 +10,15 @@
 #include <rte_branch_prediction.h>
 
 #include "cmd_parser.h"
+#include "shared/secondary/return_codes.h"
+
+#ifdef SPP_VF_MODULE
 #include "vf_deps.h"
+#endif
+
+#ifdef SPP_MIRROR_MODULE
 #include "mirror_deps.h"
-#include "shared/secondary/return_codes.h"
+#endif
 
 #define RTE_LOGTYPE_WK_CMD_PARSER RTE_LOGTYPE_USER1
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index bfe13e5..f389939 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -4,9 +4,15 @@
 
 #include "cmd_res_formatter.h"
 #include "cmd_utils.h"
+#include "shared/secondary/json_helper.h"
+
+#ifdef SPP_VF_MODULE
 #include "vf_deps.h"
+#endif
+
+#ifdef SPP_MIRROR_MODULE
 #include "mirror_deps.h"
-#include "shared/secondary/json_helper.h"
+#endif
 
 #define RTE_LOGTYPE_WK_CMD_RES_FMT RTE_LOGTYPE_USER1
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 68436f3..3684a2c 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -9,14 +9,20 @@
 #include <rte_branch_prediction.h>
 
 #include "cmd_runner.h"
-#include "vf_deps.h"
-#include "mirror_deps.h"
 #include "spp_port.h"
-#include "shared/secondary/string_buffer.h"
-#include "shared/secondary/json_helper.h"
 #include "cmd_res_formatter.h"
 #include "conn_spp_ctl.h"
 #include "cmd_parser.h"
+#include "shared/secondary/string_buffer.h"
+#include "shared/secondary/json_helper.h"
+
+#ifdef SPP_VF_MODULE
+#include "vf_deps.h"
+#endif
+
+#ifdef SPP_MIRROR_MODULE
+#include "mirror_deps.h"
+#endif
 
 #define RTE_LOGTYPE_WK_CMD_RUNNER RTE_LOGTYPE_USER1
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 5a089c6..e61f59c 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -11,12 +11,18 @@
 #include <rte_log.h>
 #include <rte_branch_prediction.h>
 
-#include "vf_deps.h"
-#include "mirror_deps.h"
 #include "shared/secondary/return_codes.h"
 #include "cmd_utils.h"
 #include "spp_port.h"
 
+#ifdef SPP_VF_MODULE
+#include "vf_deps.h"
+#endif
+
+#ifdef SPP_MIRROR_MODULE
+#include "mirror_deps.h"
+#endif
+
 #include "shared/secondary/add_port.h"
 #include "shared/secondary/utils.h"
 
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 81fc18f..7d77e87 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -101,4 +101,5 @@ int add_classifier_table_val(
 int update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp);
 
 enum sppwk_worker_type get_comp_type_from_str(const char *type_str);
+
 #endif  /* _SPPWK_TH_VF_DEPS_H_ */
-- 
2.17.1



------------------------------

Message: 3
Date: Mon, 24 Jun 2019 16:10:24 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 0/2] Move spp_vf specific funcs from shared
Message-ID: <20190624071026.23286-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This series of patches is to move functions used only for spp_vf from
shared to spp_vf's directory.

Yasufumi Ogawa (2):
  shared/sec: move append_classifier_element_value
  shared/sec: move func add_classifier_table

 .../spp_worker_th/cmd_res_formatter.c         | 126 ------------------
 .../spp_worker_th/cmd_res_formatter.h         |   6 -
 src/shared/secondary/spp_worker_th/vf_deps.h  |   9 ++
 src/vf/classifier_mac.c                       |  57 ++++++++
 src/vf/vf_cmd_runner.c                        |  71 +++++++++-
 5 files changed, 136 insertions(+), 133 deletions(-)

-- 
2.17.1



------------------------------

Message: 4
Date: Mon, 24 Jun 2019 16:10:25 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 1/2] shared/sec: move
	append_classifier_element_value
Message-ID: <20190624071026.23286-2-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move append_classifier_element_value() from shared dir
to spp_vf's dir because this functions is for spp_vf.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../spp_worker_th/cmd_res_formatter.c         | 71 -------------------
 .../spp_worker_th/cmd_res_formatter.h         |  6 --
 src/vf/vf_cmd_runner.c                        | 70 ++++++++++++++++++
 3 files changed, 70 insertions(+), 77 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index f389939..a0c22d2 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -48,18 +48,6 @@ const char *PORT_ABILITY_STAT_LIST[] = {
 	"",  /* termination */
 };
 
-/**
- * List of classifier type. The order of items should be same as the order of
- * enum `spp_classifier_type` defined in cmd_utils.h.
- */
-/* TODO(yasufum) fix similar var in cmd_parser.c */
-const char *CLS_TYPE_A_LIST[] = {
-	"none",
-	"mac",
-	"vlan",
-	"",  /* termination */
-};
-
 /* command response result string list */
 struct cmd_response response_result_list[] = {
 	{ "result", append_result_value },
@@ -402,65 +390,6 @@ append_core_element_value(
 	return ret;
 }
 
-#ifdef SPP_VF_MODULE
-/**
- * Operator function called in iterator for getting each of entries of
- * classifier table named as iterate_adding_mac_entry().
- */
-int
-append_classifier_element_value(
-		struct spp_iterate_classifier_table_params *params,
-		enum spp_classifier_type type,
-		int vid, const char *mac,
-		const struct sppwk_port_idx *port)
-{
-	int ret = SPP_RET_NG;
-	char *buff, *tmp_buff;
-	char port_str[CMD_TAG_APPEND_SIZE];
-	char value_str[STR_LEN_SHORT];
-	buff = params->output;
-	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RES_FMT,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = classifier_table)\n");
-		return ret;
-	}
-
-	spp_format_port_string(port_str, port->iface_type, port->iface_no);
-
-	ret = append_json_str_value(&tmp_buff, "type", CLS_TYPE_A_LIST[type]);
-	if (unlikely(ret < SPP_RET_OK))
-		return ret;
-
-	memset(value_str, 0x00, STR_LEN_SHORT);
-	switch (type) {
-	case SPP_CLASSIFIER_TYPE_MAC:
-		sprintf(value_str, "%s", mac);
-		break;
-	case SPP_CLASSIFIER_TYPE_VLAN:
-		sprintf(value_str, "%d/%s", vid, mac);
-		break;
-	default:
-		/* not used */
-		break;
-	}
-
-	ret = append_json_str_value(&tmp_buff, "value", value_str);
-	if (unlikely(ret < 0))
-		return ret;
-
-	ret = append_json_str_value(&tmp_buff, "port", port_str);
-	if (unlikely(ret < SPP_RET_OK))
-		return ret;
-
-	ret = append_json_block_brackets(&buff, "", tmp_buff);
-	spp_strbuf_free(tmp_buff);
-	params->output = buff;
-	return ret;
-}
-#endif /* SPP_VF_MODULE */
-
 /* append string of command response list for JSON format */
 int
 append_response_list_value(char **output, struct cmd_response *responses,
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
index cf5f81b..6ae2c5d 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
@@ -56,12 +56,6 @@ int append_core_element_value(struct spp_iterate_core_params *params,
 		const int num_rx, const struct sppwk_port_idx *rx_ports,
 		const int num_tx, const struct sppwk_port_idx *tx_ports);
 
-int append_classifier_element_value(
-		struct spp_iterate_classifier_table_params *params,
-		enum spp_classifier_type type,
-		int vid, const char *mac,
-		const struct sppwk_port_idx *port);
-
 int append_response_list_value(char **output, struct cmd_response *responses,
 		void *tmp);
 
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index c7d34a6..ecb36ff 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -14,6 +14,18 @@
 
 #define RTE_LOGTYPE_VF_CMD_RUNNER RTE_LOGTYPE_USER1
 
+/**
+ * List of classifier type. The order of items should be same as the order of
+ * enum `spp_classifier_type` defined in cmd_utils.h.
+ */
+/* TODO(yasufum) fix similar var in cmd_parser.c */
+const char *CLS_TYPE_A_LIST[] = {
+	"none",
+	"mac",
+	"vlan",
+	"",  /* termination */
+};
+
 /* Update classifier table with given action, add or del. */
 static int
 update_cls_table(enum sppwk_action wk_action,
@@ -536,7 +548,65 @@ update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp)
 	return SPP_RET_OK;
 }
 
+/**
+ * Operator function called in iterator for getting each of entries of
+ * classifier table named as iterate_adding_mac_entry().
+ */
+int
+append_classifier_element_value(
+		struct spp_iterate_classifier_table_params *params,
+		enum spp_classifier_type type,
+		int vid, const char *mac,
+		const struct sppwk_port_idx *port)
+{
+	int ret = SPP_RET_NG;
+	char *buff, *tmp_buff;
+	char port_str[CMD_TAG_APPEND_SIZE];
+	char value_str[STR_LEN_SHORT];
+	buff = params->output;
+	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, VF_CMD_RUNNER,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = classifier_table)\n");
+		return ret;
+	}
+
+	spp_format_port_string(port_str, port->iface_type, port->iface_no);
+
+	ret = append_json_str_value(&tmp_buff, "type", CLS_TYPE_A_LIST[type]);
+	if (unlikely(ret < SPP_RET_OK))
+		return ret;
+
+	memset(value_str, 0x00, STR_LEN_SHORT);
+	switch (type) {
+	case SPP_CLASSIFIER_TYPE_MAC:
+		sprintf(value_str, "%s", mac);
+		break;
+	case SPP_CLASSIFIER_TYPE_VLAN:
+		sprintf(value_str, "%d/%s", vid, mac);
+		break;
+	default:
+		/* not used */
+		break;
+	}
+
+	ret = append_json_str_value(&tmp_buff, "value", value_str);
+	if (unlikely(ret < 0))
+		return ret;
+
+	ret = append_json_str_value(&tmp_buff, "port", port_str);
+	if (unlikely(ret < SPP_RET_OK))
+		return ret;
+
+	ret = append_json_block_brackets(&buff, "", tmp_buff);
+	spp_strbuf_free(tmp_buff);
+	params->output = buff;
+	return ret;
+}
+
 /* Get component type from string of its name. */
+/* TODO(yasufum) consider to create and move to vf_cmd_parser.c */
 enum sppwk_worker_type
 get_comp_type_from_str(const char *type_str)
 {
-- 
2.17.1



------------------------------

Message: 5
Date: Mon, 24 Jun 2019 16:10:26 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 2/2] shared/sec: move func add_classifier_table
Message-ID: <20190624071026.23286-3-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move add_classifier_table() from shared dir to
`classifier_mac.c` because this functions is not shared function.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../spp_worker_th/cmd_res_formatter.c         | 55 ------------------
 src/shared/secondary/spp_worker_th/vf_deps.h  |  9 +++
 src/vf/classifier_mac.c                       | 57 +++++++++++++++++++
 src/vf/vf_cmd_runner.c                        |  1 -
 4 files changed, 66 insertions(+), 56 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index a0c22d2..e4912d6 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -615,58 +615,3 @@ add_master_lcore(const char *name, char **output,
 	return ret;
 }
 
-#ifdef SPP_VF_MODULE
-/* Iterate classifier_table to create response to status command */
-static int
-_add_classifier_table(
-		struct spp_iterate_classifier_table_params *params)
-{
-	int ret;
-
-	ret = add_classifier_table_val(params);
-	if (unlikely(ret != 0)) {
-		RTE_LOG(ERR, WK_CMD_RES_FMT,
-				"Cannot iterate classifier_mac_table.\n");
-		return SPP_RET_NG;
-	}
-
-	return SPP_RET_OK;
-}
-
-/**
- * Add entries of classifier table in JSON. Before iterating the entries,
- * this function calls several nested functions.
- *   add_classifier_table()  // This function.
- *     -> _add_classifier_table()  // Wrapper and doesn't almost nothing.
- *       -> add_classifier_table_val()  // Setup data and call iterator.
- *         -> iterate_adding_mac_entry()
- */
-int
-add_classifier_table(const char *name, char **output,
-		void *tmp __attribute__ ((unused)))
-{
-	int ret = SPP_RET_NG;
-	struct spp_iterate_classifier_table_params itr_params;
-	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RES_FMT,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s)\n",
-				name);
-		return SPP_RET_NG;
-	}
-
-	itr_params.output = tmp_buff;
-	itr_params.element_proc = append_classifier_element_value;
-
-	ret = _add_classifier_table(&itr_params);
-	if (unlikely(ret != SPP_RET_OK)) {
-		spp_strbuf_free(itr_params.output);
-		return SPP_RET_NG;
-	}
-
-	ret = append_json_array_brackets(output, name, itr_params.output);
-	spp_strbuf_free(itr_params.output);
-	return ret;
-}
-#endif /* SPP_VF_MODULE */
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 7d77e87..72a6960 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -100,6 +100,15 @@ int add_classifier_table_val(
  */
 int update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp);
 
+int append_classifier_element_value(
+		struct spp_iterate_classifier_table_params *params,
+		enum spp_classifier_type type,
+		int vid, const char *mac,
+		const struct sppwk_port_idx *port);
+
+int add_classifier_table(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+
 enum sppwk_worker_type get_comp_type_from_str(const char *type_str);
 
 #endif  /* _SPPWK_TH_VF_DEPS_H_ */
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 6d8e664..4387fd5 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -24,6 +24,9 @@
 #include "classifier_mac.h"
 #include "spp_vf.h"
 #include "shared/secondary/return_codes.h"
+#include "shared/secondary/string_buffer.h"
+#include "shared/secondary/json_helper.h"
+#include "shared/secondary/spp_worker_th/cmd_res_formatter.h"
 #include "shared/secondary/spp_worker_th/vf_deps.h"
 #include "shared/secondary/spp_worker_th/spp_port.h"
 
@@ -956,3 +959,57 @@ add_classifier_table_val(
 
 	return SPP_RET_OK;
 }
+
+/* Iterate classifier_table to create response to status command */
+static int
+_add_classifier_table(
+		struct spp_iterate_classifier_table_params *params)
+{
+	int ret;
+
+	ret = add_classifier_table_val(params);
+	if (unlikely(ret != 0)) {
+		RTE_LOG(ERR, SPP_CLASSIFIER_MAC,
+				"Cannot iterate classifier_mac_table.\n");
+		return SPP_RET_NG;
+	}
+
+	return SPP_RET_OK;
+}
+
+/**
+ * Add entries of classifier table in JSON. Before iterating the entries,
+ * this function calls several nested functions.
+ *   add_classifier_table()  // This function.
+ *     -> _add_classifier_table()  // Wrapper and doesn't almost nothing.
+ *       -> add_classifier_table_val()  // Setup data and call iterator.
+ *         -> iterate_adding_mac_entry()
+ */
+int
+add_classifier_table(const char *name, char **output,
+		void *tmp __attribute__ ((unused)))
+{
+	int ret = SPP_RET_NG;
+	struct spp_iterate_classifier_table_params itr_params;
+	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, SPP_CLASSIFIER_MAC,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = %s)\n",
+				name);
+		return SPP_RET_NG;
+	}
+
+	itr_params.output = tmp_buff;
+	itr_params.element_proc = append_classifier_element_value;
+
+	ret = _add_classifier_table(&itr_params);
+	if (unlikely(ret != SPP_RET_OK)) {
+		spp_strbuf_free(itr_params.output);
+		return SPP_RET_NG;
+	}
+
+	ret = append_json_array_brackets(output, name, itr_params.output);
+	spp_strbuf_free(itr_params.output);
+	return ret;
+}
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index ecb36ff..4c75b7e 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -5,7 +5,6 @@
 #include "classifier_mac.h"
 #include "spp_forward.h"
 #include "shared/secondary/return_codes.h"
-#include "shared/secondary/string_buffer.h"
 #include "shared/secondary/json_helper.h"
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
-- 
2.17.1



End of spp Digest, Vol 31, Issue 13
***********************************


From yasufum.o@gmail.com Mon Jun 24 16:10:26 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00D7ADA6FR70@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 16:10:54 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTL00S3CDA6R200@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:10:54 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00DXHDA6AT80@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:10:54 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id 05C627E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:10:54 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 045048E605D	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:10:54 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id EDA8E8E6056	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:10:53 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 0EF698E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:10:53 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:10:53 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7AqUi016847;	Mon,
 24 Jun 2019 16:10:52 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O7AqeV016846;	Mon, 24 Jun 2019 16:10:52 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O7Aqb4016843	for unknown; Mon,
 24 Jun 2019 16:10:52 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Aqx4021124 for
 unknown; Mon, 24 Jun 2019 16:10:52 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Aqsq021119; Mon,
 24 Jun 2019 16:10:52 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Aq5R016924;	Mon,
 24 Jun 2019 16:10:52 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O7AqcV016920	for unknown; Mon, 24 Jun 2019 16:10:52 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7ApKB030919 for
 unknown; Mon, 24 Jun 2019 16:10:51 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Ap1t030915 for
 unknown; Mon, 24 Jun 2019 16:10:51 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O7AjsD023173	for unknown; Mon,
 24 Jun 2019 16:10:51 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id D567D1BED2;	Mon, 24 Jun 2019 09:10:44 +0200 (CEST)
Received: from mail-pl1-f193.google.com
 (mail-pl1-f193.google.com [209.85.214.193]) by dpdk.org (Postfix)
 with ESMTP id 290C41BCAC for <spp@dpdk.org>; Mon,
 24 Jun 2019 09:10:43 +0200 (CEST)
Received: by mail-pl1-f193.google.com with SMTP id g4so6332321plb.5 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 00:10:43 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id 128sm10928965pfd.66.2019.06.24.00.10.41
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 00:10:41 -0700 (PDT)
Date: Mon, 24 Jun 2019 16:10:26 +0900
From: yasufum.o@gmail.com
Subject: [spp 04394] [spp] [PATCH 2/2] shared/sec: move func
 add_classifier_table
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624071026.23286-3-yasufum.o@gmail.com>
In-reply-to: <20190624071026.23286-1-yasufum.o@gmail.com>
References: <20190624071026.23286-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04394
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=8eWOapYgsfDaV6w3mq1n/jOd0+PsYXJ6BfgaPt1p0cE=;
 b=YNUJuZIK59/GMnRcJ5J6HuLH9MPZ5Uzt0o4yeTKdz4YFijjngh+zUw74WB79cLu/n9
 6j2Y7I4ymQIKCqlivjOai6OkUHRi5E6M/AT5fHDjtn2bpUgTUVuSYT7TZaCoUI/e/JNi
 SzBnUXAo0mikg8xMOGUUBuDE4rBfsD2JoTS/I8jsz/WfTNSM4Gq66np6s2lWB9yMN+bb
 8rJEv7fr0qZtaqzfWAS88DRArdiQDJ7OHro5borJdZJPd4Qa2C2Y3bcgZq4K0T66AufK
 2A6e5hslp85DPA5pXkj62f3SsFfPPBFrSQoY9klw0JHYJeWoQkCwbFNVnfpl0IXP9Luw XbaA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=8eWOapYgsfDaV6w3mq1n/jOd0+PsYXJ6BfgaPt1p0cE=;
 b=ecqGgEs8UyTsnTLV2nFkOmyBkLK2Vyhrh9jgR5tB9mu3KOJWUQTKcaBRdn1IHIv/oI
 dPWZe5aQKlE+a1jG2oOe2fiRqP1FQZCSrZ5c8FM/3LO+3wWJh92L7VSmtVyDaVZcxbDO
 vEQwIU0NcFpS7KYU0ry19//Up/dCrghx8b0IrV9BZD4SC7JOHi5GIgZrRoPD4XHG5mJD
 Jld4Lzre4RSn6Zn6sHa3CSfj/55VWAQMzrNxMVdKXrUk14i76XUQkbFZoOukC3y4Pls/
 HYlNPzwFXyR6tmSBnJnEfyGK4mn05K+CNKPpnfOjOfTkb0Qjx+U2xRIiEIqI7vU3bn4/ 6tfw==
X-Gm-Message-State: APjAAAXy8IspcX5ihalo0/PZSNql1KwtGvr7XOEJyanJLg0ECcUx0y4J
 ae6E9wHvAnmheVh7UY23UaohSzcx
X-Google-Smtp-Source:
 APXvYqxDPFMfM69GZeIInnCGxhEgt0/skKxnEsOqkNFoF7BLdj/KlpFreY6jGClikwJHfh7LR6h/Kg==
X-Received: by 2002:a17:902:7581:: with SMTP id
 j1mr145527609pll.23.1561360242294; Mon, 24 Jun 2019 00:10:42 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 183
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move add_classifier_table() from shared dir to
`classifier_mac.c` because this functions is not shared function.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../spp_worker_th/cmd_res_formatter.c         | 55 ------------------
 src/shared/secondary/spp_worker_th/vf_deps.h  |  9 +++
 src/vf/classifier_mac.c                       | 57 +++++++++++++++++++
 src/vf/vf_cmd_runner.c                        |  1 -
 4 files changed, 66 insertions(+), 56 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index a0c22d2..e4912d6 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -615,58 +615,3 @@ add_master_lcore(const char *name, char **output,
 	return ret;
 }
 
-#ifdef SPP_VF_MODULE
-/* Iterate classifier_table to create response to status command */
-static int
-_add_classifier_table(
-		struct spp_iterate_classifier_table_params *params)
-{
-	int ret;
-
-	ret = add_classifier_table_val(params);
-	if (unlikely(ret != 0)) {
-		RTE_LOG(ERR, WK_CMD_RES_FMT,
-				"Cannot iterate classifier_mac_table.\n");
-		return SPP_RET_NG;
-	}
-
-	return SPP_RET_OK;
-}
-
-/**
- * Add entries of classifier table in JSON. Before iterating the entries,
- * this function calls several nested functions.
- *   add_classifier_table()  // This function.
- *     -> _add_classifier_table()  // Wrapper and doesn't almost nothing.
- *       -> add_classifier_table_val()  // Setup data and call iterator.
- *         -> iterate_adding_mac_entry()
- */
-int
-add_classifier_table(const char *name, char **output,
-		void *tmp __attribute__ ((unused)))
-{
-	int ret = SPP_RET_NG;
-	struct spp_iterate_classifier_table_params itr_params;
-	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RES_FMT,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s)\n",
-				name);
-		return SPP_RET_NG;
-	}
-
-	itr_params.output = tmp_buff;
-	itr_params.element_proc = append_classifier_element_value;
-
-	ret = _add_classifier_table(&itr_params);
-	if (unlikely(ret != SPP_RET_OK)) {
-		spp_strbuf_free(itr_params.output);
-		return SPP_RET_NG;
-	}
-
-	ret = append_json_array_brackets(output, name, itr_params.output);
-	spp_strbuf_free(itr_params.output);
-	return ret;
-}
-#endif /* SPP_VF_MODULE */
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 7d77e87..72a6960 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -100,6 +100,15 @@ int add_classifier_table_val(
  */
 int update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp);
 
+int append_classifier_element_value(
+		struct spp_iterate_classifier_table_params *params,
+		enum spp_classifier_type type,
+		int vid, const char *mac,
+		const struct sppwk_port_idx *port);
+
+int add_classifier_table(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+
 enum sppwk_worker_type get_comp_type_from_str(const char *type_str);
 
 #endif  /* _SPPWK_TH_VF_DEPS_H_ */
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 6d8e664..4387fd5 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -24,6 +24,9 @@
 #include "classifier_mac.h"
 #include "spp_vf.h"
 #include "shared/secondary/return_codes.h"
+#include "shared/secondary/string_buffer.h"
+#include "shared/secondary/json_helper.h"
+#include "shared/secondary/spp_worker_th/cmd_res_formatter.h"
 #include "shared/secondary/spp_worker_th/vf_deps.h"
 #include "shared/secondary/spp_worker_th/spp_port.h"
 
@@ -956,3 +959,57 @@ add_classifier_table_val(
 
 	return SPP_RET_OK;
 }
+
+/* Iterate classifier_table to create response to status command */
+static int
+_add_classifier_table(
+		struct spp_iterate_classifier_table_params *params)
+{
+	int ret;
+
+	ret = add_classifier_table_val(params);
+	if (unlikely(ret != 0)) {
+		RTE_LOG(ERR, SPP_CLASSIFIER_MAC,
+				"Cannot iterate classifier_mac_table.\n");
+		return SPP_RET_NG;
+	}
+
+	return SPP_RET_OK;
+}
+
+/**
+ * Add entries of classifier table in JSON. Before iterating the entries,
+ * this function calls several nested functions.
+ *   add_classifier_table()  // This function.
+ *     -> _add_classifier_table()  // Wrapper and doesn't almost nothing.
+ *       -> add_classifier_table_val()  // Setup data and call iterator.
+ *         -> iterate_adding_mac_entry()
+ */
+int
+add_classifier_table(const char *name, char **output,
+		void *tmp __attribute__ ((unused)))
+{
+	int ret = SPP_RET_NG;
+	struct spp_iterate_classifier_table_params itr_params;
+	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, SPP_CLASSIFIER_MAC,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = %s)\n",
+				name);
+		return SPP_RET_NG;
+	}
+
+	itr_params.output = tmp_buff;
+	itr_params.element_proc = append_classifier_element_value;
+
+	ret = _add_classifier_table(&itr_params);
+	if (unlikely(ret != SPP_RET_OK)) {
+		spp_strbuf_free(itr_params.output);
+		return SPP_RET_NG;
+	}
+
+	ret = append_json_array_brackets(output, name, itr_params.output);
+	spp_strbuf_free(itr_params.output);
+	return ret;
+}
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index ecb36ff..4c75b7e 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -5,7 +5,6 @@
 #include "classifier_mac.h"
 #include "spp_forward.h"
 #include "shared/secondary/return_codes.h"
-#include "shared/secondary/string_buffer.h"
 #include "shared/secondary/json_helper.h"
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 16:10:49 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd101.ddreams.local
 (zssg-mailmd101.ddreams.local [10.160.123.96]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00D9VDAIFR70@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 16:11:06 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd101.ddreams.local by
 zssg-mailmd101.ddreams.local (dDREAMS) id <0PTL0150QDAIRB00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:06 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd101.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00P6NDAIB090@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:06 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id BCED87E6038	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:06 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id BB2438E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:06 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id B8A738E6056	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:06 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 224C78E6060	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:06 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:06 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7B5Uo016896;	Mon,
 24 Jun 2019 16:11:05 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O7B5BC016895;	Mon, 24 Jun 2019 16:11:05 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O7B5W1016892	for unknown; Mon,
 24 Jun 2019 16:11:05 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7B5iT021200 for
 unknown; Mon, 24 Jun 2019 16:11:05 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7B5Od021195; Mon,
 24 Jun 2019 16:11:05 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7B5lR016953;	Mon,
 24 Jun 2019 16:11:05 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O7B5Eo016949	for unknown; Mon, 24 Jun 2019 16:11:05 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7B4Hh031006 for
 unknown; Mon, 24 Jun 2019 16:11:04 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7B4uk030995 for
 unknown; Mon, 24 Jun 2019 16:11:04 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O7Aw8h023221	for unknown; Mon,
 24 Jun 2019 16:11:04 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id ED8231BDD2;	Mon, 24 Jun 2019 09:10:57 +0200 (CEST)
Received: from mail-pg1-f195.google.com
 (mail-pg1-f195.google.com [209.85.215.195]) by dpdk.org (Postfix)
 with ESMTP id E5A001BCAC for <spp@dpdk.org>; Mon,
 24 Jun 2019 09:10:56 +0200 (CEST)
Received: by mail-pg1-f195.google.com with SMTP id y72so6593458pgd.8 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 00:10:56 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id 3sm10703610pfp.114.2019.06.24.00.10.54
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 00:10:55 -0700 (PDT)
Date: Mon, 24 Jun 2019 16:10:49 +0900
From: yasufum.o@gmail.com
Subject: [spp 04395] [spp] [PATCH 0/2] Rename struct cmd_response
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624071051.23342-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04395
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=PK6E6shg167W3meadWiE4G34YN4tlFgud9V9ZfMmJPA=;
 b=EvKiu58ymAN2fNakM2WVKG53H+DuYRsiXI7yfO6YDgA9u05qY/oTJW3Sl7knAH/fhi
 NO8ucxPfJ8XUJB6ZufrHJY4Vilr/WoTxCsRLhEvhpUBo/oKBI/Aq29REoP/sX5vr+34K
 ij3hY8ExFo4w5bstTw9kbXvKza/1tZ2hvnhJ0ivbp5OeEDqclxwTnmti1cXnMWGywU6L
 8BS1h0lTXijOqV291EBnYOTtn8hsi6ugE4F9jrXXinQYtQQJ5Ro0O/zqHEmqf+nWlr5Q
 oIO1WlixqPZ+u1JtgSiM11zy8NCXYJ32OjnSrNms1/YZgoynIcjJFQkO902IA7fTFNAJ JbZg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=PK6E6shg167W3meadWiE4G34YN4tlFgud9V9ZfMmJPA=;
 b=kReOUfRVnnOkPUt5JdBgih/50VLPv6hga10JimCaDDD0kSD0nOXhum78o6ZeTZYcaj
 okUUqLPZb2Dijor/ERhdROQoPuUQwaq5E7C29jVyz2t1xHDR4CMFleaX3YTN4WTlWGWN
 9ZzUZUe0IOirft76Z+m80XFKclIKXfYCOyt0lMT05veDqfEzBneslAOO3sIXpSRIo7a7
 rTXHZUERETCDmx+q10fcSrZaUfbBIqOQOPt96OD0W/WtWUg5i8qOzY2ZAXSvBtxWNhW7
 yn6F3NWl3dkworbyUDC8HAosrYyjKy0bwq8uS+1u1WwBqIT26S42Es1DlcBpdMwZl8av Xu4Q==
X-Gm-Message-State: APjAAAWRB/m98DIZUZ6tGM5DHRygZor0Dq3Hn+eKQQoZI64GKDbQdEIs
 MOP6v0Bp5DZL/RO8ddWMj7eBR1pE
X-Google-Smtp-Source:
 APXvYqx7HeAnHYNx0bGfWeUGd3/b5f4HkFbdKg3QTPqtPx+gzGMoDmu/LbuV6A+wLKRB5B33Pfg2wg==
X-Received: by 2002:a63:c106:: with SMTP id w6mr31712512pgf.422.1561360256086;
 Mon, 24 Jun 2019 00:10:56 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 19
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Struct cmd_response is to define a set of combinations of tag and ope
function, so the name is not appropriate considering this feature.
This update is to rename it to `cmd_res_formatter_ops` for spp_vf,
spp_mirror and spp_pcap.

Yasufumi Ogawa (2):
  shared/sec: change name of struct cmd_response
  spp_pcap: change name of struct cmd_response

 src/pcap/cmd_runner.c                               |  8 ++++----
 .../secondary/spp_worker_th/cmd_res_formatter.c     | 13 ++++++-------
 .../secondary/spp_worker_th/cmd_res_formatter.h     | 11 +++++------
 3 files changed, 15 insertions(+), 17 deletions(-)

-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 16:10:50 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DALDANFR70@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 16:11:11 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTL00T24DANCJ00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:11 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00D62DANAT90@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:11 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id 2D0F77E6038	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:11 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 2B9D18E605E	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:11 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 29C748E6052	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:11 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 446A48E6052	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:10 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:10 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BAL7016903;	Mon,
 24 Jun 2019 16:11:10 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O7BAqn016902;	Mon, 24 Jun 2019 16:11:10 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O7B9Vi016899	for unknown; Mon,
 24 Jun 2019 16:11:09 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7B9Ie021219 for
 unknown; Mon, 24 Jun 2019 16:11:09 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7B9H6021216; Mon,
 24 Jun 2019 16:11:09 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7B9iG016963;	Mon,
 24 Jun 2019 16:11:09 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O7B9hK016959	for unknown; Mon, 24 Jun 2019 16:11:09 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7B9Rj031026 for
 unknown; Mon, 24 Jun 2019 16:11:09 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7B8sk031022 for
 unknown; Mon, 24 Jun 2019 16:11:09 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O7B2s1023235	for unknown; Mon,
 24 Jun 2019 16:11:08 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 084E11BEF6;	Mon, 24 Jun 2019 09:11:02 +0200 (CEST)
Received: from mail-pg1-f195.google.com
 (mail-pg1-f195.google.com [209.85.215.195]) by dpdk.org (Postfix)
 with ESMTP id 2059E1BED2 for <spp@dpdk.org>; Mon,
 24 Jun 2019 09:11:00 +0200 (CEST)
Received: by mail-pg1-f195.google.com with SMTP id w10so6590748pgj.7 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 00:11:00 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id 3sm10703610pfp.114.2019.06.24.00.10.57
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 00:10:58 -0700 (PDT)
Date: Mon, 24 Jun 2019 16:10:50 +0900
From: yasufum.o@gmail.com
Subject: [spp 04396] [spp] [PATCH 1/2] shared/sec: change name of struct
 cmd_response
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624071051.23342-2-yasufum.o@gmail.com>
In-reply-to: <20190624071051.23342-1-yasufum.o@gmail.com>
References: <20190624071051.23342-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04396
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=HMuBETGGqA4QK9DZl3/EAz5TMk8cRW7wasxe9qBqsVc=;
 b=gQwo5hzhlxlgGlUGM1qKCMBPA3sElnkC47/x+n5FSSR3FKGxuYdJUjnwyaLZxrDEPk
 BvgrNNgjrboyQrsFN82A74dPjD7hIZho9dAa6FYEzs7xn6Seo24SgFwo8JBUTGtL6cnf
 UyA2i/2kFdfohzi3Xn2hyeCz/2pm0srBMcmDpzYAlG+wxRw++w7KHiPSyTqT8AM+wQk0
 trwmGBKZTBitzqW8hrpyqQbx6W2GzX6q3QsOV3/dBOZXP43IoeJiKjzYvGkeFeR3dUAV
 BF2Q9C3IhVnCR5freoYyU1GmhZKEyJkdXaol0V/rUvBqD76lsxwz/pLdJ6+s7xDcw9Hm wVdg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=HMuBETGGqA4QK9DZl3/EAz5TMk8cRW7wasxe9qBqsVc=;
 b=R1guFdoDk66i9ll7vVvNbszetjEuC7TAMCUh2arDnTpX9PuNAzxBm7DIcNrDjyDMMV
 o7T/zvtG8DodiDhQoQKnxBWT4JHM84THneuja29dqe1OudDa8C9lwktCbDRbmG5pfF3+
 WqQG69kh2IXfPfuAprRik9pCZfEcaJ4J+F+vrMvP3yQZLe0ZYs+Ii3KIwwXsqvmwpqZ0
 yxJYEWBzxGQfdz86y6CkU5hxDPmYn9Nmr06ZZDYOH5DTQPFZ2HY9EAOUmzuvl2jQlTXt
 QaU7wDrGshpxSuzD4qz7EJ3xYzYyWfoY98EV4ICmJbQCmZ5JEqin9CLOJylJH72Bu0cI gLKw==
X-Gm-Message-State: APjAAAWYIn18EwUxbpJKgLLRdRFpNbIrPxdEwfxLiKsIyrGLFOTdIrzB
 ILu9Q4eMmqV5BdtTChy8wvRxQ+HA
X-Google-Smtp-Source:
 APXvYqx+6gKcpozl+hZocrqeTLo1dsz4xYfx4WtFJDqe7OKbNuPutp6Kw9sv3+Dvilc6Zk0e34IH6w==
X-Received: by 2002:a63:f959:: with SMTP id q25mr12343885pgk.357.1561360258356;
 Mon, 24 Jun 2019 00:10:58 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 100
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to rename struct `cmd_response` to
`cmd_res_formatter_ops` because it is a set of tag and operation
function for parsing command.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/cmd_res_formatter.c     | 13 ++++++-------
 .../secondary/spp_worker_th/cmd_res_formatter.h     | 11 +++++------
 2 files changed, 11 insertions(+), 13 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index e4912d6..8d64c21 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -49,7 +49,7 @@ const char *PORT_ABILITY_STAT_LIST[] = {
 };
 
 /* command response result string list */
-struct cmd_response response_result_list[] = {
+struct cmd_res_formatter_ops response_result_list[] = {
 	{ "result", append_result_value },
 	{ "error_details", append_error_details_value },
 	{ "", NULL }
@@ -67,7 +67,7 @@ struct cmd_response response_result_list[] = {
  *                 "core": 2,
  *                 ...
  */
-struct cmd_response response_info_list[] = {
+struct cmd_res_formatter_ops response_info_list[] = {
 	{ "client-id", add_client_id },
 	{ "phy", add_interface },
 	{ "vhost", add_interface },
@@ -392,8 +392,8 @@ append_core_element_value(
 
 /* append string of command response list for JSON format */
 int
-append_response_list_value(char **output, struct cmd_response *responses,
-		void *tmp)
+append_response_list_value(char **output,
+		struct cmd_res_formatter_ops *responses, void *tmp)
 {
 	int ret = SPP_RET_NG;
 	int i;
@@ -559,8 +559,8 @@ wk_get_client_id(void)
 
 /**
  * Operator functions start with prefix `add_` defined in `response_info_list`
- * of struct `cmd_response` which are for making each of parts of command
- * response.
+ * of struct `cmd_res_formatter_ops` which are for making each of parts of
+ * command response.
  */
 
 /* Add entry of client ID such as `"client-id": 1` to a response in JSON. */
@@ -614,4 +614,3 @@ add_master_lcore(const char *name, char **output,
 	ret = append_json_int_value(output, name, rte_get_master_lcore());
 	return ret;
 }
-
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
index 6ae2c5d..b1de209 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
@@ -26,8 +26,7 @@ struct cmd_result {
  * Contains command response and operator func for. It is used as an array of
  * this struct.
  */
-/* TODO(yasufum) add comment describes the purpose of this struct is used. */
-struct cmd_response {
+struct cmd_res_formatter_ops {
 	char tag_name[CMD_RES_TAG_LEN];
 	int (*func)(const char *name, char **output, void *tmp);
 };
@@ -56,8 +55,8 @@ int append_core_element_value(struct spp_iterate_core_params *params,
 		const int num_rx, const struct sppwk_port_idx *rx_ports,
 		const int num_tx, const struct sppwk_port_idx *tx_ports);
 
-int append_response_list_value(char **output, struct cmd_response *responses,
-		void *tmp);
+int append_response_list_value(char **output,
+		struct cmd_res_formatter_ops *responses, void *tmp);
 
 int append_command_results_value(const char *name, char **output,
 		int num, struct cmd_result *results);
@@ -66,8 +65,8 @@ int append_info_value(const char *name, char **output);
 
 /**
  * Operator functions start with prefix `add_` defined in `response_info_list`
- * of struct `cmd_response` which are for making each of parts of command
- * response.
+ * of struct `cmd_res_formatter_ops` which are for making each of parts of
+ * command response.
  */
 int add_client_id(const char *name, char **output,
 		void *tmp __attribute__ ((unused)));
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 16:10:51 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd103.ddreams.local
 (zssg-mailmd103.ddreams.local [10.160.123.98]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DB2DAPFR70@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 16:11:13 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd103.ddreams.local by
 zssg-mailmd103.ddreams.local (dDREAMS) id <0PTL0132SDAPAT00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:13 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd103.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00CB9DAP7PF0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:13 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf105.ddreams.local (Postfix) with ESMTP id 27FE07E603A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:13 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 26DE98E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:13 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 251018E605D	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:13 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 86C5F8E6052	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:12 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf105.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:12 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BCUi016910;	Mon,
 24 Jun 2019 16:11:12 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O7BC5P016909;	Mon, 24 Jun 2019 16:11:12 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O7BC0T016906	for unknown; Mon,
 24 Jun 2019 16:11:12 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BBLC021237 for
 unknown; Mon, 24 Jun 2019 16:11:12 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BBoA021234; Mon,
 24 Jun 2019 16:11:11 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BB1j016970;	Mon,
 24 Jun 2019 16:11:11 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O7BBs3016966	for unknown; Mon, 24 Jun 2019 16:11:11 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BBti031053 for
 unknown; Mon, 24 Jun 2019 16:11:11 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BBaV031047 for
 unknown; Mon, 24 Jun 2019 16:11:11 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O7B4c4023251	for unknown; Mon,
 24 Jun 2019 16:11:10 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 164741BF14;	Mon, 24 Jun 2019 09:11:04 +0200 (CEST)
Received: from mail-pf1-f196.google.com
 (mail-pf1-f196.google.com [209.85.210.196]) by dpdk.org (Postfix)
 with ESMTP id EB4F41BCAC for <spp@dpdk.org>; Mon,
 24 Jun 2019 09:11:02 +0200 (CEST)
Received: by mail-pf1-f196.google.com with SMTP id m30so6956412pff.8 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 00:11:02 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id 3sm10703610pfp.114.2019.06.24.00.11.00
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 00:11:01 -0700 (PDT)
Date: Mon, 24 Jun 2019 16:10:51 +0900
From: yasufum.o@gmail.com
Subject: [spp 04397] [spp] [PATCH 2/2] spp_pcap: change name of struct
 cmd_response
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624071051.23342-3-yasufum.o@gmail.com>
In-reply-to: <20190624071051.23342-1-yasufum.o@gmail.com>
References: <20190624071051.23342-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04397
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=pSM0NOAZIEHiNN5CfqmNRstr1e2BhneC0OQgfPd9zTA=;
 b=BYncWu04daGA66rB43ZJGpqNY84VKlB6cnw+AGCe2ajDPZdH9n1D3TT802npc4Ujw1
 CInEpj1MeMQps+P3nU9q3MJ8Rlr/hL+SnswHCipRqOz6NLySXhDQVZps8H+X4vUfumOE
 oZEXFZJ71lNmXd/VRHwOjq5DZNawXwnWk2/qc6Nvo+qyR01nOE6cSucci/1IlDB4DuzU
 bzksJB4N0HRlWDKcROSte0T8ohgmZyCJ1GEpENYo549CCBz9s0df1nLRzh+/N9EXLVWe
 AUy3qldi+apDLYtZKolnQNFT1nR4lc+yw1NHqQrLH3lsfpqI/e+SVsCzvs8nPFT7D3w1 ZUfA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=pSM0NOAZIEHiNN5CfqmNRstr1e2BhneC0OQgfPd9zTA=;
 b=hi0IxB0VwCzvcEJ84CVAae9Ipn2ZdeStYE95WGXpxa3Y1/8KlTE6HSfZH6GcQ0g24V
 YllWTQZ084B6dWunprVcVtz1BnzlJLcoC5JHPfOb1/n4sx7ep2tVFoycH7Pw+8Pz9407
 TnJJbvVFIh7l86xBJj70pDcAFluxuEifg2pG3v1Rjtsuwtqesns1R388qwo7Z/xZj1m9
 jlKq9wAr9s5/WNyUgJrujpLc+T0D6FPxCsBhVzV5ldCqtAMr3gON4WV7weLRl2b2Ec2R
 tl+aJ7u+U9tFNw7sA6XzqYt3HHkwMv16ZDkcZI4G1Tg2ui6nhB1buLVBtDGF+czFTIcU MgDQ==
X-Gm-Message-State: APjAAAWSUlZy1hfTSNx2fHEQDQdKi6/ygSNnxIJmWjq1sEE6ToeNzBWw
 888RHYFjqaSCCXXhhwrFtR98xYmJ
X-Google-Smtp-Source:
 APXvYqyzVo80iLC6+fzumPbXlA/vghJN2ZbGHS4E0e8xg+i1ILhDDetFmzsAKKhJcHYRRBg3dN8MMQ==
X-Received: by 2002:a63:c65:: with SMTP id 37mr9291735pgm.158.1561360262049;
 Mon, 24 Jun 2019 00:11:02 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 53
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to rename struct `cmd_response` to
`cmd_res_formatter_ops` because it is a set of tag and operation
function for parsing command.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/pcap/cmd_runner.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/pcap/cmd_runner.c b/src/pcap/cmd_runner.c
index 55f15bf..4a74af2 100644
--- a/src/pcap/cmd_runner.c
+++ b/src/pcap/cmd_runner.c
@@ -47,7 +47,7 @@ struct cmd_result {
 
 /* command response list control structure */
 /* TODO(yasufum) merge it to the same definition in shared/.../cmd_runner.c */
-struct cmd_response {
+struct cmd_res_formatter_ops {
 	char tag_name[SPPWK_NAME_BUFSZ];  /* JSON Tag name */
 	int (*func)(const char *name, char **output, void *tmp);
 };
@@ -548,7 +548,7 @@ append_core_value(const char *name, char **output,
 /* append string of command response list for JSON format */
 static int
 append_response_list_value(char **output,
-		struct cmd_response *list,
+		struct cmd_res_formatter_ops *list,
 		void *tmp)
 {
 	int ret = SPPWK_RET_NG;
@@ -607,14 +607,14 @@ append_response_list_value(char **output,
 #define COMMAND_RESP_TAG_LIST_EMPTY { "", NULL }
 
 /* command response result string list */
-struct cmd_response response_result_list[] = {
+struct cmd_res_formatter_ops response_result_list[] = {
 	{ "result",        append_result_value },
 	{ "error_details", append_error_details_value },
 	COMMAND_RESP_TAG_LIST_EMPTY
 };
 
 /* command response status information string list */
-struct cmd_response response_info_list[] = {
+struct cmd_res_formatter_ops response_info_list[] = {
 	{ "client-id",        append_client_id_value },
 	{ "status",           append_capture_status_value },
 	{ "master-lcore",     append_master_lcore_value },
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 16:11:07 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd101.ddreams.local
 (zssg-mailmd101.ddreams.local [10.160.123.96]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DE0DB0FR70@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 16:11:24 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd101.ddreams.local by
 zssg-mailmd101.ddreams.local (dDREAMS) id <0PTL0154MDB0U500@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:24 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd101.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00PH9DB0B090@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:24 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id 51AB47E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:24 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 500AE8E605C	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:24 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 4537D8E6054	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:24 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id C777D8E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:23 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:23 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BNli016963;	Mon,
 24 Jun 2019 16:11:23 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O7BNgu016962;	Mon, 24 Jun 2019 16:11:23 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O7BNQR016959	for unknown; Mon,
 24 Jun 2019 16:11:23 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BN8f021336 for
 unknown; Mon, 24 Jun 2019 16:11:23 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BNSW021330; Mon,
 24 Jun 2019 16:11:23 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BMHR016991;	Mon,
 24 Jun 2019 16:11:22 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O7BMY1016984	for unknown; Mon, 24 Jun 2019 16:11:22 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BMUe031170 for
 unknown; Mon, 24 Jun 2019 16:11:22 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BMH9031166 for
 unknown; Mon, 24 Jun 2019 16:11:22 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O7BFUP023292	for unknown; Mon,
 24 Jun 2019 16:11:21 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 296711BDD2;	Mon, 24 Jun 2019 09:11:15 +0200 (CEST)
Received: from mail-pf1-f195.google.com
 (mail-pf1-f195.google.com [209.85.210.195]) by dpdk.org (Postfix)
 with ESMTP id 1C4121BCAC for <spp@dpdk.org>; Mon,
 24 Jun 2019 09:11:13 +0200 (CEST)
Received: by mail-pf1-f195.google.com with SMTP id q10so6959158pff.9 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 00:11:13 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id j15sm11556574pfr.146.2019.06.24.00.11.10
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 00:11:11 -0700 (PDT)
Date: Mon, 24 Jun 2019 16:11:07 +0900
From: yasufum.o@gmail.com
Subject: [spp 04398] [spp] [PATCH] shared/sec: move op funcs for getting status
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624071107.23398-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04398
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=fCAzz9YRPrYv034D/Acw+w7elp6cdjSt0o6fOgRUZHg=;
 b=fmtN+ngBEfbT3LPG/uCpFu7u6Rg3orCCBhsAsA1c2VbWApESnoIJ5pdmcNHXiIajRp
 hdrtjSFNDsSV21bizWIeRmB+Wnqn4sDfvifZHLMGAnuWaIapafaZrBAsofVln9iDKt+k
 rj6H72Byvawjqmi91zLa4SV0weIpGr6Sowbh+kaFWR//Lt1PQNOd544JA0SChNNTyO7b
 kCjWCoaMIU6IrvWyKYgSHkhZ/tRAL8nMMvmZuCTYleyR3k1KUkzIsNvvOirGYK0Iky0H
 sidxG7kj9MJvOG64TMCFK7jVOOfvkpYuQroDcLxNlz+ia0o9E8VuMoO6XG/bTAhGWIUw QjKw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=fCAzz9YRPrYv034D/Acw+w7elp6cdjSt0o6fOgRUZHg=;
 b=hTa7eiIVaAOxqlYsYbGOpMX9FfJRnCIlYvTop2GKQy39eOQaMFYtaOFXEF4bk6tNXN
 M/stEtZkiVoFbwKlz9ajK10ZK2t82MUX+T5L3ujiIratkqTs5Uu4on2wXVNE7mP0CzUY
 IFtRqQPx/O9buJQGwh4wLeseZqOFFU/jgL6+iQCJkoHEcZkCf6cChb/9UW0PzPfUkK0X
 5lihtyopkEQCRi1klxct1J14WRZLFEBiq/03nL9h7axJG4SWYYq1DfcdWcpNuduUhqOm
 WxLKwLlboHskofah2VIBnJb2OfQWVeqMnM131R3LoZIQiTsoxCMa+3yKEjYMN3T6ePlA yVeA==
X-Gm-Message-State: APjAAAVI7DTtw2r+lw1zZXagtobLdDqT/VkRbNyWgphxvKAmcFM1SXjr
 cBKPbA65X8ucpit7RAPCBSLCvODa
X-Google-Smtp-Source:
 APXvYqyY4inSsqe+T8wAoWqlJ6NWbkl8DSPu4gp8PwmJ8k61dSnWTsOHaWlbh+dtKQNkhpqusOKJrw==
X-Received: by 2002:a65:4347:: with SMTP id k7mr31822958pgq.253.1561360272145;
 Mon, 24 Jun 2019 00:11:12 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 276
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move a set of operation functions `response_info_list`
for getting status from shared dir to dirs of each of spp_vf and
spp_mirror as a function get_status_ops().

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/mir_cmd_runner.c                   | 34 +++++++++++++
 .../spp_worker_th/cmd_res_formatter.c         | 51 +++++++------------
 .../spp_worker_th/cmd_res_formatter.h         |  6 +++
 .../secondary/spp_worker_th/mirror_deps.h     |  6 +++
 src/shared/secondary/spp_worker_th/vf_deps.h  |  8 ++-
 src/vf/vf_cmd_runner.c                        | 35 +++++++++++++
 6 files changed, 105 insertions(+), 35 deletions(-)

diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index 5f0932a..a4ca397 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -414,3 +414,37 @@ get_comp_type_from_str(const char *type_str)
 
 	return SPPWK_TYPE_NONE;
 }
+
+/**
+ * List of combination of tag and operator function. It is used to assemble
+ * a result of command in JSON like as following.
+ *
+ *     {
+ *         "client-id": 1,
+ *         "ports": ["phy:0", "phy:1", "vhost:0", "ring:0"],
+ *         "components": [
+ *             {
+ *                 "core": 2,
+ *                 ...
+ */
+/* TODO(yasufum) consider to create and move to vf_cmd_formatter.c */
+int get_status_ops(struct cmd_res_formatter_ops *ops_list)
+{
+	/* Num of entries should be the same as NOF_STAT_OPS in vf_deps.h. */
+	struct cmd_res_formatter_ops tmp_ops_list[] = {
+		{ "client-id", add_client_id },
+		{ "phy", add_interface },
+		{ "vhost", add_interface },
+		{ "ring", add_interface },
+		{ "master-lcore", add_master_lcore},
+		{ "core", add_core},
+		{ "", NULL }
+	};
+	memcpy(ops_list, tmp_ops_list, sizeof(tmp_ops_list));
+	if (unlikely(ops_list == NULL)) {
+		RTE_LOG(ERR, MIR_CMD_RUNNER, "Failed to setup ops_list.\n");
+		return -1;
+	}
+
+	return 0;
+}
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index 8d64c21..fdc8675 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -16,14 +16,10 @@
 
 #define RTE_LOGTYPE_WK_CMD_RES_FMT RTE_LOGTYPE_USER1
 
-/* Proto type declaration for a list of operator functions. */
+/* Proto type declaration for a list of operation functions. */
 static int append_result_value(const char *name, char **output, void *tmp);
 static int append_error_details_value(const char *name, char **output,
 		void *tmp);
-static int add_interface(const char *name, char **output,
-		void *tmp __attribute__ ((unused)));
-static int add_master_lcore(const char *name, char **output,
-		void *tmp __attribute__ ((unused)));
 
 /**
  * List of worker process type. The order of items should be same as the order
@@ -55,31 +51,6 @@ struct cmd_res_formatter_ops response_result_list[] = {
 	{ "", NULL }
 };
 
-/**
- * List of combination of tag and operator function. It is used to assemble
- * a result of command in JSON like as following.
- *
- *     {
- *         "client-id": 1,
- *         "ports": ["phy:0", "phy:1", "vhost:0", "ring:0"],
- *         "components": [
- *             {
- *                 "core": 2,
- *                 ...
- */
-struct cmd_res_formatter_ops response_info_list[] = {
-	{ "client-id", add_client_id },
-	{ "phy", add_interface },
-	{ "vhost", add_interface },
-	{ "ring", add_interface },
-	{ "master-lcore", add_master_lcore},
-	{ "core", add_core},
-#ifdef SPP_VF_MODULE
-	{ "classifier_table", add_classifier_table},
-#endif /* SPP_VF_MODULE */
-	{ "", NULL }
-};
-
 /* Append a command result in JSON format. */
 static int
 append_result_value(const char *name, char **output, void *tmp)
@@ -527,6 +498,8 @@ append_info_value(const char *name, char **output)
 {
 	int ret = SPP_RET_NG;
 	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	struct cmd_res_formatter_ops ops_list[NOF_STAT_OPS];
+
 	if (unlikely(tmp_buff == NULL)) {
 		RTE_LOG(ERR, WK_CMD_RES_FMT,
 				"Failed to get empty buf for append `%s`.\n",
@@ -534,8 +507,18 @@ append_info_value(const char *name, char **output)
 		return SPP_RET_NG;
 	}
 
+	memset(ops_list, 0x00,
+			sizeof(struct cmd_res_formatter_ops) * NOF_STAT_OPS);
+
+	int is_got_ops = get_status_ops(ops_list);
+	if (unlikely(is_got_ops < 0)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				"Failed to get ops_list.\n");
+		return SPP_RET_NG;
+	}
+
 	/* Setup JSON msg in value of `info` key. */
-	ret = append_response_list_value(&tmp_buff, response_info_list, NULL);
+	ret = append_response_list_value(&tmp_buff, ops_list, NULL);
 	if (unlikely(ret < SPP_RET_OK)) {
 		spp_strbuf_free(tmp_buff);
 		return SPP_RET_NG;
@@ -558,7 +541,7 @@ wk_get_client_id(void)
 }
 
 /**
- * Operator functions start with prefix `add_` defined in `response_info_list`
+ * Operation functions start with prefix `add_` defined in get_status_ops()
  * of struct `cmd_res_formatter_ops` which are for making each of parts of
  * command response.
  */
@@ -572,7 +555,7 @@ add_client_id(const char *name, char **output,
 }
 
 /* Add entry of port to a response in JSON such as "phy:0". */
-static int
+int
 add_interface(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
@@ -606,7 +589,7 @@ add_interface(const char *name, char **output,
 }
 
 /* Add entry of master lcore to a response in JSON. */
-static int
+int
 add_master_lcore(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
index b1de209..d304e4f 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
@@ -73,4 +73,10 @@ int add_client_id(const char *name, char **output,
 
 int add_classifier_table(const char *name, char **output,
 		void *tmp __attribute__ ((unused)));
+
+int add_interface(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+
+int add_master_lcore(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
 #endif
diff --git a/src/shared/secondary/spp_worker_th/mirror_deps.h b/src/shared/secondary/spp_worker_th/mirror_deps.h
index 43326ed..31f0b0c 100644
--- a/src/shared/secondary/spp_worker_th/mirror_deps.h
+++ b/src/shared/secondary/spp_worker_th/mirror_deps.h
@@ -7,6 +7,10 @@
 
 #include "cmd_utils.h"
 #include "cmd_parser.h"
+#include "cmd_res_formatter.h"
+
+/* Num of entries of ops_list in mir_cmd_runner.c. */
+#define NOF_STAT_OPS 7
 
 int exec_one_cmd(const struct sppwk_cmd_attrs *cmd);
 
@@ -34,4 +38,6 @@ int update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp);
 
 enum sppwk_worker_type get_comp_type_from_str(const char *type_str);
 
+int get_status_ops(struct cmd_res_formatter_ops *ops_list);
+
 #endif  /* __SPP_WORKER_TH_MIRROR_DEPS_H__ */
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 72a6960..41ea1b9 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -9,10 +9,14 @@
 #include <rte_hash.h>
 #include "cmd_utils.h"
 #include "cmd_parser.h"
+#include "cmd_res_formatter.h"
 
-/** Number of VLAN ID */
+/* Number of VLAN ID */
 #define NOF_VLAN 4096
 
+/* Num of entries of ops_list in vf_cmd_runner.c. */
+#define NOF_STAT_OPS 8
+
 /* Classifier for MAC addresses. */
 struct mac_classifier {
 	struct rte_hash *cls_tbl;  /* Hash table for MAC classification. */
@@ -111,4 +115,6 @@ int add_classifier_table(const char *name, char **output,
 
 enum sppwk_worker_type get_comp_type_from_str(const char *type_str);
 
+int get_status_ops(struct cmd_res_formatter_ops *ops_list);
+
 #endif  /* _SPPWK_TH_VF_DEPS_H_ */
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index 4c75b7e..46d54b4 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -624,3 +624,38 @@ get_comp_type_from_str(const char *type_str)
 
 	return SPPWK_TYPE_NONE;
 }
+
+/**
+ * List of combination of tag and operator function. It is used to assemble
+ * a result of command in JSON like as following.
+ *
+ *     {
+ *         "client-id": 1,
+ *         "ports": ["phy:0", "phy:1", "vhost:0", "ring:0"],
+ *         "components": [
+ *             {
+ *                 "core": 2,
+ *                 ...
+ */
+/* TODO(yasufum) consider to create and move to vf_cmd_formatter.c */
+int get_status_ops(struct cmd_res_formatter_ops *ops_list)
+{
+	/* Num of entries should be the same as NOF_STAT_OPS in vf_deps.h. */
+	struct cmd_res_formatter_ops tmp_ops_list[] = {
+		{ "client-id", add_client_id },
+		{ "phy", add_interface },
+		{ "vhost", add_interface },
+		{ "ring", add_interface },
+		{ "master-lcore", add_master_lcore},
+		{ "core", add_core},
+		{ "classifier_table", add_classifier_table},
+		{ "", NULL }
+	};
+	memcpy(ops_list, tmp_ops_list, sizeof(tmp_ops_list));
+	if (unlikely(ops_list == NULL)) {
+		RTE_LOG(ERR, VF_CMD_RUNNER, "Failed to setup ops_list.\n");
+		return -1;
+	}
+
+	return 0;
+}
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 16:11:14 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd106.ddreams.local
 (zssg-mailmd106.ddreams.local [10.160.123.101])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL00DHPDBGFR70@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 16:11:40 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd106.ddreams.local by
 zssg-mailmd106.ddreams.local (dDREAMS) id <0PTL00012DBGIH00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:40 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd106.ddreams.local
 (dDREAMS) with ESMTP id <0PTL01BVADBGKR10@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:40 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id B87067E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:40 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id B37608E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:40 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id A3EAB8E605E	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:40 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 9F6968E6060	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:39 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:39 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BdGJ016989;	Mon,
 24 Jun 2019 16:11:39 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O7Bd2U016988;	Mon, 24 Jun 2019 16:11:39 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O7BdYb016985	for unknown; Mon,
 24 Jun 2019 16:11:39 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BcWC021436 for
 unknown; Mon, 24 Jun 2019 16:11:39 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Bc3X021431; Mon,
 24 Jun 2019 16:11:38 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Bc2n017023;	Mon,
 24 Jun 2019 16:11:38 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O7BcNg017019	for unknown; Mon, 24 Jun 2019 16:11:38 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Bc74031236 for
 unknown; Mon, 24 Jun 2019 16:11:38 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BcSc031229 for
 unknown; Mon, 24 Jun 2019 16:11:38 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O7BV7N023363	for unknown; Mon,
 24 Jun 2019 16:11:37 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 3D4661BED2;	Mon, 24 Jun 2019 09:11:31 +0200 (CEST)
Received: from mail-pf1-f178.google.com
 (mail-pf1-f178.google.com [209.85.210.178]) by dpdk.org (Postfix)
 with ESMTP id 587511BCAC for <spp@dpdk.org>; Mon,
 24 Jun 2019 09:11:29 +0200 (CEST)
Received: by mail-pf1-f178.google.com with SMTP id d126so6972070pfd.2 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 00:11:29 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id y17sm6357948pfe.148.2019.06.24.00.11.27
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 00:11:28 -0700 (PDT)
Date: Mon, 24 Jun 2019 16:11:14 +0900
From: yasufum.o@gmail.com
Subject: [spp 04399] [spp] [PATCH 00/10] Move help messages of CLI in shell.py
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624071124.23451-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04399
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=+XQsX7s1z9k24JIFIZbAyNhuAwn5023JDfXKbJ3FdU0=;
 b=Gcw0LCm+E3ohQC6nEHK5ndyXVM607GruOZBDrFPuZ5hg0hHYgIgOFp3n30LgQI+UDI
 51+kWiyy8pCDh5UiLuNzNzEUnRh1UtOgeN6tyOhimj/nWqtVNDYqPT0Y2JNC7auRdX6H
 et/fdFogJfZOg3GFK96lCiweQEhLCEBO/kCfMSC2xExJFzRxwNgGhTCf6G3bcnRg/2zQ
 f1xe8ivabhYG4VImXIgFMWqhibcAElmllxZOTINRTBpyBz+MfPpsUEF84w/8d7gJdTB/
 zNNTmtLkNlhm5qtfBFUYt3PQFxLLeS6xREbT3YJ948infJNHHIIwP2EtDrHBl/1LKXpb FY+w==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=+XQsX7s1z9k24JIFIZbAyNhuAwn5023JDfXKbJ3FdU0=;
 b=q6ssVGo2cHj5AXO96asZ7hvLzoY9nHzEPizkgfrGfZu0ZsjPyXjmGtuKRI1+ZbjOap
 qywvR/FNsgoTt3yt8SHegBqewAV9MlC7xvEfd+F/WXG14cvdGbwwtjMp3fb+01aaT+xy
 ZjlMtjhQ75NSiYyO18l1+Ey7jmseQxKaiSDX25aEWmIBkw6gRPeH3yKEN94y0EDfIyey
 xPVVnE7rMLDad5lk6OqEvV8aokg2olKd7Sw8a4LHe/ATVJx0ADdCO81L/cEQ9EcekHUd
 HZzBMwRnWElkAADY8zI4wSJ1+qgSRmY2uKybrjQHTjupnDvD/l3IPfHuJL/MW11OttsK JPUg==
X-Gm-Message-State: APjAAAVqmHxaYMpS/JT+Ljuf/GFLE8AupPIoydFUrfzvLoLe1Fl2uSTq
 arv5mCou26onHPJ+s3lHpFDfADmH
X-Google-Smtp-Source:
 APXvYqxAyM8Nth9zF65+Nr/Sn2VU2RZoBBeHtYeQ+3hG3xTlNN3WSQrygtkE9XHL29luPWPOInqv8g==
X-Received: by 2002:a63:8c1c:: with SMTP id m28mr10189206pgd.264.1561360288488;
 Mon, 24 Jun 2019 00:11:28 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 48
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

SPP CLI uses python standard `cmd` library for implementing interactive
environment. For using `help` command of `cmd` lib, you define help
message as a comment of method starts with `do_` which defines a
behaviour of command as default.

However, SPP CLI have got supported many commands and the number of
lines of `shell.py` is over 1,000 or more. It should be changed to
move help messages outside of the file for considering to add
additional commands in future releases possibly.

This series of update is to fix the issue. Add methods start with
`help_` and define help messages in the methods because `cmd` calls
it for help instead of using comments if defined. By this update,
all of classes defined in `src/controller/commands` has method help()
for the message. For some of commands which are implemented without
class, such as `pwd` or `ls`, it is changed to define help messages as
a dict of command name and message in `help_msg.py`.

Yasufumi Ogawa (10):
  controller: move vf help msg to SppVf.help
  controller: move server help msg to SppCtlServer
  controller: move pri help msg to SppPrimary
  controller: move nfv help msg to SppNfv
  controller: move mirror help msg to SppMirror
  controller: move pcap help msg to SppPcap
  controller: move bye help msg to SppBye
  controller: move topo help msg to SppBye
  controller: move status cmd help msg to help_msg
  controller: move rest of help msg to help_msg

 src/controller/commands/bye.py      |  19 ++
 src/controller/commands/help_msg.py | 131 ++++++++
 src/controller/commands/mirror.py   |  36 +++
 src/controller/commands/nfv.py      |  19 ++
 src/controller/commands/pcap.py     |  24 ++
 src/controller/commands/pri.py      |  17 ++
 src/controller/commands/server.py   |  33 +++
 src/controller/commands/topo.py     |  52 ++++
 src/controller/commands/vf.py       |  54 ++++
 src/controller/shell.py             | 443 ++++++++--------------------
 10 files changed, 513 insertions(+), 315 deletions(-)
 create mode 100644 src/controller/commands/help_msg.py

-- 
2.17.1



From spp-request@dpdk.org Mon Jun 24 16:11:30 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd106.ddreams.local
 (zssg-mailmd106.ddreams.local [10.160.123.101])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL00DHRDBGFR70@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 16:11:40 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd106.ddreams.local by
 zssg-mailmd106.ddreams.local (dDREAMS) id <0PTL0000MDBGJT00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:40 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd106.ddreams.local
 (dDREAMS) with ESMTP id <0PTL01BVCDBGKR10@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:40 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id C27767E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:40 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id C17848E605E	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:40 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id B61288E6052	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:40 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 104FE8E6052	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:40 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:40 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BdBM016996;	Mon,
 24 Jun 2019 16:11:39 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O7BdDi016995;	Mon, 24 Jun 2019 16:11:39 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O7Bdb3016992	for unknown; Mon,
 24 Jun 2019 16:11:39 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Bd6r031263 for
 unknown; Mon, 24 Jun 2019 16:11:39 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Bd1m031258 for
 unknown; Mon, 24 Jun 2019 16:11:39 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O7BWRw023367	for unknown; Mon,
 24 Jun 2019 16:11:38 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 4ECE61BED6	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 24 Jun 2019 09:11:32 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 14
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 24 Jun 2019 09:11:30 +0200
Message-id: <mailman.23396.1561360290.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH 0/2] Rename struct cmd_response (yasufum.o@gmail.com)
   2. [PATCH 1/2] shared/sec: change name of struct cmd_response
      (yasufum.o@gmail.com)
   3. [PATCH 2/2] spp_pcap: change name of struct cmd_response
      (yasufum.o@gmail.com)
   4. [PATCH] shared/sec: move op funcs for getting status
      (yasufum.o@gmail.com)
   5. [PATCH 00/10] Move help messages of CLI in shell.py
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon, 24 Jun 2019 16:10:49 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 0/2] Rename struct cmd_response
Message-ID: <20190624071051.23342-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Struct cmd_response is to define a set of combinations of tag and ope
function, so the name is not appropriate considering this feature.
This update is to rename it to `cmd_res_formatter_ops` for spp_vf,
spp_mirror and spp_pcap.

Yasufumi Ogawa (2):
  shared/sec: change name of struct cmd_response
  spp_pcap: change name of struct cmd_response

 src/pcap/cmd_runner.c                               |  8 ++++----
 .../secondary/spp_worker_th/cmd_res_formatter.c     | 13 ++++++-------
 .../secondary/spp_worker_th/cmd_res_formatter.h     | 11 +++++------
 3 files changed, 15 insertions(+), 17 deletions(-)

-- 
2.17.1



------------------------------

Message: 2
Date: Mon, 24 Jun 2019 16:10:50 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 1/2] shared/sec: change name of struct
	cmd_response
Message-ID: <20190624071051.23342-2-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to rename struct `cmd_response` to
`cmd_res_formatter_ops` because it is a set of tag and operation
function for parsing command.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/cmd_res_formatter.c     | 13 ++++++-------
 .../secondary/spp_worker_th/cmd_res_formatter.h     | 11 +++++------
 2 files changed, 11 insertions(+), 13 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index e4912d6..8d64c21 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -49,7 +49,7 @@ const char *PORT_ABILITY_STAT_LIST[] = {
 };
 
 /* command response result string list */
-struct cmd_response response_result_list[] = {
+struct cmd_res_formatter_ops response_result_list[] = {
 	{ "result", append_result_value },
 	{ "error_details", append_error_details_value },
 	{ "", NULL }
@@ -67,7 +67,7 @@ struct cmd_response response_result_list[] = {
  *                 "core": 2,
  *                 ...
  */
-struct cmd_response response_info_list[] = {
+struct cmd_res_formatter_ops response_info_list[] = {
 	{ "client-id", add_client_id },
 	{ "phy", add_interface },
 	{ "vhost", add_interface },
@@ -392,8 +392,8 @@ append_core_element_value(
 
 /* append string of command response list for JSON format */
 int
-append_response_list_value(char **output, struct cmd_response *responses,
-		void *tmp)
+append_response_list_value(char **output,
+		struct cmd_res_formatter_ops *responses, void *tmp)
 {
 	int ret = SPP_RET_NG;
 	int i;
@@ -559,8 +559,8 @@ wk_get_client_id(void)
 
 /**
  * Operator functions start with prefix `add_` defined in `response_info_list`
- * of struct `cmd_response` which are for making each of parts of command
- * response.
+ * of struct `cmd_res_formatter_ops` which are for making each of parts of
+ * command response.
  */
 
 /* Add entry of client ID such as `"client-id": 1` to a response in JSON. */
@@ -614,4 +614,3 @@ add_master_lcore(const char *name, char **output,
 	ret = append_json_int_value(output, name, rte_get_master_lcore());
 	return ret;
 }
-
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
index 6ae2c5d..b1de209 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
@@ -26,8 +26,7 @@ struct cmd_result {
  * Contains command response and operator func for. It is used as an array of
  * this struct.
  */
-/* TODO(yasufum) add comment describes the purpose of this struct is used. */
-struct cmd_response {
+struct cmd_res_formatter_ops {
 	char tag_name[CMD_RES_TAG_LEN];
 	int (*func)(const char *name, char **output, void *tmp);
 };
@@ -56,8 +55,8 @@ int append_core_element_value(struct spp_iterate_core_params *params,
 		const int num_rx, const struct sppwk_port_idx *rx_ports,
 		const int num_tx, const struct sppwk_port_idx *tx_ports);
 
-int append_response_list_value(char **output, struct cmd_response *responses,
-		void *tmp);
+int append_response_list_value(char **output,
+		struct cmd_res_formatter_ops *responses, void *tmp);
 
 int append_command_results_value(const char *name, char **output,
 		int num, struct cmd_result *results);
@@ -66,8 +65,8 @@ int append_info_value(const char *name, char **output);
 
 /**
  * Operator functions start with prefix `add_` defined in `response_info_list`
- * of struct `cmd_response` which are for making each of parts of command
- * response.
+ * of struct `cmd_res_formatter_ops` which are for making each of parts of
+ * command response.
  */
 int add_client_id(const char *name, char **output,
 		void *tmp __attribute__ ((unused)));
-- 
2.17.1



------------------------------

Message: 3
Date: Mon, 24 Jun 2019 16:10:51 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 2/2] spp_pcap: change name of struct
	cmd_response
Message-ID: <20190624071051.23342-3-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to rename struct `cmd_response` to
`cmd_res_formatter_ops` because it is a set of tag and operation
function for parsing command.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/pcap/cmd_runner.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/pcap/cmd_runner.c b/src/pcap/cmd_runner.c
index 55f15bf..4a74af2 100644
--- a/src/pcap/cmd_runner.c
+++ b/src/pcap/cmd_runner.c
@@ -47,7 +47,7 @@ struct cmd_result {
 
 /* command response list control structure */
 /* TODO(yasufum) merge it to the same definition in shared/.../cmd_runner.c */
-struct cmd_response {
+struct cmd_res_formatter_ops {
 	char tag_name[SPPWK_NAME_BUFSZ];  /* JSON Tag name */
 	int (*func)(const char *name, char **output, void *tmp);
 };
@@ -548,7 +548,7 @@ append_core_value(const char *name, char **output,
 /* append string of command response list for JSON format */
 static int
 append_response_list_value(char **output,
-		struct cmd_response *list,
+		struct cmd_res_formatter_ops *list,
 		void *tmp)
 {
 	int ret = SPPWK_RET_NG;
@@ -607,14 +607,14 @@ append_response_list_value(char **output,
 #define COMMAND_RESP_TAG_LIST_EMPTY { "", NULL }
 
 /* command response result string list */
-struct cmd_response response_result_list[] = {
+struct cmd_res_formatter_ops response_result_list[] = {
 	{ "result",        append_result_value },
 	{ "error_details", append_error_details_value },
 	COMMAND_RESP_TAG_LIST_EMPTY
 };
 
 /* command response status information string list */
-struct cmd_response response_info_list[] = {
+struct cmd_res_formatter_ops response_info_list[] = {
 	{ "client-id",        append_client_id_value },
 	{ "status",           append_capture_status_value },
 	{ "master-lcore",     append_master_lcore_value },
-- 
2.17.1



------------------------------

Message: 4
Date: Mon, 24 Jun 2019 16:11:07 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] shared/sec: move op funcs for getting status
Message-ID: <20190624071107.23398-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move a set of operation functions `response_info_list`
for getting status from shared dir to dirs of each of spp_vf and
spp_mirror as a function get_status_ops().

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/mir_cmd_runner.c                   | 34 +++++++++++++
 .../spp_worker_th/cmd_res_formatter.c         | 51 +++++++------------
 .../spp_worker_th/cmd_res_formatter.h         |  6 +++
 .../secondary/spp_worker_th/mirror_deps.h     |  6 +++
 src/shared/secondary/spp_worker_th/vf_deps.h  |  8 ++-
 src/vf/vf_cmd_runner.c                        | 35 +++++++++++++
 6 files changed, 105 insertions(+), 35 deletions(-)

diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index 5f0932a..a4ca397 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -414,3 +414,37 @@ get_comp_type_from_str(const char *type_str)
 
 	return SPPWK_TYPE_NONE;
 }
+
+/**
+ * List of combination of tag and operator function. It is used to assemble
+ * a result of command in JSON like as following.
+ *
+ *     {
+ *         "client-id": 1,
+ *         "ports": ["phy:0", "phy:1", "vhost:0", "ring:0"],
+ *         "components": [
+ *             {
+ *                 "core": 2,
+ *                 ...
+ */
+/* TODO(yasufum) consider to create and move to vf_cmd_formatter.c */
+int get_status_ops(struct cmd_res_formatter_ops *ops_list)
+{
+	/* Num of entries should be the same as NOF_STAT_OPS in vf_deps.h. */
+	struct cmd_res_formatter_ops tmp_ops_list[] = {
+		{ "client-id", add_client_id },
+		{ "phy", add_interface },
+		{ "vhost", add_interface },
+		{ "ring", add_interface },
+		{ "master-lcore", add_master_lcore},
+		{ "core", add_core},
+		{ "", NULL }
+	};
+	memcpy(ops_list, tmp_ops_list, sizeof(tmp_ops_list));
+	if (unlikely(ops_list == NULL)) {
+		RTE_LOG(ERR, MIR_CMD_RUNNER, "Failed to setup ops_list.\n");
+		return -1;
+	}
+
+	return 0;
+}
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index 8d64c21..fdc8675 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -16,14 +16,10 @@
 
 #define RTE_LOGTYPE_WK_CMD_RES_FMT RTE_LOGTYPE_USER1
 
-/* Proto type declaration for a list of operator functions. */
+/* Proto type declaration for a list of operation functions. */
 static int append_result_value(const char *name, char **output, void *tmp);
 static int append_error_details_value(const char *name, char **output,
 		void *tmp);
-static int add_interface(const char *name, char **output,
-		void *tmp __attribute__ ((unused)));
-static int add_master_lcore(const char *name, char **output,
-		void *tmp __attribute__ ((unused)));
 
 /**
  * List of worker process type. The order of items should be same as the order
@@ -55,31 +51,6 @@ struct cmd_res_formatter_ops response_result_list[] = {
 	{ "", NULL }
 };
 
-/**
- * List of combination of tag and operator function. It is used to assemble
- * a result of command in JSON like as following.
- *
- *     {
- *         "client-id": 1,
- *         "ports": ["phy:0", "phy:1", "vhost:0", "ring:0"],
- *         "components": [
- *             {
- *                 "core": 2,
- *                 ...
- */
-struct cmd_res_formatter_ops response_info_list[] = {
-	{ "client-id", add_client_id },
-	{ "phy", add_interface },
-	{ "vhost", add_interface },
-	{ "ring", add_interface },
-	{ "master-lcore", add_master_lcore},
-	{ "core", add_core},
-#ifdef SPP_VF_MODULE
-	{ "classifier_table", add_classifier_table},
-#endif /* SPP_VF_MODULE */
-	{ "", NULL }
-};
-
 /* Append a command result in JSON format. */
 static int
 append_result_value(const char *name, char **output, void *tmp)
@@ -527,6 +498,8 @@ append_info_value(const char *name, char **output)
 {
 	int ret = SPP_RET_NG;
 	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	struct cmd_res_formatter_ops ops_list[NOF_STAT_OPS];
+
 	if (unlikely(tmp_buff == NULL)) {
 		RTE_LOG(ERR, WK_CMD_RES_FMT,
 				"Failed to get empty buf for append `%s`.\n",
@@ -534,8 +507,18 @@ append_info_value(const char *name, char **output)
 		return SPP_RET_NG;
 	}
 
+	memset(ops_list, 0x00,
+			sizeof(struct cmd_res_formatter_ops) * NOF_STAT_OPS);
+
+	int is_got_ops = get_status_ops(ops_list);
+	if (unlikely(is_got_ops < 0)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				"Failed to get ops_list.\n");
+		return SPP_RET_NG;
+	}
+
 	/* Setup JSON msg in value of `info` key. */
-	ret = append_response_list_value(&tmp_buff, response_info_list, NULL);
+	ret = append_response_list_value(&tmp_buff, ops_list, NULL);
 	if (unlikely(ret < SPP_RET_OK)) {
 		spp_strbuf_free(tmp_buff);
 		return SPP_RET_NG;
@@ -558,7 +541,7 @@ wk_get_client_id(void)
 }
 
 /**
- * Operator functions start with prefix `add_` defined in `response_info_list`
+ * Operation functions start with prefix `add_` defined in get_status_ops()
  * of struct `cmd_res_formatter_ops` which are for making each of parts of
  * command response.
  */
@@ -572,7 +555,7 @@ add_client_id(const char *name, char **output,
 }
 
 /* Add entry of port to a response in JSON such as "phy:0". */
-static int
+int
 add_interface(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
@@ -606,7 +589,7 @@ add_interface(const char *name, char **output,
 }
 
 /* Add entry of master lcore to a response in JSON. */
-static int
+int
 add_master_lcore(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
index b1de209..d304e4f 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
@@ -73,4 +73,10 @@ int add_client_id(const char *name, char **output,
 
 int add_classifier_table(const char *name, char **output,
 		void *tmp __attribute__ ((unused)));
+
+int add_interface(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+
+int add_master_lcore(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
 #endif
diff --git a/src/shared/secondary/spp_worker_th/mirror_deps.h b/src/shared/secondary/spp_worker_th/mirror_deps.h
index 43326ed..31f0b0c 100644
--- a/src/shared/secondary/spp_worker_th/mirror_deps.h
+++ b/src/shared/secondary/spp_worker_th/mirror_deps.h
@@ -7,6 +7,10 @@
 
 #include "cmd_utils.h"
 #include "cmd_parser.h"
+#include "cmd_res_formatter.h"
+
+/* Num of entries of ops_list in mir_cmd_runner.c. */
+#define NOF_STAT_OPS 7
 
 int exec_one_cmd(const struct sppwk_cmd_attrs *cmd);
 
@@ -34,4 +38,6 @@ int update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp);
 
 enum sppwk_worker_type get_comp_type_from_str(const char *type_str);
 
+int get_status_ops(struct cmd_res_formatter_ops *ops_list);
+
 #endif  /* __SPP_WORKER_TH_MIRROR_DEPS_H__ */
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 72a6960..41ea1b9 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -9,10 +9,14 @@
 #include <rte_hash.h>
 #include "cmd_utils.h"
 #include "cmd_parser.h"
+#include "cmd_res_formatter.h"
 
-/** Number of VLAN ID */
+/* Number of VLAN ID */
 #define NOF_VLAN 4096
 
+/* Num of entries of ops_list in vf_cmd_runner.c. */
+#define NOF_STAT_OPS 8
+
 /* Classifier for MAC addresses. */
 struct mac_classifier {
 	struct rte_hash *cls_tbl;  /* Hash table for MAC classification. */
@@ -111,4 +115,6 @@ int add_classifier_table(const char *name, char **output,
 
 enum sppwk_worker_type get_comp_type_from_str(const char *type_str);
 
+int get_status_ops(struct cmd_res_formatter_ops *ops_list);
+
 #endif  /* _SPPWK_TH_VF_DEPS_H_ */
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index 4c75b7e..46d54b4 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -624,3 +624,38 @@ get_comp_type_from_str(const char *type_str)
 
 	return SPPWK_TYPE_NONE;
 }
+
+/**
+ * List of combination of tag and operator function. It is used to assemble
+ * a result of command in JSON like as following.
+ *
+ *     {
+ *         "client-id": 1,
+ *         "ports": ["phy:0", "phy:1", "vhost:0", "ring:0"],
+ *         "components": [
+ *             {
+ *                 "core": 2,
+ *                 ...
+ */
+/* TODO(yasufum) consider to create and move to vf_cmd_formatter.c */
+int get_status_ops(struct cmd_res_formatter_ops *ops_list)
+{
+	/* Num of entries should be the same as NOF_STAT_OPS in vf_deps.h. */
+	struct cmd_res_formatter_ops tmp_ops_list[] = {
+		{ "client-id", add_client_id },
+		{ "phy", add_interface },
+		{ "vhost", add_interface },
+		{ "ring", add_interface },
+		{ "master-lcore", add_master_lcore},
+		{ "core", add_core},
+		{ "classifier_table", add_classifier_table},
+		{ "", NULL }
+	};
+	memcpy(ops_list, tmp_ops_list, sizeof(tmp_ops_list));
+	if (unlikely(ops_list == NULL)) {
+		RTE_LOG(ERR, VF_CMD_RUNNER, "Failed to setup ops_list.\n");
+		return -1;
+	}
+
+	return 0;
+}
-- 
2.17.1



------------------------------

Message: 5
Date: Mon, 24 Jun 2019 16:11:14 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 00/10] Move help messages of CLI in shell.py
Message-ID: <20190624071124.23451-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

SPP CLI uses python standard `cmd` library for implementing interactive
environment. For using `help` command of `cmd` lib, you define help
message as a comment of method starts with `do_` which defines a
behaviour of command as default.

However, SPP CLI have got supported many commands and the number of
lines of `shell.py` is over 1,000 or more. It should be changed to
move help messages outside of the file for considering to add
additional commands in future releases possibly.

This series of update is to fix the issue. Add methods start with
`help_` and define help messages in the methods because `cmd` calls
it for help instead of using comments if defined. By this update,
all of classes defined in `src/controller/commands` has method help()
for the message. For some of commands which are implemented without
class, such as `pwd` or `ls`, it is changed to define help messages as
a dict of command name and message in `help_msg.py`.

Yasufumi Ogawa (10):
  controller: move vf help msg to SppVf.help
  controller: move server help msg to SppCtlServer
  controller: move pri help msg to SppPrimary
  controller: move nfv help msg to SppNfv
  controller: move mirror help msg to SppMirror
  controller: move pcap help msg to SppPcap
  controller: move bye help msg to SppBye
  controller: move topo help msg to SppBye
  controller: move status cmd help msg to help_msg
  controller: move rest of help msg to help_msg

 src/controller/commands/bye.py      |  19 ++
 src/controller/commands/help_msg.py | 131 ++++++++
 src/controller/commands/mirror.py   |  36 +++
 src/controller/commands/nfv.py      |  19 ++
 src/controller/commands/pcap.py     |  24 ++
 src/controller/commands/pri.py      |  17 ++
 src/controller/commands/server.py   |  33 +++
 src/controller/commands/topo.py     |  52 ++++
 src/controller/commands/vf.py       |  54 ++++
 src/controller/shell.py             | 443 ++++++++--------------------
 10 files changed, 513 insertions(+), 315 deletions(-)
 create mode 100644 src/controller/commands/help_msg.py

-- 
2.17.1



End of spp Digest, Vol 31, Issue 14
***********************************


From yasufum.o@gmail.com Mon Jun 24 16:11:15 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd105.ddreams.local
 (zssg-mailmd105.ddreams.local [10.160.123.100])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL00DILDBIFR70@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 16:11:42 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd105.ddreams.local by
 zssg-mailmd105.ddreams.local (dDREAMS) id <0PTL00I02DBI4X00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:42 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd105.ddreams.local
 (dDREAMS) with ESMTP id <0PTL001APDBII990@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:42 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf101.ddreams.local (Postfix) with ESMTP id 2E2C67E603B	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:42 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 268848E6058	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:42 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 191FB8E605A	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:42 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 9C7DB8E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:40 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf101.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:40 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BeMK017003;	Mon,
 24 Jun 2019 16:11:40 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O7Befx017002;	Mon, 24 Jun 2019 16:11:40 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O7BemI016999	for unknown; Mon,
 24 Jun 2019 16:11:40 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BdgQ021451 for
 unknown; Mon, 24 Jun 2019 16:11:40 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Bd4L021447; Mon,
 24 Jun 2019 16:11:39 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Bdlt017031;	Mon,
 24 Jun 2019 16:11:39 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O7BdsO017027	for unknown; Mon, 24 Jun 2019 16:11:39 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Bd3a031257 for
 unknown; Mon, 24 Jun 2019 16:11:39 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Bd0E031254 for
 unknown; Mon, 24 Jun 2019 16:11:39 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O7BWsS023373	for unknown; Mon,
 24 Jun 2019 16:11:38 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 581901BF14;	Mon, 24 Jun 2019 09:11:32 +0200 (CEST)
Received: from mail-pf1-f177.google.com
 (mail-pf1-f177.google.com [209.85.210.177]) by dpdk.org (Postfix)
 with ESMTP id 201161BCAC for <spp@dpdk.org>; Mon,
 24 Jun 2019 09:11:31 +0200 (CEST)
Received: by mail-pf1-f177.google.com with SMTP id m30so6957136pff.8 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 00:11:31 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id y17sm6357948pfe.148.2019.06.24.00.11.28
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 00:11:29 -0700 (PDT)
Date: Mon, 24 Jun 2019 16:11:15 +0900
From: yasufum.o@gmail.com
Subject: [spp 04400] [spp] [PATCH 01/10] controller: move vf help msg to
 SppVf.help
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624071124.23451-2-yasufum.o@gmail.com>
In-reply-to: <20190624071124.23451-1-yasufum.o@gmail.com>
References: <20190624071124.23451-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04400
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=XbEFLvRXpExgKOHiwUUI3mQzanBKxUZXfUxPSX+zRx8=;
 b=V0tWerWKYyVD9mJMHAv2nRLk9xxZDxhNkKWE3yjzzSt9kzkioJ12hrVw05N+Myi7FT
 jXgWPTyesFNuEAMoi+QREpxz1vW5cW6r93X1EO4ctDr+LKCZJh1zXL6ACBlYVSDWPLzi
 bAuuzusR4DuKtu7dpwvVQdgY7VhP7op6C7oiwPH3H8JIe2QB9qAHc/+Jv12OeAk7lbgb
 WioUcoV0mzXvQsDBmJyCeScfw36XQCgFYZpusDuKMu4nyNJe3qRjBNdkjNAinjOziiwq
 J3zeYVG0CwwYUKsxyOpouQZkWbBysgGDfqR5S1d3TYusHD/9pUkl6Wth8Tgg8OThYs4p xOFw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=XbEFLvRXpExgKOHiwUUI3mQzanBKxUZXfUxPSX+zRx8=;
 b=Ud39ICa4/pxSklmoR0BAR1aMUPB3efvGNryhFtV8WGeWO823hpn0rM8QmGakOeqlb7
 TKwJsOi9ig8ymxrp8Hk+aV0lBVDC7dmlWAuoy4xifPjv77DcPrQ5E5NGWp3wSZWKWHLb
 yvLMO+gv4wnYNM+HQLdLv7ZLWDwxBn0qbtuezDvM7O+Kth+ok8g5rMdulDqL1Hh5v5WS
 n/3mcRFYHN7jReFm5DTN5NuHXb7HrgsMGxuahH8q9JE3Vut4VzJ4r47WM4LsavqrHhon
 9m33pmufv1qJ93zxMdLAx3fiBSx5MPZo5YMhwYXUocHIuWlQEMk5jeox36Eq3AwhYQhT LHoQ==
X-Gm-Message-State: APjAAAW7m87jnGBTmPWrtxwVzbX95TUpQSOHVt+DgsE+gGvPCFfWDCXQ
 P+KX0Qqw4fPcQ13EmVRKRb60rw69
X-Google-Smtp-Source:
 APXvYqyHbwR6z4Ar7VqOWttWhXu5A1Ympgoi6la2JSQs47i1EKnkodlUpsgh8EmgcjGJOk7gioisVw==
X-Received: by 2002:a63:a046:: with SMTP id u6mr15682935pgn.122.1561360290232;
 Mon, 24 Jun 2019 00:11:30 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 149
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

SPP CLI is implemented with python's cmd library and help message is
defined as a comment of `do_*` method. However, total number of lines
tends to be a large number if the number of command is increased.

To avoid such a situation, this update is to move comment of `do_vf`
to `SppVf.help` to reduce the number of lines.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/vf.py | 54 +++++++++++++++++++++++++++++++++++
 src/controller/shell.py       | 46 ++++-------------------------
 2 files changed, 59 insertions(+), 41 deletions(-)

diff --git a/src/controller/commands/vf.py b/src/controller/commands/vf.py
index b673f0f..c6192e0 100644
--- a/src/controller/commands/vf.py
+++ b/src/controller/commands/vf.py
@@ -501,3 +501,57 @@ class SppVf(object):
                             if 'RES_UID'.startswith(sub_tokens[5]):
                                 res.append('RES_UID')
             return res
+
+    @classmethod
+    def help(cls):
+        msg = """Send a command to spp_vf.
+
+        SPP VF is a secondary process for pseudo SR-IOV features. This
+        command has four sub commands.
+          * status
+          * component
+          * port
+          * classifier_table
+
+        Each of sub commands other than 'status' takes several parameters
+        for detailed operations. Notice that 'start' for launching a worker
+        is replaced with 'stop' for terminating. 'add' is also replaced with
+        'del' for deleting.
+
+        Examples:
+
+        # (1) show status of worker threads and resources
+        spp > vf 1; status
+
+        # (2) launch or terminate a worker thread with arbitrary name
+        #   NAME: arbitrary name used as identifier
+        #   CORE_ID: one of unused cores referred from status
+        #   ROLE: role of workers, 'forward', 'merge' or 'classifier_mac'
+        spp > vf 1; component start NAME CORE_ID ROLE
+        spp > vf 1; component stop NAME CORE_ID ROLE
+
+        # (3) add or delete a port to worker of NAME
+        #   RES_UID: resource UID such as 'ring:0' or 'vhost:1'
+        #   DIR: 'rx' or 'tx'
+        spp > vf 1; port add RES_UID DIR NAME
+        spp > vf 1; port del RES_UID DIR NAME
+
+        # (4) add or delete a port with vlan ID to worker of NAME
+        #   VID: vlan ID
+        #   PCP: priority code point defined in IEEE 802.1p
+        spp > vf 1; port add RES_UID DIR NAME add_vlantag VID PCP
+        spp > vf 1; port del RES_UID DIR NAME add_vlantag VID PCP
+
+        # (5) add a port of deleting vlan tag
+        spp > vf 1; port add RES_UID DIR NAME del_vlantag
+
+        # (6) add or delete an entry of MAC address and resource to classify
+        spp > vf 1; classifier_table add mac MAC_ADDR RES_UID
+        spp > vf 1; classifier_table del mac MAC_ADDR RES_UID
+
+        # (7) add or delete an entry of MAC address and resource with vlan ID
+        spp > vf 1; classifier_table add vlan VID MAC_ADDR RES_UID
+        spp > vf 1; classifier_table del vlan VID MAC_ADDR RES_UID
+        """
+
+        print(msg)
diff --git a/src/controller/shell.py b/src/controller/shell.py
index 057f70a..75dabaa 100644
--- a/src/controller/shell.py
+++ b/src/controller/shell.py
@@ -406,52 +406,12 @@ class Shell(cmd.Cmd, object):
     def do_vf(self, cmd):
         """Send a command to spp_vf.
 
-        SPP VF is a secondary process for pseudo SR-IOV features. This
+        spp_vf is a secondary process for pseudo SR-IOV features. This
         command has four sub commands.
           * status
           * component
           * port
           * classifier_table
-
-        Each of sub commands other than 'status' takes several parameters
-        for detailed operations. Notice that 'start' for launching a worker
-        is replaced with 'stop' for terminating. 'add' is also replaced with
-        'del' for deleting.
-
-        Examples:
-
-        # (1) show status of worker threads and resources
-        spp > vf 1; status
-
-        # (2) launch or terminate a worker thread with arbitrary name
-        #   NAME: arbitrary name used as identifier
-        #   CORE_ID: one of unused cores referred from status
-        #   ROLE: role of workers, 'forward', 'merge' or 'classifier_mac'
-        spp > vf 1; component start NAME CORE_ID ROLE
-        spp > vf 1; component stop NAME CORE_ID ROLE
-
-        # (3) add or delete a port to worker of NAME
-        #   RES_UID: resource UID such as 'ring:0' or 'vhost:1'
-        #   DIR: 'rx' or 'tx'
-        spp > vf 1; port add RES_UID DIR NAME
-        spp > vf 1; port del RES_UID DIR NAME
-
-        # (4) add or delete a port with vlan ID to worker of NAME
-        #   VID: vlan ID
-        #   PCP: priority code point defined in IEEE 802.1p
-        spp > vf 1; port add RES_UID DIR NAME add_vlantag VID PCP
-        spp > vf 1; port del RES_UID DIR NAME add_vlantag VID PCP
-
-        # (5) add a port of deleting vlan tag
-        spp > vf 1; port add RES_UID DIR NAME del_vlantag
-
-        # (6) add or delete an entry of MAC address and resource to classify
-        spp > vf 1; classifier_table add mac MAC_ADDR RES_UID
-        spp > vf 1; classifier_table del mac MAC_ADDR RES_UID
-
-        # (7) add or delete an entry of MAC address and resource with vlan ID
-        spp > vf 1; classifier_table add vlan VID MAC_ADDR RES_UID
-        spp > vf 1; classifier_table del vlan VID MAC_ADDR RES_UID
         """
 
         # remove unwanted spaces to avoid invalid command error
@@ -466,6 +426,10 @@ class Shell(cmd.Cmd, object):
         else:
             print('Invalid command: %s' % tmparg)
 
+    def help_vf(self):
+        """Print help message of spp_vf."""
+        vf.SppVf.help()
+
     def complete_vf(self, text, line, begidx, endidx):
         """Completion for vf command."""
 
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 16:11:16 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DJ3DBJFR70@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 16:11:43 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTL00U0ADBJLE00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:43 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00DPDDBJAT90@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:43 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf101.ddreams.local (Postfix) with ESMTP id 43B237E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:43 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 423B38E6058	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:43 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 3757A8E605A	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:43 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id CE1758E606E	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:41 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf101.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:41 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BfJ8017010;	Mon,
 24 Jun 2019 16:11:41 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O7BfmE017009;	Mon, 24 Jun 2019 16:11:41 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O7BfTF017006	for unknown; Mon,
 24 Jun 2019 16:11:41 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BfdL021468 for
 unknown; Mon, 24 Jun 2019 16:11:41 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Bfbj021464; Mon,
 24 Jun 2019 16:11:41 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Berd017038;	Mon,
 24 Jun 2019 16:11:40 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O7Behv017034	for unknown; Mon, 24 Jun 2019 16:11:40 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BedY031282 for
 unknown; Mon, 24 Jun 2019 16:11:40 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BeIk031279 for
 unknown; Mon, 24 Jun 2019 16:11:40 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O7BXrd023379	for unknown; Mon,
 24 Jun 2019 16:11:39 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 645141BF2A;	Mon, 24 Jun 2019 09:11:33 +0200 (CEST)
Received: from mail-pg1-f173.google.com
 (mail-pg1-f173.google.com [209.85.215.173]) by dpdk.org (Postfix)
 with ESMTP id 9A7B51BF28 for <spp@dpdk.org>; Mon,
 24 Jun 2019 09:11:32 +0200 (CEST)
Received: by mail-pg1-f173.google.com with SMTP id s27so6614940pgl.2 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 00:11:32 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id y17sm6357948pfe.148.2019.06.24.00.11.30
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 00:11:31 -0700 (PDT)
Date: Mon, 24 Jun 2019 16:11:16 +0900
From: yasufum.o@gmail.com
Subject: [spp 04401] [spp] [PATCH 02/10] controller: move server help msg to
 SppCtlServer
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624071124.23451-3-yasufum.o@gmail.com>
In-reply-to: <20190624071124.23451-1-yasufum.o@gmail.com>
References: <20190624071124.23451-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04401
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=qElY0imwBoK7UdkXybRDe82CuJw93Db9U74nwiug3Ok=;
 b=CmAK3enRRdntg9xujUSK5VSpIFlQ1ZGYBIXJ2uSbranHEwyAZhAFVzwVzEdMy4A+Nv
 LaLH+6kDkCCFgWCpy+T82o4UOJ1y3iEutHz6S9ADcb38l8klDvTVdqooAeS5xRpY/aHv
 f0t0FAZ3d5Nk5SZgpV3TS/pSTjKzsLQbmc291kOKws3RUPmBbu6QKjfvEbfk2tfiLJ9d
 698ze3yTM0hMSQrGt0IOhDXGJ/RD+O4vpACiSjn37kd/dY9IGkKbizCro379OjExxZmL
 4vh16UmGlop+xscq5dZCzp8PB3B6eDcMjMTFzcL/JaKdkV6TMuFUP67uQd9X61ar2E+I EIsA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=qElY0imwBoK7UdkXybRDe82CuJw93Db9U74nwiug3Ok=;
 b=I/bRiWxBcpoJiLtaaFWm7Ch20RTqKJ50vo0ckDxPO/XEnXg5GDiEqrkdbR1wDhBvo+
 uEJw/fUcHRc0s8Iz1BO3RKft4I8NwGvPY1RW+0LsY9tKhsaA4SBA4ot/T/Lr/57z0pIS
 GACcf5k96jihnQ+y/defIa1/VHHDvY0vUu1R1RUT3VJ7nUiobwiz/eDDkUtBwp5H542/
 UgkpXMT+bH7MxPvzIAc2TdACjtmgJ5FN9X+9EISBXRx094BqwmVxNfCQA1CG3BtzyowL
 bcHtkF7CPmhPfxsGA8tD74b3so2BbqfKyRfmjfQFFxpKAkyp78DTsNuhwkyt9MtxVoDR e16A==
X-Gm-Message-State: APjAAAUWJF+hRr2aLAExADsVYa8gIPyV/AafY67JKifjGWuTx9llNTOt
 +Frm57PkfPQ84X9QkLnWp8OZYWig
X-Google-Smtp-Source:
 APXvYqxQJ9Xpm/EvVF8rjPc2fG+U1IWMtBXJz9EY1axF0UVQOekmwRa4QKuW7jAO1rfja+T0L9Izig==
X-Received: by 2002:a63:78c3:: with SMTP id
 t186mr32416992pgc.340.1561360291665; Mon, 24 Jun 2019 00:11:31 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 103
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This patch is to move comment of `do_server` to `SppCtlServer.help` to
reduce the number of lines.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/server.py | 33 +++++++++++++++++++++++++++++++
 src/controller/shell.py           | 33 +++++--------------------------
 2 files changed, 38 insertions(+), 28 deletions(-)

diff --git a/src/controller/commands/server.py b/src/controller/commands/server.py
index c2bda9d..2b5913a 100644
--- a/src/controller/commands/server.py
+++ b/src/controller/commands/server.py
@@ -258,3 +258,36 @@ class SppCtlServer(object):
                 removed.ip_addr, removed.port))
 
         return True
+
+    @classmethod
+    def help(cls):
+        msg = """Switch SPP REST API server.
+
+        Show a list of servers. '*' means that it is under the control.
+
+            spp > server  # or 'server list'
+              1: 192.168.1.101:7777 *
+              2: 192.168.1.102:7777
+
+        Switch to the second node with index or address.
+
+            spp > server 2
+            Switch spp-ctl to "2: 192.168.1.102:7777".
+
+            # It is the same
+            spp > server 192.168.1.101  # no need port if default
+            Switch spp-ctl to "1: 192.168.1.101:7777".
+
+        Register or unregister a node by using 'add' or 'del' command.
+        For unregistering, node is also specified with index.
+
+            # Register third node
+            spp > server add 192.168.122.177
+            Registered spp-ctl "192.168.122.177:7777".
+
+            # Unregister second one
+            spp > server del 2  # or 192.168.1.102
+            Unregistered spp-ctl "192.168.1.102:7777".
+        """
+
+        print(msg)
diff --git a/src/controller/shell.py b/src/controller/shell.py
index 75dabaa..b86ba5c 100644
--- a/src/controller/shell.py
+++ b/src/controller/shell.py
@@ -253,38 +253,15 @@ class Shell(cmd.Cmd, object):
             self.recorded_file = None
 
     def do_server(self, commands):
-        """Switch SPP REST API server.
-
-        Show a list of servers. '*' means that it is under the control.
-
-            spp > server  # or 'server list'
-              1: 192.168.1.101:7777 *
-              2: 192.168.1.102:7777
-
-        Switch to the second node with index or address.
-
-            spp > server 2
-            Switch spp-ctl to "2: 192.168.1.102:7777".
-
-            # It is the same
-            spp > server 192.168.1.101  # no need port if default
-            Switch spp-ctl to "1: 192.168.1.101:7777".
-
-        Register or unregister a node by using 'add' or 'del' command.
-        For unregistering, node is also specified with index.
-
-            # Register third node
-            spp > server add 192.168.122.177
-            Registered spp-ctl "192.168.122.177:7777".
-
-            # Unregister second one
-            spp > server del 2  # or 192.168.1.102
-            Unregistered spp-ctl "192.168.1.102:7777".
-        """
+        """Switch SPP REST API server."""
 
         self.spp_ctl_server.run(commands)
         self.spp_ctl_cli = self.spp_ctl_server.get_current_server()
 
+    def help_server(self):
+        """Print help message of server command."""
+        server.SppCtlServer.help()
+
     def complete_server(self, text, line, begidx, endidx):
         """Completion for server command."""
 
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 16:11:17 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DJQDBKFR70@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 16:11:44 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTL00B2KDBK2K00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:44 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00ZK1DBKPPE0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:44 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id 3FBB37E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:44 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 3EA358E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:44 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 3440B8E6060	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:44 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id BC7798E6066	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:43 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:43 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Bh3E017073;	Mon,
 24 Jun 2019 16:11:43 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O7Bhgh017072;	Mon, 24 Jun 2019 16:11:43 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O7BhDp017062	for unknown; Mon,
 24 Jun 2019 16:11:43 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Bhhp021493 for
 unknown; Mon, 24 Jun 2019 16:11:43 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BgQX021490; Mon,
 24 Jun 2019 16:11:42 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BgkJ017052;	Mon,
 24 Jun 2019 16:11:42 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O7Bg1t017048	for unknown; Mon, 24 Jun 2019 16:11:42 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BgYS031298 for
 unknown; Mon, 24 Jun 2019 16:11:42 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Bg5k031294 for
 unknown; Mon, 24 Jun 2019 16:11:42 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O7BZNS023383	for unknown; Mon,
 24 Jun 2019 16:11:41 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 741E71BF33;	Mon, 24 Jun 2019 09:11:35 +0200 (CEST)
Received: from mail-pf1-f193.google.com
 (mail-pf1-f193.google.com [209.85.210.193]) by dpdk.org (Postfix)
 with ESMTP id F13931BCAC for <spp@dpdk.org>; Mon,
 24 Jun 2019 09:11:33 +0200 (CEST)
Received: by mail-pf1-f193.google.com with SMTP id d126so6972180pfd.2 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 00:11:33 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id y17sm6357948pfe.148.2019.06.24.00.11.31
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 00:11:32 -0700 (PDT)
Date: Mon, 24 Jun 2019 16:11:17 +0900
From: yasufum.o@gmail.com
Subject: [spp 04402] [spp] [PATCH 03/10] controller: move pri help msg to
 SppPrimary
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624071124.23451-4-yasufum.o@gmail.com>
In-reply-to: <20190624071124.23451-1-yasufum.o@gmail.com>
References: <20190624071124.23451-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04402
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=q6DxDx2g+ZwjhnNS8szHEHX13SonNaY3ec1JOqrgQio=;
 b=OtQob4hn6ZCpUuwQbGmwpzrpV5/Ecvjnw8H0t/nLK404m7YH/EOha2b1fAII3yLhJP
 inmRO2wUwzIpGtSDHFUr0u2HzY2T0j3RUj0LStz0+MH232NVtFmsqiTMtDlcGOSyb5YS
 Mni/kfdf3xKixV9iQumUn2/JhyON7+NkJjG9YaZSxxIObguZF2XdtUglElJp8Fvo1qZk
 ettac96twoEjbx9TTptDZMmvODyVoukMxBKwn6DdoL/accgH/RZwrtTC7RbJ51G4QHKS
 iS5wZbVS2qEdGe8WFTj6axUSYgVunTD4e4LSFnt83IGoevHxu1mLYARzNKs0FT1J+o2T vTzg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=q6DxDx2g+ZwjhnNS8szHEHX13SonNaY3ec1JOqrgQio=;
 b=iH582TkwK3nQNqmEAu1vHOsfH/45HXcX1RUtq4samhlicRhLx2J6Touxpw+XG5iMMz
 Tt4LyzDu618uC7uong+vLAo2p98HGatUSi9SB389hxo2IjdZDSG5ER1ITvYtBX4/qAof
 IcytY9V9IQYYUr95rJ5jTeM8vM+z1f0LY+8V/4csOkvFRcKX753ZnKCGK3dfRmsNwNoD
 dbR3OM5LvTXPqOskcZJXJUIH284OTSRUBq47DZg7bptk+kHIgRLTrkOhcKNh+qXWJXcA
 cNtL6JTS+8cj8DfPJdWgD5DNclwR6QqH2XittRuV+RVBDIcJuhYg8jOWJfXstFppCk95 4+0A==
X-Gm-Message-State: APjAAAWFGwNMtRBq2kgH1vGndgbBC3NCr10My/lDhoMV+n6ZIM18rnrg
 jFXTwupoQR0S9EofquSZuo+cIJhq
X-Google-Smtp-Source:
 APXvYqzJUJo/B8EY7SDD8n5UAl81t27YTeQ6qWe2Ry4z5k/DoR5bF3EDWuZ50jK7A+08/4qCcRwSxA==
X-Received: by 2002:a17:90a:8a8e:: with SMTP id
 x14mr22385262pjn.103.1561360293161; Mon, 24 Jun 2019 00:11:33 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 104
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This patch is to move comment of `do_pri` to `SppPrimary.help` to
reduce the number of lines.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/pri.py | 17 +++++++++++++++++
 src/controller/shell.py        | 33 +++++++--------------------------
 2 files changed, 24 insertions(+), 26 deletions(-)

diff --git a/src/controller/commands/pri.py b/src/controller/commands/pri.py
index 15bdb12..b119a5c 100644
--- a/src/controller/commands/pri.py
+++ b/src/controller/commands/pri.py
@@ -436,3 +436,20 @@ class SppPrimary(object):
                 pass
             else:
                 print('Error: unknown response.')
+
+    @classmethod
+    def help(cls):
+        msg = """Send a command to primary process.
+
+        Show resources and statistics, or clear it.
+            spp > pri; status  # show status
+            spp > pri; clear   # clear statistics
+
+        Launch secondary process..
+            # Launch nfv:1
+            spp > pri; launch nfv 1 -l 1,2 -m 512 -- -n 1 -s 192.168....
+            # Launch vf:2
+            spp > pri; launch vf 2 -l 1,4-7 -m 512 -- --client-id 2 -s ...
+        """
+
+        print(msg)
diff --git a/src/controller/shell.py b/src/controller/shell.py
index b86ba5c..bfe963b 100644
--- a/src/controller/shell.py
+++ b/src/controller/shell.py
@@ -278,22 +278,7 @@ class Shell(cmd.Cmd, object):
         self.print_status()
 
     def do_pri(self, command):
-        """Send a command to primary process.
-
-        Show resources and statistics, or clear it.
-
-            spp > pri; status  # show status
-
-            spp > pri; clear   # clear statistics
-
-        Launch secondary process..
-
-            # Launch nfv:1
-            spp > pri; launch nfv 1 -l 1,2 -m 512 -- -n 1 -s 192.168....
-
-            # Launch vf:2
-            spp > pri; launch vf 2 -l 1,4-7 -m 512 -- --client-id 2 -s ...
-        """
+        """Send a command to primary process."""
 
         # Remove unwanted spaces and first char ';'
         command = self.clean_cmd(command)[1:]
@@ -303,6 +288,10 @@ class Shell(cmd.Cmd, object):
 
         self.primary.run(command, self.cli_config)
 
+    def help_pri(self):
+        """Print help message of pri command."""
+        pri.SppPrimary.help()
+
     def complete_pri(self, text, line, begidx, endidx):
         """Completion for primary process commands."""
 
@@ -381,15 +370,7 @@ class Shell(cmd.Cmd, object):
                 return res
 
     def do_vf(self, cmd):
-        """Send a command to spp_vf.
-
-        spp_vf is a secondary process for pseudo SR-IOV features. This
-        command has four sub commands.
-          * status
-          * component
-          * port
-          * classifier_table
-        """
+        """Send a command to spp_vf."""
 
         # remove unwanted spaces to avoid invalid command error
         tmparg = self.clean_cmd(cmd)
@@ -404,7 +385,7 @@ class Shell(cmd.Cmd, object):
             print('Invalid command: %s' % tmparg)
 
     def help_vf(self):
-        """Print help message of spp_vf."""
+        """Print help message of vf command."""
         vf.SppVf.help()
 
     def complete_vf(self, text, line, begidx, endidx):
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 16:11:18 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd105.ddreams.local
 (zssg-mailmd105.ddreams.local [10.160.123.100])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL00DKNDBMFR70@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 16:11:46 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd105.ddreams.local by
 zssg-mailmd105.ddreams.local (dDREAMS) id <0PTL00I16DBM3800@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:46 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd105.ddreams.local
 (dDREAMS) with ESMTP id <0PTL001BYDBKI990@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:46 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf101.ddreams.local (Postfix) with ESMTP id 1B0967E603A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:46 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 19A8C8E6051	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:46 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 181DD8E6056	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:46 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id D7FA28E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:44 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf101.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:44 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BiXP017126;	Mon,
 24 Jun 2019 16:11:44 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O7BiQh017125;	Mon, 24 Jun 2019 16:11:44 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O7BiH5017116	for unknown; Mon,
 24 Jun 2019 16:11:44 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BitC021504 for
 unknown; Mon, 24 Jun 2019 16:11:44 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BioF021501; Mon,
 24 Jun 2019 16:11:44 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BhnM017059;	Mon,
 24 Jun 2019 16:11:43 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O7Bha1017055	for unknown; Mon, 24 Jun 2019 16:11:43 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BhCC031319 for
 unknown; Mon, 24 Jun 2019 16:11:43 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Bhnb031313 for
 unknown; Mon, 24 Jun 2019 16:11:43 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O7BaLu023391	for unknown; Mon,
 24 Jun 2019 16:11:42 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 868E61BF38;	Mon, 24 Jun 2019 09:11:36 +0200 (CEST)
Received: from mail-pg1-f176.google.com
 (mail-pg1-f176.google.com [209.85.215.176]) by dpdk.org (Postfix)
 with ESMTP id 72DBB1BF30 for <spp@dpdk.org>; Mon,
 24 Jun 2019 09:11:35 +0200 (CEST)
Received: by mail-pg1-f176.google.com with SMTP id w10so6591587pgj.7 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 00:11:35 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id y17sm6357948pfe.148.2019.06.24.00.11.33
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 00:11:34 -0700 (PDT)
Date: Mon, 24 Jun 2019 16:11:18 +0900
From: yasufum.o@gmail.com
Subject: [spp 04403] [spp] [PATCH 04/10] controller: move nfv help msg to SppNfv
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624071124.23451-5-yasufum.o@gmail.com>
In-reply-to: <20190624071124.23451-1-yasufum.o@gmail.com>
References: <20190624071124.23451-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04403
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=/20PACOFfWjEAeYN3IOTY0SXu+T7ykrnK1AJIp3rYFU=;
 b=adz6fwwm5633pyeukddL8TiQWSUMHFsFe7B3FULy12WBO6Z7eXoK77JPxHFwWBzL8m
 w+cXc9c7u5+y1JLH4C2FsiKvczZ6co4Yx6UE8UYqb+QzJD7fLN8u5zfk1jXBoi/7DDAv
 f9dRShhV4AFKhFtETeqh4ZVVqapZYCz5PL5XJwr/n6GJJ/FEwbOYlZ12V6bKe9V68qzC
 Vulb5KgMMJu8s5IUdNdNttT3K0VVboWu9Kabo3QC9EcI5VGrnQ9W1LQLH4PSRZ0X6S0p
 M58+QvWmpB04GLSkLijX+SeuwAOo/TiIQ9F/919HTZigeWgVgUoYCcvPBhHH7M2Itt8l DlMA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=/20PACOFfWjEAeYN3IOTY0SXu+T7ykrnK1AJIp3rYFU=;
 b=lkgwZu0a5PWDs+INOBCGFHYjxi0JWWWmdAa1BMVHtyDamxfVXl6yYEgHf6+UPclZAn
 zeJs9RR+4dxVfh/+p4cxR2Ksd387adv+dzz43C9N9r4wW5z9x0pDn3fqnj7nIMlcbA0V
 GXyJ81EX8kBiLqGorS5GXBV4AtkxJrxod6sOLeCPxOY7cFkICwF0MiXZ1tNYzFFshuA8
 vwCO02KFez9Dxkct3ROPdlLruBDKg+DlIaWzletgiipDp8BFSLbob/DfNkQRwo0L631U
 2fxVXTB4BGABkid6RnkYshxJe/BUCf4lOTDxoNJuJiz/p8jm6ADoV3Y+c3NQz643nsZA k43A==
X-Gm-Message-State: APjAAAXQp+urjWtb4B8Qq6FFe9dQEyczxlWAYVZ9cdmITtiBG57I1V/X
 7A57+3mGgIcpRMs3dbOMPCpljvcc
X-Google-Smtp-Source:
 APXvYqzeFn4hdgGcB16G9Qb6hVvh4inlNSYF/Q8QCd/gD+F/aU7q0M/hWf4dw/w6Fdqlx0WEcM8Wig==
X-Received: by 2002:a17:90a:23a4:: with SMTP id
 g33mr23653490pje.115.1561360294576; Mon, 24 Jun 2019 00:11:34 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 78
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This patch is to move comment of `do_nfv` to `SppNfv.help` to reduce
the number of lines.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/nfv.py | 19 +++++++++++++++++++
 src/controller/shell.py        | 19 +++++--------------
 2 files changed, 24 insertions(+), 14 deletions(-)

diff --git a/src/controller/commands/nfv.py b/src/controller/commands/nfv.py
index 92d2a3f..0989eba 100644
--- a/src/controller/commands/nfv.py
+++ b/src/controller/commands/nfv.py
@@ -442,3 +442,22 @@ class SppNfv(object):
                 pass
             else:
                 print('Error: unknown response.')
+
+    @classmethod
+    def help(cls):
+        msg = """Send a command to spp_nfv specified with ID.
+
+        Spp_nfv is specified with secondary ID and takes sub commands.
+
+          spp > nfv 1; status
+          spp > nfv 1; add ring:0
+          spp > nfv 1; patch phy:0 ring:0
+
+        You can refer all of sub commands by pressing TAB after
+        'nfv 1;'.
+
+          spp > nfv 1;  # press TAB
+          add     del     exit    forward patch   status  stop
+        """
+
+        print(msg)
diff --git a/src/controller/shell.py b/src/controller/shell.py
index bfe963b..b11dac0 100644
--- a/src/controller/shell.py
+++ b/src/controller/shell.py
@@ -302,20 +302,7 @@ class Shell(cmd.Cmd, object):
                 self.cli_config)
 
     def do_nfv(self, cmd):
-        """Send a command to spp_nfv specified with ID.
-
-        Spp_nfv is specified with secondary ID and takes sub commands.
-
-        spp > nfv 1; status
-        spp > nfv 1; add ring:0
-        spp > nfv 1; patch phy:0 ring:0
-
-        You can refer all of sub commands by pressing TAB after
-        'nfv 1;'.
-
-        spp > nfv 1;  # press TAB
-        add     del     exit    forward patch   status  stop
-        """
+        """Send a command to spp_nfv specified with ID."""
 
         # remove unwanted spaces to avoid invalid command error
         tmparg = self.clean_cmd(cmd)
@@ -328,6 +315,10 @@ class Shell(cmd.Cmd, object):
         else:
             print('Invalid command: %s' % tmparg)
 
+    def help_nfv(self):
+        """Print help message of nfv command."""
+        nfv.SppNfv.help()
+
     def complete_nfv(self, text, line, begidx, endidx):
         """Completion for nfv command."""
 
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 16:11:19 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DKZDBNFR70@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 16:11:47 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTL00U16DBNLE00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:47 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00DR8DBNAT90@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:47 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf101.ddreams.local (Postfix) with ESMTP id 380197E603B	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:47 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 361318E606E	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:47 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 34DDB8E6062	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:47 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 9850D8E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:46 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf101.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:46 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BkGr017135;	Mon,
 24 Jun 2019 16:11:46 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O7Bkqv017134;	Mon, 24 Jun 2019 16:11:46 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O7Bk6P017131	for unknown; Mon,
 24 Jun 2019 16:11:46 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BjHt021520 for
 unknown; Mon, 24 Jun 2019 16:11:46 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Bjlo021514; Mon,
 24 Jun 2019 16:11:45 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Bj5E017066;	Mon,
 24 Jun 2019 16:11:45 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O7BjsD017062	for unknown; Mon, 24 Jun 2019 16:11:45 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BjT7031334 for
 unknown; Mon, 24 Jun 2019 16:11:45 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BjNK031328 for
 unknown; Mon, 24 Jun 2019 16:11:45 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O7BctS023399	for unknown; Mon,
 24 Jun 2019 16:11:44 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 96B321BDD0;	Mon, 24 Jun 2019 09:11:37 +0200 (CEST)
Received: from mail-pf1-f196.google.com
 (mail-pf1-f196.google.com [209.85.210.196]) by dpdk.org (Postfix)
 with ESMTP id C366E1BF47 for <spp@dpdk.org>; Mon,
 24 Jun 2019 09:11:36 +0200 (CEST)
Received: by mail-pf1-f196.google.com with SMTP id r1so6951869pfq.12 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 00:11:36 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id y17sm6357948pfe.148.2019.06.24.00.11.34
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 00:11:35 -0700 (PDT)
Date: Mon, 24 Jun 2019 16:11:19 +0900
From: yasufum.o@gmail.com
Subject: [spp 04404] [spp] [PATCH 05/10] controller: move mirror help msg to
 SppMirror
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624071124.23451-6-yasufum.o@gmail.com>
In-reply-to: <20190624071124.23451-1-yasufum.o@gmail.com>
References: <20190624071124.23451-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04404
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=q6P/ftP1TkmG1OJ7aPOymHe0KgbR/u0/nVsS9mi3Cbc=;
 b=uT/Rs1hhhEsYO6K20rUy33MX6PN0HcX1HnPfG4LaKrxT8KGq1+p+p6tzG4+nxIHgNn
 MD+X9L02SGmmwAE2y3+TOAk17/BioJEN+JP9ekSWvNBKGHqiH1BnJ9UpYr63sCP4gtvA
 Rl6lzjexQfbZmZrmd7YDSbm+NLgmnfUVxj7kaIMPHMBab4IdZqLaIKZPoxJwfyHyeDD5
 viQcY+8uxKf1XFLookYcHlrBUX9hpR1GwBGKBEDsWj/EB885tpgYuWNrM0qXo5Uz694z
 XagoIEWCJ94Hs9w9QGY52xiLq2bsixAWTjkxCfb0KyThzMNGtzfLQhQb9/hdbmVz/8z3 HgnQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=q6P/ftP1TkmG1OJ7aPOymHe0KgbR/u0/nVsS9mi3Cbc=;
 b=jPpxEhLJW5lbqY+gnxSs2e/1G1ANJQL16lcGRKnRF/M2zIkOHYqxhvzENJw99DYaMN
 wcLjWE1bYeIFiOTLX/m5WDgWj/od10nx58NM1f6haIgrIsFAFXMnblOR9a/r8WZ7peSI
 vs8W+Xi1O9CyEKiUcUeJDx5gfj13OE+3uTg/tmnuVxnqlrOcXZkf82xuX29G5wBZ8+Zn
 EocknC0KINhbITxzH9HoCX7yhQ6D/Xku2BDyCVYVrhPJSp210WCkODntXLLhtWaEmT/y
 OiG8cWYb5rWKVa3174+d3CkdL8G0IWOCFeus7ys7IzmGu2hfP3RwCCeKek3asb8+BBHk ZymA==
X-Gm-Message-State: APjAAAUuWocU1E/VUUOlOeOY3wGuif/6Uf1Jxydc4FNmT43fWVlz9OnF
 G6DoIZ8FUzrYgpV3w4tuvHHqEE05
X-Google-Smtp-Source:
 APXvYqxXRYaB5LwXpPoZ3ftTAE2DJV9vDobGFtTrZsAgYkvDM7jaNWDzlHRnKFYmj1fPU09uh1bcyg==
X-Received: by 2002:a17:90a:9281:: with SMTP id
 n1mr22309541pjo.25.1561360295942; Mon, 24 Jun 2019 00:11:35 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 112
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This patch is to move comment of `do_mirror` to `SppMirror.help` to
reduce the number of lines.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/mirror.py | 36 +++++++++++++++++++++++++++++++
 src/controller/shell.py           | 36 +++++--------------------------
 2 files changed, 41 insertions(+), 31 deletions(-)

diff --git a/src/controller/commands/mirror.py b/src/controller/commands/mirror.py
index d38812d..d7ea4cd 100644
--- a/src/controller/commands/mirror.py
+++ b/src/controller/commands/mirror.py
@@ -356,3 +356,39 @@ class SppMirror(object):
                         if kw.startswith(sub_tokens[4]):
                             res.append(kw)
             return res
+
+    @classmethod
+    def help(cls):
+        msg = """Send a command to spp_mirror.
+
+        spp_mirror is a secondary process for duplicating incoming
+        packets to be used as similar to TaaS in OpenStack. This
+        command has four sub commands.
+          * status
+          * component
+          * port
+
+        Each of sub commands other than 'status' takes several parameters
+        for detailed operations. Notice that 'start' for launching a worker
+        is replaced with 'stop' for terminating. 'add' is also replaced with
+        'del' for deleting.
+
+        Examples:
+
+        # (1) show status of worker threads and resources
+        spp > mirror 1; status
+
+        # (2) launch or terminate a worker thread with arbitrary name
+        #   NAME: arbitrary name used as identifier
+        #   CORE_ID: one of unused cores referred from status
+        spp > mirror 1; component start NAME CORE_ID mirror
+        spp > mirror 1; component stop NAME CORE_ID mirror
+
+        # (3) add or delete a port to worker of NAME
+        #   RES_UID: resource UID such as 'ring:0' or 'vhost:1'
+        #   DIR: 'rx' or 'tx'
+        spp > mirror 1; port add RES_UID DIR NAME
+        spp > mirror 1; port del RES_UID DIR NAME
+        """
+
+        print(msg)
diff --git a/src/controller/shell.py b/src/controller/shell.py
index b11dac0..2682376 100644
--- a/src/controller/shell.py
+++ b/src/controller/shell.py
@@ -418,37 +418,7 @@ class Shell(cmd.Cmd, object):
                         self.get_sec_ids('vf'), text, line, begidx, endidx)
 
     def do_mirror(self, cmd):
-        """Send a command to spp_mirror.
-
-        spp_mirror is a secondary process for duplicating incoming
-        packets to be used as similar to TaaS in OpenStack. This
-        command has four sub commands.
-          * status
-          * component
-          * port
-
-        Each of sub commands other than 'status' takes several parameters
-        for detailed operations. Notice that 'start' for launching a worker
-        is replaced with 'stop' for terminating. 'add' is also replaced with
-        'del' for deleting.
-
-        Examples:
-
-        # (1) show status of worker threads and resources
-        spp > mirror 1; status
-
-        # (2) launch or terminate a worker thread with arbitrary name
-        #   NAME: arbitrary name used as identifier
-        #   CORE_ID: one of unused cores referred from status
-        spp > mirror 1; component start NAME CORE_ID mirror
-        spp > mirror 1; component stop NAME CORE_ID mirror
-
-        # (3) add or delete a port to worker of NAME
-        #   RES_UID: resource UID such as 'ring:0' or 'vhost:1'
-        #   DIR: 'rx' or 'tx'
-        spp > mirror 1; port add RES_UID DIR NAME
-        spp > mirror 1; port del RES_UID DIR NAME
-        """
+        """Send a command to spp_mirror."""
 
         # remove unwanted spaces to avoid invalid command error
         tmparg = self.clean_cmd(cmd)
@@ -461,6 +431,10 @@ class Shell(cmd.Cmd, object):
         else:
             print('Invalid command: %s' % tmparg)
 
+    def help_mirror(self):
+        """Print help message of mirror command."""
+        mirror.SppMirror.help()
+
     def complete_mirror(self, text, line, begidx, endidx):
         """Completion for mirror command."""
 
-- 
2.17.1



From spp-request@dpdk.org Mon Jun 24 16:11:37 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd103.ddreams.local
 (zssg-mailmd103.ddreams.local [10.160.123.98]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DLNDBOFR70@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 16:11:48 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd103.ddreams.local by
 zssg-mailmd103.ddreams.local (dDREAMS) id <0PTL01416DBOFV00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:48 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd103.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00CTLDBO7PF0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:48 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf101.ddreams.local (Postfix) with ESMTP id 71F057E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:48 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 7117B8E6055	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:48 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 6F43B8E6060	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:48 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 270858E605D	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:47 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf101.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:47 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BkSj017142;	Mon,
 24 Jun 2019 16:11:47 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O7Bkc8017141;	Mon, 24 Jun 2019 16:11:46 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O7BkLh017138	for unknown; Mon,
 24 Jun 2019 16:11:46 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BkCx031343 for
 unknown; Mon, 24 Jun 2019 16:11:46 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BkS4031339 for
 unknown; Mon, 24 Jun 2019 16:11:46 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O7BdK8023413	for unknown; Mon,
 24 Jun 2019 16:11:45 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id A169D1BEF6	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 24 Jun 2019 09:11:38 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 15
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 24 Jun 2019 09:11:37 +0200
Message-id: <mailman.23398.1561360297.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH 01/10] controller: move vf help msg to SppVf.help
      (yasufum.o@gmail.com)
   2. [PATCH 02/10] controller: move server help msg to
      SppCtlServer (yasufum.o@gmail.com)
   3. [PATCH 03/10] controller: move pri help msg to SppPrimary
      (yasufum.o@gmail.com)
   4. [PATCH 04/10] controller: move nfv help msg to SppNfv
      (yasufum.o@gmail.com)
   5. [PATCH 05/10] controller: move mirror help msg to SppMirror
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon, 24 Jun 2019 16:11:15 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 01/10] controller: move vf help msg to
	SppVf.help
Message-ID: <20190624071124.23451-2-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

SPP CLI is implemented with python's cmd library and help message is
defined as a comment of `do_*` method. However, total number of lines
tends to be a large number if the number of command is increased.

To avoid such a situation, this update is to move comment of `do_vf`
to `SppVf.help` to reduce the number of lines.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/vf.py | 54 +++++++++++++++++++++++++++++++++++
 src/controller/shell.py       | 46 ++++-------------------------
 2 files changed, 59 insertions(+), 41 deletions(-)

diff --git a/src/controller/commands/vf.py b/src/controller/commands/vf.py
index b673f0f..c6192e0 100644
--- a/src/controller/commands/vf.py
+++ b/src/controller/commands/vf.py
@@ -501,3 +501,57 @@ class SppVf(object):
                             if 'RES_UID'.startswith(sub_tokens[5]):
                                 res.append('RES_UID')
             return res
+
+    @classmethod
+    def help(cls):
+        msg = """Send a command to spp_vf.
+
+        SPP VF is a secondary process for pseudo SR-IOV features. This
+        command has four sub commands.
+          * status
+          * component
+          * port
+          * classifier_table
+
+        Each of sub commands other than 'status' takes several parameters
+        for detailed operations. Notice that 'start' for launching a worker
+        is replaced with 'stop' for terminating. 'add' is also replaced with
+        'del' for deleting.
+
+        Examples:
+
+        # (1) show status of worker threads and resources
+        spp > vf 1; status
+
+        # (2) launch or terminate a worker thread with arbitrary name
+        #   NAME: arbitrary name used as identifier
+        #   CORE_ID: one of unused cores referred from status
+        #   ROLE: role of workers, 'forward', 'merge' or 'classifier_mac'
+        spp > vf 1; component start NAME CORE_ID ROLE
+        spp > vf 1; component stop NAME CORE_ID ROLE
+
+        # (3) add or delete a port to worker of NAME
+        #   RES_UID: resource UID such as 'ring:0' or 'vhost:1'
+        #   DIR: 'rx' or 'tx'
+        spp > vf 1; port add RES_UID DIR NAME
+        spp > vf 1; port del RES_UID DIR NAME
+
+        # (4) add or delete a port with vlan ID to worker of NAME
+        #   VID: vlan ID
+        #   PCP: priority code point defined in IEEE 802.1p
+        spp > vf 1; port add RES_UID DIR NAME add_vlantag VID PCP
+        spp > vf 1; port del RES_UID DIR NAME add_vlantag VID PCP
+
+        # (5) add a port of deleting vlan tag
+        spp > vf 1; port add RES_UID DIR NAME del_vlantag
+
+        # (6) add or delete an entry of MAC address and resource to classify
+        spp > vf 1; classifier_table add mac MAC_ADDR RES_UID
+        spp > vf 1; classifier_table del mac MAC_ADDR RES_UID
+
+        # (7) add or delete an entry of MAC address and resource with vlan ID
+        spp > vf 1; classifier_table add vlan VID MAC_ADDR RES_UID
+        spp > vf 1; classifier_table del vlan VID MAC_ADDR RES_UID
+        """
+
+        print(msg)
diff --git a/src/controller/shell.py b/src/controller/shell.py
index 057f70a..75dabaa 100644
--- a/src/controller/shell.py
+++ b/src/controller/shell.py
@@ -406,52 +406,12 @@ class Shell(cmd.Cmd, object):
     def do_vf(self, cmd):
         """Send a command to spp_vf.
 
-        SPP VF is a secondary process for pseudo SR-IOV features. This
+        spp_vf is a secondary process for pseudo SR-IOV features. This
         command has four sub commands.
           * status
           * component
           * port
           * classifier_table
-
-        Each of sub commands other than 'status' takes several parameters
-        for detailed operations. Notice that 'start' for launching a worker
-        is replaced with 'stop' for terminating. 'add' is also replaced with
-        'del' for deleting.
-
-        Examples:
-
-        # (1) show status of worker threads and resources
-        spp > vf 1; status
-
-        # (2) launch or terminate a worker thread with arbitrary name
-        #   NAME: arbitrary name used as identifier
-        #   CORE_ID: one of unused cores referred from status
-        #   ROLE: role of workers, 'forward', 'merge' or 'classifier_mac'
-        spp > vf 1; component start NAME CORE_ID ROLE
-        spp > vf 1; component stop NAME CORE_ID ROLE
-
-        # (3) add or delete a port to worker of NAME
-        #   RES_UID: resource UID such as 'ring:0' or 'vhost:1'
-        #   DIR: 'rx' or 'tx'
-        spp > vf 1; port add RES_UID DIR NAME
-        spp > vf 1; port del RES_UID DIR NAME
-
-        # (4) add or delete a port with vlan ID to worker of NAME
-        #   VID: vlan ID
-        #   PCP: priority code point defined in IEEE 802.1p
-        spp > vf 1; port add RES_UID DIR NAME add_vlantag VID PCP
-        spp > vf 1; port del RES_UID DIR NAME add_vlantag VID PCP
-
-        # (5) add a port of deleting vlan tag
-        spp > vf 1; port add RES_UID DIR NAME del_vlantag
-
-        # (6) add or delete an entry of MAC address and resource to classify
-        spp > vf 1; classifier_table add mac MAC_ADDR RES_UID
-        spp > vf 1; classifier_table del mac MAC_ADDR RES_UID
-
-        # (7) add or delete an entry of MAC address and resource with vlan ID
-        spp > vf 1; classifier_table add vlan VID MAC_ADDR RES_UID
-        spp > vf 1; classifier_table del vlan VID MAC_ADDR RES_UID
         """
 
         # remove unwanted spaces to avoid invalid command error
@@ -466,6 +426,10 @@ class Shell(cmd.Cmd, object):
         else:
             print('Invalid command: %s' % tmparg)
 
+    def help_vf(self):
+        """Print help message of spp_vf."""
+        vf.SppVf.help()
+
     def complete_vf(self, text, line, begidx, endidx):
         """Completion for vf command."""
 
-- 
2.17.1



------------------------------

Message: 2
Date: Mon, 24 Jun 2019 16:11:16 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 02/10] controller: move server help msg to
	SppCtlServer
Message-ID: <20190624071124.23451-3-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This patch is to move comment of `do_server` to `SppCtlServer.help` to
reduce the number of lines.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/server.py | 33 +++++++++++++++++++++++++++++++
 src/controller/shell.py           | 33 +++++--------------------------
 2 files changed, 38 insertions(+), 28 deletions(-)

diff --git a/src/controller/commands/server.py b/src/controller/commands/server.py
index c2bda9d..2b5913a 100644
--- a/src/controller/commands/server.py
+++ b/src/controller/commands/server.py
@@ -258,3 +258,36 @@ class SppCtlServer(object):
                 removed.ip_addr, removed.port))
 
         return True
+
+    @classmethod
+    def help(cls):
+        msg = """Switch SPP REST API server.
+
+        Show a list of servers. '*' means that it is under the control.
+
+            spp > server  # or 'server list'
+              1: 192.168.1.101:7777 *
+              2: 192.168.1.102:7777
+
+        Switch to the second node with index or address.
+
+            spp > server 2
+            Switch spp-ctl to "2: 192.168.1.102:7777".
+
+            # It is the same
+            spp > server 192.168.1.101  # no need port if default
+            Switch spp-ctl to "1: 192.168.1.101:7777".
+
+        Register or unregister a node by using 'add' or 'del' command.
+        For unregistering, node is also specified with index.
+
+            # Register third node
+            spp > server add 192.168.122.177
+            Registered spp-ctl "192.168.122.177:7777".
+
+            # Unregister second one
+            spp > server del 2  # or 192.168.1.102
+            Unregistered spp-ctl "192.168.1.102:7777".
+        """
+
+        print(msg)
diff --git a/src/controller/shell.py b/src/controller/shell.py
index 75dabaa..b86ba5c 100644
--- a/src/controller/shell.py
+++ b/src/controller/shell.py
@@ -253,38 +253,15 @@ class Shell(cmd.Cmd, object):
             self.recorded_file = None
 
     def do_server(self, commands):
-        """Switch SPP REST API server.
-
-        Show a list of servers. '*' means that it is under the control.
-
-            spp > server  # or 'server list'
-              1: 192.168.1.101:7777 *
-              2: 192.168.1.102:7777
-
-        Switch to the second node with index or address.
-
-            spp > server 2
-            Switch spp-ctl to "2: 192.168.1.102:7777".
-
-            # It is the same
-            spp > server 192.168.1.101  # no need port if default
-            Switch spp-ctl to "1: 192.168.1.101:7777".
-
-        Register or unregister a node by using 'add' or 'del' command.
-        For unregistering, node is also specified with index.
-
-            # Register third node
-            spp > server add 192.168.122.177
-            Registered spp-ctl "192.168.122.177:7777".
-
-            # Unregister second one
-            spp > server del 2  # or 192.168.1.102
-            Unregistered spp-ctl "192.168.1.102:7777".
-        """
+        """Switch SPP REST API server."""
 
         self.spp_ctl_server.run(commands)
         self.spp_ctl_cli = self.spp_ctl_server.get_current_server()
 
+    def help_server(self):
+        """Print help message of server command."""
+        server.SppCtlServer.help()
+
     def complete_server(self, text, line, begidx, endidx):
         """Completion for server command."""
 
-- 
2.17.1



------------------------------

Message: 3
Date: Mon, 24 Jun 2019 16:11:17 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 03/10] controller: move pri help msg to
	SppPrimary
Message-ID: <20190624071124.23451-4-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This patch is to move comment of `do_pri` to `SppPrimary.help` to
reduce the number of lines.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/pri.py | 17 +++++++++++++++++
 src/controller/shell.py        | 33 +++++++--------------------------
 2 files changed, 24 insertions(+), 26 deletions(-)

diff --git a/src/controller/commands/pri.py b/src/controller/commands/pri.py
index 15bdb12..b119a5c 100644
--- a/src/controller/commands/pri.py
+++ b/src/controller/commands/pri.py
@@ -436,3 +436,20 @@ class SppPrimary(object):
                 pass
             else:
                 print('Error: unknown response.')
+
+    @classmethod
+    def help(cls):
+        msg = """Send a command to primary process.
+
+        Show resources and statistics, or clear it.
+            spp > pri; status  # show status
+            spp > pri; clear   # clear statistics
+
+        Launch secondary process..
+            # Launch nfv:1
+            spp > pri; launch nfv 1 -l 1,2 -m 512 -- -n 1 -s 192.168....
+            # Launch vf:2
+            spp > pri; launch vf 2 -l 1,4-7 -m 512 -- --client-id 2 -s ...
+        """
+
+        print(msg)
diff --git a/src/controller/shell.py b/src/controller/shell.py
index b86ba5c..bfe963b 100644
--- a/src/controller/shell.py
+++ b/src/controller/shell.py
@@ -278,22 +278,7 @@ class Shell(cmd.Cmd, object):
         self.print_status()
 
     def do_pri(self, command):
-        """Send a command to primary process.
-
-        Show resources and statistics, or clear it.
-
-            spp > pri; status  # show status
-
-            spp > pri; clear   # clear statistics
-
-        Launch secondary process..
-
-            # Launch nfv:1
-            spp > pri; launch nfv 1 -l 1,2 -m 512 -- -n 1 -s 192.168....
-
-            # Launch vf:2
-            spp > pri; launch vf 2 -l 1,4-7 -m 512 -- --client-id 2 -s ...
-        """
+        """Send a command to primary process."""
 
         # Remove unwanted spaces and first char ';'
         command = self.clean_cmd(command)[1:]
@@ -303,6 +288,10 @@ class Shell(cmd.Cmd, object):
 
         self.primary.run(command, self.cli_config)
 
+    def help_pri(self):
+        """Print help message of pri command."""
+        pri.SppPrimary.help()
+
     def complete_pri(self, text, line, begidx, endidx):
         """Completion for primary process commands."""
 
@@ -381,15 +370,7 @@ class Shell(cmd.Cmd, object):
                 return res
 
     def do_vf(self, cmd):
-        """Send a command to spp_vf.
-
-        spp_vf is a secondary process for pseudo SR-IOV features. This
-        command has four sub commands.
-          * status
-          * component
-          * port
-          * classifier_table
-        """
+        """Send a command to spp_vf."""
 
         # remove unwanted spaces to avoid invalid command error
         tmparg = self.clean_cmd(cmd)
@@ -404,7 +385,7 @@ class Shell(cmd.Cmd, object):
             print('Invalid command: %s' % tmparg)
 
     def help_vf(self):
-        """Print help message of spp_vf."""
+        """Print help message of vf command."""
         vf.SppVf.help()
 
     def complete_vf(self, text, line, begidx, endidx):
-- 
2.17.1



------------------------------

Message: 4
Date: Mon, 24 Jun 2019 16:11:18 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 04/10] controller: move nfv help msg to SppNfv
Message-ID: <20190624071124.23451-5-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This patch is to move comment of `do_nfv` to `SppNfv.help` to reduce
the number of lines.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/nfv.py | 19 +++++++++++++++++++
 src/controller/shell.py        | 19 +++++--------------
 2 files changed, 24 insertions(+), 14 deletions(-)

diff --git a/src/controller/commands/nfv.py b/src/controller/commands/nfv.py
index 92d2a3f..0989eba 100644
--- a/src/controller/commands/nfv.py
+++ b/src/controller/commands/nfv.py
@@ -442,3 +442,22 @@ class SppNfv(object):
                 pass
             else:
                 print('Error: unknown response.')
+
+    @classmethod
+    def help(cls):
+        msg = """Send a command to spp_nfv specified with ID.
+
+        Spp_nfv is specified with secondary ID and takes sub commands.
+
+          spp > nfv 1; status
+          spp > nfv 1; add ring:0
+          spp > nfv 1; patch phy:0 ring:0
+
+        You can refer all of sub commands by pressing TAB after
+        'nfv 1;'.
+
+          spp > nfv 1;  # press TAB
+          add     del     exit    forward patch   status  stop
+        """
+
+        print(msg)
diff --git a/src/controller/shell.py b/src/controller/shell.py
index bfe963b..b11dac0 100644
--- a/src/controller/shell.py
+++ b/src/controller/shell.py
@@ -302,20 +302,7 @@ class Shell(cmd.Cmd, object):
                 self.cli_config)
 
     def do_nfv(self, cmd):
-        """Send a command to spp_nfv specified with ID.
-
-        Spp_nfv is specified with secondary ID and takes sub commands.
-
-        spp > nfv 1; status
-        spp > nfv 1; add ring:0
-        spp > nfv 1; patch phy:0 ring:0
-
-        You can refer all of sub commands by pressing TAB after
-        'nfv 1;'.
-
-        spp > nfv 1;  # press TAB
-        add     del     exit    forward patch   status  stop
-        """
+        """Send a command to spp_nfv specified with ID."""
 
         # remove unwanted spaces to avoid invalid command error
         tmparg = self.clean_cmd(cmd)
@@ -328,6 +315,10 @@ class Shell(cmd.Cmd, object):
         else:
             print('Invalid command: %s' % tmparg)
 
+    def help_nfv(self):
+        """Print help message of nfv command."""
+        nfv.SppNfv.help()
+
     def complete_nfv(self, text, line, begidx, endidx):
         """Completion for nfv command."""
 
-- 
2.17.1



------------------------------

Message: 5
Date: Mon, 24 Jun 2019 16:11:19 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 05/10] controller: move mirror help msg to
	SppMirror
Message-ID: <20190624071124.23451-6-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This patch is to move comment of `do_mirror` to `SppMirror.help` to
reduce the number of lines.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/mirror.py | 36 +++++++++++++++++++++++++++++++
 src/controller/shell.py           | 36 +++++--------------------------
 2 files changed, 41 insertions(+), 31 deletions(-)

diff --git a/src/controller/commands/mirror.py b/src/controller/commands/mirror.py
index d38812d..d7ea4cd 100644
--- a/src/controller/commands/mirror.py
+++ b/src/controller/commands/mirror.py
@@ -356,3 +356,39 @@ class SppMirror(object):
                         if kw.startswith(sub_tokens[4]):
                             res.append(kw)
             return res
+
+    @classmethod
+    def help(cls):
+        msg = """Send a command to spp_mirror.
+
+        spp_mirror is a secondary process for duplicating incoming
+        packets to be used as similar to TaaS in OpenStack. This
+        command has four sub commands.
+          * status
+          * component
+          * port
+
+        Each of sub commands other than 'status' takes several parameters
+        for detailed operations. Notice that 'start' for launching a worker
+        is replaced with 'stop' for terminating. 'add' is also replaced with
+        'del' for deleting.
+
+        Examples:
+
+        # (1) show status of worker threads and resources
+        spp > mirror 1; status
+
+        # (2) launch or terminate a worker thread with arbitrary name
+        #   NAME: arbitrary name used as identifier
+        #   CORE_ID: one of unused cores referred from status
+        spp > mirror 1; component start NAME CORE_ID mirror
+        spp > mirror 1; component stop NAME CORE_ID mirror
+
+        # (3) add or delete a port to worker of NAME
+        #   RES_UID: resource UID such as 'ring:0' or 'vhost:1'
+        #   DIR: 'rx' or 'tx'
+        spp > mirror 1; port add RES_UID DIR NAME
+        spp > mirror 1; port del RES_UID DIR NAME
+        """
+
+        print(msg)
diff --git a/src/controller/shell.py b/src/controller/shell.py
index b11dac0..2682376 100644
--- a/src/controller/shell.py
+++ b/src/controller/shell.py
@@ -418,37 +418,7 @@ class Shell(cmd.Cmd, object):
                         self.get_sec_ids('vf'), text, line, begidx, endidx)
 
     def do_mirror(self, cmd):
-        """Send a command to spp_mirror.
-
-        spp_mirror is a secondary process for duplicating incoming
-        packets to be used as similar to TaaS in OpenStack. This
-        command has four sub commands.
-          * status
-          * component
-          * port
-
-        Each of sub commands other than 'status' takes several parameters
-        for detailed operations. Notice that 'start' for launching a worker
-        is replaced with 'stop' for terminating. 'add' is also replaced with
-        'del' for deleting.
-
-        Examples:
-
-        # (1) show status of worker threads and resources
-        spp > mirror 1; status
-
-        # (2) launch or terminate a worker thread with arbitrary name
-        #   NAME: arbitrary name used as identifier
-        #   CORE_ID: one of unused cores referred from status
-        spp > mirror 1; component start NAME CORE_ID mirror
-        spp > mirror 1; component stop NAME CORE_ID mirror
-
-        # (3) add or delete a port to worker of NAME
-        #   RES_UID: resource UID such as 'ring:0' or 'vhost:1'
-        #   DIR: 'rx' or 'tx'
-        spp > mirror 1; port add RES_UID DIR NAME
-        spp > mirror 1; port del RES_UID DIR NAME
-        """
+        """Send a command to spp_mirror."""
 
         # remove unwanted spaces to avoid invalid command error
         tmparg = self.clean_cmd(cmd)
@@ -461,6 +431,10 @@ class Shell(cmd.Cmd, object):
         else:
             print('Invalid command: %s' % tmparg)
 
+    def help_mirror(self):
+        """Print help message of mirror command."""
+        mirror.SppMirror.help()
+
     def complete_mirror(self, text, line, begidx, endidx):
         """Completion for mirror command."""
 
-- 
2.17.1



End of spp Digest, Vol 31, Issue 15
***********************************


From yasufum.o@gmail.com Mon Jun 24 16:11:20 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DLXDBPFR70@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 16:11:49 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTL00B3KDBP2K00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:49 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00ZMVDBPPPE0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:49 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id 44DFC7E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:49 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 4302A8E6055	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:49 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 37FBF8E6050	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:49 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id F143E8E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:47 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:47 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BlMM017158;	Mon,
 24 Jun 2019 16:11:47 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O7Blxc017157;	Mon, 24 Jun 2019 16:11:47 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O7Bl8f017154	for unknown; Mon,
 24 Jun 2019 16:11:47 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BlVe021540 for
 unknown; Mon, 24 Jun 2019 16:11:47 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BlVZ021537; Mon,
 24 Jun 2019 16:11:47 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BlmG017073;	Mon,
 24 Jun 2019 16:11:47 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O7BkJU017069	for unknown; Mon, 24 Jun 2019 16:11:46 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BkAk031355 for
 unknown; Mon, 24 Jun 2019 16:11:46 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BkZR031345 for
 unknown; Mon, 24 Jun 2019 16:11:46 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O7Beri023417	for unknown; Mon,
 24 Jun 2019 16:11:45 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id AED521BF28;	Mon, 24 Jun 2019 09:11:39 +0200 (CEST)
Received: from mail-pg1-f177.google.com
 (mail-pg1-f177.google.com [209.85.215.177]) by dpdk.org (Postfix)
 with ESMTP id 2ABE61BCAC for <spp@dpdk.org>; Mon,
 24 Jun 2019 09:11:38 +0200 (CEST)
Received: by mail-pg1-f177.google.com with SMTP id s27so6615094pgl.2 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 00:11:38 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id y17sm6357948pfe.148.2019.06.24.00.11.36
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 00:11:37 -0700 (PDT)
Date: Mon, 24 Jun 2019 16:11:20 +0900
From: yasufum.o@gmail.com
Subject: [spp 04405] [spp] [PATCH 06/10] controller: move pcap help msg to
 SppPcap
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624071124.23451-7-yasufum.o@gmail.com>
In-reply-to: <20190624071124.23451-1-yasufum.o@gmail.com>
References: <20190624071124.23451-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04405
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=UxvdihFYVZhC9Zde+2UdBWSrXoaiRsyVlG42DUooDHY=;
 b=tNNF7wyuobfzD4euUQlDapXfEVGJ4wdBYDS6vCkJcdpTDfYIw1cLEewwwWnXv+atIa
 Autr3FdaDs7qhqX8Fc3xu3BsUHHvm4h9jjbK93ptWRqDCsPawbLoa8DfNJVarzXK+6ko
 nXfNVxOmtC9xmELykHz3p+zm46i3BAPvpaxVlkCq7ryKC/vfebmFhFG5uSIGIsHxpUZz
 QEG/9JyReo8hlIwC9+JW+MdverMHmS4m503npWStrnyCMtsGfyR8YDBR3Ekao1ePhTFD
 lKt/2OT4DmsDOecAuI4UF9iBhhCBGTss+P703BEZn1GT6GFVO6xUQEKF7Fstj4LFGEvE kDEA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=UxvdihFYVZhC9Zde+2UdBWSrXoaiRsyVlG42DUooDHY=;
 b=sGFYyxoINzxg/T0K4QPkyGVR62z7Jg4y0yIlisn1jWHn9vwukikO8cN+Cqsc8trfQp
 56GB+ZxS5H9FtKRL+DJXb8sJr/Zuh/AjO2ttm7yOQwbthUOsCyDmTHBokSiaGnYxf+y/
 vfciZHgmj5D4eg0+N8+HmHjAz7rS+9sEJlm8MW5WTW0Cssh9KWJEnZHBX+dAoKrjcAYs
 StDWHV5qXV1uyhMbskYKEjNekLn/zuFeVuS6Rlrl67IOk+U4yE3fOWLEuLhRY8KR2ITM
 r3bYFOpsNKgiTylian0iAGEidA3a2iT4U4nhBClxs9cxtQofZnG/46ButCfuJSzc0z3t jc8A==
X-Gm-Message-State: APjAAAVB/l5lkW6ZWUKYiXk0Rvj0a51dMXYalMB/iuLZ8WRdeBsx8j8V
 8HgvoWiteTOAsbY9ADAj2C2HS1R5
X-Google-Smtp-Source:
 APXvYqzRBWppGTzurAAmDk88VxhKuVz37fGxnZToPHcY+tqTThefYOK+z1OmsVakM+gWbw6Je746UQ==
X-Received: by 2002:a17:90a:8985:: with SMTP id
 v5mr22712854pjn.136.1561360297316; Mon, 24 Jun 2019 00:11:37 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 88
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This patch is to move comment of `do_pcap` to `SppPcap.help` to
reduce the number of lines.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/pcap.py | 24 ++++++++++++++++++++++++
 src/controller/shell.py         | 24 +++++-------------------
 2 files changed, 29 insertions(+), 19 deletions(-)

diff --git a/src/controller/commands/pcap.py b/src/controller/commands/pcap.py
index 88dd5c8..f2e1ffa 100644
--- a/src/controller/commands/pcap.py
+++ b/src/controller/commands/pcap.py
@@ -239,3 +239,27 @@ class SppPcap(object):
                             status['core_ids'].append(wk['core'])
 
         return status
+
+    @classmethod
+    def help(cls):
+        msg = """Send a command to spp_pcap.
+
+        Spp_pcap is a secondary process for capturing incoming packets.
+
+        'start' for launching a worker is replaced with 'stop' for
+        terminating. 'exit' for spp_pcap terminating.
+
+        Examples:
+
+        # (1) show status of worker threads and resources
+        spp > pcap 1; status
+
+        # (2) launch or terminate capture thread
+        spp > pcap 1; start
+        spp > pcap 1; stop
+
+        # (3) terminate spp_pcap secondaryd
+        spp > pcap 1; exit
+        """
+
+        print(msg)
diff --git a/src/controller/shell.py b/src/controller/shell.py
index 2682376..52fe645 100644
--- a/src/controller/shell.py
+++ b/src/controller/shell.py
@@ -475,25 +475,7 @@ class Shell(cmd.Cmd, object):
                         self.get_sec_ids('mirror'), text, line, begidx, endidx)
 
     def do_pcap(self, cmd):
-        """Send a command to spp_pcap.
-
-        Spp_pcap is a secondary process for capturing incoming packets.
-
-        'start' for launching a worker is replaced with 'stop' for
-        terminating. 'exit' for spp_pcap terminating.
-
-        Examples:
-
-        # (1) show status of worker threads and resources
-        spp > pcap 1; status
-
-        # (2) launch or terminate capture thread
-        spp > pcap 1; start
-        spp > pcap 1; stop
-
-        # (3) terminate spp_pcap secondaryd
-        spp > pcap 1; exit
-        """
+        """Send a command to spp_pcap."""
 
         # remove unwanted spaces to avoid invalid command error
         tmparg = self.clean_cmd(cmd)
@@ -506,6 +488,10 @@ class Shell(cmd.Cmd, object):
         else:
             print('Invalid command: {}'.format(tmparg))
 
+    def help_pcap(self):
+        """Print help message of pcap command."""
+        pcap.SppPcap.help()
+
     def complete_pcap(self, text, line, begidx, endidx):
         """Completion for pcap command."""
 
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 16:11:21 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd101.ddreams.local
 (zssg-mailmd101.ddreams.local [10.160.123.96]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DMFDBQFR70@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 16:11:50 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd101.ddreams.local by
 zssg-mailmd101.ddreams.local (dDREAMS) id <0PTL0160GDBQTL00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:50 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd101.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00PVCDBQB090@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:50 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id 5D78A7E6038	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:50 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 5C89E8E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:50 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 5B03A8E6054	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:50 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 1C2B88E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:49 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:49 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Bm5D017166;	Mon,
 24 Jun 2019 16:11:48 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O7Bmc5017165;	Mon, 24 Jun 2019 16:11:48 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O7BmWE017162	for unknown; Mon,
 24 Jun 2019 16:11:48 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Bm5Y021553 for
 unknown; Mon, 24 Jun 2019 16:11:48 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BmIr021550; Mon,
 24 Jun 2019 16:11:48 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BmLc017080;	Mon,
 24 Jun 2019 16:11:48 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O7Bmqp017076	for unknown; Mon, 24 Jun 2019 16:11:48 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BlM6031388 for
 unknown; Mon, 24 Jun 2019 16:11:47 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BlMg031382 for
 unknown; Mon, 24 Jun 2019 16:11:47 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O7BfCk023431	for unknown; Mon,
 24 Jun 2019 16:11:46 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id BF0C51BF14;	Mon, 24 Jun 2019 09:11:40 +0200 (CEST)
Received: from mail-pf1-f180.google.com
 (mail-pf1-f180.google.com [209.85.210.180]) by dpdk.org (Postfix)
 with ESMTP id A9D041BED6 for <spp@dpdk.org>; Mon,
 24 Jun 2019 09:11:39 +0200 (CEST)
Received: by mail-pf1-f180.google.com with SMTP id j2so6966366pfe.6 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 00:11:39 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id y17sm6357948pfe.148.2019.06.24.00.11.37
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 00:11:38 -0700 (PDT)
Date: Mon, 24 Jun 2019 16:11:21 +0900
From: yasufum.o@gmail.com
Subject: [spp 04406] [spp] [PATCH 07/10] controller: move bye help msg to SppBye
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624071124.23451-8-yasufum.o@gmail.com>
In-reply-to: <20190624071124.23451-1-yasufum.o@gmail.com>
References: <20190624071124.23451-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04406
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=j+y+cR4Yp915byt6XPJ0lArLADDC9QY9fTfvc+TYuKU=;
 b=UUUpUZww1J+t7e2R2FEhNBDvtWnrUyov2rdVN48ds8iFcT1B/hfXffyUdNBpKlpwcO
 uyMVE7QS9hJCOMPT/dT8ZekrFxi+I4CnVWPthQ7Idn++Nqi+JMYdkGjTNzY2r11hcbMc
 dbzGl+FUOycTB1+14DO5uvqQkMrNXDby3PXm2OS/teaIP7hM8dXEm3otR3DVERkZ3Omh
 BQxUyl57GiBO9JhAY+qXEaRsfIYjeDykGJf+bnK3dqHQ1WfaNUCR7pD2cCzd3tv85oQU
 fNEW/yrDD9CjTHChBcGrhRIh/OQIWvi9ROwr7WSnIIM7fJ0EERhG5avFmgmWJS44Jf1z RYXQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=j+y+cR4Yp915byt6XPJ0lArLADDC9QY9fTfvc+TYuKU=;
 b=mmRnuSj2wfk5jHfES3xELYUprCDHRaI72N/t8HhCf9J6CV8lQN5ejkK5F4oyG32DP0
 2wMXseyH+R04vSE1BrBzd+opOqkPEU6+DyU0/UEiTR962UNDMrCUWBGSxBEVKYW7JFJz
 8YJTJ/K8ih/grciEcOdnsoRJD3qg5f4nnDLILvP8LVvFOSKrJX1d3QmjoSx09QqorZhl
 UwBuuU6eIkVvaOb1c0c8svqcsa1bJ3KyjcO3JX4Ao2Tik2tmCqFHhy+2+D6u3FuLD5Y9
 dfL+Zn1TWSMJRt+K5R34DBFQbB2+G7s4DTAK2c3QGOHfhj/vQs4rpT6kZQUFuReyMML4 xfpA==
X-Gm-Message-State: APjAAAWIFydMev+OOjMV0J2ragnRMKaOCCKmSTD3jkxAmMY03RX96Moz
 39f9GUgPqKcG5hcdfYJKhPVyTOGI
X-Google-Smtp-Source:
 APXvYqzIOYxfe39We9ieTDs3UgXLi21BtZR8oe1lTbyidR7DxvQ6jN1NtAc2CEZqSnZ6odDqfGcMkg==
X-Received: by 2002:a63:4518:: with SMTP id s24mr27605923pga.123.1561360298677;
 Mon, 24 Jun 2019 00:11:38 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 78
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This patch is to move comment of `do_bye` to `SppBye.help` to reduce
the number of lines.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/bye.py | 19 +++++++++++++++++++
 src/controller/shell.py        | 19 +++++--------------
 2 files changed, 24 insertions(+), 14 deletions(-)

diff --git a/src/controller/commands/bye.py b/src/controller/commands/bye.py
index cd14961..df06500 100644
--- a/src/controller/commands/bye.py
+++ b/src/controller/commands/bye.py
@@ -47,3 +47,22 @@ class SppBye(object):
         for sec_type, spp_procs in spp_secondaries.items():
             for sec in spp_procs.values():
                 sec.run('exit')
+
+    @classmethod
+    def help(cls):
+        msg = """Terminate SPP processes and controller.
+
+        There are three usages for terminating processes.
+        It terminates logging if you activated recording.
+
+        (1) Terminate secondary processes
+            spp > bye sec
+
+        (2) Terminate primary and secondary processes
+            spp > bye all
+
+        (3) Terminate SPP controller (not for primary and secondary)
+            spp > bye
+        """
+
+        print(msg)
diff --git a/src/controller/shell.py b/src/controller/shell.py
index 52fe645..8cb74a0 100644
--- a/src/controller/shell.py
+++ b/src/controller/shell.py
@@ -696,20 +696,7 @@ class Shell(cmd.Cmd, object):
         return common.compl_common(text, line)
 
     def do_bye(self, args):
-        """Terminate SPP processes and controller.
-
-        There are three usages for terminating processes.
-        It terminates logging if you activated recording.
-
-        (1) Terminate secondary processes
-        spp > bye sec
-
-        (2) Terminate primary and secondary processes
-        spp > bye all
-
-        (3) Terminate SPP controller (not for primary and secondary)
-        spp > bye
-        """
+        """Terminate SPP processes and controller."""
 
         cmds = args.split(' ')
         if cmds[0] == '':  # terminate SPP CLI itself
@@ -719,6 +706,10 @@ class Shell(cmd.Cmd, object):
             spp_bye = bye.SppBye()
             spp_bye.run(args, self.primary, self.secondaries)
 
+    def help_bye(self):
+        """Print help message of bye command."""
+        bye.SppBye.help()
+
     def complete_bye(self, text, line, begidx, endidx):
         """Completion for bye commands"""
 
-- 
2.17.1



From spp-request@dpdk.org Mon Jun 24 16:11:45 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DMHDBQFR70@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 16:11:50 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTL00U4ADBQ9M00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:50 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00DT1DBQAT90@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:50 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id 9465C7E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:50 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 933B98E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:50 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 882AD8E6050	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:50 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 4FE888E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:49 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:49 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BnQ8017173;	Mon,
 24 Jun 2019 16:11:49 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O7Bn9Y017172;	Mon, 24 Jun 2019 16:11:49 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O7BnIP017167	for unknown; Mon,
 24 Jun 2019 16:11:49 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Bm07031510 for
 unknown; Mon, 24 Jun 2019 16:11:48 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BmMw031507 for
 unknown; Mon, 24 Jun 2019 16:11:48 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O7BdKA023413	for unknown; Mon,
 24 Jun 2019 16:11:47 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 0A1D91BF38	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 24 Jun 2019 09:11:47 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 16
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 24 Jun 2019 09:11:45 +0200
Message-id: <mailman.23400.1561360305.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH 06/10] controller: move pcap help msg to SppPcap
      (yasufum.o@gmail.com)
   2. [PATCH 07/10] controller: move bye help msg to SppBye
      (yasufum.o@gmail.com)
   3. [PATCH 08/10] controller: move topo help msg to SppBye
      (yasufum.o@gmail.com)
   4. [PATCH 09/10] controller: move status cmd help msg to
      help_msg (yasufum.o@gmail.com)
   5. [PATCH 10/10] controller: move rest of help msg to help_msg
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon, 24 Jun 2019 16:11:20 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 06/10] controller: move pcap help msg to SppPcap
Message-ID: <20190624071124.23451-7-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This patch is to move comment of `do_pcap` to `SppPcap.help` to
reduce the number of lines.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/pcap.py | 24 ++++++++++++++++++++++++
 src/controller/shell.py         | 24 +++++-------------------
 2 files changed, 29 insertions(+), 19 deletions(-)

diff --git a/src/controller/commands/pcap.py b/src/controller/commands/pcap.py
index 88dd5c8..f2e1ffa 100644
--- a/src/controller/commands/pcap.py
+++ b/src/controller/commands/pcap.py
@@ -239,3 +239,27 @@ class SppPcap(object):
                             status['core_ids'].append(wk['core'])
 
         return status
+
+    @classmethod
+    def help(cls):
+        msg = """Send a command to spp_pcap.
+
+        Spp_pcap is a secondary process for capturing incoming packets.
+
+        'start' for launching a worker is replaced with 'stop' for
+        terminating. 'exit' for spp_pcap terminating.
+
+        Examples:
+
+        # (1) show status of worker threads and resources
+        spp > pcap 1; status
+
+        # (2) launch or terminate capture thread
+        spp > pcap 1; start
+        spp > pcap 1; stop
+
+        # (3) terminate spp_pcap secondaryd
+        spp > pcap 1; exit
+        """
+
+        print(msg)
diff --git a/src/controller/shell.py b/src/controller/shell.py
index 2682376..52fe645 100644
--- a/src/controller/shell.py
+++ b/src/controller/shell.py
@@ -475,25 +475,7 @@ class Shell(cmd.Cmd, object):
                         self.get_sec_ids('mirror'), text, line, begidx, endidx)
 
     def do_pcap(self, cmd):
-        """Send a command to spp_pcap.
-
-        Spp_pcap is a secondary process for capturing incoming packets.
-
-        'start' for launching a worker is replaced with 'stop' for
-        terminating. 'exit' for spp_pcap terminating.
-
-        Examples:
-
-        # (1) show status of worker threads and resources
-        spp > pcap 1; status
-
-        # (2) launch or terminate capture thread
-        spp > pcap 1; start
-        spp > pcap 1; stop
-
-        # (3) terminate spp_pcap secondaryd
-        spp > pcap 1; exit
-        """
+        """Send a command to spp_pcap."""
 
         # remove unwanted spaces to avoid invalid command error
         tmparg = self.clean_cmd(cmd)
@@ -506,6 +488,10 @@ class Shell(cmd.Cmd, object):
         else:
             print('Invalid command: {}'.format(tmparg))
 
+    def help_pcap(self):
+        """Print help message of pcap command."""
+        pcap.SppPcap.help()
+
     def complete_pcap(self, text, line, begidx, endidx):
         """Completion for pcap command."""
 
-- 
2.17.1



------------------------------

Message: 2
Date: Mon, 24 Jun 2019 16:11:21 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 07/10] controller: move bye help msg to SppBye
Message-ID: <20190624071124.23451-8-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This patch is to move comment of `do_bye` to `SppBye.help` to reduce
the number of lines.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/bye.py | 19 +++++++++++++++++++
 src/controller/shell.py        | 19 +++++--------------
 2 files changed, 24 insertions(+), 14 deletions(-)

diff --git a/src/controller/commands/bye.py b/src/controller/commands/bye.py
index cd14961..df06500 100644
--- a/src/controller/commands/bye.py
+++ b/src/controller/commands/bye.py
@@ -47,3 +47,22 @@ class SppBye(object):
         for sec_type, spp_procs in spp_secondaries.items():
             for sec in spp_procs.values():
                 sec.run('exit')
+
+    @classmethod
+    def help(cls):
+        msg = """Terminate SPP processes and controller.
+
+        There are three usages for terminating processes.
+        It terminates logging if you activated recording.
+
+        (1) Terminate secondary processes
+            spp > bye sec
+
+        (2) Terminate primary and secondary processes
+            spp > bye all
+
+        (3) Terminate SPP controller (not for primary and secondary)
+            spp > bye
+        """
+
+        print(msg)
diff --git a/src/controller/shell.py b/src/controller/shell.py
index 52fe645..8cb74a0 100644
--- a/src/controller/shell.py
+++ b/src/controller/shell.py
@@ -696,20 +696,7 @@ class Shell(cmd.Cmd, object):
         return common.compl_common(text, line)
 
     def do_bye(self, args):
-        """Terminate SPP processes and controller.
-
-        There are three usages for terminating processes.
-        It terminates logging if you activated recording.
-
-        (1) Terminate secondary processes
-        spp > bye sec
-
-        (2) Terminate primary and secondary processes
-        spp > bye all
-
-        (3) Terminate SPP controller (not for primary and secondary)
-        spp > bye
-        """
+        """Terminate SPP processes and controller."""
 
         cmds = args.split(' ')
         if cmds[0] == '':  # terminate SPP CLI itself
@@ -719,6 +706,10 @@ class Shell(cmd.Cmd, object):
             spp_bye = bye.SppBye()
             spp_bye.run(args, self.primary, self.secondaries)
 
+    def help_bye(self):
+        """Print help message of bye command."""
+        bye.SppBye.help()
+
     def complete_bye(self, text, line, begidx, endidx):
         """Completion for bye commands"""
 
-- 
2.17.1



------------------------------

Message: 3
Date: Mon, 24 Jun 2019 16:11:22 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 08/10] controller: move topo help msg to SppBye
Message-ID: <20190624071124.23451-9-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This patch is to move comment of `do_topo`, `do_topo_subgraph` and
`do_topo_resize` to `SppTopo.help` to reduce the number of lines.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/topo.py | 52 ++++++++++++++++++++++++++++
 src/controller/shell.py         | 61 +++++++++------------------------
 2 files changed, 68 insertions(+), 45 deletions(-)

diff --git a/src/controller/commands/topo.py b/src/controller/commands/topo.py
index 3b24c1a..21ef1ec 100644
--- a/src/controller/commands/topo.py
+++ b/src/controller/commands/topo.py
@@ -459,3 +459,55 @@ class SppTopo(object):
             return True
         else:
             return False
+
+    @classmethod
+    def help(cls):
+        msg = """Output network topology.
+
+        Support four types of output.
+        * terminal (but very few terminals supporting to display images)
+        * browser (websocket server is required)
+        * image file (jpg, png, bmp)
+        * text (dot, js or json, yml or yaml)
+
+        spp > topo term  # terminal
+        spp > topo http  # browser
+        spp > topo network_conf.jpg  # image
+        spp > topo network_conf.dot  # text
+        spp > topo network_conf.js# text
+        """
+
+        print(msg)
+
+    @classmethod
+    def help_resize(cls):
+        msg = """Change the size of the image of topo command.
+
+        You can specify the size by percentage or ratio.
+
+        spp > topo resize 60%  # percentage
+        spp > topo resize 0.6  # ratio
+        """
+
+        print(msg)
+
+    @classmethod
+    def help_subgraph(cls):
+        msg = """Edit subgarph for topo command.
+
+        Subgraph is a group of object defined in dot language. For topo
+        command, it is used for grouping resources of each of VM or
+        container to topology be more understandable.
+
+        (1) Add subgraph labeled 'vm1'.
+            spp > topo_subgraph add vm1 vhost:1;vhost:2
+
+        (2) Delete subgraph 'vm1'.
+            spp > topo_subgraph del vm1
+
+        (3) Show subgraphs by running topo_subgraph without args.
+            spp > topo_subgraph
+            label: vm1	subgraph: "vhost:1;vhost:2"
+        """
+
+        print(msg)
diff --git a/src/controller/shell.py b/src/controller/shell.py
index 8cb74a0..54376c9 100644
--- a/src/controller/shell.py
+++ b/src/controller/shell.py
@@ -824,11 +824,7 @@ class Shell(cmd.Cmd, object):
         {'cmdqueue': [],
          'completekey': 'tab',
          'completion_matches': ['inspect'],
-         'lastcmd': 'inspect',
-         'old_completer': None,
-         'stdin': <open file '<stdin>', mode 'r' at 0x7fe96bddf0c0>,
-         'stdout': <open file '<stdout>', mode 'w' at 0x7fe96bddf150>}
-
+         ...
         """
 
         from pprint import pprint
@@ -841,22 +837,7 @@ class Shell(cmd.Cmd, object):
         return ['add', 'del']
 
     def do_topo_subgraph(self, args):
-        """Edit subgarph for topo command.
-
-        Subgraph is a group of object defined in dot language. For topo
-        command, it is used for grouping resources of each of VM or
-        container to topology be more understandable.
-
-        (1) Add subgraph labeled 'vm1'.
-        spp > topo_subgraph add vm1 vhost:1;vhost:2
-
-        (2) Delete subgraph 'vm1'.
-        spp > topo_subgraph del vm1
-
-        (3) Show subgraphs by running topo_subgraph without args.
-        spp > topo_subgraph
-        label: vm1	subgraph: "vhost:1;vhost:2"
-        """
+        """Edit subgarph for topo command."""
 
         # logger.info("Topo initialized with sec IDs %s" % sec_ids)
 
@@ -897,6 +878,10 @@ class Shell(cmd.Cmd, object):
             else:
                 print("Ivalid subcommand '%s'!" % tokens[0])
 
+    def help_topo_subgraph(self):
+        """Print help message of topo_subgraph command."""
+        topo.SppTopo.help_subgraph()
+
     def complete_topo_subgraph(self, text, line, begidx, endidx):
         terms = self.terms_topo_subgraph()
 
@@ -921,35 +906,21 @@ class Shell(cmd.Cmd, object):
             pass
 
     def do_topo_resize(self, args):
-        """Change the size of the image of topo command.
-
-        You can specify the size by percentage or ratio.
-
-        spp > topo resize 60%  # percentage
-        spp > topo resize 0.6  # ratio
-
-        """
-
+        """Change the size of the image of topo_resize command."""
         self.spp_topo.resize_graph(args)
 
-    def do_topo(self, args):
-        """Output network topology.
-
-        Support four types of output.
-        * terminal (but very few terminals supporting to display images)
-        * browser (websocket server is required)
-        * image file (jpg, png, bmp)
-        * text (dot, js or json, yml or yaml)
-
-        spp > topo term  # terminal
-        spp > topo http  # browser
-        spp > topo network_conf.jpg  # image
-        spp > topo network_conf.dot  # text
-        spp > topo network_conf.js# text
-        """
+    def help_topo_resize(self):
+        """Print help message of topo command."""
+        topo.SppTopo.help_resize()
 
+    def do_topo(self, args):
+        """Output network topology."""
         self.spp_topo.run(args, self.get_sec_ids('nfv'))
 
+    def help_topo(self):
+        """Print help message of topo command."""
+        topo.SppTopo.help()
+
     def complete_topo(self, text, line, begidx, endidx):
 
         return self.spp_topo.complete(text, line, begidx, endidx)
-- 
2.17.1



------------------------------

Message: 4
Date: Mon, 24 Jun 2019 16:11:23 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 09/10] controller: move status cmd help msg to
	help_msg
Message-ID: <20190624071124.23451-10-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move help message of status command to `help_msg`
module which is for defining a set of command name and message.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/help_msg.py | 10 ++++++++++
 src/controller/shell.py             | 15 ++++++++-------
 2 files changed, 18 insertions(+), 7 deletions(-)
 create mode 100644 src/controller/commands/help_msg.py

diff --git a/src/controller/commands/help_msg.py b/src/controller/commands/help_msg.py
new file mode 100644
index 0000000..9e15123
--- /dev/null
+++ b/src/controller/commands/help_msg.py
@@ -0,0 +1,10 @@
+# SPDX-License-Identifier: BSD-3-Clause
+# Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
+
+commands = {
+        'status':
+        """Display status info of SPP processes.
+
+        spp > status
+        """
+        }
diff --git a/src/controller/shell.py b/src/controller/shell.py
index 54376c9..065fb07 100644
--- a/src/controller/shell.py
+++ b/src/controller/shell.py
@@ -10,6 +10,7 @@ from .commands import topo
 from .commands import vf
 from .commands import mirror
 from .commands import pcap
+from .commands import help_msg
 import os
 import re
 import readline
@@ -29,7 +30,7 @@ class Shell(cmd.Cmd, object):
         config_file = "{}/config/default.yml".format(
                 os.path.dirname(__file__))
         cli_config = yaml.load(open(config_file),
-                Loader=yaml.FullLoader)
+                               Loader=yaml.FullLoader)
     except IOError as e:
         print('Error: no config file found!')
         print(e)
@@ -205,7 +206,7 @@ class Shell(cmd.Cmd, object):
                 pt2 = id2.split(delim)[0]
                 if (pt1 in spp_common.PORT_TYPES) \
                         and (pt2 in spp_common.PORT_TYPES):
-                            return True
+                    return True
         return False
 
     def clean_cmd(self, cmdstr):
@@ -270,13 +271,13 @@ class Shell(cmd.Cmd, object):
         return res
 
     def do_status(self, _):
-        """Display status info of SPP processes
-
-        spp > status
-        """
-
+        """Display status info of SPP processes."""
         self.print_status()
 
+    def help_status(self):
+        """Print help message of status command."""
+        print(help_msg.commads['status'])
+
     def do_pri(self, command):
         """Send a command to primary process."""
 
-- 
2.17.1



------------------------------

Message: 5
Date: Mon, 24 Jun 2019 16:11:24 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 10/10] controller: move rest of help msg to
	help_msg
Message-ID: <20190624071124.23451-11-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move help message of rest of commands to `help_msg`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/help_msg.py | 125 ++++++++++++++++++++-
 src/controller/shell.py             | 165 ++++++++++++----------------
 2 files changed, 194 insertions(+), 96 deletions(-)

diff --git a/src/controller/commands/help_msg.py b/src/controller/commands/help_msg.py
index 9e15123..f303547 100644
--- a/src/controller/commands/help_msg.py
+++ b/src/controller/commands/help_msg.py
@@ -1,10 +1,131 @@
 # SPDX-License-Identifier: BSD-3-Clause
 # Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
 
-commands = {
+cmds = {
         'status':
         """Display status info of SPP processes.
 
         spp > status
-        """
+        """,
+
+        'record':
+        """Save commands as a recipe file.
+
+        Save all of commands to a specified file as a recipe. This file
+        is reloaded with 'playback' command later. You can also edit
+        the recipe by hand to customize.
+
+        spp > record path/to/recipe_file
+        """,
+
+        'playback':
+        """Setup a network configuration from recipe file.
+
+        Recipe is a file describing a series of SPP command to setup
+        a network configuration.
+
+        spp > playback path/to/recipe_file
+        """,
+
+        'config':
+        """Show or update config.
+
+        # show list of config
+        spp > config
+
+        # set prompt to "$ spp "
+        spp > config prompt "$ spp "
+        """,
+
+        'pwd':
+        """Show corrent directory.
+
+        It behaves as UNIX's pwd command.
+
+        spp > pwd
+        """,
+
+        'ls':
+        """Show a list of specified directory.
+
+        It behaves as UNIX's ls command.
+
+        spp > ls path/to/dir
+        """,
+
+        'cd':
+        """Change current directory.
+
+        spp > cd path/to/dir
+        """,
+
+        'mkdir':
+        """Create a new directory.
+
+        It behaves as 'mkdir -p' which means that you can create sub
+        directories at once.
+
+        spp > mkdir path/to/dir
+        """,
+
+        'cat':
+        """View contents of a file.
+
+        spp > cat file
+        """,
+
+        'redo':
+        """Execute command of index of history.
+
+        spp > redo 5  # exec 5th command in the history
+        """,
+
+        'history':
+        """Show command history.
+
+        spp > history
+          1  ls
+          2  cat file.txt
+          ...
+
+        Command history is recorded in a file named '.spp_history'.
+        It does not add some command which are no meaning for history.
+        'bye', 'exit', 'history', 'redo'
+        """,
+
+        'less':
+        """View contents of a file.
+
+        spp > less file
+        """,
+
+        'exit':
+        """Terminate SPP controller process.
+
+        It is an alias of bye command to terminate controller.
+
+        spp > exit
+        Thank you for using Soft Patch Panel
+        """,
+
+        'inspect':
+        """Print attributes of Shell for debugging.
+
+        This command is intended to be used by developers to show the
+        inside of the object of Shell class.
+
+        spp > inspect
+        {'cmdqueue': [],
+         'completekey': 'tab',
+         'completion_matches': ['inspect'],
+         ...
+        """,
+
+        'load_cmd':
+        """Load command plugin.
+
+        Path of plugin file is 'spp/src/controller/plugins'.
+
+        spp > load_cmd hello
+        """,
         }
diff --git a/src/controller/shell.py b/src/controller/shell.py
index 065fb07..3f4d95b 100644
--- a/src/controller/shell.py
+++ b/src/controller/shell.py
@@ -276,7 +276,7 @@ class Shell(cmd.Cmd, object):
 
     def help_status(self):
         """Print help message of status command."""
-        print(help_msg.commads['status'])
+        print(help_msg.cmds['status'])
 
     def do_pri(self, command):
         """Send a command to primary process."""
@@ -533,31 +533,22 @@ class Shell(cmd.Cmd, object):
                         self.get_sec_ids('pcap'), text, line, begidx, endidx)
 
     def do_record(self, fname):
-        """Save commands as a recipe file.
-
-        Save all of commands to a specified file as a recipe. This file
-        is reloaded with 'playback' command later. You can also edit
-        the recipe by hand to customize.
-
-        spp > record path/to/recipe_file
-        """
+        """Save commands as a recipe file."""
 
         if fname == '':
             print("Record file is required!")
         else:
             self.recorded_file = open(fname, 'w')
 
+    def help_record(self):
+        """Print help message of record command."""
+        print(help_msg.cmds['record'])
+
     def complete_record(self, text, line, begidx, endidx):
         return common.compl_common(text, line)
 
     def do_playback(self, fname):
-        """Setup a network configuration from recipe file.
-
-        Recipe is a file describing a series of SPP command to setup
-        a network configuration.
-
-        spp > playback path/to/recipe_file
-        """
+        """Setup a network configuration from recipe file."""
 
         if fname == '':
             print("Record file is required!")
@@ -575,18 +566,15 @@ class Shell(cmd.Cmd, object):
                 message = "Error: File does not exist."
                 print(message)
 
+    def help_playback(self):
+        """Print help message of playback command."""
+        print(help_msg.cmds['playback'])
+
     def complete_playback(self, text, line, begidx, endidx):
         return common.compl_common(text, line)
 
     def do_config(self, args):
-        """Show or update config.
-
-        # show list of config
-        spp > config
-
-        # set prompt to "$ spp "
-        spp > config prompt "$ spp "
-        """
+        """Show or update config."""
 
         tokens = args.strip().split(' ')
         if len(tokens) == 1:
@@ -620,6 +608,10 @@ class Shell(cmd.Cmd, object):
                 if key == 'prompt':
                     self.prompt = self.cli_config['prompt']['val']
 
+    def help_config(self):
+        """Print help message of config command."""
+        print(help_msg.cmds['config'])
+
     def complete_config(self, text, line, begidx, endidx):
         candidates = []
         tokens = line.strip().split(' ')
@@ -640,22 +632,15 @@ class Shell(cmd.Cmd, object):
         return completions
 
     def do_pwd(self, args):
-        """Show corrent directory.
-
-        It behaves as UNIX's pwd command.
-
-        spp > pwd
-        """
-
+        """Show corrent directory."""
         print(os.getcwd())
 
-    def do_ls(self, args):
-        """Show a list of specified directory.
+    def help_pwd(self):
+        """Print help message of pwd command."""
+        print(help_msg.cmds['pwd'])
 
-        It behaves as UNIX's ls command.
-
-        spp > ls path/to/dir
-        """
+    def do_ls(self, args):
+        """Show a list of specified directory."""
 
         if args == '' or os.path.isdir(args):
             c = 'ls -F %s' % args
@@ -663,14 +648,15 @@ class Shell(cmd.Cmd, object):
         else:
             print("No such a directory.")
 
+    def help_ls(self):
+        """Print help message of ls command."""
+        print(help_msg.cmds['ls'])
+
     def complete_ls(self, text, line, begidx, endidx):
         return common.compl_common(text, line)
 
     def do_cd(self, args):
-        """Change current directory.
-
-        spp > cd path/to/dir
-        """
+        """Change current directory."""
 
         if os.path.isdir(args):
             os.chdir(args)
@@ -678,21 +664,23 @@ class Shell(cmd.Cmd, object):
         else:
             print("No such a directory.")
 
+    def help_cd(self):
+        """Print help message of cd command."""
+        print(help_msg.cmds['cd'])
+
     def complete_cd(self, text, line, begidx, endidx):
         return common.compl_common(text, line, 'directory')
 
     def do_mkdir(self, args):
-        """Create a new directory.
-
-        It behaves as 'mkdir -p' which means that you can create sub
-        directories at once.
-
-        spp > mkdir path/to/dir
-        """
+        """Create a new directory."""
 
         c = 'mkdir -p %s' % args
         subprocess.call(c, shell=True)
 
+    def help_mkdir(self):
+        """Print help message of mkdir command."""
+        print(help_msg.cmds['mkdir'])
+
     def complete_mkdir(self, text, line, begidx, endidx):
         return common.compl_common(text, line)
 
@@ -718,21 +706,19 @@ class Shell(cmd.Cmd, object):
         return spp_bye.complete(text, line, begidx, endidx)
 
     def do_cat(self, arg):
-        """View contents of a file.
-
-        spp > cat file
-        """
+        """View contents of a file."""
         if os.path.isfile(arg):
             c = 'cat %s' % arg
             subprocess.call(c, shell=True)
         else:
             print("No such a directory.")
 
-    def do_redo(self, args):
-        """Execute command of index of history.
+    def help_cat(self):
+        """Print help message of cat command."""
+        print(help_msg.cmds['cat'])
 
-        spp > redo 5  # exec 5th command in the history
-        """
+    def do_redo(self, args):
+        """Execute command of index of history."""
 
         idx = int(args)
         cmdline = None
@@ -754,18 +740,12 @@ class Shell(cmd.Cmd, object):
         except IOError:
             print('Error: Cannot open history file "%s"' % self.hist_file)
 
-    def do_history(self, arg):
-        """Show command history.
-
-        spp > history
-          1  ls
-          2  cat file.txt
-          ...
+    def help_redo(self):
+        """Print help message of redo command."""
+        print(help_msg.cmds['redo'])
 
-        Command history is recorded in a file named '.spp_history'.
-        It does not add some command which are no meaning for history.
-        'bye', 'exit', 'history', 'redo'
-        """
+    def do_history(self, arg):
+        """Show command history."""
 
         try:
             f = open(self.hist_file)
@@ -785,53 +765,51 @@ class Shell(cmd.Cmd, object):
         except IOError:
             print('Error: Cannot open history file "%s"' % self.hist_file)
 
+    def help_history(self):
+        """Print help message of history command."""
+        print(help_msg.cmds['history'])
+
     def complete_cat(self, text, line, begidx, endidx):
         return common.compl_common(text, line)
 
     def do_less(self, arg):
-        """View contents of a file.
+        """View contents of a file."""
 
-        spp > less file
-        """
         if os.path.isfile(arg):
             c = 'less %s' % arg
             subprocess.call(c, shell=True)
         else:
             print("No such a directory.")
 
+    def help_less(self):
+        """Print help message of less command."""
+        print(help_msg.cmds['less'])
+
     def complete_less(self, text, line, begidx, endidx):
         return common.compl_common(text, line)
 
     def do_exit(self, args):
-        """Terminate SPP controller process.
-
-        It is an alias of bye command to terminate controller.
-
-        spp > exit
-        Thank you for using Soft Patch Panel
-        """
+        """Terminate SPP controller process."""
 
         self.close()
         print('Thank you for using Soft Patch Panel')
         return True
 
-    def do_inspect(self, args):
-        """Print attributes of Shell for debugging.
-
-        This command is intended to be used by developers to show the
-        inside of the object of Shell class.
+    def help_exit(self):
+        """Print help message of exit command."""
+        print(help_msg.cmds['exit'])
 
-        spp > inspect
-        {'cmdqueue': [],
-         'completekey': 'tab',
-         'completion_matches': ['inspect'],
-         ...
-        """
+    def do_inspect(self, args):
+        """Print attributes of Shell for debugging."""
 
         from pprint import pprint
         if args == '':
             pprint(vars(self))
 
+    def help_inspect(self):
+        """Print help message of inspect command."""
+        print(help_msg.cmds['inspect'])
+
     def terms_topo_subgraph(self):
         """Define terms of topo_subgraph command."""
 
@@ -927,12 +905,7 @@ class Shell(cmd.Cmd, object):
         return self.spp_topo.complete(text, line, begidx, endidx)
 
     def do_load_cmd(self, args):
-        """Load command plugin.
-
-        Path of plugin file is 'spp/src/controller/plugins'.
-
-        spp > load_cmd hello
-        """
+        """Load command plugin."""
 
         args = re.sub(',', ' ', args)
         args = re.sub(r'\s+', ' ', args)
@@ -947,6 +920,10 @@ class Shell(cmd.Cmd, object):
 
         print("Module '%s' loaded." % mod_name)
 
+    def help_load_cmd(self):
+        """Print help message of load_cmd command."""
+        print(help_msg.cmds['load_cmd'])
+
     def complete_load_cmd(self, text, line, begidx, endidx):
         """Complete command plugins
 
-- 
2.17.1



End of spp Digest, Vol 31, Issue 16
***********************************


From yasufum.o@gmail.com Mon Jun 24 16:11:22 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd106.ddreams.local
 (zssg-mailmd106.ddreams.local [10.160.123.101])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL00DMRDBRFR70@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 16:11:51 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd106.ddreams.local by
 zssg-mailmd106.ddreams.local (dDREAMS) id <0PTL00022DBRM400@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:51 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd106.ddreams.local
 (dDREAMS) with ESMTP id <0PTL01B20DBRKR20@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:51 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf106.ddreams.local (Postfix) with ESMTP id 3F4D17E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:51 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 3E6358E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:51 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 3C5A88E6057	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:51 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 17FA18E6063	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:50 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf106.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:50 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BnZa017181;	Mon,
 24 Jun 2019 16:11:49 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O7Bnwf017180;	Mon, 24 Jun 2019 16:11:49 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O7BnK2017177	for unknown; Mon,
 24 Jun 2019 16:11:49 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BnCE021567 for
 unknown; Mon, 24 Jun 2019 16:11:49 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BnDE021564; Mon,
 24 Jun 2019 16:11:49 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BnvR017087;	Mon,
 24 Jun 2019 16:11:49 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O7Bn7e017083	for unknown; Mon, 24 Jun 2019 16:11:49 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BmpE031518 for
 unknown; Mon, 24 Jun 2019 16:11:48 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Bmld031512 for
 unknown; Mon, 24 Jun 2019 16:11:48 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O7BgLh023439	for unknown; Mon,
 24 Jun 2019 16:11:48 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id CC1391BF47;	Mon, 24 Jun 2019 09:11:41 +0200 (CEST)
Received: from mail-pf1-f169.google.com
 (mail-pf1-f169.google.com [209.85.210.169]) by dpdk.org (Postfix)
 with ESMTP id 1ABA71BED2 for <spp@dpdk.org>; Mon,
 24 Jun 2019 09:11:41 +0200 (CEST)
Received: by mail-pf1-f169.google.com with SMTP id r1so6951971pfq.12 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 00:11:41 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id y17sm6357948pfe.148.2019.06.24.00.11.39
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 00:11:39 -0700 (PDT)
Date: Mon, 24 Jun 2019 16:11:22 +0900
From: yasufum.o@gmail.com
Subject: [spp 04407] [spp] [PATCH 08/10] controller: move topo help msg to
 SppBye
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624071124.23451-9-yasufum.o@gmail.com>
In-reply-to: <20190624071124.23451-1-yasufum.o@gmail.com>
References: <20190624071124.23451-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04407
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=//y2hC3C1B5+PfW0eRqNP+aYUd3shCOS1OnGn7QbAf4=;
 b=ZVAC6/gUQIWf1RQrjyyTyyzhLSVxkMFa/nXQ258Nyw6zzIEC4gUxTDof1/3AfujszD
 yJGTiyC9lcBrLN6jmJMOD8/QD6tywzDyUtE+PWjQl+yYBg5eM2KXDCWAJ4Osxp/kRElA
 Fi7DC15IzX3OLEWnheSEgJWQkJH0++L8/RDvKafpfZfDjfT6hQmV4KS1ITYdQLO3Zb5E
 uQi9tiyutbt9DWCYF0sTCBPRQ2WFoRcD8Ya+jI1C86STiI/qmT5ZUc7+DDEFV+5PorM4
 Hjach+zFsHGtoB2amH+oj21lpNpaX1s/HNPJnmJOx8hhq1qHshvPHZQ+QAn2hJXpgFhc 9Ntw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=//y2hC3C1B5+PfW0eRqNP+aYUd3shCOS1OnGn7QbAf4=;
 b=Kfd5kxAqYQk+p4ISyeJMAVneHn9nM+8pbUx//qMXBri8jcAGALfWbwtRvTeTn7e6Do
 I2T2UXr7eXV0s3ps2ZSngV4dt43M8qRQDs50SdCZwMmSNKkSuDwK29sWKlVRQczFM72x
 eNPYPW2Caou7vUPGN8DJ38E36pg/HeEwsqS/NOSOCEdmDu5jzytJOKUfSBGr8GaqpdDk
 9KGAH8wsLWJJcoV+t6odpq7xNgn3f1WU/a8GHm9LDP+54nyhvsRTr/eBzlSorNx/4Buk
 qwQ3F4jUo8MnlirIh33h43ulXFBEiiu8mOu9+7oPUVNk07mk09mAmSiF7YyvVrGAHULJ DDFw==
X-Gm-Message-State: APjAAAXH49IIY56rJw6xwJHYLPrkvUuo6DFEkbLsYjSznq3/ZkBitHYA
 GeZ/B0ZNNTpv0bhn9cf90vtHU7Rx
X-Google-Smtp-Source:
 APXvYqzH6I75JAFjDyykppQeNQL5JHTIDYcgyteGpcFBV+rbbQJpWIk9Du27ZhAWUJ6yru1vFcVYXA==
X-Received: by 2002:a65:41c5:: with SMTP id b5mr12147494pgq.128.1561360300187;
 Mon, 24 Jun 2019 00:11:40 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 172
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This patch is to move comment of `do_topo`, `do_topo_subgraph` and
`do_topo_resize` to `SppTopo.help` to reduce the number of lines.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/topo.py | 52 ++++++++++++++++++++++++++++
 src/controller/shell.py         | 61 +++++++++------------------------
 2 files changed, 68 insertions(+), 45 deletions(-)

diff --git a/src/controller/commands/topo.py b/src/controller/commands/topo.py
index 3b24c1a..21ef1ec 100644
--- a/src/controller/commands/topo.py
+++ b/src/controller/commands/topo.py
@@ -459,3 +459,55 @@ class SppTopo(object):
             return True
         else:
             return False
+
+    @classmethod
+    def help(cls):
+        msg = """Output network topology.
+
+        Support four types of output.
+        * terminal (but very few terminals supporting to display images)
+        * browser (websocket server is required)
+        * image file (jpg, png, bmp)
+        * text (dot, js or json, yml or yaml)
+
+        spp > topo term  # terminal
+        spp > topo http  # browser
+        spp > topo network_conf.jpg  # image
+        spp > topo network_conf.dot  # text
+        spp > topo network_conf.js# text
+        """
+
+        print(msg)
+
+    @classmethod
+    def help_resize(cls):
+        msg = """Change the size of the image of topo command.
+
+        You can specify the size by percentage or ratio.
+
+        spp > topo resize 60%  # percentage
+        spp > topo resize 0.6  # ratio
+        """
+
+        print(msg)
+
+    @classmethod
+    def help_subgraph(cls):
+        msg = """Edit subgarph for topo command.
+
+        Subgraph is a group of object defined in dot language. For topo
+        command, it is used for grouping resources of each of VM or
+        container to topology be more understandable.
+
+        (1) Add subgraph labeled 'vm1'.
+            spp > topo_subgraph add vm1 vhost:1;vhost:2
+
+        (2) Delete subgraph 'vm1'.
+            spp > topo_subgraph del vm1
+
+        (3) Show subgraphs by running topo_subgraph without args.
+            spp > topo_subgraph
+            label: vm1	subgraph: "vhost:1;vhost:2"
+        """
+
+        print(msg)
diff --git a/src/controller/shell.py b/src/controller/shell.py
index 8cb74a0..54376c9 100644
--- a/src/controller/shell.py
+++ b/src/controller/shell.py
@@ -824,11 +824,7 @@ class Shell(cmd.Cmd, object):
         {'cmdqueue': [],
          'completekey': 'tab',
          'completion_matches': ['inspect'],
-         'lastcmd': 'inspect',
-         'old_completer': None,
-         'stdin': <open file '<stdin>', mode 'r' at 0x7fe96bddf0c0>,
-         'stdout': <open file '<stdout>', mode 'w' at 0x7fe96bddf150>}
-
+         ...
         """
 
         from pprint import pprint
@@ -841,22 +837,7 @@ class Shell(cmd.Cmd, object):
         return ['add', 'del']
 
     def do_topo_subgraph(self, args):
-        """Edit subgarph for topo command.
-
-        Subgraph is a group of object defined in dot language. For topo
-        command, it is used for grouping resources of each of VM or
-        container to topology be more understandable.
-
-        (1) Add subgraph labeled 'vm1'.
-        spp > topo_subgraph add vm1 vhost:1;vhost:2
-
-        (2) Delete subgraph 'vm1'.
-        spp > topo_subgraph del vm1
-
-        (3) Show subgraphs by running topo_subgraph without args.
-        spp > topo_subgraph
-        label: vm1	subgraph: "vhost:1;vhost:2"
-        """
+        """Edit subgarph for topo command."""
 
         # logger.info("Topo initialized with sec IDs %s" % sec_ids)
 
@@ -897,6 +878,10 @@ class Shell(cmd.Cmd, object):
             else:
                 print("Ivalid subcommand '%s'!" % tokens[0])
 
+    def help_topo_subgraph(self):
+        """Print help message of topo_subgraph command."""
+        topo.SppTopo.help_subgraph()
+
     def complete_topo_subgraph(self, text, line, begidx, endidx):
         terms = self.terms_topo_subgraph()
 
@@ -921,35 +906,21 @@ class Shell(cmd.Cmd, object):
             pass
 
     def do_topo_resize(self, args):
-        """Change the size of the image of topo command.
-
-        You can specify the size by percentage or ratio.
-
-        spp > topo resize 60%  # percentage
-        spp > topo resize 0.6  # ratio
-
-        """
-
+        """Change the size of the image of topo_resize command."""
         self.spp_topo.resize_graph(args)
 
-    def do_topo(self, args):
-        """Output network topology.
-
-        Support four types of output.
-        * terminal (but very few terminals supporting to display images)
-        * browser (websocket server is required)
-        * image file (jpg, png, bmp)
-        * text (dot, js or json, yml or yaml)
-
-        spp > topo term  # terminal
-        spp > topo http  # browser
-        spp > topo network_conf.jpg  # image
-        spp > topo network_conf.dot  # text
-        spp > topo network_conf.js# text
-        """
+    def help_topo_resize(self):
+        """Print help message of topo command."""
+        topo.SppTopo.help_resize()
 
+    def do_topo(self, args):
+        """Output network topology."""
         self.spp_topo.run(args, self.get_sec_ids('nfv'))
 
+    def help_topo(self):
+        """Print help message of topo command."""
+        topo.SppTopo.help()
+
     def complete_topo(self, text, line, begidx, endidx):
 
         return self.spp_topo.complete(text, line, begidx, endidx)
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 16:11:23 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DN7DBSFR70@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 16:11:52 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTL00U1GDBSMZ00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:52 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00DU5DBSAT90@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:11:52 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id B8F637E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:52 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id B6BF68E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:52 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id B07098E6058	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:52 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 396418E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:11:52 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:11:52 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Bqlc017196;	Mon,
 24 Jun 2019 16:11:52 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O7BqKI017195;	Mon, 24 Jun 2019 16:11:52 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O7Bpi3017192	for unknown; Mon,
 24 Jun 2019 16:11:51 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BpjV021598 for
 unknown; Mon, 24 Jun 2019 16:11:51 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BpRb021595; Mon,
 24 Jun 2019 16:11:51 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BpwM017094;	Mon,
 24 Jun 2019 16:11:51 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O7Bptd017090	for unknown; Mon, 24 Jun 2019 16:11:51 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BoGE031542 for
 unknown; Mon, 24 Jun 2019 16:11:51 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BoJO031534 for
 unknown; Mon, 24 Jun 2019 16:11:50 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O7BisL023453	for unknown; Mon,
 24 Jun 2019 16:11:50 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id D877B1BF33;	Mon, 24 Jun 2019 09:11:43 +0200 (CEST)
Received: from mail-pl1-f171.google.com
 (mail-pl1-f171.google.com [209.85.214.171]) by dpdk.org (Postfix)
 with ESMTP id 771391BF29 for <spp@dpdk.org>; Mon,
 24 Jun 2019 09:11:42 +0200 (CEST)
Received: by mail-pl1-f171.google.com with SMTP id c14so6356057plo.0 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 00:11:42 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id y17sm6357948pfe.148.2019.06.24.00.11.40
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 00:11:41 -0700 (PDT)
Date: Mon, 24 Jun 2019 16:11:23 +0900
From: yasufum.o@gmail.com
Subject: [spp 04408] [spp] [PATCH 09/10] controller: move status cmd help msg
 to help_msg
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624071124.23451-10-yasufum.o@gmail.com>
In-reply-to: <20190624071124.23451-1-yasufum.o@gmail.com>
References: <20190624071124.23451-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04408
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=NIG/cRCy9enOss2M4vQQYEluXQ8bINQiDe5LetEMGXs=;
 b=OMbQ5L2si63fkYxvK5fWCEjmbs0wWcU1naUVyBMy1KVH9jH8cDGba1r2fM4oRuLuyz
 eQV7Wnl+wuuZ8UKm26pqMxj6UomUl0DF/rRzyVcPUOyJlmhtrsRKvY5EkUvzT8o9clGL
 hQ6RkY5x80jl3DnnnoseabfY9ee9AfhiTez9atLn9dcd54IeksGiQBXjaJ+g89asxT5W
 Q2w3VfvQQGB96wtnKVEnnkx2MI2VTFsqrUJqrE90Ep0keJaUrbTfoG/JoycMQwvqt3GY
 mrmOD4DDEE228fgsHCO7iG177RLuvHplEEeGAfgdW9ZEvFyduWRiI00V/vkNFpUCxDWj gLRA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=NIG/cRCy9enOss2M4vQQYEluXQ8bINQiDe5LetEMGXs=;
 b=AYAuch0pVXwYe8fBKl5HxkLhwucFmqiWF8otOdEZwzqNQ9zPP93XOV7foWcB91cVvL
 jH4M2/Bk6usXHZdR+Fm3eIn2LR6acGg9jtiiC9I3+Z8YN7OSwOymwpvW8erdsfhHWmvB
 BdFv9LiyM01mgmZcvmehB7GEY+7Ipdn9B65t4iP5RM0zLVX8jKGKGLVboN8pAmTLwpiF
 7uAlDfvDnZAxGAiLL9wmKVs10CNHltQVqODP2v162FvG2WhyEB0ybskxWxcMVhpCdTql
 6pYivS2QSgmqWE6scYOWQnha2AniX4PrEnMavzljGuVM0AtAQg0omAashg8WquiDZLWl +4Nw==
X-Gm-Message-State: APjAAAV3ahbOrQamf9AjtzptqAz0iE752Rs/E+bQwL+J7BUPgZrkXswD
 68nkSwfRxuKY9X8fPF9IrGMCL0dc
X-Google-Smtp-Source:
 APXvYqxQkr9nXZO37py7uXc4FU1m4wHP7eaBHAGqPMshsy7iQZJ9xNsAW/cL9eIB+aFZGGpBQnl4xA==
X-Received: by 2002:a17:902:3fa5:: with SMTP id
 a34mr141190961pld.317.1561360301645; Mon, 24 Jun 2019 00:11:41 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 80
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move help message of status command to `help_msg`
module which is for defining a set of command name and message.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/help_msg.py | 10 ++++++++++
 src/controller/shell.py             | 15 ++++++++-------
 2 files changed, 18 insertions(+), 7 deletions(-)
 create mode 100644 src/controller/commands/help_msg.py

diff --git a/src/controller/commands/help_msg.py b/src/controller/commands/help_msg.py
new file mode 100644
index 0000000..9e15123
--- /dev/null
+++ b/src/controller/commands/help_msg.py
@@ -0,0 +1,10 @@
+# SPDX-License-Identifier: BSD-3-Clause
+# Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
+
+commands = {
+        'status':
+        """Display status info of SPP processes.
+
+        spp > status
+        """
+        }
diff --git a/src/controller/shell.py b/src/controller/shell.py
index 54376c9..065fb07 100644
--- a/src/controller/shell.py
+++ b/src/controller/shell.py
@@ -10,6 +10,7 @@ from .commands import topo
 from .commands import vf
 from .commands import mirror
 from .commands import pcap
+from .commands import help_msg
 import os
 import re
 import readline
@@ -29,7 +30,7 @@ class Shell(cmd.Cmd, object):
         config_file = "{}/config/default.yml".format(
                 os.path.dirname(__file__))
         cli_config = yaml.load(open(config_file),
-                Loader=yaml.FullLoader)
+                               Loader=yaml.FullLoader)
     except IOError as e:
         print('Error: no config file found!')
         print(e)
@@ -205,7 +206,7 @@ class Shell(cmd.Cmd, object):
                 pt2 = id2.split(delim)[0]
                 if (pt1 in spp_common.PORT_TYPES) \
                         and (pt2 in spp_common.PORT_TYPES):
-                            return True
+                    return True
         return False
 
     def clean_cmd(self, cmdstr):
@@ -270,13 +271,13 @@ class Shell(cmd.Cmd, object):
         return res
 
     def do_status(self, _):
-        """Display status info of SPP processes
-
-        spp > status
-        """
-
+        """Display status info of SPP processes."""
         self.print_status()
 
+    def help_status(self):
+        """Print help message of status command."""
+        print(help_msg.commads['status'])
+
     def do_pri(self, command):
         """Send a command to primary process."""
 
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 16:11:24 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd103.ddreams.local
 (zssg-mailmd103.ddreams.local [10.160.123.98]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00D3ODISFR90@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 16:16:04 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd103.ddreams.local by
 zssg-mailmd103.ddreams.local (dDREAMS) id <0PTL01B4UDISB300@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:16:04 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd103.ddreams.local
 (dDREAMS) with ESMTP id <0PTL0150SDIS1X40@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 16:16:04 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf101.ddreams.local (Postfix) with ESMTP id CB9BC7E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:16:04 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id C6CF48E6062	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:16:04 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id C0D2F8E605A	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:16:04 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id A390A8E6055	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 16:16:03 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf101.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 16:16:03 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7G3Tm018121;	Mon,
 24 Jun 2019 16:16:03 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O7G3dO018120;	Mon, 24 Jun 2019 16:16:03 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O7G3EX018117	for unknown; Mon,
 24 Jun 2019 16:16:03 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7G2I3023712 for
 unknown; Mon, 24 Jun 2019 16:16:03 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Brao021623; Mon,
 24 Jun 2019 16:11:53 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Br3K017101;	Mon,
 24 Jun 2019 16:11:53 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O7Br0k017097	for unknown; Mon, 24 Jun 2019 16:11:53 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7Brgd031556 for
 unknown; Mon, 24 Jun 2019 16:11:53 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O7BqO3031553 for
 unknown; Mon, 24 Jun 2019 16:11:52 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O7Bkns023461	for unknown; Mon,
 24 Jun 2019 16:11:52 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id EB3B51BF49;	Mon, 24 Jun 2019 09:11:45 +0200 (CEST)
Received: from mail-pg1-f193.google.com
 (mail-pg1-f193.google.com [209.85.215.193]) by dpdk.org (Postfix)
 with ESMTP id 0CE051BF49 for <spp@dpdk.org>; Mon,
 24 Jun 2019 09:11:44 +0200 (CEST)
Received: by mail-pg1-f193.google.com with SMTP id f21so6615830pgi.3 for
 <spp@dpdk.org>; Mon, 24 Jun 2019 00:11:43 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id y17sm6357948pfe.148.2019.06.24.00.11.41
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Mon,
 24 Jun 2019 00:11:42 -0700 (PDT)
Date: Mon, 24 Jun 2019 16:11:24 +0900
From: yasufum.o@gmail.com
Subject: [spp 04409] [spp] [PATCH 10/10] controller: move rest of help msg to
 help_msg
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624071124.23451-11-yasufum.o@gmail.com>
In-reply-to: <20190624071124.23451-1-yasufum.o@gmail.com>
References: <20190624071124.23451-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04409
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=L7fezTqpIxtSTMbXcqk0Cuh1yKDesSRnhp7iRui20fo=;
 b=eVdqf54H61caahgzIF3f4qTMEJmM3ZTOjTPD24RwNhBGMB5oHvXB6V8bflZtYMhVv5
 WLSkRx1Krwl0oQES6AeLTho97zDVPEbaGOX9BIQ1voFE1YwnR0oCu74fU0w/JtsPcjeQ
 3/XleeClPiw0YSQYTKqpI/tyHp3J0LLos+z202W7HfEhGcdyRzaIKaQ5EIih8tB4jaho
 JQp0Nc/cplBbod3d9/gxmPWrMnUJXtFjbyGdh4sxgW5snGlVVshApRYamwKzMb77opsL
 BP3Q/wR+2Hzpg4Q8QCSKAJXItYVtA1zUi1z1LL+POB8V/8GOL0p1EtkO7bgX511QrfIx Ky8Q==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=L7fezTqpIxtSTMbXcqk0Cuh1yKDesSRnhp7iRui20fo=;
 b=tZ0NktRlT/qxG6k0QyzcR8GDAykyepBc4pV+aV0bnzcHB8mH7UBw2mxNxp4JlSLmyL
 v24S8LdAc/CRz9yE9EgoNrtcIaUl8tlHzGkw1MaFpV5rUfsIohJo+okTkxZwQn6rQUJi
 QodaxvG0wB14prW/qf5KfyN0kEtdPV5NPNvipG8RYEosXdmsYcUH5eSU4pyHTyVJaYo4
 tNeDYnoKfvQ4JzUNphfIQvhsehQDgdDTKReneY/wv0U1F6dosnDoSCjyBkYv2/wKAtTr
 xQMmnK4aZXOzFRCEyOkJnRj/HxeKUe6Zb9WbbAduT3kHdcQ6eN/UJXeM8jMLyg0DDYoK EY1g==
X-Gm-Message-State: APjAAAXBaaXIR7JRNa2k2gpRvN2GQw2YJFzBZ8YOZarSLxxENB6VZ3DR
 E61LSvpN/I/anNZPHXujMYifR/oO
X-Google-Smtp-Source:
 APXvYqyXqXT690/Zz33H/ToMHjPdGBo0px8B1J0Ojknb7ekvRBPkdRa2F4YaGVesbSnwklIqeKFuoA==
X-Received: by 2002:a17:90a:8984:: with SMTP id
 v4mr22959277pjn.133.1561360303048; Mon, 24 Jun 2019 00:11:43 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 467
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move help message of rest of commands to `help_msg`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/controller/commands/help_msg.py | 125 ++++++++++++++++++++-
 src/controller/shell.py             | 165 ++++++++++++----------------
 2 files changed, 194 insertions(+), 96 deletions(-)

diff --git a/src/controller/commands/help_msg.py b/src/controller/commands/help_msg.py
index 9e15123..f303547 100644
--- a/src/controller/commands/help_msg.py
+++ b/src/controller/commands/help_msg.py
@@ -1,10 +1,131 @@
 # SPDX-License-Identifier: BSD-3-Clause
 # Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
 
-commands = {
+cmds = {
         'status':
         """Display status info of SPP processes.
 
         spp > status
-        """
+        """,
+
+        'record':
+        """Save commands as a recipe file.
+
+        Save all of commands to a specified file as a recipe. This file
+        is reloaded with 'playback' command later. You can also edit
+        the recipe by hand to customize.
+
+        spp > record path/to/recipe_file
+        """,
+
+        'playback':
+        """Setup a network configuration from recipe file.
+
+        Recipe is a file describing a series of SPP command to setup
+        a network configuration.
+
+        spp > playback path/to/recipe_file
+        """,
+
+        'config':
+        """Show or update config.
+
+        # show list of config
+        spp > config
+
+        # set prompt to "$ spp "
+        spp > config prompt "$ spp "
+        """,
+
+        'pwd':
+        """Show corrent directory.
+
+        It behaves as UNIX's pwd command.
+
+        spp > pwd
+        """,
+
+        'ls':
+        """Show a list of specified directory.
+
+        It behaves as UNIX's ls command.
+
+        spp > ls path/to/dir
+        """,
+
+        'cd':
+        """Change current directory.
+
+        spp > cd path/to/dir
+        """,
+
+        'mkdir':
+        """Create a new directory.
+
+        It behaves as 'mkdir -p' which means that you can create sub
+        directories at once.
+
+        spp > mkdir path/to/dir
+        """,
+
+        'cat':
+        """View contents of a file.
+
+        spp > cat file
+        """,
+
+        'redo':
+        """Execute command of index of history.
+
+        spp > redo 5  # exec 5th command in the history
+        """,
+
+        'history':
+        """Show command history.
+
+        spp > history
+          1  ls
+          2  cat file.txt
+          ...
+
+        Command history is recorded in a file named '.spp_history'.
+        It does not add some command which are no meaning for history.
+        'bye', 'exit', 'history', 'redo'
+        """,
+
+        'less':
+        """View contents of a file.
+
+        spp > less file
+        """,
+
+        'exit':
+        """Terminate SPP controller process.
+
+        It is an alias of bye command to terminate controller.
+
+        spp > exit
+        Thank you for using Soft Patch Panel
+        """,
+
+        'inspect':
+        """Print attributes of Shell for debugging.
+
+        This command is intended to be used by developers to show the
+        inside of the object of Shell class.
+
+        spp > inspect
+        {'cmdqueue': [],
+         'completekey': 'tab',
+         'completion_matches': ['inspect'],
+         ...
+        """,
+
+        'load_cmd':
+        """Load command plugin.
+
+        Path of plugin file is 'spp/src/controller/plugins'.
+
+        spp > load_cmd hello
+        """,
         }
diff --git a/src/controller/shell.py b/src/controller/shell.py
index 065fb07..3f4d95b 100644
--- a/src/controller/shell.py
+++ b/src/controller/shell.py
@@ -276,7 +276,7 @@ class Shell(cmd.Cmd, object):
 
     def help_status(self):
         """Print help message of status command."""
-        print(help_msg.commads['status'])
+        print(help_msg.cmds['status'])
 
     def do_pri(self, command):
         """Send a command to primary process."""
@@ -533,31 +533,22 @@ class Shell(cmd.Cmd, object):
                         self.get_sec_ids('pcap'), text, line, begidx, endidx)
 
     def do_record(self, fname):
-        """Save commands as a recipe file.
-
-        Save all of commands to a specified file as a recipe. This file
-        is reloaded with 'playback' command later. You can also edit
-        the recipe by hand to customize.
-
-        spp > record path/to/recipe_file
-        """
+        """Save commands as a recipe file."""
 
         if fname == '':
             print("Record file is required!")
         else:
             self.recorded_file = open(fname, 'w')
 
+    def help_record(self):
+        """Print help message of record command."""
+        print(help_msg.cmds['record'])
+
     def complete_record(self, text, line, begidx, endidx):
         return common.compl_common(text, line)
 
     def do_playback(self, fname):
-        """Setup a network configuration from recipe file.
-
-        Recipe is a file describing a series of SPP command to setup
-        a network configuration.
-
-        spp > playback path/to/recipe_file
-        """
+        """Setup a network configuration from recipe file."""
 
         if fname == '':
             print("Record file is required!")
@@ -575,18 +566,15 @@ class Shell(cmd.Cmd, object):
                 message = "Error: File does not exist."
                 print(message)
 
+    def help_playback(self):
+        """Print help message of playback command."""
+        print(help_msg.cmds['playback'])
+
     def complete_playback(self, text, line, begidx, endidx):
         return common.compl_common(text, line)
 
     def do_config(self, args):
-        """Show or update config.
-
-        # show list of config
-        spp > config
-
-        # set prompt to "$ spp "
-        spp > config prompt "$ spp "
-        """
+        """Show or update config."""
 
         tokens = args.strip().split(' ')
         if len(tokens) == 1:
@@ -620,6 +608,10 @@ class Shell(cmd.Cmd, object):
                 if key == 'prompt':
                     self.prompt = self.cli_config['prompt']['val']
 
+    def help_config(self):
+        """Print help message of config command."""
+        print(help_msg.cmds['config'])
+
     def complete_config(self, text, line, begidx, endidx):
         candidates = []
         tokens = line.strip().split(' ')
@@ -640,22 +632,15 @@ class Shell(cmd.Cmd, object):
         return completions
 
     def do_pwd(self, args):
-        """Show corrent directory.
-
-        It behaves as UNIX's pwd command.
-
-        spp > pwd
-        """
-
+        """Show corrent directory."""
         print(os.getcwd())
 
-    def do_ls(self, args):
-        """Show a list of specified directory.
+    def help_pwd(self):
+        """Print help message of pwd command."""
+        print(help_msg.cmds['pwd'])
 
-        It behaves as UNIX's ls command.
-
-        spp > ls path/to/dir
-        """
+    def do_ls(self, args):
+        """Show a list of specified directory."""
 
         if args == '' or os.path.isdir(args):
             c = 'ls -F %s' % args
@@ -663,14 +648,15 @@ class Shell(cmd.Cmd, object):
         else:
             print("No such a directory.")
 
+    def help_ls(self):
+        """Print help message of ls command."""
+        print(help_msg.cmds['ls'])
+
     def complete_ls(self, text, line, begidx, endidx):
         return common.compl_common(text, line)
 
     def do_cd(self, args):
-        """Change current directory.
-
-        spp > cd path/to/dir
-        """
+        """Change current directory."""
 
         if os.path.isdir(args):
             os.chdir(args)
@@ -678,21 +664,23 @@ class Shell(cmd.Cmd, object):
         else:
             print("No such a directory.")
 
+    def help_cd(self):
+        """Print help message of cd command."""
+        print(help_msg.cmds['cd'])
+
     def complete_cd(self, text, line, begidx, endidx):
         return common.compl_common(text, line, 'directory')
 
     def do_mkdir(self, args):
-        """Create a new directory.
-
-        It behaves as 'mkdir -p' which means that you can create sub
-        directories at once.
-
-        spp > mkdir path/to/dir
-        """
+        """Create a new directory."""
 
         c = 'mkdir -p %s' % args
         subprocess.call(c, shell=True)
 
+    def help_mkdir(self):
+        """Print help message of mkdir command."""
+        print(help_msg.cmds['mkdir'])
+
     def complete_mkdir(self, text, line, begidx, endidx):
         return common.compl_common(text, line)
 
@@ -718,21 +706,19 @@ class Shell(cmd.Cmd, object):
         return spp_bye.complete(text, line, begidx, endidx)
 
     def do_cat(self, arg):
-        """View contents of a file.
-
-        spp > cat file
-        """
+        """View contents of a file."""
         if os.path.isfile(arg):
             c = 'cat %s' % arg
             subprocess.call(c, shell=True)
         else:
             print("No such a directory.")
 
-    def do_redo(self, args):
-        """Execute command of index of history.
+    def help_cat(self):
+        """Print help message of cat command."""
+        print(help_msg.cmds['cat'])
 
-        spp > redo 5  # exec 5th command in the history
-        """
+    def do_redo(self, args):
+        """Execute command of index of history."""
 
         idx = int(args)
         cmdline = None
@@ -754,18 +740,12 @@ class Shell(cmd.Cmd, object):
         except IOError:
             print('Error: Cannot open history file "%s"' % self.hist_file)
 
-    def do_history(self, arg):
-        """Show command history.
-
-        spp > history
-          1  ls
-          2  cat file.txt
-          ...
+    def help_redo(self):
+        """Print help message of redo command."""
+        print(help_msg.cmds['redo'])
 
-        Command history is recorded in a file named '.spp_history'.
-        It does not add some command which are no meaning for history.
-        'bye', 'exit', 'history', 'redo'
-        """
+    def do_history(self, arg):
+        """Show command history."""
 
         try:
             f = open(self.hist_file)
@@ -785,53 +765,51 @@ class Shell(cmd.Cmd, object):
         except IOError:
             print('Error: Cannot open history file "%s"' % self.hist_file)
 
+    def help_history(self):
+        """Print help message of history command."""
+        print(help_msg.cmds['history'])
+
     def complete_cat(self, text, line, begidx, endidx):
         return common.compl_common(text, line)
 
     def do_less(self, arg):
-        """View contents of a file.
+        """View contents of a file."""
 
-        spp > less file
-        """
         if os.path.isfile(arg):
             c = 'less %s' % arg
             subprocess.call(c, shell=True)
         else:
             print("No such a directory.")
 
+    def help_less(self):
+        """Print help message of less command."""
+        print(help_msg.cmds['less'])
+
     def complete_less(self, text, line, begidx, endidx):
         return common.compl_common(text, line)
 
     def do_exit(self, args):
-        """Terminate SPP controller process.
-
-        It is an alias of bye command to terminate controller.
-
-        spp > exit
-        Thank you for using Soft Patch Panel
-        """
+        """Terminate SPP controller process."""
 
         self.close()
         print('Thank you for using Soft Patch Panel')
         return True
 
-    def do_inspect(self, args):
-        """Print attributes of Shell for debugging.
-
-        This command is intended to be used by developers to show the
-        inside of the object of Shell class.
+    def help_exit(self):
+        """Print help message of exit command."""
+        print(help_msg.cmds['exit'])
 
-        spp > inspect
-        {'cmdqueue': [],
-         'completekey': 'tab',
-         'completion_matches': ['inspect'],
-         ...
-        """
+    def do_inspect(self, args):
+        """Print attributes of Shell for debugging."""
 
         from pprint import pprint
         if args == '':
             pprint(vars(self))
 
+    def help_inspect(self):
+        """Print help message of inspect command."""
+        print(help_msg.cmds['inspect'])
+
     def terms_topo_subgraph(self):
         """Define terms of topo_subgraph command."""
 
@@ -927,12 +905,7 @@ class Shell(cmd.Cmd, object):
         return self.spp_topo.complete(text, line, begidx, endidx)
 
     def do_load_cmd(self, args):
-        """Load command plugin.
-
-        Path of plugin file is 'spp/src/controller/plugins'.
-
-        spp > load_cmd hello
-        """
+        """Load command plugin."""
 
         args = re.sub(',', ' ', args)
         args = re.sub(r'\s+', ' ', args)
@@ -947,6 +920,10 @@ class Shell(cmd.Cmd, object):
 
         print("Module '%s' loaded." % mod_name)
 
+    def help_load_cmd(self):
+        """Print help message of load_cmd command."""
+        print(help_msg.cmds['load_cmd'])
+
     def complete_load_cmd(self, text, line, begidx, endidx):
         """Complete command plugins
 
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 11:21:45 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd103.ddreams.local
 (zssg-mailmd103.ddreams.local [10.160.123.98]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTK00U8RZWZ8Y30@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:22:11 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd103.ddreams.local by
 zssg-mailmd103.ddreams.local (dDREAMS) id <0PTK0110QZWZ5Q00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:22:11 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd103.ddreams.local
 (dDREAMS) with ESMTP id <0PTK00UPJZWZQ130@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:22:11 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id D5FFE7E603B	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:22:11 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id D30EA8E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:22:11 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id D1FF98E6056	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:22:11 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 9EA778E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:22:10 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:22:10 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2MAVq012678;	Mon,
 24 Jun 2019 11:22:10 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2MAG5012677;	Mon, 24 Jun 2019 11:22:10 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2MAEi012674	for unknown; Mon,
 24 Jun 2019 11:22:10 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2M9mQ004464 for
 unknown; Mon, 24 Jun 2019 11:22:10 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2M992004461; Mon,
 24 Jun 2019 11:22:09 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2M9m3015950;	Mon,
 24 Jun 2019 11:22:09 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O2M990015946	for unknown; Mon, 24 Jun 2019 11:22:09 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2M9Z4005412 for
 unknown; Mon, 24 Jun 2019 11:22:09 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2M9Xl005406 for
 unknown; Mon, 24 Jun 2019 11:22:09 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2M2Gu003166	for unknown; Mon,
 24 Jun 2019 11:22:08 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 729231BF54;	Mon, 24 Jun 2019 04:22:00 +0200 (CEST)
Received: from mail-pl1-f181.google.com
 (mail-pl1-f181.google.com [209.85.214.181]) by dpdk.org (Postfix)
 with ESMTP id BB2A11BF42 for <spp@dpdk.org>; Mon,
 24 Jun 2019 04:21:59 +0200 (CEST)
Received: by mail-pl1-f181.google.com with SMTP id g4so5970386plb.5 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 19:21:59 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id e10sm5916173pfi.153.2019.06.23.19.21.57
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 19:21:58 -0700 (PDT)
Date: Mon, 24 Jun 2019 11:21:45 +0900
From: yasufum.o@gmail.com
Subject: [spp 04351] [spp] [PATCH 0/2] Rename shared lib command_conn
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624022147.18639-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04351
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=+ZAxi3hP5PjsydI1ZajnXNVN6ZTWhpVtqXj2KLEIG9Q=;
 b=rZJ07mT2EOOSD3PTxMRcUCQm3ee0zmiidDSJ3GJSNqsAyR2Ip2ysuEmzXE8lrETwgI
 G0D10VybbA5pkhHzqV+IZkw8wb3BpeJ0HE1iMaVkvnzOPYL5bDbM7f1a8jWpoMf7scA2
 vKQyiLpbdk1rDOWRTKm/8gFJZUpImVcFCFIg5kOnhs+Xl9z89dsEkaMRLaRgmFWoz4St
 2PgJFiUZxVjmAQnHdUjswx1DgP3/iWEkpN/E6mR99NLczcvvGQj5wGf/a48pftyowEuh
 20Z/a4ngI3sQMifWv7P7HrKnw2oQw8VNP06gZcE5XbG+mUqTzs5RAmiXNBXYGxU5SPoC 5Rfw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=+ZAxi3hP5PjsydI1ZajnXNVN6ZTWhpVtqXj2KLEIG9Q=;
 b=D0AMqWRZUZnxUHu/YmMZ7asOJUUmCYISvJpD2iHGOMvP1Z6B2FHb0AHZj5D3C7jAyb
 XA74guWTnmMgYLFpPIE21vLJWmDY6ySdeIq9q8/nCPCVmsA/Y+w+f4Be8BoHVqkDF4U/
 K1fYPyfbT21Act309ljcoYgUm5SPwMkU1p71BlcAlb4nBebx+LM2EnFYch9jvZiqcHH2
 xxNX2lG71/tlCB1HOLMTWwhFC9neNim7WUjv0JKmsbXRZ95fDCgr7SONnz+i8hnwnC6w
 4wGweHKgY/UPxLZurnQUdDKd9lUPB1blgdoJ2HFvaihzL/VoniId/sm/1pdFh96ik74Y 5ujQ==
X-Gm-Message-State: APjAAAXmGwk0nzEvvvh6GPOraIF+HgRK5zrlzhJyIJyT76bdrT/MtRjG
 BN85mMkKH/lGOPICpiBnzZK0G3c7
X-Google-Smtp-Source:
 APXvYqxNqq6aVNih1eDtF6VpAG7oTPBmnHXmTMEAMNWngsYYlb4NwcUJYiKbVPw3ohRFSgPcot0IHA==
X-Received: by 2002:a17:902:4643:: with SMTP id
 o61mr92069673pld.101.1561342918844; Sun, 23 Jun 2019 19:21:58 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 27
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Shared libs of SPP workers for connecting to spp-ctl are defined in
`command_conn.c` and `command_conn.h`. This update is to rename
`command_conn` to `conn_spp_ctl` to be explicitly it is just for
spp-ctl. This update also renames functions in these files.

Yasufumi Ogawa (2):
  shared/sec: revise funcs to connect to spp-ctl
  shared/sec: rename command_conn.c

 src/mirror/Makefile                           |  2 +-
 src/pcap/Makefile                             |  2 +-
 src/pcap/cmd_runner.c                         | 14 ++--
 .../secondary/spp_worker_th/cmd_runner.c      | 12 +--
 .../secondary/spp_worker_th/command_conn.h    | 82 -------------------
 .../{command_conn.c => conn_spp_ctl.c}        | 20 ++---
 .../secondary/spp_worker_th/conn_spp_ctl.h    | 70 ++++++++++++++++
 src/vf/Makefile                               |  2 +-
 8 files changed, 96 insertions(+), 108 deletions(-)
 delete mode 100644 src/shared/secondary/spp_worker_th/command_conn.h
 rename src/shared/secondary/spp_worker_th/{command_conn.c => conn_spp_ctl.c} (88%)
 create mode 100644 src/shared/secondary/spp_worker_th/conn_spp_ctl.h

-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 11:21:46 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd103.ddreams.local
 (zssg-mailmd103.ddreams.local [10.160.123.98]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTK00U8ZZX08Y30@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:22:12 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd103.ddreams.local by
 zssg-mailmd103.ddreams.local (dDREAMS) id <0PTK0110UZX05Q00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:22:12 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd103.ddreams.local
 (dDREAMS) with ESMTP id <0PTK00UPZZX0Q130@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:22:12 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf106.ddreams.local (Postfix) with ESMTP id 5D6497E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:22:12 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 58EA68E6063	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:22:12 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 4DBCE8E6067	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:22:12 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 0D2F58E6065	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:22:11 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf106.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:22:11 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2MAHN012685;	Mon,
 24 Jun 2019 11:22:10 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2MAhG012684;	Mon, 24 Jun 2019 11:22:10 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2MAKV012681	for unknown; Mon,
 24 Jun 2019 11:22:10 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2MAwh004472 for
 unknown; Mon, 24 Jun 2019 11:22:10 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2MAW8004469; Mon,
 24 Jun 2019 11:22:10 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2MAGF015957;	Mon,
 24 Jun 2019 11:22:10 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O2MAiN015953	for unknown; Mon, 24 Jun 2019 11:22:10 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2M902005430 for
 unknown; Mon, 24 Jun 2019 11:22:09 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2M9IO005424 for
 unknown; Mon, 24 Jun 2019 11:22:09 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2M3Kq003176	for unknown; Mon,
 24 Jun 2019 11:22:08 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 970E41BF6E;	Mon, 24 Jun 2019 04:22:02 +0200 (CEST)
Received: from mail-pl1-f193.google.com
 (mail-pl1-f193.google.com [209.85.214.193]) by dpdk.org (Postfix)
 with ESMTP id 38E6D1BF6B for <spp@dpdk.org>; Mon,
 24 Jun 2019 04:22:01 +0200 (CEST)
Received: by mail-pl1-f193.google.com with SMTP id b7so5995677pls.6 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 19:22:01 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id e10sm5916173pfi.153.2019.06.23.19.21.59
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 19:21:59 -0700 (PDT)
Date: Mon, 24 Jun 2019 11:21:46 +0900
From: yasufum.o@gmail.com
Subject: [spp 04352] [spp] [PATCH 1/2] shared/sec: revise funcs to connect to
 spp-ctl
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624022147.18639-2-yasufum.o@gmail.com>
In-reply-to: <20190624022147.18639-1-yasufum.o@gmail.com>
References: <20190624022147.18639-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04352
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=wa8iuHzhF1bHduyL5ohHxNMXzzTGtXiXRRjFqr2YVEk=;
 b=TgfEMZ9Svfmn+995qC4LmYMk/MFrHCSgD0nNs3oD4u+nCso+WyWnaC8Nh6U9bMe/7i
 IwRzq+JgtqiQHzyoGbFiz6i9I+x+vjhyAcpuTLSG2QMNMzDInuoqY74pN0h0ADTUEUnF
 bMHM14kwV1IdrMV4xTk3bLsu0azeTnoifiYV00bFZ8m8ZCcz3UqKlcQ1HJdyqAxJONjA
 1701GP8aXbO6SHvzdhdKiHwS0fYeZ/ijPsSH+h4koAj3gUtOPUk8mi+w4cT5JBiWUELk
 JJy5LnsI0EAMq1EtKWt2lS8MxHipXREpjf6ysZrzaCrtb5uCCXiOg+OXYHIJrFi15YYB tf7g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=wa8iuHzhF1bHduyL5ohHxNMXzzTGtXiXRRjFqr2YVEk=;
 b=fMR89a+nlrlhyHF2oXjz/GFNL+Fi7NPnmCYA2wNtVmRnrMnI1EFstU64sS0s3gGHAy
 Fw8PKND7iDRIjdLeBy45l6MdWRXAwqU7Vi31ynC3o1u7xgCvlpNPhsecOm9KJicudDD8
 hkiZsUIN0pMYxvsiBDLPLli9of7L4n2Itxpb39lORHwUoT/PRAitRyLn1ZP76s45A2SI
 Yycgb/frZrlswRV9IHXsACU0Sl2L5Ftxc+dw4P1HClhhLII98cTmb6+DgYBmQM1mNTlG
 D8YWGWafWsJVsDs5HIYe5HG5uXNq2w+T3WoQIXHt+18qqyb7fACj1r0XjS24KHOjBmZN NkYw==
X-Gm-Message-State: APjAAAXSHuJ1DwBDf71boC+3aTY7wo/SyJXQUHRSaqFognNJS4fxIM9b
 kmYi6NYJsUrVraE0Qhqst8pVGNSe
X-Google-Smtp-Source:
 APXvYqzMj/s4fty3Zsjd47zdSJ/WoQitboq/5Yi/aHIgoGUqDo/l3GSiDbmnwHY9fP6abXQEvXIumQ==
X-Received: by 2002:a17:902:8ec3:: with SMTP id
 x3mr57907988plo.313.1561342920233; Sun, 23 Jun 2019 19:22:00 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 275
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Functions defined in `command_conn.c` and its header are prefixed as
`spp_`, but there are not application wide and the prefix should be
removed. This update is to simplize the name of functions, and revise
comments.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/pcap/cmd_runner.c                         | 12 +--
 .../secondary/spp_worker_th/cmd_runner.c      | 10 +--
 .../secondary/spp_worker_th/command_conn.c    | 18 ++---
 .../secondary/spp_worker_th/command_conn.h    | 74 ++++++++-----------
 4 files changed, 51 insertions(+), 63 deletions(-)

diff --git a/src/pcap/cmd_runner.c b/src/pcap/cmd_runner.c
index d623d8c..9541cbb 100644
--- a/src/pcap/cmd_runner.c
+++ b/src/pcap/cmd_runner.c
@@ -743,7 +743,7 @@ send_parse_error_response(int *sock,
 			"response_str=\n%s\n", msg);
 
 	/* send response to requester */
-	ret = spp_send_message(sock, msg, strlen(msg));
+	ret = send_ctl_msg(sock, msg, strlen(msg));
 	if (unlikely(ret != SPPWK_RET_OK)) {
 		RTE_LOG(ERR, PCAP_RUNNER,
 				"Failed to send parse error response.\n");
@@ -839,7 +839,7 @@ send_command_result_response(int *sock,
 			"response_str=\n%s\n", msg);
 
 	/* send response to requester */
-	ret = spp_send_message(sock, msg, strlen(msg));
+	ret = send_ctl_msg(sock, msg, strlen(msg));
 	if (unlikely(ret != SPPWK_RET_OK)) {
 		RTE_LOG(ERR, PCAP_RUNNER,
 			"Failed to send command result response.\n");
@@ -923,9 +923,9 @@ process_request(int *sock, const char *request_str, size_t request_str_len)
 
 /* initialize command processor. */
 int
-spp_command_proc_init(const char *controller_ip, int controller_port)
+spp_command_proc_init(const char *ctl_ipaddr, int ctl_port)
 {
-	return spp_command_conn_init(controller_ip, controller_port);
+	return conn_spp_ctl_init(ctl_ipaddr, ctl_port);
 }
 
 /* process command from controller. */
@@ -948,11 +948,11 @@ spp_command_proc_do(void)
 		}
 	}
 
-	ret = spp_connect_to_controller(&sock);
+	ret = conn_spp_ctl(&sock);
 	if (unlikely(ret != SPPWK_RET_OK))
 		return SPPWK_RET_OK;
 
-	msg_ret = spp_receive_message(&sock, &msgbuf);
+	msg_ret = recv_ctl_msg(&sock, &msgbuf);
 	if (unlikely(msg_ret <= 0)) {
 		if (likely(msg_ret == 0))
 			return SPPWK_RET_OK;
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index ef3b2d9..92d727b 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -1525,7 +1525,7 @@ send_decode_error_response(int *sock,
 			"response_str=\n%s\n", msg);
 
 	/* send response to requester */
-	ret = spp_send_message(sock, msg, strlen(msg));
+	ret = send_ctl_msg(sock, msg, strlen(msg));
 	if (unlikely(ret != SPP_RET_OK)) {
 		RTE_LOG(ERR, WK_CMD_RUNNER,
 				"Failed to send decode error response.\n");
@@ -1608,7 +1608,7 @@ send_command_result_response(int *sock,
 			"response_str=\n%s\n", msg);
 
 	/* send response to requester */
-	ret = spp_send_message(sock, msg, strlen(msg));
+	ret = send_ctl_msg(sock, msg, strlen(msg));
 	if (unlikely(ret != SPP_RET_OK)) {
 		RTE_LOG(ERR, WK_CMD_RUNNER,
 			"Failed to send command result response.\n");
@@ -1687,7 +1687,7 @@ exec_cmds(int *sock, const char *req_str, size_t req_str_len)
 int
 sppwk_cmd_runner_conn(const char *ctl_ipaddr, int ctl_port)
 {
-	return spp_command_conn_init(ctl_ipaddr, ctl_port);
+	return conn_spp_ctl_init(ctl_ipaddr, ctl_port);
 }
 
 /* Run command sent from spp-ctl. */
@@ -1710,12 +1710,12 @@ sppwk_run_cmd(void)
 		}
 	}
 
-	ret = spp_connect_to_controller(&sock);
+	ret = conn_spp_ctl(&sock);
 
 	if (unlikely(ret != SPP_RET_OK))
 		return SPP_RET_OK;
 
-	msg_ret = spp_receive_message(&sock, &msgbuf);
+	msg_ret = recv_ctl_msg(&sock, &msgbuf);
 	if (unlikely(msg_ret <= 0)) {
 		if (likely(msg_ret == 0))
 			return SPP_RET_OK;
diff --git a/src/shared/secondary/spp_worker_th/command_conn.c b/src/shared/secondary/spp_worker_th/command_conn.c
index 915ad20..b80c54b 100644
--- a/src/shared/secondary/spp_worker_th/command_conn.c
+++ b/src/shared/secondary/spp_worker_th/command_conn.c
@@ -27,19 +27,19 @@ static char g_controller_ip[128] = "";
 /* controller's port number */
 static int g_controller_port;
 
-/* initialize command connection */
+/* Initialize connection to spp-ctl. */
 int
-spp_command_conn_init(const char *controller_ip, int controller_port)
+conn_spp_ctl_init(const char *ctl_ipaddr, int ctl_port)
 {
-	strcpy(g_controller_ip, controller_ip);
-	g_controller_port = controller_port;
+	strcpy(g_controller_ip, ctl_ipaddr);
+	g_controller_port = ctl_port;
 
 	return SPP_RET_OK;
 }
 
 /* connect to controller */
 int
-spp_connect_to_controller(int *sock)
+conn_spp_ctl(int *sock)
 {
 	static struct sockaddr_in controller_addr;
 	int ret = SPP_RET_NG;
@@ -90,7 +90,7 @@ spp_connect_to_controller(int *sock)
 
 /* receive message */
 int
-spp_receive_message(int *sock, char **strbuf)
+recv_ctl_msg(int *sock, char **strbuf)
 {
 	int ret = SPP_RET_NG;
 	int n_rx = 0;
@@ -134,13 +134,13 @@ spp_receive_message(int *sock, char **strbuf)
 	return n_rx;
 }
 
-/* send message */
+/* Send message to spp-ctl. */
 int
-spp_send_message(int *sock, const char *message, size_t message_len)
+send_ctl_msg(int *sock, const char *msg, size_t msg_len)
 {
 	int ret = SPP_RET_NG;
 
-	ret = send(*sock, message, message_len, 0);
+	ret = send(*sock, msg, msg_len, 0);
 	if (unlikely(ret == -1)) {
 		RTE_LOG(ERR, SPP_COMMAND_PROC, "Send failure. ret=%d\n", ret);
 		close(*sock);
diff --git a/src/shared/secondary/spp_worker_th/command_conn.h b/src/shared/secondary/spp_worker_th/command_conn.h
index 9112847..0d06131 100644
--- a/src/shared/secondary/spp_worker_th/command_conn.h
+++ b/src/shared/secondary/spp_worker_th/command_conn.h
@@ -6,8 +6,7 @@
 #define _COMMAND_CONN_H_
 
 /**
- * @file
- * SPP Connection
+ * @file SPP Connection
  *
  * Command connection management.
  */
@@ -20,63 +19,52 @@
 #define SPP_CONNERR_FATAL     -2
 
 /**
- * initialize command connection.
+ * Initialize connection to spp-ctl.
  *
- * @param controller_ip
- *  The controller's ip address.
- * @param controller_port
- *  The controller's port number.
- *
- * @retval SPP_RET_OK  succeeded.
- * @retval SPP_RET_NG failed.
+ * @param[in] ctl_ipaddr IP address of spp-ctl.
+ * @param[in] ctl_port Port num of spp-ctl.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
-int spp_command_conn_init(const char *controller_ip, int controller_port);
+int conn_spp_ctl_init(const char *ctl_ipaddr, int ctl_port);
 
 /**
- * connect to controller.
+ * Connect to spp-ctl.
  *
  * @note bocking.
- *
- * @param sock
- *  Socket number for connecting to controller.
- *
- * @retval SPP_RET_OK		 succeeded.
- * @retval SPP_CONNERR_TEMPORARY temporary error. please retry.
+ * @param sock Socket number for connecting to controller.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_CONNERR_TEMPORARY Temporary error for retry.
  */
-int spp_connect_to_controller(int *sock);
+int conn_spp_ctl(int *sock);
 
 /**
- * receive message.
- *
- * @note non-blocking.
+ * Receive message from spp-ctl.
  *
- * @param sock
- *  The socket number for the connection.
- * @param msgbuf
- *  The pointer to command message buffer.
+ * This function returns the num of received  msg in bytes, or SPP_RET_OK
+ * if empty message. Given socket is closed if spp-ctl has terminated the
+ * session.
  *
- * @retval 0 <			 succeeded. number of bytes received.
- * @retval SPP_RET_OK		 no receive message.
- * @retval SPP_CONNERR_TEMPORARY temporary error. please reconnect.
- * @retval SPP_CONNERR_FATAL	fatal error occurred. should terminate process.
+ * @note non-blocking.
+ * @param[in,out] sock Socket.
+ * @param[in,out] msgbuf The pointer to command message buffer.
+ * @retval NOB_BYTES Num of bytes of received msg if succeeded.
+ * @retval SPP_RET_OK No receive message.
+ * @retval SPP_CONNERR_TEMPORARY Temporary error for retry.
+ * @retval SPP_CONNERR_FATAL Fatal error for terminating the process.
  */
-int spp_receive_message(int *sock, char **msgbuf);
+int recv_ctl_msg(int *sock, char **msgbuf);
 
 /**
- * send message.
+ * Send message to spp-ctl.
  *
  * @note non-blocking.
- *
- * @param sock
- *  The socket number to be sent.
- * @param message
- *  The pointer to the message to be sent.
- * @param message_len
- *  The length of message.
- *
- * @retval SPP_RET_OK		 succeeded.
- * @retval SPP_CONNERR_TEMPORARY temporary error. please reconnect.
+ * @param[in,out] sock Socket.
+ * @param[in] msg Message sent to spp-ctl.
+ * @param[in] msg_len Length of given message.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_CONNERR_TEMPORARY Temporary error for retry.
  */
-int spp_send_message(int *sock, const char *message, size_t message_len);
+int send_ctl_msg(int *sock, const char *msg, size_t msg_len);
 
 #endif /* _COMMAND_CONN_H_ */
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 11:21:47 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTK00U9BZX18Y30@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:22:13 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTK00C1KZX11A00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:22:13 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTK002A5ZX1OO50@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:22:13 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf106.ddreams.local (Postfix) with ESMTP id ADACF7E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:22:13 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id AA3278E6055	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:22:13 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 9B3608E606B	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:22:13 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 1E3EE8E6069	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:22:12 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf106.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:22:12 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2MBNU012692;	Mon,
 24 Jun 2019 11:22:11 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2MBDf012691;	Mon, 24 Jun 2019 11:22:11 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2MBfZ012688	for unknown; Mon,
 24 Jun 2019 11:22:11 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2MBX2004483 for
 unknown; Mon, 24 Jun 2019 11:22:11 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2MBIK004479; Mon,
 24 Jun 2019 11:22:11 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2MBNi015964;	Mon,
 24 Jun 2019 11:22:11 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O2MBxx015960	for unknown; Mon, 24 Jun 2019 11:22:11 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2MAcl005444 for
 unknown; Mon, 24 Jun 2019 11:22:10 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2MAcX005438 for
 unknown; Mon, 24 Jun 2019 11:22:10 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2M4KX003184	for unknown; Mon,
 24 Jun 2019 11:22:10 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id A67F61BF70;	Mon, 24 Jun 2019 04:22:03 +0200 (CEST)
Received: from mail-pl1-f195.google.com
 (mail-pl1-f195.google.com [209.85.214.195]) by dpdk.org (Postfix)
 with ESMTP id 56E4F1BF6B for <spp@dpdk.org>; Mon,
 24 Jun 2019 04:22:02 +0200 (CEST)
Received: by mail-pl1-f195.google.com with SMTP id bi6so5976740plb.12 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 19:22:02 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id e10sm5916173pfi.153.2019.06.23.19.22.00
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 19:22:01 -0700 (PDT)
Date: Mon, 24 Jun 2019 11:21:47 +0900
From: yasufum.o@gmail.com
Subject: [spp 04353] [spp] [PATCH 2/2] shared/sec: rename command_conn.c
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624022147.18639-3-yasufum.o@gmail.com>
In-reply-to: <20190624022147.18639-1-yasufum.o@gmail.com>
References: <20190624022147.18639-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04353
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=BimbNEd/8yMsTK/cbPjq53lk4WigsPBEPAqIeoBQ+d0=;
 b=hcxACOJX1yw5ow2tfOuDJ90MhKAm5zu9R8EuytTWDupfxASvjKnMi1UomabzmhSgEH
 fdfg7232kM6+EVgEOfRwl3CTntJrHMrFIa8v/aOfx6ClA12Ag2HSR8NwSaKyu8IqwVt+
 pV1P33bAmCA5CWbgKStCMaTqfqx6i+XhzPto+GHxqcji3D7o801IcBMaq+5qZ/aEBQDM
 /fk0laexGS+D3l+y18U73zpQNNTlf9MU6Oo165UXVOoRhw0WrVsHq5awQIhLYwk36rym
 Ufdn6GdF+vocSNkzoRhTF5STUxyu6tV++n5Tb+xO6gKfCu21Fc5ByXg51CACS0opCwlr Q89w==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=BimbNEd/8yMsTK/cbPjq53lk4WigsPBEPAqIeoBQ+d0=;
 b=V5HVTjKkurEamV/hr2OSzK2rO5h7VA8cPiV92L7DRbeV1nevF3DUFbOr685C4nScx9
 o3y8k1fheDBtIXvAvKDw/Cmh7IfoFmyTkkwaxostIvsRKoCfv3As3XhF9eUQ6VldGJzG
 y/ZzUrKuBJoAK/VpEqHlPjWrzFjW0nskwRFWnFjieEWNT2PO5s/l6DfXqAMhL47eHE8C
 garrZV77oT/a88IGeGGEp/FgNxwP075BL/TafNK67s/MwTQoAV/3DgG2D34NjTVIKPsT
 omwj9hFxpIKlqzSpM1Yqf+50LKWOL6P/LNK87eCOEAyYFLFjvq0Y2L6Ap0PeUnFmAnrx x18A==
X-Gm-Message-State: APjAAAWObOlpyn0qtZ6RSK6Qz0XgQI6MixvpNss0c3mQvQMilUCbCuOQ
 mhsVXMnBc2sZPJHBUhup4nMie9BE
X-Google-Smtp-Source:
 APXvYqz/M6DsEmCOY7s2OnnveFmNwprcQN7YS0MDHIFtEQ+yADzXBxtj4nRV96tr9RKoHAqSOHOXPQ==
X-Received: by 2002:a17:902:2aab:: with SMTP id
 j40mr101350674plb.76.1561342921547; Sun, 23 Jun 2019 19:22:01 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 106
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This patch is to rename `command_conn.c` and `command_conn.h`, and
update Makefiles.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/Makefile                                             | 2 +-
 src/pcap/Makefile                                               | 2 +-
 src/pcap/cmd_runner.c                                           | 2 +-
 src/shared/secondary/spp_worker_th/cmd_runner.c                 | 2 +-
 .../secondary/spp_worker_th/{command_conn.c => conn_spp_ctl.c}  | 2 +-
 .../secondary/spp_worker_th/{command_conn.h => conn_spp_ctl.h}  | 0
 src/vf/Makefile                                                 | 2 +-
 7 files changed, 6 insertions(+), 6 deletions(-)
 rename src/shared/secondary/spp_worker_th/{command_conn.c => conn_spp_ctl.c} (99%)
 rename src/shared/secondary/spp_worker_th/{command_conn.h => conn_spp_ctl.h} (100%)

diff --git a/src/mirror/Makefile b/src/mirror/Makefile
index d1ae9ce..3e31cfa 100644
--- a/src/mirror/Makefile
+++ b/src/mirror/Makefile
@@ -19,7 +19,7 @@ SRCS-y += ../shared/common.c
 SRCS-y += ../shared/secondary/utils.c ../shared/secondary/add_port.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_utils.c
 SRCS-y += $(SPP_WKT_DIR)/spp_port.c
-SRCS-y += $(SPP_WKT_DIR)/command_conn.c
+SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_runner.c
 SRCS-y += $(SPP_WKT_DIR)/string_buffer.c
diff --git a/src/pcap/Makefile b/src/pcap/Makefile
index 61f6f81..c3d5ae4 100644
--- a/src/pcap/Makefile
+++ b/src/pcap/Makefile
@@ -18,7 +18,7 @@ SRCS-y := spp_pcap.c
 SRCS-y += cmd_utils.c
 SRCS-y += cmd_runner.c cmd_parser.c
 SRCS-y += ../shared/common.c
-SRCS-y += $(SPP_WKT_DIR)/command_conn.c
+SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/spp_port.c
 SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
 SRCS-y += $(SPP_WKT_DIR)/string_buffer.c
diff --git a/src/pcap/cmd_runner.c b/src/pcap/cmd_runner.c
index 9541cbb..8a1fb87 100644
--- a/src/pcap/cmd_runner.c
+++ b/src/pcap/cmd_runner.c
@@ -9,7 +9,7 @@
 
 #include "shared/secondary/spp_worker_th/string_buffer.h"
 #include "spp_pcap.h"
-#include "shared/secondary/spp_worker_th/command_conn.h"
+#include "shared/secondary/spp_worker_th/conn_spp_ctl.h"
 #include "cmd_parser.h"
 #include "cmd_runner.h"
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 92d727b..1d1ec49 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -13,7 +13,7 @@
 #include "spp_port.h"
 #include "string_buffer.h"
 
-#include "command_conn.h"
+#include "conn_spp_ctl.h"
 #include "cmd_parser.h"
 #include "cmd_runner.h"
 
diff --git a/src/shared/secondary/spp_worker_th/command_conn.c b/src/shared/secondary/spp_worker_th/conn_spp_ctl.c
similarity index 99%
rename from src/shared/secondary/spp_worker_th/command_conn.c
rename to src/shared/secondary/spp_worker_th/conn_spp_ctl.c
index b80c54b..030da92 100644
--- a/src/shared/secondary/spp_worker_th/command_conn.c
+++ b/src/shared/secondary/spp_worker_th/conn_spp_ctl.c
@@ -14,7 +14,7 @@
 
 #include "shared/common.h"
 #include "string_buffer.h"
-#include "command_conn.h"
+#include "conn_spp_ctl.h"
 
 #define RTE_LOGTYPE_SPP_COMMAND_PROC RTE_LOGTYPE_USER1
 
diff --git a/src/shared/secondary/spp_worker_th/command_conn.h b/src/shared/secondary/spp_worker_th/conn_spp_ctl.h
similarity index 100%
rename from src/shared/secondary/spp_worker_th/command_conn.h
rename to src/shared/secondary/spp_worker_th/conn_spp_ctl.h
diff --git a/src/vf/Makefile b/src/vf/Makefile
index bdeff98..faf72ee 100644
--- a/src/vf/Makefile
+++ b/src/vf/Makefile
@@ -18,7 +18,7 @@ SRCS-y := spp_vf.c classifier_mac.c spp_forward.c
 SRCS-y += $(SPP_WKT_DIR)/string_buffer.c
 SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
 SRCS-y += $(SPP_WKT_DIR)/spp_port.c
-SRCS-y += $(SPP_WKT_DIR)/command_conn.c
+SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_runner.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_utils.c
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 11:23:20 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTK00USPZZL8Y30@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:23:45 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTK00E3IZZLI800@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:23:45 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTK002X7ZZLOO60@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:23:45 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf101.ddreams.local (Postfix) with ESMTP id 084B37E603A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:23:45 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 063BD8E6055	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:23:45 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 03FDA8E6058	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:23:45 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 431F18E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:23:44 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf101.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:23:44 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2NiZx013165;	Mon,
 24 Jun 2019 11:23:44 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2NiUq013164;	Mon, 24 Jun 2019 11:23:44 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2Nhw7013161	for unknown; Mon,
 24 Jun 2019 11:23:43 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2NhZd005320 for
 unknown; Mon, 24 Jun 2019 11:23:43 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2NhX5005317; Mon,
 24 Jun 2019 11:23:43 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Nh61016155;	Mon,
 24 Jun 2019 11:23:43 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O2NhDH016151	for unknown; Mon, 24 Jun 2019 11:23:43 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Ngad005761 for
 unknown; Mon, 24 Jun 2019 11:23:43 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2NgF4005757 for
 unknown; Mon, 24 Jun 2019 11:23:42 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2Nat2003412	for unknown; Mon,
 24 Jun 2019 11:23:42 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id CF9FA1BF54;	Mon, 24 Jun 2019 04:23:35 +0200 (CEST)
Received: from mail-pl1-f178.google.com
 (mail-pl1-f178.google.com [209.85.214.178]) by dpdk.org (Postfix)
 with ESMTP id A25551BF42 for <spp@dpdk.org>; Mon,
 24 Jun 2019 04:23:34 +0200 (CEST)
Received: by mail-pl1-f178.google.com with SMTP id g4so5972114plb.5 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 19:23:34 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id y5sm9127726pgv.12.2019.06.23.19.23.32
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 19:23:33 -0700 (PDT)
Date: Mon, 24 Jun 2019 11:23:20 +0900
From: yasufum.o@gmail.com
Subject: [spp 04354] [spp] [PATCH 0/5] Revising logs and comments in shared
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624022325.18695-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04354
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=oTyPpZsn12HMYiJOBAmpMTo8NI0xKgknQcC3aRQFyEA=;
 b=k0Esgc1Ch7WRX0/LQHNWN/kNwPqOPJDw/d/FJGIQ25twAB9Rw8ydh/Tgp7FPSNNVei
 VJ8385Co0ok6i29nFM7az3tWJqrc17eaG8qa4Si53wZ57wdz4XsFyhIh37Bk6wRlTELF
 rYnf+jH7d2CVSkw35kEGgzYTAmx5YDEMql12n6txwpBAPQFsWHUmOM500Qj+jyQYi0tb
 fpvx9ARYnrPlofBfIhC+GOP+64tFftigSHjp7kzM2MhyRqymer7P1B9CVZve9g4j4mbH
 WFwOoiTt/zHhVxSMJwH0JDRWJ9E924/8jz9gfFa7uoMc0fOvBqRJWx2fukaHB4mJ8CGi syeg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=oTyPpZsn12HMYiJOBAmpMTo8NI0xKgknQcC3aRQFyEA=;
 b=qN1KIciGrPOY5SzT9NDYJyNKs9k7Oz4E0TwZQ/CRkOj6+TyI4Yz8/JUFZnLOcuuKXk
 2pbRpL1c8Bl+B5tiLWFx+HTN8RM7UPzpyBXOA83Gb4JbLmjYfn2mIw4kBt0NCBoV1dLR
 ap6NcvIuWd2k7pAfiBVaWjgMBy/rXCx4YsM8GGmwBhi/gEyRNGkoHBgHZJYoV8DxZg46
 DbXG0R+YssVoagyveaSaAoQNzn2CpmKZWyJVpwyQwPBUImnAGALjDXM+HM/qeeP6Upk7
 NjZNdAtU/V6A/G9rmJqN/P1uuPeT4hKn2HLGK/Z/4YQa+CJ/tLBLv26YUntPCOBmr0r5 +pSw==
X-Gm-Message-State: APjAAAXSFYQkV0jdm16OszjCzV02stnjFUVtmbsTXq8Zi5ARI4a+oXFg
 3LicrgxvGoEezYblxl0FAYZxb813
X-Google-Smtp-Source:
 APXvYqylOA4asqcWlaRIYUYpW4TZeTu2vTL4vpnDiZUXCmxaBb4w7tS4OZnR81ByLXgD5onLxV8TBA==
X-Received: by 2002:a17:902:20c8:: with SMTP id
 v8mr9801717plg.284.1561343013848; Sun, 23 Jun 2019 19:23:33 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 34
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This series of patches is to refactor log messages and comments for
code maintenance.

* Rename functions start with `dump_` used for not dumping messages but
  logging.

* Revise ambiguous variables start with `num_` used for "Number of" or
  exact number. Former one is renamed as starts with `nof_`.

* Revise terms of funcs and vars which are not correct meaning for
  usages.

Yasufumi Ogawa (5):
  shared/sec: revise comments in cmd_utils.h
  shared/sec: rename funcs start with dump
  shared/sec: revise member of struct for interface
  shared/sec: rename defines for length of str
  shared/sec: add prefix to defines of worker types

 src/mirror/spp_mirror.c                       |   6 +-
 .../secondary/spp_worker_th/cmd_parser.c      |   4 +-
 .../secondary/spp_worker_th/cmd_runner.c      |  11 +-
 .../secondary/spp_worker_th/cmd_utils.c       |  88 ++---
 .../secondary/spp_worker_th/cmd_utils.h       | 352 +++++++-----------
 src/shared/secondary/spp_worker_th/vf_deps.h  |  15 +-
 src/vf/classifier_mac.c                       |  18 +-
 src/vf/spp_forward.c                          |   8 +-
 8 files changed, 196 insertions(+), 306 deletions(-)

-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 11:23:21 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd106.ddreams.local
 (zssg-mailmd106.ddreams.local [10.160.123.101])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTK00UTTZZN8Y30@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:23:47 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd106.ddreams.local by
 zssg-mailmd106.ddreams.local (dDREAMS) id <0PTK0012EZZNUB00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:23:47 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd106.ddreams.local
 (dDREAMS) with ESMTP id <0PTK010YEZZNJ780@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:23:47 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id 8E1657E6038	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:23:47 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 8C7B68E6060	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:23:47 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 818C68E6068	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:23:47 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 150208E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:23:47 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:23:47 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Nk9J013173;	Mon,
 24 Jun 2019 11:23:46 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2Nk86013172;	Mon, 24 Jun 2019 11:23:46 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2NkgM013169	for unknown; Mon,
 24 Jun 2019 11:23:46 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2NkM1005346 for
 unknown; Mon, 24 Jun 2019 11:23:46 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Nkbr005342; Mon,
 24 Jun 2019 11:23:46 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2NkXT016169;	Mon,
 24 Jun 2019 11:23:46 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O2NkSA016165	for unknown; Mon, 24 Jun 2019 11:23:46 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Nj8R005822 for
 unknown; Mon, 24 Jun 2019 11:23:45 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2NjXq005815 for
 unknown; Mon, 24 Jun 2019 11:23:45 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2NdgL003432	for unknown; Mon,
 24 Jun 2019 11:23:45 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id DCAB01BF6D;	Mon, 24 Jun 2019 04:23:38 +0200 (CEST)
Received: from mail-pl1-f194.google.com
 (mail-pl1-f194.google.com [209.85.214.194]) by dpdk.org (Postfix)
 with ESMTP id CA8451BF6B for <spp@dpdk.org>; Mon,
 24 Jun 2019 04:23:37 +0200 (CEST)
Received: by mail-pl1-f194.google.com with SMTP id e5so5968788pls.13 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 19:23:37 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id y5sm9127726pgv.12.2019.06.23.19.23.35
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 19:23:36 -0700 (PDT)
Date: Mon, 24 Jun 2019 11:23:21 +0900
From: yasufum.o@gmail.com
Subject: [spp 04355] [spp] [PATCH 1/5] shared/sec: revise comments in
 cmd_utils.h
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624022325.18695-2-yasufum.o@gmail.com>
In-reply-to: <20190624022325.18695-1-yasufum.o@gmail.com>
References: <20190624022325.18695-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04355
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=y68ah2cXGg3xd19o1XpS4CSD7FEs795lmMpnWtNRBO4=;
 b=f3MyXj/e99byRHJVHIrJBSMyvhuYj4lzosOnjvwEpWYmKyDfdd7ZAYsuj+YK9ZJJel
 nKH+n7aA7F58G+y9cL2Y3UxY0rDPvw3WiKH2+98gBviot2oLhN5Ebro0eP8U9LCV3bX3
 x/ZPjL3sT2vHIKZv4gwCHELQfCZbx1p/vuxmM9PHE1I9dbweq7dqiziHjIepNTrl9z5L
 dh75uFKdenZCl7oHrTAb3Vw7YNSjLNK8R7QDLwilpUek5nN8Bj9rhtn1Bjg4zHKB46RB
 p9h/8x0gZLIM8F4UNKglH7JlHFbGQtrlsiWbssU5NtZvE/r4ht677Eh7ve6mSlEygYql y9zQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=y68ah2cXGg3xd19o1XpS4CSD7FEs795lmMpnWtNRBO4=;
 b=rgYBOemXn4oUBl/rahSWzjg8U7a6r8zQvNrwmVVEFuxpeqSvpt4rM9pFhcyEMDGe0X
 uM0PCpyLicRN66wfqCs+wmKKXpjfAHNY6J3rGkVLE/sQcVh1Bs/XNocUOO9bfnmAqHHP
 SktQfQaZcn6+8KEBDg0LpSfesIhz54W03qd09wMklYAe0VqdpfDPcEEtoEuCj19Y4Qr/
 vYZlrZsNp9H/omU2jFn+xS1Hm9jK83z13S1Qh35nJ0BazBblkmHpaaFUH+WF4mUYslJO
 EjUTaXv1KLwcVqmvQ70nN3Nj5WGOmXaFOFnAMRJbb6RiqiPINRIQ6XK2+ZzlAYzACj6l w1Mg==
X-Gm-Message-State: APjAAAWXm+Sg4w+pEa2kEqkyuhcRI2B/5fPsEi+notCUMrZFWsdMIELo
 TaVBpHKz7Dv/6KY2AeOERA6o8CzT
X-Google-Smtp-Source:
 APXvYqwdN0o6PShThXd+h6lw+DTHshGgYPu7xAK5A0Qxrtn8Jhv8DaKK28/HQj00TEIQ8JpQC+sB+g==
X-Received: by 2002:a17:902:7295:: with SMTP id
 d21mr125069151pll.299.1561343016783; Sun, 23 Jun 2019 19:23:36 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 505
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This patch is to revise comments in `cmd_utils.h` by removing
redundant comments to the file becomes easier to be maintained.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/cmd_utils.h       | 296 ++++++------------
 1 file changed, 102 insertions(+), 194 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 7a31da6..4cecfdd 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -132,12 +132,9 @@ enum sppwk_port_abl_ops {
 enum SPP_LONGOPT_RETVAL {
 	SPP_LONGOPT_RETVAL__ = 127,
 
-	/*
-	 * Return value definition for getopt_long()
-	 * Only for long option
-	 */
-	SPP_LONGOPT_RETVAL_CLIENT_ID,   /* --client-id    */
-	SPP_LONGOPT_RETVAL_VHOST_CLIENT /* --vhost-client */
+	/* Return value definition for getopt_long(). Only for long option. */
+	SPP_LONGOPT_RETVAL_CLIENT_ID,    /* For `--client-id` */
+	SPP_LONGOPT_RETVAL_VHOST_CLIENT  /* For `--vhost-client` */
 };
 
 /* Flag of processing type to copy management information */
@@ -162,23 +159,20 @@ struct spp_vlantag_info {
 	int tci; /**< Tag Control Information */
 };
 
-/**
- * Data for each port ability which indicates vlantag related information
- * for the port
- */
+/* Ability for vlantag for a port. */
 union spp_ability_data {
 	/** VLAN tag information */
 	struct spp_vlantag_info vlantag;
 };
 
-/** Port ability information */
+/* Port ability information. */
 struct spp_port_ability {
 	enum sppwk_port_abl_ops ops;  /**< Port ability Operations */
 	enum spp_port_rxtx rxtx;      /**< rx/tx identifier */
 	union spp_ability_data data;  /**< Port ability data */
 };
 
-/* Attributes for classifying . */
+/* Attributes for classifying. */
 struct sppwk_cls_attrs {
 	uint64_t mac_addr;  /**< Mac address (binary) */
 	char mac_addr_str[SPP_MIN_STR_LEN];  /**< Mac address (text) */
@@ -217,67 +211,49 @@ struct sppwk_comp_info {
 
 /* Manage given options as global variable */
 struct startup_param {
-	int client_id;		/* Client ID */
-	char server_ip[INET_ADDRSTRLEN];
-				/* IP address stiring of spp-ctl */
-	int server_port;	/* Port Number of spp-ctl */
-	int vhost_client;	/* Flag for --vhost-client option */
+	int client_id;  /* Client ID */
+	char server_ip[INET_ADDRSTRLEN];  /* IP address of spp-ctl */
+	int server_port;   /* Port Number of spp-ctl */
+	int vhost_client;  /* Flag for --vhost-client option */
 	enum secondary_type secondary_type;
-				/* secondary type */
 };
 
-/* Manage number of interfaces  and port information as global variable */
+/* Manage number of interfaces  and port information as global variable. */
 struct iface_info {
-	int num_nic;		/* The number of phy */
-	int num_vhost;		/* The number of vhost */
-	int num_ring;		/* The number of ring */
+	int num_nic;    /* The number of phy */
+	int num_vhost;  /* The number of vhost */
+	int num_ring;   /* The number of ring */
 	struct sppwk_port_info nic[RTE_MAX_ETHPORTS];
-				/* Port information of phy */
 	struct sppwk_port_info vhost[RTE_MAX_ETHPORTS];
-				/* Port information of vhost */
 	struct sppwk_port_info ring[RTE_MAX_ETHPORTS];
-				/* Port information of ring */
 };
 
-/* Manage component running in core as global variable */
+/* Manage component running in core as global variable. */
 struct core_info {
-	int num;	       /* The number of IDs below */
-	int id[RTE_MAX_LCORE]; /* ID list of components executed on cpu core */
+	int num;  /* Number of IDs below */
+	int id[RTE_MAX_LCORE];  /* IDs of components run on the lcore. */
 };
 
-/* Manage core status and component information as global variable */
+/* Manage core status and component info as global variable. */
 struct core_mng_info {
-	/* Status of cpu core */
 	volatile enum sppwk_lcore_status status;
-
-	/* Index number of core information for reference */
-	volatile int ref_index;
-
-	/* Index number of core information for updating */
-	volatile int upd_index;
-
-	/* Core information of each cpu core */
-	struct core_info core[SPP_INFO_AREA_MAX];
+	volatile int ref_index;  /* index for reference */
+	volatile int upd_index;  /* index for update */
+	struct core_info core[SPP_INFO_AREA_MAX];  /* info of each core */
 };
 
-/* Manage data to be backup */
+/* Manage data used for backup. */
 struct cancel_backup_info {
-	/* Backup data of core information */
 	struct core_mng_info core[RTE_MAX_LCORE];
-
-	/* Backup data of component information */
 	struct sppwk_comp_info component[RTE_MAX_LCORE];
-
-	/* Backup data of interface information */
 	struct iface_info interface;
 };
 
+/* TODO(yasufum) revise using term `iterate`, or comments. */
 struct spp_iterate_core_params;
 /**
- * definition of iterated core element procedure function
- * which is member of spp_iterate_core_params structure.
- * Above structure is used when listing core information
- * (e.g) create resonse to status command.
+ * Define func to iterate lcore to list core information for showing status
+ * or so, as a member of struct `spp_iterate_core_params`.
  */
 typedef int (*spp_iterate_core_element_proc)(
 		struct spp_iterate_core_params *params,
@@ -290,24 +266,19 @@ typedef int (*spp_iterate_core_element_proc)(
 		const struct sppwk_port_idx *tx_ports);
 
 /**
- * iterate core table parameters which is
- * used when listing core table content
- * (e.g.) create response to status command.
+ * iterate core table parameters used to list content of lcore table for.
+ * showing status or so.
  */
 struct spp_iterate_core_params {
-	/** Output buffer */
-	char *output;
-
+	char *output;  /* Buffer used for output */
 	/** The function for creating core information */
 	spp_iterate_core_element_proc element_proc;
 };
 
 struct spp_iterate_classifier_table_params;
 /**
- * definition of iterated classifier element procedure function
- * which is member of spp_iterate_classifier_table_params structure.
- * Above structure is used when listing classifier table information
- * (e.g) create resonse to status command.
+ * Define func to iterate classifier for showing status or so, as a member
+ * member of struct `spp_iterate_classifier_table_params`.
  */
 typedef int (*spp_iterate_classifier_element_proc)(
 		struct spp_iterate_classifier_table_params *params,
@@ -316,14 +287,11 @@ typedef int (*spp_iterate_classifier_element_proc)(
 		const struct sppwk_port_idx *port);
 
 /**
- * iterate classifier table parameters which is
- * used when listing classifier table content
- * (e.g.) create response to status command.
+ * iterate classifier table parameters which is used when listing classifier
+ * table content for status command or so.
  */
 struct spp_iterate_classifier_table_params {
-	/* Output buffer */
-	void *output;
-
+	void *output;  /* Buffer used for output */
 	/* The function for creating classifier table information */
 	spp_iterate_classifier_element_proc element_proc;
 };
@@ -331,100 +299,76 @@ struct spp_iterate_classifier_table_params {
 /**
  * Make a hexdump of an array data in every 4 byte
  *
- * @param name
- *  dump name.
- * @param addr
- *  dump address.
- * @param size
- *  dump byte size.
- *
+ * @param name Dumped name.
+ * @param addr Dumped address.
+ * @param size Dumped byte size.
  */
 void dump_buff(const char *name, const void *addr, const size_t size);
 
 /**
- * added ring_pmd
+ * Add ring pmd for owned proccess or thread.
  *
- * @param ring_id
- *  added ring id.
- *
- * @retval 0~   ring_port_id.
- * @retval -1   failed.
+ * @param[in] ring_id added ring id.
+ * @return ring port ID, or -1 if failed.
  */
 int spp_vf_add_ring_pmd(int ring_id);
 
 /**
- * added vhost_pmd
- *
- * @param index
- *  add vohst id.
- * @param client
- *  add client id.
+ * Add ring pmd for owned proccess or thread.
  *
- * @retval 0~   vhost_port_id.
- * @retval -1   failed.
+ * @param[in] index Vohst port id.
+ * @param[in] client Client id.
+ * @return Vhost port ID, or -1 if failed.
  */
 int spp_vf_add_vhost_pmd(int index, int client);
 
 /**
  * Get core status
  *
- * @param lcore_id
- *  Logical core ID.
- *
- * @return
- *  Status of specified logical core.
+ * @param[in] lcore_id Logical core ID.
+ * @return Status of specified logical core.
  */
 enum sppwk_lcore_status spp_get_core_status(unsigned int lcore_id);
 
 /**
  * Get component type of target component_info
  *
- * @param id
- *  component ID.
- *
- * @return
- *  Type of component executed
+ * @param id Component ID.
+ * @return Type of component executed
  */
 enum sppwk_worker_type spp_get_component_type(int id);
 
+/* TODO(yasufum) revise the name of func. */
 /**
- * Run check_core_status() for SPP_CORE_STATUS_CHECK_MAX times with
- * interval time (1sec)
- *
- * @param status
- *  wait check status.
+ * Run check_core_status() several times with interval, up to
+ * SPP_CORE_STATUS_CHECK_MAX times.
  *
- * @retval 0  succeeded.
- * @retval -1 failed.
+ * @param[in] status Status for checking.
+ * @retval  0 If succeeded.
+ * @retval -1 If failed.
  */
 int check_core_status_wait(enum sppwk_lcore_status status);
 
 /**
  * Set core status
  *
- * @param lcore_id
- *  Logical core ID.
- * @param status
- *  set status.
+ * @param lcore_id Lcore ID.
+ * @param status Status to be set.
  *
  */
 void set_core_status(unsigned int lcore_id, enum sppwk_lcore_status status);
 
 /**
- * Set all core status to given
- *
- * @param status
- *  set status.
+ * Set all core status to given one.
  *
+ * @param status status to be set.
  */
 void set_all_core_status(enum sppwk_lcore_status status);
 
 /**
- * Set all of component status to SPP_CORE_STOP_REQUEST if received signal
- * is SIGTERM or SIGINT
+ * Set all comp status to SPP_CORE_STOP_REQUEST if received SIGTERM or SIGINT.
  *
- * @param signl
- *  received signal.
+ * @param[in] signal Received signal.
  */
 void stop_process(int signal);
 
@@ -460,15 +404,11 @@ void copy_mng_info(
 /* Backup the management information */
 void backup_mng_info(struct cancel_backup_info *backup);
 
-/**
- * Setup management info for spp_vf
- */
+/* Setup management info for spp_vf */
 int init_mng_data(void);
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
-/**
- * Print statistics of time for packet processing in ring interface
- */
+/* Print statistics of time for packet processing in ring interface */
 void print_ring_latency_stats(void);
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 
@@ -478,11 +418,8 @@ void  del_vhost_sockfile(struct sppwk_port_info *vhost);
 /**
  * Get core ID of target component
  *
- * @param component_id
- *  unique component ID.
- *
- * @return
- *  Logical core id of specified component.
+ * @param component_id Unique component ID.
+ * @return Logical core id of specified component.
  */
 unsigned int spp_get_component_core(int component_id);
 
@@ -492,27 +429,20 @@ struct core_info *get_core_info(unsigned int lcore_id);
 /**
  * Check core index change
  *
- * @param lcore_id
- *  Logical core ID.
- *
- *  True if index has changed.
- * @retval SPP_RET_OK index has changed.
- * @retval SPP_RET_NG index not changed.
+ * @param lcore_id Lcore ID.
+ * @retval SPP_RET_OK If index is updated.
+ * @retval SPP_RET_NG If index is not updated.
  */
 int spp_check_core_update(unsigned int lcore_id);
 
 /**
  * Check if component is using port.
  *
- * @param iface_type
- *  Interface type to be validated.
- * @param iface_no
- *  Interface number to be validated.
- * @param rxtx
- *  tx/rx type to be validated.
- *
- * @retval 0~127      match component ID
- * @retval SPP_RET_NG failed.
+ * @param iface_type Interface type to be validated.
+ * @param iface_no Interface number to be validated.
+ * @param rxtx Value of spp_port_rxtx to be validated.
+ * @retval 0~127      If match component ID
+ * @retval SPP_RET_NG If failed.
  */
 int spp_check_used_port(
 		enum port_type iface_type,
@@ -605,60 +535,45 @@ void update_lcore_info(void);
 /**
  * Activate temporarily stored component info while flushing.
  *
- * @retval SPP_RET_OK if succeeded.
- * @retval SPP_RET_NG if failed.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
 int update_comp_info(void);
 
 /**
- * Port type to string
- *
- * @param port
- *  Character string of Port type to be converted.
- * @param iface_type
- *  port interface type
- * @param iface_no
- *  interface no
+ * Port type to string.
  *
- * @retval SPP_RET_OK succeeded.
- * @retval SPP_RET_NG failed.
+ * @param port String of port type to be converted.
+ * @param iface_type Interface type.
+ * @param iface_no Interface number.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
 int
 spp_format_port_string(char *port, enum port_type iface_type, int iface_no);
 
 /**
- * Change mac address string to int64
+ * Change string of MAC address to int64.
  *
- * @param mac
- *  Character string of MAC address to be converted.
- *
- * @retval 0< int64 that store mac address
- * @retval SPP_RET_NG
+ * @param macaddr String of MAC address to be converted.
+ * @retval 0~N MAC address in int64 format.
+ * @retval SPP_RET_NG if invalid.
  */
 int64_t sppwk_convert_mac_str_to_int64(const char *macaddr);
 
 /**
- * Set mange data address
- *
- * @param startup_param_p
- *  g_startup_param address
- * @param iface_p
- *  g_iface_info address
- * @param component_p
- *  g_component_info address
- * @param core_mng_p
- *  g_core_info address
- * @param change_core_p
- *  g_change_core address
- * @param change_component_p
- *  g_change_component address
- * @param backup_info_p
- *  g_backup_info address
- * @param main_lcore_id
- *  main_lcore_id mask
+ * Set mange data address.
  *
- * @retval SPP_RET_OK succeeded.
- * @retval SPP_RET_NG failed.
+ * @param startup_param_p Pointer to  g_startup_param address.
+ * @param iface_p Pointer to g_iface_info address.
+ * @param component_p Pointer to g_component_info address.
+ * @param core_mng_p Pointer to g_core_info address.
+ * @param change_core_p Pointer to g_change_core address.
+ * @param change_component_p Pointer to g_change_component address.
+ * @param backup_info_p Pointer to g_backup_info address.
+ * @param main_lcore_id Lcore ID of main thread.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
 int sppwk_set_mng_data(struct startup_param *startup_param_p,
 		struct iface_info *iface_p,
@@ -670,22 +585,15 @@ int sppwk_set_mng_data(struct startup_param *startup_param_p,
 		unsigned int main_lcore_id);
 
 /**
- * Get mange data address
+ * Get mange data address.
  *
- * @param startup_param_p
- *  g_startup_param write address
- * @param iface_addr
- *  g_iface_info write address
- * @param component_addr
- *  g_component_info write address
- * @param core_mng_addr
- *  g_core_mng_info write address
- * @param change_core_addr
- *  g_change_core write address
- * @param change_component_addr
- *  g_change_component write address
- * @param backup_info_addr
- *  g_backup_info write address
+ * @param startup_param_p Pointer to startup params.
+ * @param iface_addr Pointer to g_iface_info.
+ * @param component_addr Pointer to g_component_info.
+ * @param core_mng_addr Pointer to g_core_mng_info.
+ * @param change_core_addr Pointer to change_core_addr.
+ * @param change_component_addr Pointer to g_change_component.
+ * @param backup_info_addr Pointer to g_backup_info.
  */
 void sppwk_get_mng_data(struct startup_param **startup_param_p,
 		struct iface_info **iface_p,
-- 
2.17.1



From spp-request@dpdk.org Mon Jun 24 11:23:38 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTK00UU7ZZQ8Y30@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:23:50 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTK00E4UZZQL000@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:23:50 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTK0023IZZQOO70@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:23:50 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf105.ddreams.local (Postfix) with ESMTP id BD6D17E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:23:50 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id BBFD08E6060	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:23:50 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id B05878E605D	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:23:50 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id BCBDB8E6062	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:23:47 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf105.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:23:47 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Nl4K013181;	Mon,
 24 Jun 2019 11:23:47 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2NlBb013180;	Mon, 24 Jun 2019 11:23:47 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2Nl33013177	for unknown; Mon,
 24 Jun 2019 11:23:47 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2NlWn005836 for
 unknown; Mon, 24 Jun 2019 11:23:47 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2NlE9005833 for
 unknown; Mon, 24 Jun 2019 11:23:47 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2NehN003438	for unknown; Mon,
 24 Jun 2019 11:23:46 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id E9F1D1BF6F	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 24 Jun 2019 04:23:39 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 2
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 24 Jun 2019 04:23:38 +0200
Message-id: <mailman.23353.1561343018.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH 0/2] Rename shared lib command_conn (yasufum.o@gmail.com)
   2. [PATCH 1/2] shared/sec: revise funcs to connect to spp-ctl
      (yasufum.o@gmail.com)
   3. [PATCH 2/2] shared/sec: rename command_conn.c
      (yasufum.o@gmail.com)
   4. [PATCH 0/5] Revising logs and comments in shared
      (yasufum.o@gmail.com)
   5. [PATCH 1/5] shared/sec: revise comments in cmd_utils.h
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon, 24 Jun 2019 11:21:45 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 0/2] Rename shared lib command_conn
Message-ID: <20190624022147.18639-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Shared libs of SPP workers for connecting to spp-ctl are defined in
`command_conn.c` and `command_conn.h`. This update is to rename
`command_conn` to `conn_spp_ctl` to be explicitly it is just for
spp-ctl. This update also renames functions in these files.

Yasufumi Ogawa (2):
  shared/sec: revise funcs to connect to spp-ctl
  shared/sec: rename command_conn.c

 src/mirror/Makefile                           |  2 +-
 src/pcap/Makefile                             |  2 +-
 src/pcap/cmd_runner.c                         | 14 ++--
 .../secondary/spp_worker_th/cmd_runner.c      | 12 +--
 .../secondary/spp_worker_th/command_conn.h    | 82 -------------------
 .../{command_conn.c => conn_spp_ctl.c}        | 20 ++---
 .../secondary/spp_worker_th/conn_spp_ctl.h    | 70 ++++++++++++++++
 src/vf/Makefile                               |  2 +-
 8 files changed, 96 insertions(+), 108 deletions(-)
 delete mode 100644 src/shared/secondary/spp_worker_th/command_conn.h
 rename src/shared/secondary/spp_worker_th/{command_conn.c => conn_spp_ctl.c} (88%)
 create mode 100644 src/shared/secondary/spp_worker_th/conn_spp_ctl.h

-- 
2.17.1



------------------------------

Message: 2
Date: Mon, 24 Jun 2019 11:21:46 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 1/2] shared/sec: revise funcs to connect to
	spp-ctl
Message-ID: <20190624022147.18639-2-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Functions defined in `command_conn.c` and its header are prefixed as
`spp_`, but there are not application wide and the prefix should be
removed. This update is to simplize the name of functions, and revise
comments.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/pcap/cmd_runner.c                         | 12 +--
 .../secondary/spp_worker_th/cmd_runner.c      | 10 +--
 .../secondary/spp_worker_th/command_conn.c    | 18 ++---
 .../secondary/spp_worker_th/command_conn.h    | 74 ++++++++-----------
 4 files changed, 51 insertions(+), 63 deletions(-)

diff --git a/src/pcap/cmd_runner.c b/src/pcap/cmd_runner.c
index d623d8c..9541cbb 100644
--- a/src/pcap/cmd_runner.c
+++ b/src/pcap/cmd_runner.c
@@ -743,7 +743,7 @@ send_parse_error_response(int *sock,
 			"response_str=\n%s\n", msg);
 
 	/* send response to requester */
-	ret = spp_send_message(sock, msg, strlen(msg));
+	ret = send_ctl_msg(sock, msg, strlen(msg));
 	if (unlikely(ret != SPPWK_RET_OK)) {
 		RTE_LOG(ERR, PCAP_RUNNER,
 				"Failed to send parse error response.\n");
@@ -839,7 +839,7 @@ send_command_result_response(int *sock,
 			"response_str=\n%s\n", msg);
 
 	/* send response to requester */
-	ret = spp_send_message(sock, msg, strlen(msg));
+	ret = send_ctl_msg(sock, msg, strlen(msg));
 	if (unlikely(ret != SPPWK_RET_OK)) {
 		RTE_LOG(ERR, PCAP_RUNNER,
 			"Failed to send command result response.\n");
@@ -923,9 +923,9 @@ process_request(int *sock, const char *request_str, size_t request_str_len)
 
 /* initialize command processor. */
 int
-spp_command_proc_init(const char *controller_ip, int controller_port)
+spp_command_proc_init(const char *ctl_ipaddr, int ctl_port)
 {
-	return spp_command_conn_init(controller_ip, controller_port);
+	return conn_spp_ctl_init(ctl_ipaddr, ctl_port);
 }
 
 /* process command from controller. */
@@ -948,11 +948,11 @@ spp_command_proc_do(void)
 		}
 	}
 
-	ret = spp_connect_to_controller(&sock);
+	ret = conn_spp_ctl(&sock);
 	if (unlikely(ret != SPPWK_RET_OK))
 		return SPPWK_RET_OK;
 
-	msg_ret = spp_receive_message(&sock, &msgbuf);
+	msg_ret = recv_ctl_msg(&sock, &msgbuf);
 	if (unlikely(msg_ret <= 0)) {
 		if (likely(msg_ret == 0))
 			return SPPWK_RET_OK;
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index ef3b2d9..92d727b 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -1525,7 +1525,7 @@ send_decode_error_response(int *sock,
 			"response_str=\n%s\n", msg);
 
 	/* send response to requester */
-	ret = spp_send_message(sock, msg, strlen(msg));
+	ret = send_ctl_msg(sock, msg, strlen(msg));
 	if (unlikely(ret != SPP_RET_OK)) {
 		RTE_LOG(ERR, WK_CMD_RUNNER,
 				"Failed to send decode error response.\n");
@@ -1608,7 +1608,7 @@ send_command_result_response(int *sock,
 			"response_str=\n%s\n", msg);
 
 	/* send response to requester */
-	ret = spp_send_message(sock, msg, strlen(msg));
+	ret = send_ctl_msg(sock, msg, strlen(msg));
 	if (unlikely(ret != SPP_RET_OK)) {
 		RTE_LOG(ERR, WK_CMD_RUNNER,
 			"Failed to send command result response.\n");
@@ -1687,7 +1687,7 @@ exec_cmds(int *sock, const char *req_str, size_t req_str_len)
 int
 sppwk_cmd_runner_conn(const char *ctl_ipaddr, int ctl_port)
 {
-	return spp_command_conn_init(ctl_ipaddr, ctl_port);
+	return conn_spp_ctl_init(ctl_ipaddr, ctl_port);
 }
 
 /* Run command sent from spp-ctl. */
@@ -1710,12 +1710,12 @@ sppwk_run_cmd(void)
 		}
 	}
 
-	ret = spp_connect_to_controller(&sock);
+	ret = conn_spp_ctl(&sock);
 
 	if (unlikely(ret != SPP_RET_OK))
 		return SPP_RET_OK;
 
-	msg_ret = spp_receive_message(&sock, &msgbuf);
+	msg_ret = recv_ctl_msg(&sock, &msgbuf);
 	if (unlikely(msg_ret <= 0)) {
 		if (likely(msg_ret == 0))
 			return SPP_RET_OK;
diff --git a/src/shared/secondary/spp_worker_th/command_conn.c b/src/shared/secondary/spp_worker_th/command_conn.c
index 915ad20..b80c54b 100644
--- a/src/shared/secondary/spp_worker_th/command_conn.c
+++ b/src/shared/secondary/spp_worker_th/command_conn.c
@@ -27,19 +27,19 @@ static char g_controller_ip[128] = "";
 /* controller's port number */
 static int g_controller_port;
 
-/* initialize command connection */
+/* Initialize connection to spp-ctl. */
 int
-spp_command_conn_init(const char *controller_ip, int controller_port)
+conn_spp_ctl_init(const char *ctl_ipaddr, int ctl_port)
 {
-	strcpy(g_controller_ip, controller_ip);
-	g_controller_port = controller_port;
+	strcpy(g_controller_ip, ctl_ipaddr);
+	g_controller_port = ctl_port;
 
 	return SPP_RET_OK;
 }
 
 /* connect to controller */
 int
-spp_connect_to_controller(int *sock)
+conn_spp_ctl(int *sock)
 {
 	static struct sockaddr_in controller_addr;
 	int ret = SPP_RET_NG;
@@ -90,7 +90,7 @@ spp_connect_to_controller(int *sock)
 
 /* receive message */
 int
-spp_receive_message(int *sock, char **strbuf)
+recv_ctl_msg(int *sock, char **strbuf)
 {
 	int ret = SPP_RET_NG;
 	int n_rx = 0;
@@ -134,13 +134,13 @@ spp_receive_message(int *sock, char **strbuf)
 	return n_rx;
 }
 
-/* send message */
+/* Send message to spp-ctl. */
 int
-spp_send_message(int *sock, const char *message, size_t message_len)
+send_ctl_msg(int *sock, const char *msg, size_t msg_len)
 {
 	int ret = SPP_RET_NG;
 
-	ret = send(*sock, message, message_len, 0);
+	ret = send(*sock, msg, msg_len, 0);
 	if (unlikely(ret == -1)) {
 		RTE_LOG(ERR, SPP_COMMAND_PROC, "Send failure. ret=%d\n", ret);
 		close(*sock);
diff --git a/src/shared/secondary/spp_worker_th/command_conn.h b/src/shared/secondary/spp_worker_th/command_conn.h
index 9112847..0d06131 100644
--- a/src/shared/secondary/spp_worker_th/command_conn.h
+++ b/src/shared/secondary/spp_worker_th/command_conn.h
@@ -6,8 +6,7 @@
 #define _COMMAND_CONN_H_
 
 /**
- * @file
- * SPP Connection
+ * @file SPP Connection
  *
  * Command connection management.
  */
@@ -20,63 +19,52 @@
 #define SPP_CONNERR_FATAL     -2
 
 /**
- * initialize command connection.
+ * Initialize connection to spp-ctl.
  *
- * @param controller_ip
- *  The controller's ip address.
- * @param controller_port
- *  The controller's port number.
- *
- * @retval SPP_RET_OK  succeeded.
- * @retval SPP_RET_NG failed.
+ * @param[in] ctl_ipaddr IP address of spp-ctl.
+ * @param[in] ctl_port Port num of spp-ctl.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
-int spp_command_conn_init(const char *controller_ip, int controller_port);
+int conn_spp_ctl_init(const char *ctl_ipaddr, int ctl_port);
 
 /**
- * connect to controller.
+ * Connect to spp-ctl.
  *
  * @note bocking.
- *
- * @param sock
- *  Socket number for connecting to controller.
- *
- * @retval SPP_RET_OK		 succeeded.
- * @retval SPP_CONNERR_TEMPORARY temporary error. please retry.
+ * @param sock Socket number for connecting to controller.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_CONNERR_TEMPORARY Temporary error for retry.
  */
-int spp_connect_to_controller(int *sock);
+int conn_spp_ctl(int *sock);
 
 /**
- * receive message.
- *
- * @note non-blocking.
+ * Receive message from spp-ctl.
  *
- * @param sock
- *  The socket number for the connection.
- * @param msgbuf
- *  The pointer to command message buffer.
+ * This function returns the num of received  msg in bytes, or SPP_RET_OK
+ * if empty message. Given socket is closed if spp-ctl has terminated the
+ * session.
  *
- * @retval 0 <			 succeeded. number of bytes received.
- * @retval SPP_RET_OK		 no receive message.
- * @retval SPP_CONNERR_TEMPORARY temporary error. please reconnect.
- * @retval SPP_CONNERR_FATAL	fatal error occurred. should terminate process.
+ * @note non-blocking.
+ * @param[in,out] sock Socket.
+ * @param[in,out] msgbuf The pointer to command message buffer.
+ * @retval NOB_BYTES Num of bytes of received msg if succeeded.
+ * @retval SPP_RET_OK No receive message.
+ * @retval SPP_CONNERR_TEMPORARY Temporary error for retry.
+ * @retval SPP_CONNERR_FATAL Fatal error for terminating the process.
  */
-int spp_receive_message(int *sock, char **msgbuf);
+int recv_ctl_msg(int *sock, char **msgbuf);
 
 /**
- * send message.
+ * Send message to spp-ctl.
  *
  * @note non-blocking.
- *
- * @param sock
- *  The socket number to be sent.
- * @param message
- *  The pointer to the message to be sent.
- * @param message_len
- *  The length of message.
- *
- * @retval SPP_RET_OK		 succeeded.
- * @retval SPP_CONNERR_TEMPORARY temporary error. please reconnect.
+ * @param[in,out] sock Socket.
+ * @param[in] msg Message sent to spp-ctl.
+ * @param[in] msg_len Length of given message.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_CONNERR_TEMPORARY Temporary error for retry.
  */
-int spp_send_message(int *sock, const char *message, size_t message_len);
+int send_ctl_msg(int *sock, const char *msg, size_t msg_len);
 
 #endif /* _COMMAND_CONN_H_ */
-- 
2.17.1



------------------------------

Message: 3
Date: Mon, 24 Jun 2019 11:21:47 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 2/2] shared/sec: rename command_conn.c
Message-ID: <20190624022147.18639-3-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This patch is to rename `command_conn.c` and `command_conn.h`, and
update Makefiles.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/Makefile                                             | 2 +-
 src/pcap/Makefile                                               | 2 +-
 src/pcap/cmd_runner.c                                           | 2 +-
 src/shared/secondary/spp_worker_th/cmd_runner.c                 | 2 +-
 .../secondary/spp_worker_th/{command_conn.c => conn_spp_ctl.c}  | 2 +-
 .../secondary/spp_worker_th/{command_conn.h => conn_spp_ctl.h}  | 0
 src/vf/Makefile                                                 | 2 +-
 7 files changed, 6 insertions(+), 6 deletions(-)
 rename src/shared/secondary/spp_worker_th/{command_conn.c => conn_spp_ctl.c} (99%)
 rename src/shared/secondary/spp_worker_th/{command_conn.h => conn_spp_ctl.h} (100%)

diff --git a/src/mirror/Makefile b/src/mirror/Makefile
index d1ae9ce..3e31cfa 100644
--- a/src/mirror/Makefile
+++ b/src/mirror/Makefile
@@ -19,7 +19,7 @@ SRCS-y += ../shared/common.c
 SRCS-y += ../shared/secondary/utils.c ../shared/secondary/add_port.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_utils.c
 SRCS-y += $(SPP_WKT_DIR)/spp_port.c
-SRCS-y += $(SPP_WKT_DIR)/command_conn.c
+SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_runner.c
 SRCS-y += $(SPP_WKT_DIR)/string_buffer.c
diff --git a/src/pcap/Makefile b/src/pcap/Makefile
index 61f6f81..c3d5ae4 100644
--- a/src/pcap/Makefile
+++ b/src/pcap/Makefile
@@ -18,7 +18,7 @@ SRCS-y := spp_pcap.c
 SRCS-y += cmd_utils.c
 SRCS-y += cmd_runner.c cmd_parser.c
 SRCS-y += ../shared/common.c
-SRCS-y += $(SPP_WKT_DIR)/command_conn.c
+SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/spp_port.c
 SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
 SRCS-y += $(SPP_WKT_DIR)/string_buffer.c
diff --git a/src/pcap/cmd_runner.c b/src/pcap/cmd_runner.c
index 9541cbb..8a1fb87 100644
--- a/src/pcap/cmd_runner.c
+++ b/src/pcap/cmd_runner.c
@@ -9,7 +9,7 @@
 
 #include "shared/secondary/spp_worker_th/string_buffer.h"
 #include "spp_pcap.h"
-#include "shared/secondary/spp_worker_th/command_conn.h"
+#include "shared/secondary/spp_worker_th/conn_spp_ctl.h"
 #include "cmd_parser.h"
 #include "cmd_runner.h"
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 92d727b..1d1ec49 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -13,7 +13,7 @@
 #include "spp_port.h"
 #include "string_buffer.h"
 
-#include "command_conn.h"
+#include "conn_spp_ctl.h"
 #include "cmd_parser.h"
 #include "cmd_runner.h"
 
diff --git a/src/shared/secondary/spp_worker_th/command_conn.c b/src/shared/secondary/spp_worker_th/conn_spp_ctl.c
similarity index 99%
rename from src/shared/secondary/spp_worker_th/command_conn.c
rename to src/shared/secondary/spp_worker_th/conn_spp_ctl.c
index b80c54b..030da92 100644
--- a/src/shared/secondary/spp_worker_th/command_conn.c
+++ b/src/shared/secondary/spp_worker_th/conn_spp_ctl.c
@@ -14,7 +14,7 @@
 
 #include "shared/common.h"
 #include "string_buffer.h"
-#include "command_conn.h"
+#include "conn_spp_ctl.h"
 
 #define RTE_LOGTYPE_SPP_COMMAND_PROC RTE_LOGTYPE_USER1
 
diff --git a/src/shared/secondary/spp_worker_th/command_conn.h b/src/shared/secondary/spp_worker_th/conn_spp_ctl.h
similarity index 100%
rename from src/shared/secondary/spp_worker_th/command_conn.h
rename to src/shared/secondary/spp_worker_th/conn_spp_ctl.h
diff --git a/src/vf/Makefile b/src/vf/Makefile
index bdeff98..faf72ee 100644
--- a/src/vf/Makefile
+++ b/src/vf/Makefile
@@ -18,7 +18,7 @@ SRCS-y := spp_vf.c classifier_mac.c spp_forward.c
 SRCS-y += $(SPP_WKT_DIR)/string_buffer.c
 SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
 SRCS-y += $(SPP_WKT_DIR)/spp_port.c
-SRCS-y += $(SPP_WKT_DIR)/command_conn.c
+SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_runner.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_utils.c
-- 
2.17.1



------------------------------

Message: 4
Date: Mon, 24 Jun 2019 11:23:20 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 0/5] Revising logs and comments in shared
Message-ID: <20190624022325.18695-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This series of patches is to refactor log messages and comments for
code maintenance.

* Rename functions start with `dump_` used for not dumping messages but
  logging.

* Revise ambiguous variables start with `num_` used for "Number of" or
  exact number. Former one is renamed as starts with `nof_`.

* Revise terms of funcs and vars which are not correct meaning for
  usages.

Yasufumi Ogawa (5):
  shared/sec: revise comments in cmd_utils.h
  shared/sec: rename funcs start with dump
  shared/sec: revise member of struct for interface
  shared/sec: rename defines for length of str
  shared/sec: add prefix to defines of worker types

 src/mirror/spp_mirror.c                       |   6 +-
 .../secondary/spp_worker_th/cmd_parser.c      |   4 +-
 .../secondary/spp_worker_th/cmd_runner.c      |  11 +-
 .../secondary/spp_worker_th/cmd_utils.c       |  88 ++---
 .../secondary/spp_worker_th/cmd_utils.h       | 352 +++++++-----------
 src/shared/secondary/spp_worker_th/vf_deps.h  |  15 +-
 src/vf/classifier_mac.c                       |  18 +-
 src/vf/spp_forward.c                          |   8 +-
 8 files changed, 196 insertions(+), 306 deletions(-)

-- 
2.17.1



------------------------------

Message: 5
Date: Mon, 24 Jun 2019 11:23:21 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 1/5] shared/sec: revise comments in cmd_utils.h
Message-ID: <20190624022325.18695-2-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This patch is to revise comments in `cmd_utils.h` by removing
redundant comments to the file becomes easier to be maintained.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/cmd_utils.h       | 296 ++++++------------
 1 file changed, 102 insertions(+), 194 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 7a31da6..4cecfdd 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -132,12 +132,9 @@ enum sppwk_port_abl_ops {
 enum SPP_LONGOPT_RETVAL {
 	SPP_LONGOPT_RETVAL__ = 127,
 
-	/*
-	 * Return value definition for getopt_long()
-	 * Only for long option
-	 */
-	SPP_LONGOPT_RETVAL_CLIENT_ID,   /* --client-id    */
-	SPP_LONGOPT_RETVAL_VHOST_CLIENT /* --vhost-client */
+	/* Return value definition for getopt_long(). Only for long option. */
+	SPP_LONGOPT_RETVAL_CLIENT_ID,    /* For `--client-id` */
+	SPP_LONGOPT_RETVAL_VHOST_CLIENT  /* For `--vhost-client` */
 };
 
 /* Flag of processing type to copy management information */
@@ -162,23 +159,20 @@ struct spp_vlantag_info {
 	int tci; /**< Tag Control Information */
 };
 
-/**
- * Data for each port ability which indicates vlantag related information
- * for the port
- */
+/* Ability for vlantag for a port. */
 union spp_ability_data {
 	/** VLAN tag information */
 	struct spp_vlantag_info vlantag;
 };
 
-/** Port ability information */
+/* Port ability information. */
 struct spp_port_ability {
 	enum sppwk_port_abl_ops ops;  /**< Port ability Operations */
 	enum spp_port_rxtx rxtx;      /**< rx/tx identifier */
 	union spp_ability_data data;  /**< Port ability data */
 };
 
-/* Attributes for classifying . */
+/* Attributes for classifying. */
 struct sppwk_cls_attrs {
 	uint64_t mac_addr;  /**< Mac address (binary) */
 	char mac_addr_str[SPP_MIN_STR_LEN];  /**< Mac address (text) */
@@ -217,67 +211,49 @@ struct sppwk_comp_info {
 
 /* Manage given options as global variable */
 struct startup_param {
-	int client_id;		/* Client ID */
-	char server_ip[INET_ADDRSTRLEN];
-				/* IP address stiring of spp-ctl */
-	int server_port;	/* Port Number of spp-ctl */
-	int vhost_client;	/* Flag for --vhost-client option */
+	int client_id;  /* Client ID */
+	char server_ip[INET_ADDRSTRLEN];  /* IP address of spp-ctl */
+	int server_port;   /* Port Number of spp-ctl */
+	int vhost_client;  /* Flag for --vhost-client option */
 	enum secondary_type secondary_type;
-				/* secondary type */
 };
 
-/* Manage number of interfaces  and port information as global variable */
+/* Manage number of interfaces  and port information as global variable. */
 struct iface_info {
-	int num_nic;		/* The number of phy */
-	int num_vhost;		/* The number of vhost */
-	int num_ring;		/* The number of ring */
+	int num_nic;    /* The number of phy */
+	int num_vhost;  /* The number of vhost */
+	int num_ring;   /* The number of ring */
 	struct sppwk_port_info nic[RTE_MAX_ETHPORTS];
-				/* Port information of phy */
 	struct sppwk_port_info vhost[RTE_MAX_ETHPORTS];
-				/* Port information of vhost */
 	struct sppwk_port_info ring[RTE_MAX_ETHPORTS];
-				/* Port information of ring */
 };
 
-/* Manage component running in core as global variable */
+/* Manage component running in core as global variable. */
 struct core_info {
-	int num;	       /* The number of IDs below */
-	int id[RTE_MAX_LCORE]; /* ID list of components executed on cpu core */
+	int num;  /* Number of IDs below */
+	int id[RTE_MAX_LCORE];  /* IDs of components run on the lcore. */
 };
 
-/* Manage core status and component information as global variable */
+/* Manage core status and component info as global variable. */
 struct core_mng_info {
-	/* Status of cpu core */
 	volatile enum sppwk_lcore_status status;
-
-	/* Index number of core information for reference */
-	volatile int ref_index;
-
-	/* Index number of core information for updating */
-	volatile int upd_index;
-
-	/* Core information of each cpu core */
-	struct core_info core[SPP_INFO_AREA_MAX];
+	volatile int ref_index;  /* index for reference */
+	volatile int upd_index;  /* index for update */
+	struct core_info core[SPP_INFO_AREA_MAX];  /* info of each core */
 };
 
-/* Manage data to be backup */
+/* Manage data used for backup. */
 struct cancel_backup_info {
-	/* Backup data of core information */
 	struct core_mng_info core[RTE_MAX_LCORE];
-
-	/* Backup data of component information */
 	struct sppwk_comp_info component[RTE_MAX_LCORE];
-
-	/* Backup data of interface information */
 	struct iface_info interface;
 };
 
+/* TODO(yasufum) revise using term `iterate`, or comments. */
 struct spp_iterate_core_params;
 /**
- * definition of iterated core element procedure function
- * which is member of spp_iterate_core_params structure.
- * Above structure is used when listing core information
- * (e.g) create resonse to status command.
+ * Define func to iterate lcore to list core information for showing status
+ * or so, as a member of struct `spp_iterate_core_params`.
  */
 typedef int (*spp_iterate_core_element_proc)(
 		struct spp_iterate_core_params *params,
@@ -290,24 +266,19 @@ typedef int (*spp_iterate_core_element_proc)(
 		const struct sppwk_port_idx *tx_ports);
 
 /**
- * iterate core table parameters which is
- * used when listing core table content
- * (e.g.) create response to status command.
+ * iterate core table parameters used to list content of lcore table for.
+ * showing status or so.
  */
 struct spp_iterate_core_params {
-	/** Output buffer */
-	char *output;
-
+	char *output;  /* Buffer used for output */
 	/** The function for creating core information */
 	spp_iterate_core_element_proc element_proc;
 };
 
 struct spp_iterate_classifier_table_params;
 /**
- * definition of iterated classifier element procedure function
- * which is member of spp_iterate_classifier_table_params structure.
- * Above structure is used when listing classifier table information
- * (e.g) create resonse to status command.
+ * Define func to iterate classifier for showing status or so, as a member
+ * member of struct `spp_iterate_classifier_table_params`.
  */
 typedef int (*spp_iterate_classifier_element_proc)(
 		struct spp_iterate_classifier_table_params *params,
@@ -316,14 +287,11 @@ typedef int (*spp_iterate_classifier_element_proc)(
 		const struct sppwk_port_idx *port);
 
 /**
- * iterate classifier table parameters which is
- * used when listing classifier table content
- * (e.g.) create response to status command.
+ * iterate classifier table parameters which is used when listing classifier
+ * table content for status command or so.
  */
 struct spp_iterate_classifier_table_params {
-	/* Output buffer */
-	void *output;
-
+	void *output;  /* Buffer used for output */
 	/* The function for creating classifier table information */
 	spp_iterate_classifier_element_proc element_proc;
 };
@@ -331,100 +299,76 @@ struct spp_iterate_classifier_table_params {
 /**
  * Make a hexdump of an array data in every 4 byte
  *
- * @param name
- *  dump name.
- * @param addr
- *  dump address.
- * @param size
- *  dump byte size.
- *
+ * @param name Dumped name.
+ * @param addr Dumped address.
+ * @param size Dumped byte size.
  */
 void dump_buff(const char *name, const void *addr, const size_t size);
 
 /**
- * added ring_pmd
+ * Add ring pmd for owned proccess or thread.
  *
- * @param ring_id
- *  added ring id.
- *
- * @retval 0~   ring_port_id.
- * @retval -1   failed.
+ * @param[in] ring_id added ring id.
+ * @return ring port ID, or -1 if failed.
  */
 int spp_vf_add_ring_pmd(int ring_id);
 
 /**
- * added vhost_pmd
- *
- * @param index
- *  add vohst id.
- * @param client
- *  add client id.
+ * Add ring pmd for owned proccess or thread.
  *
- * @retval 0~   vhost_port_id.
- * @retval -1   failed.
+ * @param[in] index Vohst port id.
+ * @param[in] client Client id.
+ * @return Vhost port ID, or -1 if failed.
  */
 int spp_vf_add_vhost_pmd(int index, int client);
 
 /**
  * Get core status
  *
- * @param lcore_id
- *  Logical core ID.
- *
- * @return
- *  Status of specified logical core.
+ * @param[in] lcore_id Logical core ID.
+ * @return Status of specified logical core.
  */
 enum sppwk_lcore_status spp_get_core_status(unsigned int lcore_id);
 
 /**
  * Get component type of target component_info
  *
- * @param id
- *  component ID.
- *
- * @return
- *  Type of component executed
+ * @param id Component ID.
+ * @return Type of component executed
  */
 enum sppwk_worker_type spp_get_component_type(int id);
 
+/* TODO(yasufum) revise the name of func. */
 /**
- * Run check_core_status() for SPP_CORE_STATUS_CHECK_MAX times with
- * interval time (1sec)
- *
- * @param status
- *  wait check status.
+ * Run check_core_status() several times with interval, up to
+ * SPP_CORE_STATUS_CHECK_MAX times.
  *
- * @retval 0  succeeded.
- * @retval -1 failed.
+ * @param[in] status Status for checking.
+ * @retval  0 If succeeded.
+ * @retval -1 If failed.
  */
 int check_core_status_wait(enum sppwk_lcore_status status);
 
 /**
  * Set core status
  *
- * @param lcore_id
- *  Logical core ID.
- * @param status
- *  set status.
+ * @param lcore_id Lcore ID.
+ * @param status Status to be set.
  *
  */
 void set_core_status(unsigned int lcore_id, enum sppwk_lcore_status status);
 
 /**
- * Set all core status to given
- *
- * @param status
- *  set status.
+ * Set all core status to given one.
  *
+ * @param status status to be set.
  */
 void set_all_core_status(enum sppwk_lcore_status status);
 
 /**
- * Set all of component status to SPP_CORE_STOP_REQUEST if received signal
- * is SIGTERM or SIGINT
+ * Set all comp status to SPP_CORE_STOP_REQUEST if received SIGTERM or SIGINT.
  *
- * @param signl
- *  received signal.
+ * @param[in] signal Received signal.
  */
 void stop_process(int signal);
 
@@ -460,15 +404,11 @@ void copy_mng_info(
 /* Backup the management information */
 void backup_mng_info(struct cancel_backup_info *backup);
 
-/**
- * Setup management info for spp_vf
- */
+/* Setup management info for spp_vf */
 int init_mng_data(void);
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
-/**
- * Print statistics of time for packet processing in ring interface
- */
+/* Print statistics of time for packet processing in ring interface */
 void print_ring_latency_stats(void);
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 
@@ -478,11 +418,8 @@ void  del_vhost_sockfile(struct sppwk_port_info *vhost);
 /**
  * Get core ID of target component
  *
- * @param component_id
- *  unique component ID.
- *
- * @return
- *  Logical core id of specified component.
+ * @param component_id Unique component ID.
+ * @return Logical core id of specified component.
  */
 unsigned int spp_get_component_core(int component_id);
 
@@ -492,27 +429,20 @@ struct core_info *get_core_info(unsigned int lcore_id);
 /**
  * Check core index change
  *
- * @param lcore_id
- *  Logical core ID.
- *
- *  True if index has changed.
- * @retval SPP_RET_OK index has changed.
- * @retval SPP_RET_NG index not changed.
+ * @param lcore_id Lcore ID.
+ * @retval SPP_RET_OK If index is updated.
+ * @retval SPP_RET_NG If index is not updated.
  */
 int spp_check_core_update(unsigned int lcore_id);
 
 /**
  * Check if component is using port.
  *
- * @param iface_type
- *  Interface type to be validated.
- * @param iface_no
- *  Interface number to be validated.
- * @param rxtx
- *  tx/rx type to be validated.
- *
- * @retval 0~127      match component ID
- * @retval SPP_RET_NG failed.
+ * @param iface_type Interface type to be validated.
+ * @param iface_no Interface number to be validated.
+ * @param rxtx Value of spp_port_rxtx to be validated.
+ * @retval 0~127      If match component ID
+ * @retval SPP_RET_NG If failed.
  */
 int spp_check_used_port(
 		enum port_type iface_type,
@@ -605,60 +535,45 @@ void update_lcore_info(void);
 /**
  * Activate temporarily stored component info while flushing.
  *
- * @retval SPP_RET_OK if succeeded.
- * @retval SPP_RET_NG if failed.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
 int update_comp_info(void);
 
 /**
- * Port type to string
- *
- * @param port
- *  Character string of Port type to be converted.
- * @param iface_type
- *  port interface type
- * @param iface_no
- *  interface no
+ * Port type to string.
  *
- * @retval SPP_RET_OK succeeded.
- * @retval SPP_RET_NG failed.
+ * @param port String of port type to be converted.
+ * @param iface_type Interface type.
+ * @param iface_no Interface number.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
 int
 spp_format_port_string(char *port, enum port_type iface_type, int iface_no);
 
 /**
- * Change mac address string to int64
+ * Change string of MAC address to int64.
  *
- * @param mac
- *  Character string of MAC address to be converted.
- *
- * @retval 0< int64 that store mac address
- * @retval SPP_RET_NG
+ * @param macaddr String of MAC address to be converted.
+ * @retval 0~N MAC address in int64 format.
+ * @retval SPP_RET_NG if invalid.
  */
 int64_t sppwk_convert_mac_str_to_int64(const char *macaddr);
 
 /**
- * Set mange data address
- *
- * @param startup_param_p
- *  g_startup_param address
- * @param iface_p
- *  g_iface_info address
- * @param component_p
- *  g_component_info address
- * @param core_mng_p
- *  g_core_info address
- * @param change_core_p
- *  g_change_core address
- * @param change_component_p
- *  g_change_component address
- * @param backup_info_p
- *  g_backup_info address
- * @param main_lcore_id
- *  main_lcore_id mask
+ * Set mange data address.
  *
- * @retval SPP_RET_OK succeeded.
- * @retval SPP_RET_NG failed.
+ * @param startup_param_p Pointer to  g_startup_param address.
+ * @param iface_p Pointer to g_iface_info address.
+ * @param component_p Pointer to g_component_info address.
+ * @param core_mng_p Pointer to g_core_info address.
+ * @param change_core_p Pointer to g_change_core address.
+ * @param change_component_p Pointer to g_change_component address.
+ * @param backup_info_p Pointer to g_backup_info address.
+ * @param main_lcore_id Lcore ID of main thread.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
 int sppwk_set_mng_data(struct startup_param *startup_param_p,
 		struct iface_info *iface_p,
@@ -670,22 +585,15 @@ int sppwk_set_mng_data(struct startup_param *startup_param_p,
 		unsigned int main_lcore_id);
 
 /**
- * Get mange data address
+ * Get mange data address.
  *
- * @param startup_param_p
- *  g_startup_param write address
- * @param iface_addr
- *  g_iface_info write address
- * @param component_addr
- *  g_component_info write address
- * @param core_mng_addr
- *  g_core_mng_info write address
- * @param change_core_addr
- *  g_change_core write address
- * @param change_component_addr
- *  g_change_component write address
- * @param backup_info_addr
- *  g_backup_info write address
+ * @param startup_param_p Pointer to startup params.
+ * @param iface_addr Pointer to g_iface_info.
+ * @param component_addr Pointer to g_component_info.
+ * @param core_mng_addr Pointer to g_core_mng_info.
+ * @param change_core_addr Pointer to change_core_addr.
+ * @param change_component_addr Pointer to g_change_component.
+ * @param backup_info_addr Pointer to g_backup_info.
  */
 void sppwk_get_mng_data(struct startup_param **startup_param_p,
 		struct iface_info **iface_p,
-- 
2.17.1



End of spp Digest, Vol 31, Issue 2
**********************************


From yasufum.o@gmail.com Mon Jun 24 11:23:22 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTK00UUQZZS8Y30@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:23:52 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTK00W10ZZSEA00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:23:52 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTK00VC9ZZSYD00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:23:52 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id C209A7E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:23:52 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id C0EBF8E605C	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:23:52 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id B62E28E605E	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:23:52 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 342768E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:23:51 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:23:51 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2NpSO013198;	Mon,
 24 Jun 2019 11:23:51 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2NpaY013197;	Mon, 24 Jun 2019 11:23:51 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2No62013194	for unknown; Mon,
 24 Jun 2019 11:23:50 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2No81005371 for
 unknown; Mon, 24 Jun 2019 11:23:50 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2NoIB005368; Mon,
 24 Jun 2019 11:23:50 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Nolt016183;	Mon,
 24 Jun 2019 11:23:50 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O2Noj0016179	for unknown; Mon, 24 Jun 2019 11:23:50 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Not3005857 for
 unknown; Mon, 24 Jun 2019 11:23:50 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Nnj1005853 for
 unknown; Mon, 24 Jun 2019 11:23:50 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2Nha9003450	for unknown; Mon,
 24 Jun 2019 11:23:49 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 03EAF1BF70;	Mon, 24 Jun 2019 04:23:43 +0200 (CEST)
Received: from mail-pf1-f193.google.com
 (mail-pf1-f193.google.com [209.85.210.193]) by dpdk.org (Postfix)
 with ESMTP id 1DC7B1BF42 for <spp@dpdk.org>; Mon,
 24 Jun 2019 04:23:42 +0200 (CEST)
Received: by mail-pf1-f193.google.com with SMTP id y15so1954308pfn.5 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 19:23:42 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id y5sm9127726pgv.12.2019.06.23.19.23.39
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 19:23:40 -0700 (PDT)
Date: Mon, 24 Jun 2019 11:23:22 +0900
From: yasufum.o@gmail.com
Subject: [spp 04356] [spp] [PATCH 2/5] shared/sec: rename funcs start with dump
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624022325.18695-3-yasufum.o@gmail.com>
In-reply-to: <20190624022325.18695-1-yasufum.o@gmail.com>
References: <20190624022325.18695-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04356
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=+YXqnNluOvmZ+Dagq6pkTuc01Fh73RfKppOA9PA9vUU=;
 b=cmt5TeZ+jMaL+r4omz0OJ6JTCA6wN7aK15o0uR7Z796x6GaudbGfgZa+YaPJqtIshA
 nOixDAdV4yX/9Z3UdTamC0ypPnR3wpTq/tjnQbwE8uauri4Zt91INOB4rocS4ICaqgWH
 LoKSAsMeod0cpbY7zdgMhe3HzXAMKuBpCVE3GEH4Mn0u0fAe/U4N6rxxu0t0m7C04ogQ
 S/ojZkZYCABAszaR+i1dWy88qaGHQgThXG3wrmFBNb135CGA9Un8O5z/uzSORZa+OHUL
 jGm+yEoHFcOVE8bZJrwkeljEgP83cBCuV0EgHLnP3Ok4I8oc5kpzUgp7shFbzZ2HitFt 9VEQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=+YXqnNluOvmZ+Dagq6pkTuc01Fh73RfKppOA9PA9vUU=;
 b=lMeYx38lSsZAkJ8nVYu9lKeQjd8ZWlqYQtQVgwMmCF2ufAAtartzUCoXThffMEB6TV
 D4gO1zZDAY+LfyG8iFMwYAJkFQoLZ/pncsZM1ZExhoq7KdNt5Vja+F9uhTosWan8qMHI
 sTLf7G+dvdGFKI4bCoJI8i6hLbE3SzahrYdpeVuDubzj3opuT/4OgU4QD9kp/9n3FlRs
 1s1gnivasMPPm0RuEmO7hU9WJxz/lLmFJXLp0iRWBR+RP59zBzkm+m3qzDrRSt8wz16Z
 op3JvWDKJP21CM68FRq/lAImi/K9ySgC+0M0/1aQdG0/g//+MkfI7VdFo5jlWlSoflx0 7kuw==
X-Gm-Message-State: APjAAAXUxT5/MObG6n27Wrd3vcupmDut8yegmWGFpYxi8UcG31r6XkEZ
 KS18TDKhba0SOyZloPadyMr3wmZ1
X-Google-Smtp-Source:
 APXvYqysdmFQfOLKCvlzXqKQW6m9fcz2sU34Oq+HpydCzjbf2nrUQl7dmbCDVG5aV+7//yPm0JaA4Q==
X-Received: by 2002:a17:90a:24e4:: with SMTP id
 i91mr22826449pje.9.1561343021111; Sun, 23 Jun 2019 19:23:41 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 217
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Functions have prefix `dump_` do DEBUG logging actually, so the term
of prefix is vague and not describing the feature exactly. This update
is to change the prefix to `log_` to be explicitly doing just logging.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/cmd_utils.c       | 66 +++++++++----------
 .../secondary/spp_worker_th/cmd_utils.h       | 27 ++++----
 2 files changed, 44 insertions(+), 49 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 07d6a2a..7f0a1ce 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -34,38 +34,30 @@ struct mng_data_info {
 	unsigned int main_lcore_id;
 };
 
-/* Declare global variables */
 /* Logical core ID for main process */
 static struct mng_data_info g_mng_data;
 
-/**
- * Make a hexdump of an array data in every 4 byte.
- * This function is used to dump core_info or component info.
- */
+/* Hexdump `addr` for logging, used for core_info or component info. */
 void
-dump_buff(const char *name, const void *addr, const size_t size)
+log_hexdumped(const char *obj_name, const void *obj_addr, const size_t size)
 {
-	size_t cnt = 0;
-	size_t max = (size / sizeof(unsigned int)) +
+	size_t cnt;
+	size_t max_cnt = (size / sizeof(unsigned int)) +
 			((size % sizeof(unsigned int)) != 0);
-	const uint32_t *buff = addr;
+	const uint32_t *buf = obj_addr;
 
-	if ((name != NULL) && (name[0] != '\0'))
-		RTE_LOG(DEBUG, APP, "dump buff. (%s)\n", name);
+	if ((obj_name != NULL) && (obj_name[0] != '\0'))
+		RTE_LOG(DEBUG, APP, "Name of dumped buf: %s.\n", obj_name);
 
-	for (cnt = 0; cnt < max; cnt += 16) {
+	for (cnt = 0; cnt < max_cnt; cnt += 16) {
 		RTE_LOG(DEBUG, APP, "[%p]"
-				" %08x %08x %08x %08x %08x %08x %08x %08x"
-				" %08x %08x %08x %08x %08x %08x %08x %08x",
-				&buff[cnt],
-				buff[cnt+0], buff[cnt+1],
-				buff[cnt+2], buff[cnt+3],
-				buff[cnt+4], buff[cnt+5],
-				buff[cnt+6], buff[cnt+7],
-				buff[cnt+8], buff[cnt+9],
-				buff[cnt+10], buff[cnt+11],
-				buff[cnt+12], buff[cnt+13],
-				buff[cnt+14], buff[cnt+15]);
+			" %08x %08x %08x %08x %08x %08x %08x %08x"
+			" %08x %08x %08x %08x %08x %08x %08x %08x",
+			&buf[cnt],
+			buf[cnt+0], buf[cnt+1], buf[cnt+2], buf[cnt+3],
+			buf[cnt+4], buf[cnt+5], buf[cnt+6], buf[cnt+7],
+			buf[cnt+8], buf[cnt+9], buf[cnt+10], buf[cnt+11],
+			buf[cnt+12], buf[cnt+13], buf[cnt+14], buf[cnt+15]);
 	}
 }
 
@@ -288,7 +280,7 @@ get_sppwk_port(enum port_type iface_type, int iface_no)
 
 /* Dump of core information */
 void
-dump_core_info(const struct core_mng_info *core_info)
+log_core_info(const struct core_mng_info *core_info)
 {
 	char str[SPP_NAME_STR_LEN];
 	const struct core_mng_info *info = NULL;
@@ -300,16 +292,18 @@ dump_core_info(const struct core_mng_info *core_info)
 				info->ref_index, info->upd_index);
 
 		memset(str, 0x00, SPP_NAME_STR_LEN);
-		dump_buff(str, info->core[0].id, sizeof(int)*info->core[0].num);
+		log_hexdumped(str, info->core[0].id,
+				sizeof(int)*info->core[0].num);
 
 		sprintf(str, "core[%d]-1 num=%d", lcore_id, info->core[1].num);
-		dump_buff(str, info->core[1].id, sizeof(int)*info->core[1].num);
+		log_hexdumped(str, info->core[1].id,
+				sizeof(int)*info->core[1].num);
 	}
 }
 
 /* Dump of component information */
 void
-dump_component_info(const struct sppwk_comp_info *comp_info)
+log_component_info(const struct sppwk_comp_info *comp_info)
 {
 	char str[SPP_NAME_STR_LEN];
 	const struct sppwk_comp_info *tmp_ci = NULL;
@@ -326,19 +320,19 @@ dump_component_info(const struct sppwk_comp_info *comp_info)
 
 		sprintf(str, "component[%d] rx=%d", cnt,
 				tmp_ci->nof_rx);
-		dump_buff(str, tmp_ci->rx_ports,
+		log_hexdumped(str, tmp_ci->rx_ports,
 			sizeof(struct sppwk_port_info *)*tmp_ci->nof_rx);
 
 		sprintf(str, "component[%d] tx=%d", cnt,
 				tmp_ci->nof_tx);
-		dump_buff(str, tmp_ci->tx_ports,
+		log_hexdumped(str, tmp_ci->tx_ports,
 			sizeof(struct sppwk_port_info *)*tmp_ci->nof_tx);
 	}
 }
 
 /* Dump of interface information */
 void
-dump_interface_info(const struct iface_info *iface_info)
+log_interface_info(const struct iface_info *iface_info)
 {
 	const struct sppwk_port_info *port = NULL;
 	int cnt = 0;
@@ -389,7 +383,7 @@ dump_interface_info(const struct iface_info *iface_info)
 
 /* Dump of all management information */
 void
-dump_all_mng_info(
+log_all_mng_info(
 		const struct core_mng_info *core,
 		const struct sppwk_comp_info *component,
 		const struct iface_info *interface)
@@ -397,9 +391,9 @@ dump_all_mng_info(
 	if (rte_log_get_global_level() < RTE_LOG_DEBUG)
 		return;
 
-	dump_core_info(core);
-	dump_component_info(component);
-	dump_interface_info(interface);
+	log_core_info(core);
+	log_component_info(component);
+	log_interface_info(interface);
 }
 
 /* Copy management information */
@@ -446,7 +440,7 @@ copy_mng_info(
 void
 backup_mng_info(struct cancel_backup_info *backup)
 {
-	dump_all_mng_info(g_mng_data.p_core_info,
+	log_all_mng_info(g_mng_data.p_core_info,
 			g_mng_data.p_component_info,
 			g_mng_data.p_iface_info);
 	copy_mng_info(backup->core, backup->component, &backup->interface,
@@ -454,7 +448,7 @@ backup_mng_info(struct cancel_backup_info *backup)
 			g_mng_data.p_component_info,
 			g_mng_data.p_iface_info,
 			COPY_MNG_FLG_ALLCOPY);
-	dump_all_mng_info(backup->core, backup->component, &backup->interface);
+	log_all_mng_info(backup->core, backup->component, &backup->interface);
 	memset(g_mng_data.p_change_core, 0x00,
 				sizeof(int)*RTE_MAX_LCORE);
 	memset(g_mng_data.p_change_component, 0x00,
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 4cecfdd..65a66b8 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -297,13 +297,14 @@ struct spp_iterate_classifier_table_params {
 };
 
 /**
- * Make a hexdump of an array data in every 4 byte
+ * Hexdump `addr` for logging, used for core_info or component info.
  *
- * @param name Dumped name.
- * @param addr Dumped address.
- * @param size Dumped byte size.
+ * @param name Name of object to be dumped.
+ * @param addr Address of dumped value.
+ * @param size Size of dumped value.
  */
-void dump_buff(const char *name, const void *addr, const size_t size);
+void log_hexdumped(const char *obj_name, const void *obj_addr,
+		const size_t size);
 
 /**
  * Add ring pmd for owned proccess or thread.
@@ -376,17 +377,17 @@ void stop_process(int signal);
 struct sppwk_port_info *
 get_sppwk_port(enum port_type iface_type, int iface_no);
 
-/* Dump of core information */
-void dump_core_info(const struct core_mng_info *core_info);
+/* Output log message for core information */
+void log_core_info(const struct core_mng_info *core_info);
 
-/* Dump of component information */
-void dump_component_info(const struct sppwk_comp_info *component_info);
+/* Output log message for component information */
+void log_component_info(const struct sppwk_comp_info *component_info);
 
-/* Dump of interface information */
-void dump_interface_info(const struct iface_info *iface_info);
+/* Output log message for interface information */
+void log_interface_info(const struct iface_info *iface_info);
 
-/* Dump of all management information */
-void dump_all_mng_info(
+/* Output log message for all management information */
+void log_all_mng_info(
 		const struct core_mng_info *core,
 		const struct sppwk_comp_info *component,
 		const struct iface_info *interface);
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 11:23:23 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTK00UVSZZW8Y30@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:23:56 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTK00W0OZZWJW00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:23:56 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTK00VFIZZWYD00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:23:56 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id 326AF7E6038	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:23:56 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 316278E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:23:56 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 26AD38E6052	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:23:56 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 5F13D8E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:23:55 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:23:55 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Nttb013207;	Mon,
 24 Jun 2019 11:23:55 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2Ntke013206;	Mon, 24 Jun 2019 11:23:55 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2NtH9013203	for unknown; Mon,
 24 Jun 2019 11:23:55 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2NsDW005383 for
 unknown; Mon, 24 Jun 2019 11:23:54 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Nseo005380; Mon,
 24 Jun 2019 11:23:54 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Ns7T016190;	Mon,
 24 Jun 2019 11:23:54 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O2Nspk016186	for unknown; Mon, 24 Jun 2019 11:23:54 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2NsDX005949 for
 unknown; Mon, 24 Jun 2019 11:23:54 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2NspE005945 for
 unknown; Mon, 24 Jun 2019 11:23:54 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2NlA4003491	for unknown; Mon,
 24 Jun 2019 11:23:53 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 1EEB21BF72;	Mon, 24 Jun 2019 04:23:47 +0200 (CEST)
Received: from mail-pg1-f196.google.com
 (mail-pg1-f196.google.com [209.85.215.196]) by dpdk.org (Postfix)
 with ESMTP id 94D4F1BF54 for <spp@dpdk.org>; Mon,
 24 Jun 2019 04:23:45 +0200 (CEST)
Received: by mail-pg1-f196.google.com with SMTP id s27so6262341pgl.2 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 19:23:45 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id y5sm9127726pgv.12.2019.06.23.19.23.43
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 19:23:44 -0700 (PDT)
Date: Mon, 24 Jun 2019 11:23:23 +0900
From: yasufum.o@gmail.com
Subject: [spp 04357] [spp] [PATCH 3/5] shared/sec: revise member of struct for
 interface
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624022325.18695-4-yasufum.o@gmail.com>
In-reply-to: <20190624022325.18695-1-yasufum.o@gmail.com>
References: <20190624022325.18695-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04357
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=oMk0CgSc/OD3RaElGHLh6JXcHE4X3+N3NEiYw3HgzAw=;
 b=GZs5k+FRxFAknfByQcN28ahebk5lpwiWeMXi9gYplENl5yqC9aCn+Bf41P1MYYEA2g
 bQLqnZQMoXsoV21rUvUyw2fwt3ywijGqmJfz51zZeY5Ch37qRkAYbYqS3t8Ve//36dur
 MGM55AWu2tdA4cS8NSFr1AwOhtfQ9xAKcExIXOgFfqKFeb5VVAm4WuItD+ImS0oIekDV
 o68hJJfl3n9W7dYWIkD4XjY9FozIwosYIKWT8oNVOSD34NHdePBqUpbSqZHpckEGHr4t
 terUc/o9NV7a+bPx7PzxSVNSycWsG8dXavFTc49+d6vn/gpsbIiAoKXSzzEwbIiClLDs UBtQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=oMk0CgSc/OD3RaElGHLh6JXcHE4X3+N3NEiYw3HgzAw=;
 b=r/Si5IPTgTxwYNxP32kUuwZGifRElm/BKp0ZkH45MKQaUG/LKk1RyqupG5OORyeMpW
 oc6E+c5EEwex7DaNAszuTCFLVvK5MqxBRttbhD5FnoVXJuKF8Fuekyf2hTsha0RcEfYE
 pOz+IE4T7ZFLm0orxbrlypUtpXOD0Ri6SFAFEjVxnHThNjNLSELb8E8aVG8+t8HR2EUo
 2+k0blrdp0V9JjxybGp9cQdFhYS7N44BKkICaBU7x3ectauPXITYD+NnbE57SYYdVZsb
 25jbK68+PNXmVFan3UvUyR3Rj/5PtiByhfdeLUfcqpdL0pWrZitKlhWFLZtHTPkTflBw S2mQ==
X-Gm-Message-State: APjAAAVIqS7N+JP4m8ObC5mlmJLv99QtTO1yi/IrNyVy0wkER0NU495n
 EFwCn0mHi8chkZGLSCs37rVoZp8g
X-Google-Smtp-Source:
 APXvYqyYokT0HvlP9KHB7B2P2QgsdUWCLLDwqqT9akh62ar9Ebql/vlxGrx86Y0IjFoCU8ujGFrmNg==
X-Received: by 2002:a17:90a:a601:: with SMTP id
 c1mr21090461pjq.24.1561343024571; Sun, 23 Jun 2019 19:23:44 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 125
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to revise names of structs for describing features of
interface, for example, change `num_nic` to `nof_phys` to become
explixitly that it is not a number in a range of phy NICs but the total
number itself.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/shared/secondary/spp_worker_th/cmd_utils.c | 14 +++++++-------
 src/shared/secondary/spp_worker_th/cmd_utils.h | 14 +++++++-------
 src/vf/classifier_mac.c                        | 10 +++++-----
 3 files changed, 19 insertions(+), 19 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 7f0a1ce..c519624 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -337,9 +337,9 @@ log_interface_info(const struct iface_info *iface_info)
 	const struct sppwk_port_info *port = NULL;
 	int cnt = 0;
 	RTE_LOG(DEBUG, APP, "interface phy=%d, vhost=%d, ring=%d\n",
-			iface_info->num_nic,
-			iface_info->num_vhost,
-			iface_info->num_ring);
+			iface_info->nof_phys,
+			iface_info->nof_vhosts,
+			iface_info->nof_rings);
 	for (cnt = 0; cnt < RTE_MAX_ETHPORTS; cnt++) {
 		port = &iface_info->nic[cnt];
 		if (port->iface_type == UNDEF)
@@ -522,11 +522,11 @@ set_nic_interface(void)
 	struct iface_info *p_iface_info = g_mng_data.p_iface_info;
 
 	/* NIC Setting */
-	p_iface_info->num_nic = rte_eth_dev_count_avail();
-	if (p_iface_info->num_nic > RTE_MAX_ETHPORTS)
-		p_iface_info->num_nic = RTE_MAX_ETHPORTS;
+	p_iface_info->nof_phys = rte_eth_dev_count_avail();
+	if (p_iface_info->nof_phys > RTE_MAX_ETHPORTS)
+		p_iface_info->nof_phys = RTE_MAX_ETHPORTS;
 
-	for (nic_cnt = 0; nic_cnt < p_iface_info->num_nic; nic_cnt++) {
+	for (nic_cnt = 0; nic_cnt < p_iface_info->nof_phys; nic_cnt++) {
 		p_iface_info->nic[nic_cnt].iface_type   = PHY;
 		p_iface_info->nic[nic_cnt].ethdev_port_id = nic_cnt;
 	}
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 65a66b8..b6c2542 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -220,9 +220,9 @@ struct startup_param {
 
 /* Manage number of interfaces  and port information as global variable. */
 struct iface_info {
-	int num_nic;    /* The number of phy */
-	int num_vhost;  /* The number of vhost */
-	int num_ring;   /* The number of ring */
+	int nof_phys;    /* Number of phy ports */
+	int nof_vhosts;  /* Number of vhost ports */
+	int nof_rings;   /* Number of ring ports */
 	struct sppwk_port_info nic[RTE_MAX_ETHPORTS];
 	struct sppwk_port_info vhost[RTE_MAX_ETHPORTS];
 	struct sppwk_port_info ring[RTE_MAX_ETHPORTS];
@@ -258,11 +258,11 @@ struct spp_iterate_core_params;
 typedef int (*spp_iterate_core_element_proc)(
 		struct spp_iterate_core_params *params,
 		const unsigned int lcore_id,
-		const char *name,
-		const char *type,
-		const int num_rx,
+		const char *wk_name,  /* Name of worker named as component. */
+		const char *wk_type,  /* Type of worker named as component. */
+		const int nof_rx,  /* Number of RX ports */
 		const struct sppwk_port_idx *rx_ports,
-		const int num_tx,
+		const int nof_tx,  /* Number of TX ports */
 		const struct sppwk_port_idx *tx_ports);
 
 /**
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index c8cc7df..b5260b0 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -812,7 +812,7 @@ spp_classifier_get_component_status(
 		struct spp_iterate_core_params *params)
 {
 	int ret = SPP_RET_NG;
-	int i, num_tx, num_rx = 0;
+	int i, nof_tx, nof_rx = 0;  /* Num of RX and TX ports. */
 	struct management_info *mng_info;
 	struct component_info *cmp_info;
 	struct classified_data *clsd_data;
@@ -833,7 +833,7 @@ spp_classifier_get_component_status(
 
 	memset(rx_ports, 0x00, sizeof(rx_ports));
 	if (cmp_info->classified_data_rx.iface_type != UNDEF) {
-		num_rx = 1;
+		nof_rx = 1;
 		rx_ports[0].iface_type = cmp_info->
 				classified_data_rx.iface_type;
 		rx_ports[0].iface_no   = cmp_info->
@@ -841,8 +841,8 @@ spp_classifier_get_component_status(
 	}
 
 	memset(tx_ports, 0x00, sizeof(tx_ports));
-	num_tx = cmp_info->n_classified_data_tx;
-	for (i = 0; i < num_tx; i++) {
+	nof_tx = cmp_info->n_classified_data_tx;
+	for (i = 0; i < nof_tx; i++) {
 		tx_ports[i].iface_type = clsd_data[i].iface_type;
 		tx_ports[i].iface_no   = clsd_data[i].iface_no_global;
 	}
@@ -851,7 +851,7 @@ spp_classifier_get_component_status(
 	ret = (*params->element_proc)(
 		params, lcore_id,
 		cmp_info->name, SPP_TYPE_CLASSIFIER_MAC_STR,
-		num_rx, rx_ports, num_tx, tx_ports);
+		nof_rx, rx_ports, nof_tx, tx_ports);
 	if (unlikely(ret != SPP_RET_OK))
 		return SPP_RET_NG;
 
-- 
2.17.1



From spp-request@dpdk.org Mon Jun 24 11:23:53 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTK00UW8ZZY8Y30@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:23:58 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTK00W0MZZYN300@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:23:58 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTK00VHIZZYYD00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:23:58 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf105.ddreams.local (Postfix) with ESMTP id 172197E603A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:23:58 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 15C878E6062	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:23:58 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 09AAE8E606C	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:23:58 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 504D98E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:23:57 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf105.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:23:57 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2NvYJ013214;	Mon,
 24 Jun 2019 11:23:57 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2NvpH013213;	Mon, 24 Jun 2019 11:23:57 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2Nvoj013210	for unknown; Mon,
 24 Jun 2019 11:23:57 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Nu3K005992 for
 unknown; Mon, 24 Jun 2019 11:23:56 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2NuUa005989 for
 unknown; Mon, 24 Jun 2019 11:23:56 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2Nlhf003494	for unknown; Mon,
 24 Jun 2019 11:23:55 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 4FDDA1BF70	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 24 Jun 2019 04:23:55 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 3
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 24 Jun 2019 04:23:53 +0200
Message-id: <mailman.23355.1561343033.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH 2/5] shared/sec: rename funcs start with dump
      (yasufum.o@gmail.com)
   2. [PATCH 3/5] shared/sec: revise member of struct for interface
      (yasufum.o@gmail.com)
   3. [PATCH 4/5] shared/sec: rename defines for length of str
      (yasufum.o@gmail.com)
   4. [PATCH 5/5] shared/sec: add prefix to defines of worker types
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon, 24 Jun 2019 11:23:22 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 2/5] shared/sec: rename funcs start with dump
Message-ID: <20190624022325.18695-3-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Functions have prefix `dump_` do DEBUG logging actually, so the term
of prefix is vague and not describing the feature exactly. This update
is to change the prefix to `log_` to be explicitly doing just logging.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/cmd_utils.c       | 66 +++++++++----------
 .../secondary/spp_worker_th/cmd_utils.h       | 27 ++++----
 2 files changed, 44 insertions(+), 49 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 07d6a2a..7f0a1ce 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -34,38 +34,30 @@ struct mng_data_info {
 	unsigned int main_lcore_id;
 };
 
-/* Declare global variables */
 /* Logical core ID for main process */
 static struct mng_data_info g_mng_data;
 
-/**
- * Make a hexdump of an array data in every 4 byte.
- * This function is used to dump core_info or component info.
- */
+/* Hexdump `addr` for logging, used for core_info or component info. */
 void
-dump_buff(const char *name, const void *addr, const size_t size)
+log_hexdumped(const char *obj_name, const void *obj_addr, const size_t size)
 {
-	size_t cnt = 0;
-	size_t max = (size / sizeof(unsigned int)) +
+	size_t cnt;
+	size_t max_cnt = (size / sizeof(unsigned int)) +
 			((size % sizeof(unsigned int)) != 0);
-	const uint32_t *buff = addr;
+	const uint32_t *buf = obj_addr;
 
-	if ((name != NULL) && (name[0] != '\0'))
-		RTE_LOG(DEBUG, APP, "dump buff. (%s)\n", name);
+	if ((obj_name != NULL) && (obj_name[0] != '\0'))
+		RTE_LOG(DEBUG, APP, "Name of dumped buf: %s.\n", obj_name);
 
-	for (cnt = 0; cnt < max; cnt += 16) {
+	for (cnt = 0; cnt < max_cnt; cnt += 16) {
 		RTE_LOG(DEBUG, APP, "[%p]"
-				" %08x %08x %08x %08x %08x %08x %08x %08x"
-				" %08x %08x %08x %08x %08x %08x %08x %08x",
-				&buff[cnt],
-				buff[cnt+0], buff[cnt+1],
-				buff[cnt+2], buff[cnt+3],
-				buff[cnt+4], buff[cnt+5],
-				buff[cnt+6], buff[cnt+7],
-				buff[cnt+8], buff[cnt+9],
-				buff[cnt+10], buff[cnt+11],
-				buff[cnt+12], buff[cnt+13],
-				buff[cnt+14], buff[cnt+15]);
+			" %08x %08x %08x %08x %08x %08x %08x %08x"
+			" %08x %08x %08x %08x %08x %08x %08x %08x",
+			&buf[cnt],
+			buf[cnt+0], buf[cnt+1], buf[cnt+2], buf[cnt+3],
+			buf[cnt+4], buf[cnt+5], buf[cnt+6], buf[cnt+7],
+			buf[cnt+8], buf[cnt+9], buf[cnt+10], buf[cnt+11],
+			buf[cnt+12], buf[cnt+13], buf[cnt+14], buf[cnt+15]);
 	}
 }
 
@@ -288,7 +280,7 @@ get_sppwk_port(enum port_type iface_type, int iface_no)
 
 /* Dump of core information */
 void
-dump_core_info(const struct core_mng_info *core_info)
+log_core_info(const struct core_mng_info *core_info)
 {
 	char str[SPP_NAME_STR_LEN];
 	const struct core_mng_info *info = NULL;
@@ -300,16 +292,18 @@ dump_core_info(const struct core_mng_info *core_info)
 				info->ref_index, info->upd_index);
 
 		memset(str, 0x00, SPP_NAME_STR_LEN);
-		dump_buff(str, info->core[0].id, sizeof(int)*info->core[0].num);
+		log_hexdumped(str, info->core[0].id,
+				sizeof(int)*info->core[0].num);
 
 		sprintf(str, "core[%d]-1 num=%d", lcore_id, info->core[1].num);
-		dump_buff(str, info->core[1].id, sizeof(int)*info->core[1].num);
+		log_hexdumped(str, info->core[1].id,
+				sizeof(int)*info->core[1].num);
 	}
 }
 
 /* Dump of component information */
 void
-dump_component_info(const struct sppwk_comp_info *comp_info)
+log_component_info(const struct sppwk_comp_info *comp_info)
 {
 	char str[SPP_NAME_STR_LEN];
 	const struct sppwk_comp_info *tmp_ci = NULL;
@@ -326,19 +320,19 @@ dump_component_info(const struct sppwk_comp_info *comp_info)
 
 		sprintf(str, "component[%d] rx=%d", cnt,
 				tmp_ci->nof_rx);
-		dump_buff(str, tmp_ci->rx_ports,
+		log_hexdumped(str, tmp_ci->rx_ports,
 			sizeof(struct sppwk_port_info *)*tmp_ci->nof_rx);
 
 		sprintf(str, "component[%d] tx=%d", cnt,
 				tmp_ci->nof_tx);
-		dump_buff(str, tmp_ci->tx_ports,
+		log_hexdumped(str, tmp_ci->tx_ports,
 			sizeof(struct sppwk_port_info *)*tmp_ci->nof_tx);
 	}
 }
 
 /* Dump of interface information */
 void
-dump_interface_info(const struct iface_info *iface_info)
+log_interface_info(const struct iface_info *iface_info)
 {
 	const struct sppwk_port_info *port = NULL;
 	int cnt = 0;
@@ -389,7 +383,7 @@ dump_interface_info(const struct iface_info *iface_info)
 
 /* Dump of all management information */
 void
-dump_all_mng_info(
+log_all_mng_info(
 		const struct core_mng_info *core,
 		const struct sppwk_comp_info *component,
 		const struct iface_info *interface)
@@ -397,9 +391,9 @@ dump_all_mng_info(
 	if (rte_log_get_global_level() < RTE_LOG_DEBUG)
 		return;
 
-	dump_core_info(core);
-	dump_component_info(component);
-	dump_interface_info(interface);
+	log_core_info(core);
+	log_component_info(component);
+	log_interface_info(interface);
 }
 
 /* Copy management information */
@@ -446,7 +440,7 @@ copy_mng_info(
 void
 backup_mng_info(struct cancel_backup_info *backup)
 {
-	dump_all_mng_info(g_mng_data.p_core_info,
+	log_all_mng_info(g_mng_data.p_core_info,
 			g_mng_data.p_component_info,
 			g_mng_data.p_iface_info);
 	copy_mng_info(backup->core, backup->component, &backup->interface,
@@ -454,7 +448,7 @@ backup_mng_info(struct cancel_backup_info *backup)
 			g_mng_data.p_component_info,
 			g_mng_data.p_iface_info,
 			COPY_MNG_FLG_ALLCOPY);
-	dump_all_mng_info(backup->core, backup->component, &backup->interface);
+	log_all_mng_info(backup->core, backup->component, &backup->interface);
 	memset(g_mng_data.p_change_core, 0x00,
 				sizeof(int)*RTE_MAX_LCORE);
 	memset(g_mng_data.p_change_component, 0x00,
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 4cecfdd..65a66b8 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -297,13 +297,14 @@ struct spp_iterate_classifier_table_params {
 };
 
 /**
- * Make a hexdump of an array data in every 4 byte
+ * Hexdump `addr` for logging, used for core_info or component info.
  *
- * @param name Dumped name.
- * @param addr Dumped address.
- * @param size Dumped byte size.
+ * @param name Name of object to be dumped.
+ * @param addr Address of dumped value.
+ * @param size Size of dumped value.
  */
-void dump_buff(const char *name, const void *addr, const size_t size);
+void log_hexdumped(const char *obj_name, const void *obj_addr,
+		const size_t size);
 
 /**
  * Add ring pmd for owned proccess or thread.
@@ -376,17 +377,17 @@ void stop_process(int signal);
 struct sppwk_port_info *
 get_sppwk_port(enum port_type iface_type, int iface_no);
 
-/* Dump of core information */
-void dump_core_info(const struct core_mng_info *core_info);
+/* Output log message for core information */
+void log_core_info(const struct core_mng_info *core_info);
 
-/* Dump of component information */
-void dump_component_info(const struct sppwk_comp_info *component_info);
+/* Output log message for component information */
+void log_component_info(const struct sppwk_comp_info *component_info);
 
-/* Dump of interface information */
-void dump_interface_info(const struct iface_info *iface_info);
+/* Output log message for interface information */
+void log_interface_info(const struct iface_info *iface_info);
 
-/* Dump of all management information */
-void dump_all_mng_info(
+/* Output log message for all management information */
+void log_all_mng_info(
 		const struct core_mng_info *core,
 		const struct sppwk_comp_info *component,
 		const struct iface_info *interface);
-- 
2.17.1



------------------------------

Message: 2
Date: Mon, 24 Jun 2019 11:23:23 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 3/5] shared/sec: revise member of struct for
	interface
Message-ID: <20190624022325.18695-4-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to revise names of structs for describing features of
interface, for example, change `num_nic` to `nof_phys` to become
explixitly that it is not a number in a range of phy NICs but the total
number itself.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/shared/secondary/spp_worker_th/cmd_utils.c | 14 +++++++-------
 src/shared/secondary/spp_worker_th/cmd_utils.h | 14 +++++++-------
 src/vf/classifier_mac.c                        | 10 +++++-----
 3 files changed, 19 insertions(+), 19 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 7f0a1ce..c519624 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -337,9 +337,9 @@ log_interface_info(const struct iface_info *iface_info)
 	const struct sppwk_port_info *port = NULL;
 	int cnt = 0;
 	RTE_LOG(DEBUG, APP, "interface phy=%d, vhost=%d, ring=%d\n",
-			iface_info->num_nic,
-			iface_info->num_vhost,
-			iface_info->num_ring);
+			iface_info->nof_phys,
+			iface_info->nof_vhosts,
+			iface_info->nof_rings);
 	for (cnt = 0; cnt < RTE_MAX_ETHPORTS; cnt++) {
 		port = &iface_info->nic[cnt];
 		if (port->iface_type == UNDEF)
@@ -522,11 +522,11 @@ set_nic_interface(void)
 	struct iface_info *p_iface_info = g_mng_data.p_iface_info;
 
 	/* NIC Setting */
-	p_iface_info->num_nic = rte_eth_dev_count_avail();
-	if (p_iface_info->num_nic > RTE_MAX_ETHPORTS)
-		p_iface_info->num_nic = RTE_MAX_ETHPORTS;
+	p_iface_info->nof_phys = rte_eth_dev_count_avail();
+	if (p_iface_info->nof_phys > RTE_MAX_ETHPORTS)
+		p_iface_info->nof_phys = RTE_MAX_ETHPORTS;
 
-	for (nic_cnt = 0; nic_cnt < p_iface_info->num_nic; nic_cnt++) {
+	for (nic_cnt = 0; nic_cnt < p_iface_info->nof_phys; nic_cnt++) {
 		p_iface_info->nic[nic_cnt].iface_type   = PHY;
 		p_iface_info->nic[nic_cnt].ethdev_port_id = nic_cnt;
 	}
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 65a66b8..b6c2542 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -220,9 +220,9 @@ struct startup_param {
 
 /* Manage number of interfaces  and port information as global variable. */
 struct iface_info {
-	int num_nic;    /* The number of phy */
-	int num_vhost;  /* The number of vhost */
-	int num_ring;   /* The number of ring */
+	int nof_phys;    /* Number of phy ports */
+	int nof_vhosts;  /* Number of vhost ports */
+	int nof_rings;   /* Number of ring ports */
 	struct sppwk_port_info nic[RTE_MAX_ETHPORTS];
 	struct sppwk_port_info vhost[RTE_MAX_ETHPORTS];
 	struct sppwk_port_info ring[RTE_MAX_ETHPORTS];
@@ -258,11 +258,11 @@ struct spp_iterate_core_params;
 typedef int (*spp_iterate_core_element_proc)(
 		struct spp_iterate_core_params *params,
 		const unsigned int lcore_id,
-		const char *name,
-		const char *type,
-		const int num_rx,
+		const char *wk_name,  /* Name of worker named as component. */
+		const char *wk_type,  /* Type of worker named as component. */
+		const int nof_rx,  /* Number of RX ports */
 		const struct sppwk_port_idx *rx_ports,
-		const int num_tx,
+		const int nof_tx,  /* Number of TX ports */
 		const struct sppwk_port_idx *tx_ports);
 
 /**
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index c8cc7df..b5260b0 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -812,7 +812,7 @@ spp_classifier_get_component_status(
 		struct spp_iterate_core_params *params)
 {
 	int ret = SPP_RET_NG;
-	int i, num_tx, num_rx = 0;
+	int i, nof_tx, nof_rx = 0;  /* Num of RX and TX ports. */
 	struct management_info *mng_info;
 	struct component_info *cmp_info;
 	struct classified_data *clsd_data;
@@ -833,7 +833,7 @@ spp_classifier_get_component_status(
 
 	memset(rx_ports, 0x00, sizeof(rx_ports));
 	if (cmp_info->classified_data_rx.iface_type != UNDEF) {
-		num_rx = 1;
+		nof_rx = 1;
 		rx_ports[0].iface_type = cmp_info->
 				classified_data_rx.iface_type;
 		rx_ports[0].iface_no   = cmp_info->
@@ -841,8 +841,8 @@ spp_classifier_get_component_status(
 	}
 
 	memset(tx_ports, 0x00, sizeof(tx_ports));
-	num_tx = cmp_info->n_classified_data_tx;
-	for (i = 0; i < num_tx; i++) {
+	nof_tx = cmp_info->n_classified_data_tx;
+	for (i = 0; i < nof_tx; i++) {
 		tx_ports[i].iface_type = clsd_data[i].iface_type;
 		tx_ports[i].iface_no   = clsd_data[i].iface_no_global;
 	}
@@ -851,7 +851,7 @@ spp_classifier_get_component_status(
 	ret = (*params->element_proc)(
 		params, lcore_id,
 		cmp_info->name, SPP_TYPE_CLASSIFIER_MAC_STR,
-		num_rx, rx_ports, num_tx, tx_ports);
+		nof_rx, rx_ports, nof_tx, tx_ports);
 	if (unlikely(ret != SPP_RET_OK))
 		return SPP_RET_NG;
 
-- 
2.17.1



------------------------------

Message: 3
Date: Mon, 24 Jun 2019 11:23:24 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 4/5] shared/sec: rename defines for length of
	str
Message-ID: <20190624022325.18695-5-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to rename `SPP_MIN_STR_LEN` to `STR_LEN_SHORT` because it
is used not for the minimum length but for just comparably short length
of strings. It also renames `SPP_NAME_STR_LEN` to `STR_LEN_NAME` used
for size of names of component or interfaces.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/spp_mirror.c                         |  4 ++--
 src/shared/secondary/spp_worker_th/cmd_runner.c |  7 +++----
 src/shared/secondary/spp_worker_th/cmd_utils.c  |  8 ++++----
 src/shared/secondary/spp_worker_th/cmd_utils.h  | 17 ++++++-----------
 src/shared/secondary/spp_worker_th/vf_deps.h    | 15 ++++-----------
 src/vf/classifier_mac.c                         |  6 +++---
 src/vf/spp_forward.c                            |  4 ++--
 7 files changed, 24 insertions(+), 37 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index d5abf7b..b68eccc 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -35,7 +35,7 @@ struct mirror_rxtx {
 
 /* Information on the path used for mirror. */
 struct mirror_path {
-	char name[SPP_NAME_STR_LEN];  /* component name */
+	char name[STR_LEN_NAME];  /* component name */
 	volatile enum sppwk_worker_type wk_type;
 	int nof_rx;  /* number of receive ports */
 	int nof_tx;  /* number of mirror ports */
@@ -310,7 +310,7 @@ spp_mirror_update(struct sppwk_comp_info *component)
 			component->name,
 			component->wk_type);
 
-	memcpy(&path->name, component->name, SPP_NAME_STR_LEN);
+	memcpy(&path->name, component->name, STR_LEN_NAME);
 	path->wk_type = component->wk_type;
 	path->nof_rx = component->nof_rx;
 	path->nof_tx = component->nof_tx;
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 1d1ec49..9235857 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -174,8 +174,7 @@ update_cls_table(enum sppwk_action wk_action,
 		/* Initialize deleted attributes again. */
 		port_info->cls_attrs.vlantag.vid = ETH_VLAN_ID_MAX;
 		port_info->cls_attrs.mac_addr = 0;
-		memset(port_info->cls_attrs.mac_addr_str, 0x00,
-							SPP_MIN_STR_LEN);
+		memset(port_info->cls_attrs.mac_addr_str, 0x00, STR_LEN_SHORT);
 	} else if (wk_action == SPPWK_ACT_ADD) {
 		if (unlikely(port_info->cls_attrs.vlantag.vid !=
 				ETH_VLAN_ID_MAX)) {
@@ -1236,7 +1235,7 @@ append_classifier_element_value(
 	int ret = SPP_RET_NG;
 	char *buff, *tmp_buff;
 	char port_str[CMD_TAG_APPEND_SIZE];
-	char value_str[SPP_MIN_STR_LEN];
+	char value_str[STR_LEN_SHORT];
 	buff = params->output;
 	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
 	if (unlikely(tmp_buff == NULL)) {
@@ -1253,7 +1252,7 @@ append_classifier_element_value(
 	if (unlikely(ret < SPP_RET_OK))
 		return ret;
 
-	memset(value_str, 0x00, SPP_MIN_STR_LEN);
+	memset(value_str, 0x00, STR_LEN_SHORT);
 	switch (type) {
 	case SPP_CLASSIFIER_TYPE_MAC:
 		sprintf(value_str, "%s", mac);
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index c519624..ae6be1a 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -282,7 +282,7 @@ get_sppwk_port(enum port_type iface_type, int iface_no)
 void
 log_core_info(const struct core_mng_info *core_info)
 {
-	char str[SPP_NAME_STR_LEN];
+	char str[STR_LEN_NAME];
 	const struct core_mng_info *info = NULL;
 	unsigned int lcore_id = 0;
 	RTE_LCORE_FOREACH_SLAVE(lcore_id) {
@@ -291,7 +291,7 @@ log_core_info(const struct core_mng_info *core_info)
 				lcore_id, info->status,
 				info->ref_index, info->upd_index);
 
-		memset(str, 0x00, SPP_NAME_STR_LEN);
+		memset(str, 0x00, STR_LEN_NAME);
 		log_hexdumped(str, info->core[0].id,
 				sizeof(int)*info->core[0].num);
 
@@ -305,7 +305,7 @@ log_core_info(const struct core_mng_info *core_info)
 void
 log_component_info(const struct sppwk_comp_info *comp_info)
 {
-	char str[SPP_NAME_STR_LEN];
+	char str[STR_LEN_NAME];
 	const struct sppwk_comp_info *tmp_ci = NULL;
 	int cnt = 0;
 	for (cnt = 0; cnt < RTE_MAX_LCORE; cnt++) {
@@ -945,7 +945,7 @@ sppwk_convert_mac_str_to_int64(const char *macaddr)
 	int64_t ret_mac = 0;
 	int64_t token_val = 0;
 	int token_cnt = 0;
-	char tmp_mac[SPP_MIN_STR_LEN];
+	char tmp_mac[STR_LEN_SHORT];
 	char *str = tmp_mac;
 	char *saveptr = NULL;
 	char *endptr = NULL;
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index b6c2542..ed46370 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -33,17 +33,12 @@
 /** Update wait timer (micro sec) */
 #define SPP_CHANGE_UPDATE_INTERVAL 10
 
-/** The max number of buffer for management */
-#define SPP_INFO_AREA_MAX 2
+#define SPP_INFO_AREA_MAX 2  /* The max number of buffer for management */
 
-/** The length of shortest character string */
-#define SPP_MIN_STR_LEN   32
+#define STR_LEN_SHORT 32  /* Size of short string. */
+#define STR_LEN_NAME 128  /* Size of string for names. */
 
-/** The length of NAME string */
-#define SPP_NAME_STR_LEN  128
-
-/** Maximum number of port abilities available */
-#define SPP_PORT_ABILITY_MAX 4
+#define SPP_PORT_ABILITY_MAX 4  /* Max num of port abilities. */
 
 /** Number of VLAN ID */
 #define SPP_NUM_VLAN_VID 4096
@@ -175,7 +170,7 @@ struct spp_port_ability {
 /* Attributes for classifying. */
 struct sppwk_cls_attrs {
 	uint64_t mac_addr;  /**< Mac address (binary) */
-	char mac_addr_str[SPP_MIN_STR_LEN];  /**< Mac address (text) */
+	char mac_addr_str[STR_LEN_SHORT];  /**< Mac address (text) */
 	struct spp_vlantag_info vlantag;   /**< VLAN tag information */
 };
 
@@ -199,7 +194,7 @@ struct sppwk_port_info {
 
 /* Attributes of SPP worker thread named as `component`. */
 struct sppwk_comp_info {
-	char name[SPP_NAME_STR_LEN];  /**< Component name */
+	char name[STR_LEN_NAME];  /**< Component name */
 	enum sppwk_worker_type wk_type;  /**< Type of worker thread */
 	unsigned int lcore_id;
 	int comp_id;  /**< Component ID */
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 6d857d2..fe03490 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -50,21 +50,14 @@ struct classified_data {
 
 /* classifier component information */
 struct component_info {
-	/* component name */
-	char name[SPP_NAME_STR_LEN];
-
-	/* mac address entry flag */
-	int mac_addr_entry;
+	char name[STR_LEN_NAME];  /* component name */
+	int mac_addr_entry;  /* mac address entry flag */
 
 	/* mac address classification per vlan-id */
 	struct mac_classification *mac_classifications[SPP_NUM_VLAN_VID];
 
-	/* number of transmission ports */
-	int n_classified_data_tx;
-
-	/* receive port handled by classifier */
-	struct classified_data classified_data_rx;
-
+	int n_classified_data_tx;  /* number of transmission ports */
+	struct classified_data classified_data_rx;  /* RX handled by cls */
 	/* transmission ports handled by classifier */
 	struct classified_data classified_data_tx[RTE_MAX_ETHPORTS];
 };
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index b5260b0..8f9c0f5 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -187,7 +187,7 @@ log_classification(
 	struct ether_hdr *eth;
 	uint16_t vid;
 	char mac_addr_str[2][ETHER_ADDR_STR_BUF_SZ];
-	char iface_str[SPP_NAME_STR_LEN];
+	char iface_str[STR_LEN_NAME];
 
 	eth = rte_pktmbuf_mtod(pkt, struct ether_hdr *);
 	vid = get_vid(pkt);
@@ -232,7 +232,7 @@ log_entry(
 		const char *func_name,
 		int line_num)
 {
-	char iface_str[SPP_NAME_STR_LEN];
+	char iface_str[STR_LEN_NAME];
 
 	if (clsd_idx < 0)
 		snprintf(iface_str, sizeof(iface_str), "%ld", clsd_idx);
@@ -720,7 +720,7 @@ spp_classifier_mac_update(struct sppwk_comp_info *component_info)
 				"Cannot update classifier mac. ret=%d\n", ret);
 		return ret;
 	}
-	memcpy(cmp_info->name, component_info->name, SPP_NAME_STR_LEN);
+	memcpy(cmp_info->name, component_info->name, STR_LEN_NAME);
 
 	/* change index of reference side */
 	mng_info->upd_index = mng_info->ref_index;
diff --git a/src/vf/spp_forward.c b/src/vf/spp_forward.c
index 71859e6..668b31c 100644
--- a/src/vf/spp_forward.c
+++ b/src/vf/spp_forward.c
@@ -19,7 +19,7 @@ struct forward_rxtx {
 
 /* Information on the path used for forward. */
 struct forward_path {
-	char name[SPP_NAME_STR_LEN];    /* component name          */
+	char name[STR_LEN_NAME];    /* component name */
 	volatile enum sppwk_worker_type wk_type;
 	int num_rx;                     /* number of receive ports */
 	int num_tx;                     /* number of trans ports   */
@@ -86,7 +86,7 @@ spp_forward_update(struct sppwk_comp_info *component)
 			component->name,
 			component->wk_type);
 
-	memcpy(&path->name, component->name, SPP_NAME_STR_LEN);
+	memcpy(&path->name, component->name, STR_LEN_NAME);
 	path->wk_type = component->wk_type;
 	path->num_rx = component->nof_rx;
 	path->num_tx = component->nof_tx;
-- 
2.17.1



------------------------------

Message: 4
Date: Mon, 24 Jun 2019 11:23:25 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 5/5] shared/sec: add prefix to defines of worker
	types
Message-ID: <20190624022325.18695-6-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to prefix `SPPWK_` to defines of strings of worker types
such as `classifier_mac`, `merge` or so.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/spp_mirror.c                         |  2 +-
 src/shared/secondary/spp_worker_th/cmd_parser.c |  4 ++--
 src/shared/secondary/spp_worker_th/cmd_runner.c |  4 ++--
 src/shared/secondary/spp_worker_th/cmd_utils.h  | 10 +++++-----
 src/vf/classifier_mac.c                         |  2 +-
 src/vf/spp_forward.c                            |  4 ++--
 6 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index b68eccc..f62ae7e 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -485,7 +485,7 @@ spp_mirror_get_component_status(
 		return SPP_RET_NG;
 	}
 
-	component_type = SPP_TYPE_MIRROR_STR;
+	component_type = SPPWK_TYPE_MIR_STR;
 
 	memset(rx_ports, 0x00, sizeof(rx_ports));
 	for (cnt = 0; cnt < path->nof_rx; cnt++) {
diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.c b/src/shared/secondary/spp_worker_th/cmd_parser.c
index 9fc88dd..55fc1d2 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.c
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.c
@@ -197,8 +197,8 @@ get_comp_type_from_str(const char *type_str)
 #endif /* SPP_VF_MODULE */
 
 #ifdef SPP_MIRROR_MODULE
-	if (strncmp(type_str, SPP_TYPE_MIRROR_STR,
-			strlen(SPP_TYPE_MIRROR_STR)+1) == 0)
+	if (strncmp(type_str, SPPWK_TYPE_MIR_STR,
+			strlen(SPPWK_TYPE_MIR_STR)+1) == 0)
 		return SPPWK_TYPE_MIR;
 #endif /* SPP_MIRROR_MODULE */
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 9235857..a768575 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -514,7 +514,7 @@ spp_iterate_core_info(struct spp_iterate_core_params *params)
 		if (core->num == 0) {
 			ret = (*params->element_proc)(
 				params, lcore_id,
-				"", SPP_TYPE_UNUSE_STR,
+				"", SPPWK_TYPE_NONE_STR,
 				0, NULL, 0, NULL);
 			if (unlikely(ret != 0)) {
 				RTE_LOG(ERR, WK_CMD_RUNNER, "Cannot iterate core "
@@ -1145,7 +1145,7 @@ append_core_element_value(
 	}
 
 	/* there is unnecessary data when "unuse" by type */
-	unuse_flg = strcmp(type, SPP_TYPE_UNUSE_STR);
+	unuse_flg = strcmp(type, SPPWK_TYPE_NONE_STR);
 
 	/**
 	 * TODO(yasufum) change ambiguous "core" to more specific one such as
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index ed46370..ee44cee 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -19,11 +19,11 @@
  *  "merge" -> "merger", "forward" -> "forwarder".
  */
 /** Identifier string for each component (status command) */
-#define SPP_TYPE_CLASSIFIER_MAC_STR "classifier_mac"
-#define SPP_TYPE_MERGE_STR	    "merge"
-#define SPP_TYPE_FORWARD_STR	    "forward"
-#define SPP_TYPE_MIRROR_STR	    "mirror"
-#define SPP_TYPE_UNUSE_STR	    "unuse"
+#define SPPWK_TYPE_CLS_STR "classifier_mac"
+#define SPPWK_TYPE_MRG_STR "merge"
+#define SPPWK_TYPE_FWD_STR "forward"
+#define SPPWK_TYPE_MIR_STR "mirror"
+#define SPPWK_TYPE_NONE_STR "unuse"
 
 /** Identifier string for each interface */
 #define SPP_IFTYPE_NIC_STR   "phy"
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 8f9c0f5..b3a6cba 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -850,7 +850,7 @@ spp_classifier_get_component_status(
 	/* Set the information with the function specified by the command. */
 	ret = (*params->element_proc)(
 		params, lcore_id,
-		cmp_info->name, SPP_TYPE_CLASSIFIER_MAC_STR,
+		cmp_info->name, SPPWK_TYPE_CLS_STR,
 		nof_rx, rx_ports, nof_tx, tx_ports);
 	if (unlikely(ret != SPP_RET_OK))
 		return SPP_RET_NG;
diff --git a/src/vf/spp_forward.c b/src/vf/spp_forward.c
index 668b31c..909f084 100644
--- a/src/vf/spp_forward.c
+++ b/src/vf/spp_forward.c
@@ -205,9 +205,9 @@ spp_forward_get_component_status(
 	}
 
 	if (path->wk_type == SPPWK_TYPE_MRG)
-		component_type = SPP_TYPE_MERGE_STR;
+		component_type = SPPWK_TYPE_MRG_STR;
 	else
-		component_type = SPP_TYPE_FORWARD_STR;
+		component_type = SPPWK_TYPE_FWD_STR;
 
 	memset(rx_ports, 0x00, sizeof(rx_ports));
 	for (cnt = 0; cnt < path->num_rx; cnt++) {
-- 
2.17.1



End of spp Digest, Vol 31, Issue 3
**********************************


From yasufum.o@gmail.com Mon Jun 24 11:23:24 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTK00UWKZZZ8Y30@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:23:59 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTK00W0YZZZN300@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:23:59 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTK00VILZZZYD00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:23:59 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf105.ddreams.local (Postfix) with ESMTP id 1ACC07E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:23:59 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 195978E6064	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:23:59 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 17FC38E6066	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:23:59 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 7A7688E6060	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:23:58 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf105.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:23:58 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2NwDC013221;	Mon,
 24 Jun 2019 11:23:58 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2Nw15013220;	Mon, 24 Jun 2019 11:23:58 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2NwJN013217	for unknown; Mon,
 24 Jun 2019 11:23:58 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2NvC5005429 for
 unknown; Mon, 24 Jun 2019 11:23:57 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Nvns005426; Mon,
 24 Jun 2019 11:23:57 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2NvQZ016204;	Mon,
 24 Jun 2019 11:23:57 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O2NvE0016200	for unknown; Mon, 24 Jun 2019 11:23:57 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2NvVe005998 for
 unknown; Mon, 24 Jun 2019 11:23:57 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Nvhi005995 for
 unknown; Mon, 24 Jun 2019 11:23:57 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2Nosd003512	for unknown; Mon,
 24 Jun 2019 11:23:56 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 3746E1BF6F;	Mon, 24 Jun 2019 04:23:50 +0200 (CEST)
Received: from mail-pf1-f195.google.com
 (mail-pf1-f195.google.com [209.85.210.195]) by dpdk.org (Postfix)
 with ESMTP id 219CD1BF54 for <spp@dpdk.org>; Mon,
 24 Jun 2019 04:23:49 +0200 (CEST)
Received: by mail-pf1-f195.google.com with SMTP id 81so6573245pfy.13 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 19:23:49 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id y5sm9127726pgv.12.2019.06.23.19.23.46
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 19:23:47 -0700 (PDT)
Date: Mon, 24 Jun 2019 11:23:24 +0900
From: yasufum.o@gmail.com
Subject: [spp 04358] [spp] [PATCH 4/5] shared/sec: rename defines for length of
 str
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624022325.18695-5-yasufum.o@gmail.com>
In-reply-to: <20190624022325.18695-1-yasufum.o@gmail.com>
References: <20190624022325.18695-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04358
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=TO3Wfz3aFaD/2gsTp42+wDSdYyCAsXiICEz8G5HwYHc=;
 b=f3MGtfLw6TQ8xBFQnOwC+GnS35AxWT34n7C6Gu+Fz1GOveybV/YU3wNVGMNd+2a7kc
 rYk3lmagPuAO2DGvbJPHUGBhvNDxe3EU4QpWzUNyIzfKAZanka0tNGTOvzxwcBY22KMa
 FR/xLHxvJX/gBDFzODj/OWMpr1/mhEBjartrFnlsg0NQqr76+r4ez1WzI60JSrASW60R
 w5673wXJxmNsYh++dxIcM5YxwyCex14h8UeyEgFSAPuy/7Y6nZFV7WTu2ejOJr/4sISU
 /cI+RF7wPuEJzGwyTp6AePiaT/ElHPUOyfan8G+B/zJM0oNFGwLx2iJiRVMWw3JEoWtg uikA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=TO3Wfz3aFaD/2gsTp42+wDSdYyCAsXiICEz8G5HwYHc=;
 b=Q6jrHjEeCxh2HWCjNfX5vb3hXR9mKCGzs29zn/hwlP0tTCrkX+K93sx5/ALpzOH8Qy
 mRk9fiDFqRQWyhag0N8HDGiLVeXAN2g6H2GrLhR/lw7TBKm5/1CcpThkHxl0ZKw7K5h/
 GcIegrDeT8hLJYf3zOdXqBHSJhcVOG7lwCKaS0I0/l9JkDdZwkNM8K/HLIQ9agfJ5RfQ
 qpJS7FSJCRT5Zix1U0IhbPgvv0t5BnyvsuKYS6l+Qi8wvR0kCp/FntesN6tfgvM9rF/C
 KyZfRT+GiU+VQdmoFrhFjbwamCWxKJjVFnPnmPswq6n/+ej/5/UUZN55DQfKEFDLFVfG I6jQ==
X-Gm-Message-State: APjAAAVlXq/CmcCpogLyjdh2mb3/qILrv4O3+WA4jrVhtH1DmJfHDNHj
 IYe5QEW83KylSxLbPRbCv22jIY/J
X-Google-Smtp-Source:
 APXvYqxOJFygh9lGV8ES/U9mfw8l+DF3zTeedcCNzSpg/MpbRMHvS9+hTCpB4ZtasMTTUcKWYXGkJg==
X-Received: by 2002:a17:90a:4803:: with SMTP id
 a3mr22482268pjh.58.1561343028185; Sun, 23 Jun 2019 19:23:48 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 242
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to rename `SPP_MIN_STR_LEN` to `STR_LEN_SHORT` because it
is used not for the minimum length but for just comparably short length
of strings. It also renames `SPP_NAME_STR_LEN` to `STR_LEN_NAME` used
for size of names of component or interfaces.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/spp_mirror.c                         |  4 ++--
 src/shared/secondary/spp_worker_th/cmd_runner.c |  7 +++----
 src/shared/secondary/spp_worker_th/cmd_utils.c  |  8 ++++----
 src/shared/secondary/spp_worker_th/cmd_utils.h  | 17 ++++++-----------
 src/shared/secondary/spp_worker_th/vf_deps.h    | 15 ++++-----------
 src/vf/classifier_mac.c                         |  6 +++---
 src/vf/spp_forward.c                            |  4 ++--
 7 files changed, 24 insertions(+), 37 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index d5abf7b..b68eccc 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -35,7 +35,7 @@ struct mirror_rxtx {
 
 /* Information on the path used for mirror. */
 struct mirror_path {
-	char name[SPP_NAME_STR_LEN];  /* component name */
+	char name[STR_LEN_NAME];  /* component name */
 	volatile enum sppwk_worker_type wk_type;
 	int nof_rx;  /* number of receive ports */
 	int nof_tx;  /* number of mirror ports */
@@ -310,7 +310,7 @@ spp_mirror_update(struct sppwk_comp_info *component)
 			component->name,
 			component->wk_type);
 
-	memcpy(&path->name, component->name, SPP_NAME_STR_LEN);
+	memcpy(&path->name, component->name, STR_LEN_NAME);
 	path->wk_type = component->wk_type;
 	path->nof_rx = component->nof_rx;
 	path->nof_tx = component->nof_tx;
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 1d1ec49..9235857 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -174,8 +174,7 @@ update_cls_table(enum sppwk_action wk_action,
 		/* Initialize deleted attributes again. */
 		port_info->cls_attrs.vlantag.vid = ETH_VLAN_ID_MAX;
 		port_info->cls_attrs.mac_addr = 0;
-		memset(port_info->cls_attrs.mac_addr_str, 0x00,
-							SPP_MIN_STR_LEN);
+		memset(port_info->cls_attrs.mac_addr_str, 0x00, STR_LEN_SHORT);
 	} else if (wk_action == SPPWK_ACT_ADD) {
 		if (unlikely(port_info->cls_attrs.vlantag.vid !=
 				ETH_VLAN_ID_MAX)) {
@@ -1236,7 +1235,7 @@ append_classifier_element_value(
 	int ret = SPP_RET_NG;
 	char *buff, *tmp_buff;
 	char port_str[CMD_TAG_APPEND_SIZE];
-	char value_str[SPP_MIN_STR_LEN];
+	char value_str[STR_LEN_SHORT];
 	buff = params->output;
 	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
 	if (unlikely(tmp_buff == NULL)) {
@@ -1253,7 +1252,7 @@ append_classifier_element_value(
 	if (unlikely(ret < SPP_RET_OK))
 		return ret;
 
-	memset(value_str, 0x00, SPP_MIN_STR_LEN);
+	memset(value_str, 0x00, STR_LEN_SHORT);
 	switch (type) {
 	case SPP_CLASSIFIER_TYPE_MAC:
 		sprintf(value_str, "%s", mac);
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index c519624..ae6be1a 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -282,7 +282,7 @@ get_sppwk_port(enum port_type iface_type, int iface_no)
 void
 log_core_info(const struct core_mng_info *core_info)
 {
-	char str[SPP_NAME_STR_LEN];
+	char str[STR_LEN_NAME];
 	const struct core_mng_info *info = NULL;
 	unsigned int lcore_id = 0;
 	RTE_LCORE_FOREACH_SLAVE(lcore_id) {
@@ -291,7 +291,7 @@ log_core_info(const struct core_mng_info *core_info)
 				lcore_id, info->status,
 				info->ref_index, info->upd_index);
 
-		memset(str, 0x00, SPP_NAME_STR_LEN);
+		memset(str, 0x00, STR_LEN_NAME);
 		log_hexdumped(str, info->core[0].id,
 				sizeof(int)*info->core[0].num);
 
@@ -305,7 +305,7 @@ log_core_info(const struct core_mng_info *core_info)
 void
 log_component_info(const struct sppwk_comp_info *comp_info)
 {
-	char str[SPP_NAME_STR_LEN];
+	char str[STR_LEN_NAME];
 	const struct sppwk_comp_info *tmp_ci = NULL;
 	int cnt = 0;
 	for (cnt = 0; cnt < RTE_MAX_LCORE; cnt++) {
@@ -945,7 +945,7 @@ sppwk_convert_mac_str_to_int64(const char *macaddr)
 	int64_t ret_mac = 0;
 	int64_t token_val = 0;
 	int token_cnt = 0;
-	char tmp_mac[SPP_MIN_STR_LEN];
+	char tmp_mac[STR_LEN_SHORT];
 	char *str = tmp_mac;
 	char *saveptr = NULL;
 	char *endptr = NULL;
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index b6c2542..ed46370 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -33,17 +33,12 @@
 /** Update wait timer (micro sec) */
 #define SPP_CHANGE_UPDATE_INTERVAL 10
 
-/** The max number of buffer for management */
-#define SPP_INFO_AREA_MAX 2
+#define SPP_INFO_AREA_MAX 2  /* The max number of buffer for management */
 
-/** The length of shortest character string */
-#define SPP_MIN_STR_LEN   32
+#define STR_LEN_SHORT 32  /* Size of short string. */
+#define STR_LEN_NAME 128  /* Size of string for names. */
 
-/** The length of NAME string */
-#define SPP_NAME_STR_LEN  128
-
-/** Maximum number of port abilities available */
-#define SPP_PORT_ABILITY_MAX 4
+#define SPP_PORT_ABILITY_MAX 4  /* Max num of port abilities. */
 
 /** Number of VLAN ID */
 #define SPP_NUM_VLAN_VID 4096
@@ -175,7 +170,7 @@ struct spp_port_ability {
 /* Attributes for classifying. */
 struct sppwk_cls_attrs {
 	uint64_t mac_addr;  /**< Mac address (binary) */
-	char mac_addr_str[SPP_MIN_STR_LEN];  /**< Mac address (text) */
+	char mac_addr_str[STR_LEN_SHORT];  /**< Mac address (text) */
 	struct spp_vlantag_info vlantag;   /**< VLAN tag information */
 };
 
@@ -199,7 +194,7 @@ struct sppwk_port_info {
 
 /* Attributes of SPP worker thread named as `component`. */
 struct sppwk_comp_info {
-	char name[SPP_NAME_STR_LEN];  /**< Component name */
+	char name[STR_LEN_NAME];  /**< Component name */
 	enum sppwk_worker_type wk_type;  /**< Type of worker thread */
 	unsigned int lcore_id;
 	int comp_id;  /**< Component ID */
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 6d857d2..fe03490 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -50,21 +50,14 @@ struct classified_data {
 
 /* classifier component information */
 struct component_info {
-	/* component name */
-	char name[SPP_NAME_STR_LEN];
-
-	/* mac address entry flag */
-	int mac_addr_entry;
+	char name[STR_LEN_NAME];  /* component name */
+	int mac_addr_entry;  /* mac address entry flag */
 
 	/* mac address classification per vlan-id */
 	struct mac_classification *mac_classifications[SPP_NUM_VLAN_VID];
 
-	/* number of transmission ports */
-	int n_classified_data_tx;
-
-	/* receive port handled by classifier */
-	struct classified_data classified_data_rx;
-
+	int n_classified_data_tx;  /* number of transmission ports */
+	struct classified_data classified_data_rx;  /* RX handled by cls */
 	/* transmission ports handled by classifier */
 	struct classified_data classified_data_tx[RTE_MAX_ETHPORTS];
 };
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index b5260b0..8f9c0f5 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -187,7 +187,7 @@ log_classification(
 	struct ether_hdr *eth;
 	uint16_t vid;
 	char mac_addr_str[2][ETHER_ADDR_STR_BUF_SZ];
-	char iface_str[SPP_NAME_STR_LEN];
+	char iface_str[STR_LEN_NAME];
 
 	eth = rte_pktmbuf_mtod(pkt, struct ether_hdr *);
 	vid = get_vid(pkt);
@@ -232,7 +232,7 @@ log_entry(
 		const char *func_name,
 		int line_num)
 {
-	char iface_str[SPP_NAME_STR_LEN];
+	char iface_str[STR_LEN_NAME];
 
 	if (clsd_idx < 0)
 		snprintf(iface_str, sizeof(iface_str), "%ld", clsd_idx);
@@ -720,7 +720,7 @@ spp_classifier_mac_update(struct sppwk_comp_info *component_info)
 				"Cannot update classifier mac. ret=%d\n", ret);
 		return ret;
 	}
-	memcpy(cmp_info->name, component_info->name, SPP_NAME_STR_LEN);
+	memcpy(cmp_info->name, component_info->name, STR_LEN_NAME);
 
 	/* change index of reference side */
 	mng_info->upd_index = mng_info->ref_index;
diff --git a/src/vf/spp_forward.c b/src/vf/spp_forward.c
index 71859e6..668b31c 100644
--- a/src/vf/spp_forward.c
+++ b/src/vf/spp_forward.c
@@ -19,7 +19,7 @@ struct forward_rxtx {
 
 /* Information on the path used for forward. */
 struct forward_path {
-	char name[SPP_NAME_STR_LEN];    /* component name          */
+	char name[STR_LEN_NAME];    /* component name */
 	volatile enum sppwk_worker_type wk_type;
 	int num_rx;                     /* number of receive ports */
 	int num_tx;                     /* number of trans ports   */
@@ -86,7 +86,7 @@ spp_forward_update(struct sppwk_comp_info *component)
 			component->name,
 			component->wk_type);
 
-	memcpy(&path->name, component->name, SPP_NAME_STR_LEN);
+	memcpy(&path->name, component->name, STR_LEN_NAME);
 	path->wk_type = component->wk_type;
 	path->num_rx = component->nof_rx;
 	path->num_tx = component->nof_tx;
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 11:23:25 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00UX50048Y30@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:24:04 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTL00W28004N300@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:24:04 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00VLS004YD00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:24:04 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id 049E97E603A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:24:04 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 035548E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:24:04 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 011088E6042	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:24:04 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 866918E6052	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:24:02 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:24:02 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2O2Cj013228;	Mon,
 24 Jun 2019 11:24:02 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2O2Od013227;	Mon, 24 Jun 2019 11:24:02 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2O2I5013224	for unknown; Mon,
 24 Jun 2019 11:24:02 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2O1YP005441 for
 unknown; Mon, 24 Jun 2019 11:24:01 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2O12O005438; Mon,
 24 Jun 2019 11:24:01 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2O11D016211;	Mon,
 24 Jun 2019 11:24:01 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O2O1r2016207	for unknown; Mon, 24 Jun 2019 11:24:01 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2O1rE006012 for
 unknown; Mon, 24 Jun 2019 11:24:01 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2O1bs006009 for
 unknown; Mon, 24 Jun 2019 11:24:01 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2NsxL003549	for unknown; Mon,
 24 Jun 2019 11:24:00 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 44AB11BF6C;	Mon, 24 Jun 2019 04:23:54 +0200 (CEST)
Received: from mail-pf1-f195.google.com
 (mail-pf1-f195.google.com [209.85.210.195]) by dpdk.org (Postfix)
 with ESMTP id DCAE51BF51 for <spp@dpdk.org>; Mon,
 24 Jun 2019 04:23:52 +0200 (CEST)
Received: by mail-pf1-f195.google.com with SMTP id x15so6615321pfq.0 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 19:23:52 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id y5sm9127726pgv.12.2019.06.23.19.23.50
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 19:23:51 -0700 (PDT)
Date: Mon, 24 Jun 2019 11:23:25 +0900
From: yasufum.o@gmail.com
Subject: [spp 04359] [spp] [PATCH 5/5] shared/sec: add prefix to defines of
 worker types
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624022325.18695-6-yasufum.o@gmail.com>
In-reply-to: <20190624022325.18695-1-yasufum.o@gmail.com>
References: <20190624022325.18695-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04359
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=4ZItEurUjU5k/vUJWgZNxqAAQQ2u6SYqgjrd0lxzZ8E=;
 b=DlJYrK9Qx8oqqYhkm3OZWtlWmAd4qXOTjRRoGciffaTkvXh5NE++H65DllZa5X04xu
 LyWgJ0CqoA0qUZZgNztKE/MwdW+0J38jZ/3GdA020S8tTYriohP5cH46zmU/ZTGToR6A
 6RUQm+6hKIPB3mpIpF4SvWnU+vUKUZZKfr5HrtpGb+tIVPOrP8CRWyA3Ww2p7+ablNdz
 rvAjS7UZ1FX7jgnV/ynHtLTS/aum12WVqFREdMf8TQ50n9WPT3TfQ9zU8iLE8swO7RhC
 wGdZLl2gO9v+Aa2k6noFfDqoA9FsDn+rNSBHK+QkiDM/WnDX2Ax3SkRT4nbcFJjp0e0V hWcw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=4ZItEurUjU5k/vUJWgZNxqAAQQ2u6SYqgjrd0lxzZ8E=;
 b=PGSYk2xmEEyWqDKPHaCZfX1svr/+9Dpg7oTRTvCXNgvh1GJTubyWiIy/FGngRWwot3
 ZMBQ0dFN1T74hB1ClEZHWZWtq6dkvY+JNsbcuEYligXHE+LEEmvMPirmTtw4hbzeV3+4
 Nj79RStAKGmixMinqnlFRzpSe/OHGYetbKSdk8u6zQiAFGaXYf4WJYMbbWwex7u0Lypb
 KyVloX3pCRUeVTVCZNh+9vUKmFkuG0qGS8e8sTq1sF7ZPJwBc3SfPQcLVt1xwiNUh5/X
 ZCQF/8b8DFDEH31I9t8j1fJEpsLwZDseSgmT3XGxj1+58EKXRhI4Q1x+dcAl2X+596xj MxoA==
X-Gm-Message-State: APjAAAWlpcEyHfOu32Ufed18G3YqqF96B1DxNPbUI4YrIw0oCtruJEWj
 uPZ3Bfu5IMg6SflPDtIRPlIYl5s0
X-Google-Smtp-Source:
 APXvYqyRokrNq1a3R3/7fsT1IL5aZpfVMecQU8ZPRVOoNUW5lKeNoLzW6oVOvnmuNgzEbEqkV/I8qQ==
X-Received: by 2002:a63:60d:: with SMTP id 13mr25350453pgg.272.1561343031678;
 Sun, 23 Jun 2019 19:23:51 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 118
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to prefix `SPPWK_` to defines of strings of worker types
such as `classifier_mac`, `merge` or so.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/spp_mirror.c                         |  2 +-
 src/shared/secondary/spp_worker_th/cmd_parser.c |  4 ++--
 src/shared/secondary/spp_worker_th/cmd_runner.c |  4 ++--
 src/shared/secondary/spp_worker_th/cmd_utils.h  | 10 +++++-----
 src/vf/classifier_mac.c                         |  2 +-
 src/vf/spp_forward.c                            |  4 ++--
 6 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index b68eccc..f62ae7e 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -485,7 +485,7 @@ spp_mirror_get_component_status(
 		return SPP_RET_NG;
 	}
 
-	component_type = SPP_TYPE_MIRROR_STR;
+	component_type = SPPWK_TYPE_MIR_STR;
 
 	memset(rx_ports, 0x00, sizeof(rx_ports));
 	for (cnt = 0; cnt < path->nof_rx; cnt++) {
diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.c b/src/shared/secondary/spp_worker_th/cmd_parser.c
index 9fc88dd..55fc1d2 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.c
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.c
@@ -197,8 +197,8 @@ get_comp_type_from_str(const char *type_str)
 #endif /* SPP_VF_MODULE */
 
 #ifdef SPP_MIRROR_MODULE
-	if (strncmp(type_str, SPP_TYPE_MIRROR_STR,
-			strlen(SPP_TYPE_MIRROR_STR)+1) == 0)
+	if (strncmp(type_str, SPPWK_TYPE_MIR_STR,
+			strlen(SPPWK_TYPE_MIR_STR)+1) == 0)
 		return SPPWK_TYPE_MIR;
 #endif /* SPP_MIRROR_MODULE */
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 9235857..a768575 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -514,7 +514,7 @@ spp_iterate_core_info(struct spp_iterate_core_params *params)
 		if (core->num == 0) {
 			ret = (*params->element_proc)(
 				params, lcore_id,
-				"", SPP_TYPE_UNUSE_STR,
+				"", SPPWK_TYPE_NONE_STR,
 				0, NULL, 0, NULL);
 			if (unlikely(ret != 0)) {
 				RTE_LOG(ERR, WK_CMD_RUNNER, "Cannot iterate core "
@@ -1145,7 +1145,7 @@ append_core_element_value(
 	}
 
 	/* there is unnecessary data when "unuse" by type */
-	unuse_flg = strcmp(type, SPP_TYPE_UNUSE_STR);
+	unuse_flg = strcmp(type, SPPWK_TYPE_NONE_STR);
 
 	/**
 	 * TODO(yasufum) change ambiguous "core" to more specific one such as
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index ed46370..ee44cee 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -19,11 +19,11 @@
  *  "merge" -> "merger", "forward" -> "forwarder".
  */
 /** Identifier string for each component (status command) */
-#define SPP_TYPE_CLASSIFIER_MAC_STR "classifier_mac"
-#define SPP_TYPE_MERGE_STR	    "merge"
-#define SPP_TYPE_FORWARD_STR	    "forward"
-#define SPP_TYPE_MIRROR_STR	    "mirror"
-#define SPP_TYPE_UNUSE_STR	    "unuse"
+#define SPPWK_TYPE_CLS_STR "classifier_mac"
+#define SPPWK_TYPE_MRG_STR "merge"
+#define SPPWK_TYPE_FWD_STR "forward"
+#define SPPWK_TYPE_MIR_STR "mirror"
+#define SPPWK_TYPE_NONE_STR "unuse"
 
 /** Identifier string for each interface */
 #define SPP_IFTYPE_NIC_STR   "phy"
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 8f9c0f5..b3a6cba 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -850,7 +850,7 @@ spp_classifier_get_component_status(
 	/* Set the information with the function specified by the command. */
 	ret = (*params->element_proc)(
 		params, lcore_id,
-		cmp_info->name, SPP_TYPE_CLASSIFIER_MAC_STR,
+		cmp_info->name, SPPWK_TYPE_CLS_STR,
 		nof_rx, rx_ports, nof_tx, tx_ports);
 	if (unlikely(ret != SPP_RET_OK))
 		return SPP_RET_NG;
diff --git a/src/vf/spp_forward.c b/src/vf/spp_forward.c
index 668b31c..909f084 100644
--- a/src/vf/spp_forward.c
+++ b/src/vf/spp_forward.c
@@ -205,9 +205,9 @@ spp_forward_get_component_status(
 	}
 
 	if (path->wk_type == SPPWK_TYPE_MRG)
-		component_type = SPP_TYPE_MERGE_STR;
+		component_type = SPPWK_TYPE_MRG_STR;
 	else
-		component_type = SPP_TYPE_FORWARD_STR;
+		component_type = SPPWK_TYPE_FWD_STR;
 
 	memset(rx_ports, 0x00, sizeof(rx_ports));
 	for (cnt = 0; cnt < path->num_rx; cnt++) {
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 11:24:53 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd105.ddreams.local
 (zssg-mailmd105.ddreams.local [10.160.123.100])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL00UDM02A8Y40@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:25:22 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd105.ddreams.local by
 zssg-mailmd105.ddreams.local (dDREAMS) id <0PTL00L2K02AJG00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:22 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd105.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00H6T02AYD20@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:22 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id 234B07E603A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:22 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 2266B8E6055	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:22 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 21B688E605E	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:22 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id F128B8E6042	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:20 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:20 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PKMi013417;	Mon,
 24 Jun 2019 11:25:20 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2PKX0013416;	Mon, 24 Jun 2019 11:25:20 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2PK97013413	for unknown; Mon,
 24 Jun 2019 11:25:20 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PKUd005897 for
 unknown; Mon, 24 Jun 2019 11:25:20 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PK0Z005894; Mon,
 24 Jun 2019 11:25:20 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PK6d016380;	Mon,
 24 Jun 2019 11:25:20 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O2PJGs016376	for unknown; Mon, 24 Jun 2019 11:25:19 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PJfA006373 for
 unknown; Mon, 24 Jun 2019 11:25:19 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PJD1006368 for
 unknown; Mon, 24 Jun 2019 11:25:19 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2PC17003752	for unknown; Mon,
 24 Jun 2019 11:25:18 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 752181BF54;	Mon, 24 Jun 2019 04:25:12 +0200 (CEST)
Received: from mail-pg1-f193.google.com
 (mail-pg1-f193.google.com [209.85.215.193]) by dpdk.org (Postfix)
 with ESMTP id 1F5961BF42 for <spp@dpdk.org>; Mon,
 24 Jun 2019 04:25:11 +0200 (CEST)
Received: by mail-pg1-f193.google.com with SMTP id n2so6233278pgp.11 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 19:25:11 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id a3sm9927461pje.3.2019.06.23.19.25.08
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 19:25:09 -0700 (PDT)
Date: Mon, 24 Jun 2019 11:24:53 +0900
From: yasufum.o@gmail.com
Subject: [spp 04360] [spp] [PATCH 00/11] Refactor libs for classifier in spp_vf
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624022504.18752-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04360
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=XP/w+BTDy81xkJ05ptphrB/RzR8llrwO3UKJiJc6gD0=;
 b=f0JOCcuSOd6Kia8svMoGrJLbwvUFGKkjRPoATpgGsg9nQCULsZNCYDTSXGPWaWkT0m
 jtnIGjaqHoXBIJTXZTDDlbAonSipJCuVl3Udq4T5wl9QvCrgw10sD0cYQN6PGdUqyofU
 n3f48vHGzIutVbwD1IYC3QI1s+D6IBC9FyT2MF8cTLWM++o7lNyutuqvqrJnKf5Xj7Kn
 b/X4BEkS9XhKCF0+abaaS36yreeb8gUeniqBU/HOKlTV3gNvcCy03DIvD8PZHnMjzW1j
 snfaCY3ZjWIhH/u5NHJduGqba9eJ50t/jifTOgtEX6r9enI1I4gSHqOVw+oabcBaUKpF HKVw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=XP/w+BTDy81xkJ05ptphrB/RzR8llrwO3UKJiJc6gD0=;
 b=JvmMycNEhf1cv6cSTEt4+eZUeMh1AmI/w3V7VT0P8L2KDzMIBoMFpaILuaRwBK286d
 GSWleZbimPD0Rs79pnZGQ+IWSmZOxIx0bSAej9JoS7+tIsMw1+GbxrDZjySx0MN7Ry8k
 wocCiCdzW+3ZldPd9dkUmXiyclohEJwTZHA+iDBesMaWm5BYAxbBPGo68UZfvV6WACCn
 5lSS7Fj0a8FPBmLGhhWasyqPJOHOOrCdP6NSxht5CSjmmKi7qzixzVIeWw+khXw469F6
 iDzFgeyliOogA16E/ga5Zud6mmbND3iq/FZpQB/iyqqUu4uNICXjqkv0WiZQTrfDkLHX spnw==
X-Gm-Message-State: APjAAAXYoEdVKUsm1s3JggMWN+a0093qqnCdqDDCB/SqSsVaoSf5C0ma
 iSkY9Veu7KsS+plozocEbwY1pya3
X-Google-Smtp-Source:
 APXvYqxCGSaWbfABOT/Q4ER04a8r6TJbkXXnZsSslxVy1D/92DQqrIVd++APcDMSdza8K0bjw7kX4w==
X-Received: by 2002:a17:90a:a505:: with SMTP id
 a5mr22218604pjq.27.1561343110254; Sun, 23 Jun 2019 19:25:10 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 36
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Functions for classifier table are hard to maintain because for long
names of functions and variables, complex dependencies of shared libs
and dedicated functions, or so.

This update is to fix these issues. Some of dependencies are still
remained, but reduced by separating many dedicated functions from shared
libs or adding comments for explaining.

Yasufumi Ogawa (11):
  shared/sec: refactor defines of VLAN in spp_vf
  shared/sec: rename struct mac_classification
  shared/sec: refactor comments in vf_deps.h
  shared/sec: rename struct classified_data
  shared/sec: revise usage of term component_info
  shared/sec: revise members of struct cls_port_info
  shared/sec: rename func free_mac_classification
  shared/sec: refactor updating classifier info
  shared/sec: refactor updating forwarder
  shared/sec: refactor getting classifier status
  shared/sec: refactor setup cls table stat in JSON

 .../secondary/spp_worker_th/cmd_parser.c      |   2 +-
 .../secondary/spp_worker_th/cmd_runner.c      |  37 +-
 .../secondary/spp_worker_th/cmd_utils.c       |   4 +-
 .../secondary/spp_worker_th/cmd_utils.h       |   5 +-
 src/shared/secondary/spp_worker_th/vf_deps.h  | 158 +++-----
 src/vf/classifier_mac.c                       | 382 +++++++++---------
 src/vf/classifier_mac.h                       |   2 +-
 src/vf/spp_forward.c                          | 105 +++--
 8 files changed, 330 insertions(+), 365 deletions(-)

-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 11:24:54 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00UFB02D8Y40@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:25:25 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTL00Z0202D4C00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:25 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00VQJ02DYD10@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:25 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf106.ddreams.local (Postfix) with ESMTP id B1F107E603A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:25 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id B16208E6042	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:25 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id AD9CD8E6063	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:25 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 0859A8E6061	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:25 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf106.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:24 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2POM2013444;	Mon,
 24 Jun 2019 11:25:24 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2PODh013443;	Mon, 24 Jun 2019 11:25:24 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2POdG013440	for unknown; Mon,
 24 Jun 2019 11:25:24 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2POEK005933 for
 unknown; Mon, 24 Jun 2019 11:25:24 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2POw9005930; Mon,
 24 Jun 2019 11:25:24 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2POm7016401;	Mon,
 24 Jun 2019 11:25:24 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O2POsF016397	for unknown; Mon, 24 Jun 2019 11:25:24 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PNxP006447 for
 unknown; Mon, 24 Jun 2019 11:25:23 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PNPt006440 for
 unknown; Mon, 24 Jun 2019 11:25:23 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2PHi5003788	for unknown; Mon,
 24 Jun 2019 11:25:22 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 829471BF6D;	Mon, 24 Jun 2019 04:25:16 +0200 (CEST)
Received: from mail-pf1-f196.google.com
 (mail-pf1-f196.google.com [209.85.210.196]) by dpdk.org (Postfix)
 with ESMTP id E34591BF6B for <spp@dpdk.org>; Mon,
 24 Jun 2019 04:25:14 +0200 (CEST)
Received: by mail-pf1-f196.google.com with SMTP id i189so6583183pfg.10 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 19:25:14 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id a3sm9927461pje.3.2019.06.23.19.25.12
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 19:25:13 -0700 (PDT)
Date: Mon, 24 Jun 2019 11:24:54 +0900
From: yasufum.o@gmail.com
Subject: [spp 04361] [spp] [PATCH 01/11] shared/sec: refactor defines of VLAN
 in spp_vf
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624022504.18752-2-yasufum.o@gmail.com>
In-reply-to: <20190624022504.18752-1-yasufum.o@gmail.com>
References: <20190624022504.18752-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04361
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=um9wQZ3fRjVtkDIryVK/+fmh+JetP7wrmjYLsGXUxco=;
 b=klu7raGav7P7C5fHSxDl+d0QU9EK0fw3iegsqKwGq+xXGPeT1fz3iW91U+iZSksV0H
 3BpJ+/AI/uzdTmBrlJRIBk8JXmOEzPnzfaDS4r20vkqKoFmvmO4HQH2ZKM8yk6uS1/8Z
 iw4yGtN3FRJu6/Sx0ZALes7jnFr7mKCLLWE4O8CY6EfwcLVPvP6zdiCv2Ci9aGMaad8q
 0942AUQF5ToakE+Yg232pqf3PT93lwkc7KgpUv2tg63LB9CHtrVy1nutYNwWDhQEtWaT
 VU6atWqFoJyjbTx8qgRUuF9lPp9jOtiUdi5KaVhmHcCq/YESHtep2b/rVAUa5fnOckfu 6LHg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=um9wQZ3fRjVtkDIryVK/+fmh+JetP7wrmjYLsGXUxco=;
 b=eXC9JkYzE9t4n8MGsikRj6NzLv0Blt2enIbYPRTS8JVojBkfjasydec3WsRuIc3Gt9
 V/Arc4Wn2g7lqwTn3AH966lGdxL2Q7wubDyfW/4JxXaXneQ30B/WlBC8mrlSd5S19v4B
 U7GLjvp9NFDdDrmMrJJXNeXyWTRs19aIrZN71/cs9/kvys2jNGbzVDZ1xfmIum739lOs
 8wPg2YOyL/gZChJjgHu0VAbHqeuFWZmU0Tjj5zjkhfbWdmjdwu1G6txby7L0TQJa1kYC
 MQXJtbuFIrZC//bR+D6U45Mq6QrUH45Lk2DGmNd1SXh9/KpGG4NjWlevFqCDSZVMYqe+ QwRQ==
X-Gm-Message-State: APjAAAUGP3/S0EzZ75CGxp4w1wFMyJCMRi/9vR/Ieky/MZKBu6H27Q3+
 lh+6jDD0bAzAcz+j+2E39FYKEmET
X-Google-Smtp-Source:
 APXvYqxVTC4CoF4ugO5lP3Kp++K/+VYlUktms0y+VSKOLAFzpWob1NxZzErsl7JQwtJ/4loFLBEofw==
X-Received: by 2002:a17:90a:9281:: with SMTP id
 n1mr21217412pjo.25.1561343114050; Sun, 23 Jun 2019 19:25:14 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 128
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

* Rename `SPP_NUM_VLAN_VID` to `NOF_VLAN` and move it to `vf_deps.h`.

* Rename `NUM_CLASSIFIER_MAC_INFO` to `NOF_CLS_INFO` and move it to
  `classifier_mac.c`.

* Rename `NUM_CLASSIFIER_MAC_TABLE_ENTRY` to `NOF_CLS_TABLE_ENTRIES`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/shared/secondary/spp_worker_th/cmd_utils.h |  3 ---
 src/shared/secondary/spp_worker_th/vf_deps.h   |  6 +++---
 src/vf/classifier_mac.c                        | 17 ++++++++++-------
 3 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index ee44cee..1d6c332 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -40,9 +40,6 @@
 
 #define SPP_PORT_ABILITY_MAX 4  /* Max num of port abilities. */
 
-/** Number of VLAN ID */
-#define SPP_NUM_VLAN_VID 4096
-
 /** Maximum VLAN PCP */
 #define SPP_VLAN_PCP_MAX 7
 
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index fe03490..fd0dc5d 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -9,8 +9,8 @@
 #include <rte_hash.h>
 #include "cmd_utils.h"
 
-/* number of classifier information (reference/update) */
-#define NUM_CLASSIFIER_MAC_INFO 2
+/** Number of VLAN ID */
+#define NOF_VLAN 4096
 
 /* mac address classification */
 struct mac_classification {
@@ -54,7 +54,7 @@ struct component_info {
 	int mac_addr_entry;  /* mac address entry flag */
 
 	/* mac address classification per vlan-id */
-	struct mac_classification *mac_classifications[SPP_NUM_VLAN_VID];
+	struct mac_classification *mac_classifications[NOF_VLAN];
 
 	int n_classified_data_tx;  /* number of transmission ports */
 	struct classified_data classified_data_rx;  /* RX handled by cls */
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index b3a6cba..76dd9e7 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -35,8 +35,11 @@
 #define DEFAULT_HASH_FUNC rte_jhash
 #endif
 
+/* number of classifier information (reference/update) */
+#define NOF_CLS_INFO 2
+
 /* number of classifier mac table entry */
-#define NUM_CLASSIFIER_MAC_TABLE_ENTRY 128
+#define NOF_CLS_TABLE_ENTRIES 128
 
 /* interval that wait until change update index (micro second) */
 #define CHANGE_UPDATE_INDEX_WAIT_INTERVAL SPP_CHANGE_UPDATE_INTERVAL
@@ -53,7 +56,7 @@
 /* classifier management information */
 struct management_info {
 	/* classifier information */
-	struct component_info cmp_infos[NUM_CLASSIFIER_MAC_INFO];
+	struct component_info cmp_infos[NOF_CLS_INFO];
 
 	/* Reference index number for classifier information */
 	volatile int ref_index;
@@ -75,7 +78,7 @@ uninit_classifier(struct management_info *mng_info)
 
 	mng_info->is_used = 0;
 
-	for (i = 0; i < NUM_CLASSIFIER_MAC_INFO; ++i)
+	for (i = 0; i < NOF_CLS_INFO; ++i)
 		uninit_component_info(mng_info->cmp_infos + (long)i);
 
 	memset(mng_info, 0, sizeof(struct management_info));
@@ -298,7 +301,7 @@ create_mac_classification(void)
 	/* set hash creating parameters */
 	struct rte_hash_parameters hash_params = {
 			.name      = hash_tab_name,
-			.entries   = NUM_CLASSIFIER_MAC_TABLE_ENTRY,
+			.entries   = NOF_CLS_TABLE_ENTRIES,
 			.key_len   = sizeof(struct ether_addr),
 			.hash_func = DEFAULT_HASH_FUNC,
 			.hash_func_init_val = 0,
@@ -440,7 +443,7 @@ uninit_component_info(struct component_info *cmp_info)
 {
 	int i;
 
-	for (i = 0; i < SPP_NUM_VLAN_VID; ++i)
+	for (i = 0; i < NOF_VLAN; ++i)
 		free_mac_classification(cmp_info->mac_classifications[i]);
 
 	memset(cmp_info, 0, sizeof(struct component_info));
@@ -686,7 +689,7 @@ change_classifier_index(struct management_info *mng_info, int id)
 				"Core[%u] Change update index.\n", id);
 		mng_info->ref_index =
 				(mng_info->upd_index + 1) %
-				NUM_CLASSIFIER_MAC_INFO;
+				NOF_CLS_INFO;
 	}
 }
 
@@ -943,7 +946,7 @@ spp_classifier_mac_iterate_table(
 		RTE_LOG(DEBUG, SPP_CLASSIFIER_MAC,
 			"Core[%u] Start iterate classifier table.\n", i);
 
-		for (n = 0; n < SPP_NUM_VLAN_VID; ++n) {
+		for (n = 0; n < NOF_VLAN; ++n) {
 			if (cmp_info->mac_classifications[n] == NULL)
 				continue;
 
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 11:24:55 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd105.ddreams.local
 (zssg-mailmd105.ddreams.local [10.160.123.100])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL00UGP02H8Y40@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:25:29 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd105.ddreams.local by
 zssg-mailmd105.ddreams.local (dDREAMS) id <0PTL00L4802HJ200@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:29 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd105.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00HB402HYD20@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:29 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id 9A7C97E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:29 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 991C48E6061	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:29 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 8E65F8E605C	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:29 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id C48E58E605E	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:28 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:28 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PSUR013488;	Mon,
 24 Jun 2019 11:25:28 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2PSfG013487;	Mon, 24 Jun 2019 11:25:28 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2PSRX013479	for unknown; Mon,
 24 Jun 2019 11:25:28 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PSYW005963 for
 unknown; Mon, 24 Jun 2019 11:25:28 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PSu3005960; Mon,
 24 Jun 2019 11:25:28 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PRc2016422;	Mon,
 24 Jun 2019 11:25:27 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O2PRaG016418	for unknown; Mon, 24 Jun 2019 11:25:27 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PRUS006488 for
 unknown; Mon, 24 Jun 2019 11:25:27 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PRHU006482 for
 unknown; Mon, 24 Jun 2019 11:25:27 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2PKuP003817	for unknown; Mon,
 24 Jun 2019 11:25:26 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 927A01BF6E;	Mon, 24 Jun 2019 04:25:20 +0200 (CEST)
Received: from mail-pl1-f194.google.com
 (mail-pl1-f194.google.com [209.85.214.194]) by dpdk.org (Postfix)
 with ESMTP id 8A33B1BF6E for <spp@dpdk.org>; Mon,
 24 Jun 2019 04:25:18 +0200 (CEST)
Received: by mail-pl1-f194.google.com with SMTP id cl9so5969533plb.10 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 19:25:18 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id a3sm9927461pje.3.2019.06.23.19.25.16
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 19:25:17 -0700 (PDT)
Date: Mon, 24 Jun 2019 11:24:55 +0900
From: yasufum.o@gmail.com
Subject: [spp 04362] [spp] [PATCH 02/11] shared/sec: rename struct
 mac_classification
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624022504.18752-3-yasufum.o@gmail.com>
In-reply-to: <20190624022504.18752-1-yasufum.o@gmail.com>
References: <20190624022504.18752-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04362
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=poxz8Dh0k9GMSe2pX2xvHbeRG6YzVAKEyoMiNhY+rI0=;
 b=HsozfFgwJwZpQ0ZPaHANgfqW+k6CNbK6ejlH4XE7Zrp4Sjo7+Ba+hw7PEKKivKyMBn
 tYN8hkSY7/nmRWL70Kq4hXg944Pa2NeC8oSZDyr8q83d4iJCCxOAcwbys8pE2Wslvm9V
 KOGdVO7gD/lYeI60kZWcaQoU+OBfggYRkoPWme8qRWBoGiATsWqg8qDXvUQjlOS9Sy6W
 NqzJ0slq5AQ1OeNBKiO5QSAI+4jPbhdzrWxItzKoLfnH5KTfLkRY504mMAPT1UBQzRNH
 J5O0nUvDxOgkj7DBkBizkCEF9oIeXJl2NM90+LXmXBWgLViHE2Vg5/MK2RZCE+kP01le Dz5w==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=poxz8Dh0k9GMSe2pX2xvHbeRG6YzVAKEyoMiNhY+rI0=;
 b=LWAyWFHvWKWQU8QYxkt2rUnsVdsQtyL6hJua1SI4SQ06PeQalVlfUHljBMU8vgRYQT
 1Y4qW/u4wyjJ+qBarfJG5Uu7QPSvW5PvpWxMlB+6ubETRe4n0Q6n9evOHOrW30UKYIeX
 KYqW7xAzcY2fHB7lXOmx48aYhC9bAVVdI5kWJExTh27wtHLVl73+4ksT+cSovVyQB3FQ
 vdqQJBhZEGVd1FFzB9lrjW8WZ+gOdXMI3ZkQIPCEvVw7vUGeTEmGbunJyaUeMhJcv2/2
 eWA6MwNtI4dv7Z47+VylgD8c5gP4dauysNXV2nNIQIGMp0kQ/XJlBbcdvVdry/apDqIm 2rUA==
X-Gm-Message-State: APjAAAWFTdZTul7NCVXQeJ8K1jd9GNCYdbmpBn0FJdhUCZJyLN/f3xhM
 5/6MwE2uk1HrXha6Gt35+fRaoZ/Q
X-Google-Smtp-Source:
 APXvYqzpElZaJDFtyqgQ8zm/j/vCNLaPSuG/gAvTnWAk2E56t8BfM/3ss1J1qG9GFPhZPk9eqfu4rg==
X-Received: by 2002:a17:902:724:: with SMTP id
 33mr141835629pli.49.1561343117652; Sun, 23 Jun 2019 19:25:17 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 274
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Struct `mac_classification` defines a set of attirbutes for
classification. This update is to rename the struct to `mac_classifier`
and also its members.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/shared/secondary/spp_worker_th/vf_deps.h | 27 ++++-----
 src/vf/classifier_mac.c                      | 61 ++++++++++----------
 2 files changed, 39 insertions(+), 49 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index fd0dc5d..c6016b8 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -12,19 +12,12 @@
 /** Number of VLAN ID */
 #define NOF_VLAN 4096
 
-/* mac address classification */
-struct mac_classification {
-	/* hash table keeps classification */
-	struct rte_hash *classification_tab;
-
-	/* number of valid classification */
-	int num_active_classified;
-
-	/* index of valid classification */
-	int active_classifieds[RTE_MAX_ETHPORTS];
-
-	/* index of default classification */
-	int default_classified;
+/* Classifier for MAC addresses. */
+struct mac_classifier {
+	struct rte_hash *cls_tbl;  /* Hash table for MAC classification. */
+	int nof_cls_ports;  /* Num of ports classified validly. */
+	int cls_ports[RTE_MAX_ETHPORTS];  /* Ports for classification. */
+	int default_cls_idx;  /* Default index for classification. */
 };
 
 /* classified data (destination port, target packets, etc) */
@@ -54,7 +47,7 @@ struct component_info {
 	int mac_addr_entry;  /* mac address entry flag */
 
 	/* mac address classification per vlan-id */
-	struct mac_classification *mac_classifications[NOF_VLAN];
+	struct mac_classifier *mac_classifications[NOF_VLAN];
 
 	int n_classified_data_tx;  /* number of transmission ports */
 	struct classified_data classified_data_rx;  /* RX handled by cls */
@@ -64,13 +57,13 @@ struct component_info {
 
 /* free mac classification instance. */
 static inline void
-free_mac_classification(struct mac_classification *mac_cls)
+free_mac_classification(struct mac_classifier *mac_cls)
 {
 	if (mac_cls == NULL)
 		return;
 
-	if (mac_cls->classification_tab != NULL)
-		rte_hash_free(mac_cls->classification_tab);
+	if (mac_cls->cls_tbl != NULL)
+		rte_hash_free(mac_cls->cls_tbl);
 
 	rte_free(mac_cls);
 }
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 76dd9e7..5398d25 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -272,23 +272,23 @@ is_used_mng_info(const struct management_info *mng_info)
 }
 
 /* create mac classification instance. */
-static struct mac_classification *
+static struct mac_classifier *
 create_mac_classification(void)
 {
-	struct mac_classification *mac_cls;
+	struct mac_classifier *mac_cls;
 	char hash_tab_name[HASH_TABLE_NAME_BUF_SZ];
 	struct rte_hash **mac_cls_tab;
 
-	mac_cls = (struct mac_classification *)rte_zmalloc(
-			NULL, sizeof(struct mac_classification), 0);
+	mac_cls = (struct mac_classifier *)rte_zmalloc(
+			NULL, sizeof(struct mac_classifier), 0);
 
 	if (unlikely(mac_cls == NULL))
 		return NULL;
 
-	mac_cls->num_active_classified = 0;
-	mac_cls->default_classified = -1;
+	mac_cls->nof_cls_ports = 0;
+	mac_cls->default_cls_idx = -1;
 
-	mac_cls_tab = &mac_cls->classification_tab;
+	mac_cls_tab = &mac_cls->cls_tbl;
 
 	/* make hash table name(require uniqueness between processes) */
 	sprintf(hash_tab_name, "cmtab_%07x%02hx",
@@ -328,7 +328,7 @@ init_component_info(struct component_info *cmp_info,
 {
 	int ret = SPP_RET_NG;
 	int i;
-	struct mac_classification *mac_cls;
+	struct mac_classifier *mac_cls;
 	struct ether_addr eth_addr;
 	char mac_addr_str[ETHER_ADDR_STR_BUF_SZ];
 	struct classified_data *clsd_data_rx = &cmp_info->classified_data_rx;
@@ -385,8 +385,7 @@ init_component_info(struct component_info *cmp_info,
 		mac_cls = cmp_info->mac_classifications[vid];
 
 		/* store active tx_port that associate with mac address */
-		mac_cls->active_classifieds[
-				mac_cls->num_active_classified++] = i;
+		mac_cls->cls_ports[mac_cls->nof_cls_ports++] = i;
 
 		/* mac address entry flag set */
 		cmp_info->mac_addr_entry = 1;
@@ -394,7 +393,7 @@ init_component_info(struct component_info *cmp_info,
 		/* store default classified */
 		if (unlikely(tx_port->cls_attrs.mac_addr ==
 				SPP_DEFAULT_CLASSIFIED_DMY_ADDR)) {
-			mac_cls->default_classified = i;
+			mac_cls->default_cls_idx = i;
 			RTE_LOG(INFO, SPP_CLASSIFIER_MAC,
 					"default classified. vid=%hu, "
 					"iface_type=%d, iface_no=%d, "
@@ -412,7 +411,7 @@ init_component_info(struct component_info *cmp_info,
 		ether_format_addr(mac_addr_str, sizeof(mac_addr_str),
 				&eth_addr);
 
-		ret = rte_hash_add_key_data(mac_cls->classification_tab,
+		ret = rte_hash_add_key_data(mac_cls->cls_tbl,
 				(void *)&eth_addr, (void *)(long)i);
 		if (unlikely(ret < 0)) {
 			RTE_LOG(ERR, SPP_CLASSIFIER_MAC,
@@ -518,7 +517,7 @@ push_packet(struct rte_mbuf *pkt, struct classified_data *clsd_data)
 static inline int
 get_general_default_classified_index(struct component_info *cmp_info)
 {
-	struct mac_classification *mac_cls;
+	struct mac_classifier *mac_cls;
 
 	mac_cls = cmp_info->mac_classifications[VLAN_UNTAGGED_VID];
 	if (unlikely(mac_cls == NULL)) {
@@ -527,7 +526,7 @@ get_general_default_classified_index(struct component_info *cmp_info)
 		return SPP_RET_NG;
 	}
 
-	return mac_cls->default_classified;
+	return mac_cls->default_cls_idx;
 }
 
 /* handle L2 multicast(include broadcast) packet */
@@ -537,7 +536,7 @@ handle_l2multicast_packet(struct rte_mbuf *pkt,
 		struct classified_data *clsd_data)
 {
 	int i;
-	struct mac_classification *mac_cls;
+	struct mac_classifier *mac_cls;
 	uint16_t vid = get_vid(pkt);
 	int gen_def_clsd_idx = get_general_default_classified_index(cmp_info);
 	int n_act_clsd;
@@ -545,7 +544,7 @@ handle_l2multicast_packet(struct rte_mbuf *pkt,
 	/* select mac address classification by vid */
 	mac_cls = cmp_info->mac_classifications[vid];
 	if (unlikely(mac_cls == NULL ||
-			mac_cls->num_active_classified == 0)) {
+			mac_cls->nof_cls_ports == 0)) {
 		/* specific vlan is not registered
 		 * use untagged's default(as general default)
 		 */
@@ -564,18 +563,16 @@ handle_l2multicast_packet(struct rte_mbuf *pkt,
 	}
 
 	/* add to mbuf's refcnt */
-	n_act_clsd = mac_cls->num_active_classified;
+	n_act_clsd = mac_cls->nof_cls_ports;
 	if (gen_def_clsd_idx >= 0 && vid != VLAN_UNTAGGED_VID)
 		++n_act_clsd;
 
 	rte_mbuf_refcnt_update(pkt, (int16_t)(n_act_clsd - 1));
 
 	/* transmit to specific segment & general default */
-	for (i = 0; i < mac_cls->num_active_classified; i++) {
-		LOG_CLS((long)mac_cls->active_classifieds[i],
-				pkt, cmp_info, clsd_data);
-		push_packet(pkt, clsd_data +
-				(long)mac_cls->active_classifieds[i]);
+	for (i = 0; i < mac_cls->nof_cls_ports; i++) {
+		LOG_CLS((long)mac_cls->cls_ports[i], pkt, cmp_info, clsd_data);
+		push_packet(pkt, clsd_data + (long)mac_cls->cls_ports[i]);
 	}
 
 	if (gen_def_clsd_idx >= 0 && vid != VLAN_UNTAGGED_VID) {
@@ -592,7 +589,7 @@ select_classified_index(const struct rte_mbuf *pkt,
 	int ret;
 	struct ether_hdr *eth;
 	void *lookup_data;
-	struct mac_classification *mac_cls;
+	struct mac_classifier *mac_cls;
 	uint16_t vid;
 
 	eth = rte_pktmbuf_mtod(pkt, struct ether_hdr *);
@@ -607,7 +604,7 @@ select_classified_index(const struct rte_mbuf *pkt,
 	}
 
 	/* find in table (by destination mac address) */
-	ret = rte_hash_lookup_data(mac_cls->classification_tab,
+	ret = rte_hash_lookup_data(mac_cls->cls_tbl,
 			(const void *)&eth->d_addr, &lookup_data);
 	if (ret >= 0) {
 		LOG_DBG(cmp_info->name, "Mac address is registered. "
@@ -624,7 +621,7 @@ select_classified_index(const struct rte_mbuf *pkt,
 		return -2;
 
 	/* if default is not set, use untagged's default */
-	if (unlikely(mac_cls->default_classified < 0 &&
+	if (unlikely(mac_cls->default_cls_idx < 0 &&
 			vid != VLAN_UNTAGGED_VID)) {
 		LOG_DBG(cmp_info->name, "Vid's default is not set. "
 				"use general default. vid=%hu\n", vid);
@@ -633,7 +630,7 @@ select_classified_index(const struct rte_mbuf *pkt,
 
 	/* use default */
 	LOG_DBG(cmp_info->name, "Use vid's default. vid=%hu\n", vid);
-	return mac_cls->default_classified;
+	return mac_cls->default_cls_idx;
 }
 
 /*
@@ -865,7 +862,7 @@ static void
 mac_classification_iterate_table(
 		struct spp_iterate_classifier_table_params *params,
 		uint16_t vid,
-		struct mac_classification *mac_cls,
+		struct mac_classifier *mac_cls,
 		__rte_unused struct component_info *cmp_info,
 		struct classified_data *clsd_data)
 {
@@ -881,13 +878,13 @@ mac_classification_iterate_table(
 	if (unlikely(vid == VLAN_UNTAGGED_VID))
 		type = SPP_CLASSIFIER_TYPE_MAC;
 
-	if (mac_cls->default_classified >= 0) {
+	if (mac_cls->default_cls_idx >= 0) {
 		port.iface_type = (clsd_data +
-				mac_cls->default_classified)->iface_type;
+				mac_cls->default_cls_idx)->iface_type;
 		port.iface_no   = (clsd_data +
-				mac_cls->default_classified)->iface_no_global;
+				mac_cls->default_cls_idx)->iface_no_global;
 
-		LOG_ENT((long)mac_cls->default_classified,
+		LOG_ENT((long)mac_cls->default_cls_idx,
 				vid,
 				SPP_DEFAULT_CLASSIFIED_SPEC_STR,
 				cmp_info, clsd_data);
@@ -902,7 +899,7 @@ mac_classification_iterate_table(
 
 	next = 0;
 	while (1) {
-		ret = rte_hash_iterate(mac_cls->classification_tab,
+		ret = rte_hash_iterate(mac_cls->cls_tbl,
 				&key, &data, &next);
 
 		if (unlikely(ret < 0))
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 11:24:56 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd101.ddreams.local
 (zssg-mailmd101.ddreams.local [10.160.123.96]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00UHT02K8Y40@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:25:32 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd101.ddreams.local by
 zssg-mailmd101.ddreams.local (dDREAMS) id <0PTL01D3602K1100@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:32 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd101.ddreams.local
 (dDREAMS) with ESMTP id <0PTL016N002KW030@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:32 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf105.ddreams.local (Postfix) with ESMTP id B6E757E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:32 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id B51CD8E6058	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:32 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id A9C0A8E6060	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:32 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id D75638E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:31 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf105.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:31 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PVXf013519;	Mon,
 24 Jun 2019 11:25:31 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2PVr0013518;	Mon, 24 Jun 2019 11:25:31 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2PVZO013508	for unknown; Mon,
 24 Jun 2019 11:25:31 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PVEG005984 for
 unknown; Mon, 24 Jun 2019 11:25:31 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PV2J005981; Mon,
 24 Jun 2019 11:25:31 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PVS7016436;	Mon,
 24 Jun 2019 11:25:31 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O2PUtE016429	for unknown; Mon, 24 Jun 2019 11:25:30 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PU71006524 for
 unknown; Mon, 24 Jun 2019 11:25:30 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PUkH006518 for
 unknown; Mon, 24 Jun 2019 11:25:30 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2POMF003840	for unknown; Mon,
 24 Jun 2019 11:25:29 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id A138B1BF6C;	Mon, 24 Jun 2019 04:25:23 +0200 (CEST)
Received: from mail-pg1-f196.google.com
 (mail-pg1-f196.google.com [209.85.215.196]) by dpdk.org (Postfix)
 with ESMTP id E24DC1BF54 for <spp@dpdk.org>; Mon,
 24 Jun 2019 04:25:21 +0200 (CEST)
Received: by mail-pg1-f196.google.com with SMTP id f25so6241689pgv.10 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 19:25:21 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id a3sm9927461pje.3.2019.06.23.19.25.19
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 19:25:20 -0700 (PDT)
Date: Mon, 24 Jun 2019 11:24:56 +0900
From: yasufum.o@gmail.com
Subject: [spp 04363] [spp] [PATCH 03/11] shared/sec: refactor comments in
 vf_deps.h
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624022504.18752-4-yasufum.o@gmail.com>
In-reply-to: <20190624022504.18752-1-yasufum.o@gmail.com>
References: <20190624022504.18752-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04363
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=f9+H2mJfWt7OwU5ZCAY4ufNlEEZAgII0QioDoAcluIc=;
 b=sS1+UwrCt3hhuDuu4BpbfUy2Ec7a3U9kDlB9DcH5L46idSqvhCDh6wvcG1n1lq0Q9C
 snCGRvudJ5jbiUbD3zg7o/D2Ql89bWn8pRHHY9FJlydx52uXRqYsvr7f5u4Zd7Ix7pTT
 VicrxhwjaliMMLdwQeEWpp/ps6j6boKtO9lKvcu6yj0tvIua7NJyyiEE7HO1AKpRRFFc
 t3GnvJNM4gTfiwgnqNaBpFFbfV0DvN0Un8WX4GIWAimuWXdMw2HMrBaVtw8rvmzhtOSz
 ErgLnHXpXUiVJOvCTxWBM+86rWR7KNkUSx7+xcpngqpX4W+TODtoMbbiF+29iX/F/ky6 kRsg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=f9+H2mJfWt7OwU5ZCAY4ufNlEEZAgII0QioDoAcluIc=;
 b=ttH1mhI73HtEFm2z5BOhfgfpBpzRYzAHFazCJa/5ozU0VHpAQEnrwFI1ZN4YHmf8ya
 wB9/Z5QyF/hDPyGQUFu/SkNPhABeYHOXwupJMAVLi5hy1H+N8G3Gt8Kjy/0c9ZZVI7do
 nqe/CQ4HU5P16ksYD6PHYPnDkEVtZd0s3bxfBqignhxQTCoZun7JE+VbOLZdQ0Iew+av
 S2qM2C+7J2E+D6i0U4EiFzIMKg/P1dqu06/9mtXNKKyU7crFKralJgiVDv9oxjhicIiV
 YLH8MkTgDFPYIp/s8qvJeNUTb6VZWbS710Q0kE6gthb6Z+0cEr3to2fmT8akCNlMbrNj g40Q==
X-Gm-Message-State: APjAAAVvkjxL1Q7An5ZZ9Q1RG/qrh1RJr5APV8M2qI5J654D87Iy1BRc
 q8ODmKaCClE1LJp6mLHpMM/TxRnv
X-Google-Smtp-Source:
 APXvYqyRRHBghlRdPWXM6OlBEruiqU2FMooJVAVvAB6+FnbzcEEhpRTtmuGNl7Rwb9/MEHxz0gzplQ==
X-Received: by 2002:a63:3383:: with SMTP id z125mr16796947pgz.8.1561343120881;
 Sun, 23 Jun 2019 19:25:20 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 322
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to revise comments and format in `vf_deps.h` for
refactoring.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/shared/secondary/spp_worker_th/vf_deps.h | 81 +++++++-------------
 src/vf/classifier_mac.c                      | 67 +++++++---------
 2 files changed, 53 insertions(+), 95 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index c6016b8..3e8fc01 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -21,24 +21,15 @@ struct mac_classifier {
 };
 
 /* classified data (destination port, target packets, etc) */
+/* TODO(yasufum) rename `classified_data`. */
+/* TODO(yasufum) confirm what `iface_no_global` does mean? */
 struct classified_data {
-	/* interface type (see "enum port_type") */
-	enum port_type  iface_type;
-
-	/* index of ports handled by classifier */
-	int             iface_no;
-
-	/* id for interface generated by spp_vf */
-	int             iface_no_global;
-
-	/* port id generated by DPDK */
-	uint16_t        port;
-
-	/* the number of packets in pkts[] */
-	uint16_t        num_pkt;
-
-	/* packet array to be classified */
-	struct rte_mbuf *pkts[MAX_PKT_BURST];
+	enum port_type iface_type;
+	int iface_no;   /* Index of ports handled by classifier. */
+	int iface_no_global;  /* ID for interface generated by spp_vf */
+	uint16_t port;  /* Ethdev port ID. */
+	uint16_t nof_pkts;  /* Number of packets in pkts[]. */
+	struct rte_mbuf *pkts[MAX_PKT_BURST];  /* packets to be classified. */
 };
 
 /* classifier component information */
@@ -71,24 +62,18 @@ free_mac_classification(struct mac_classifier *mac_cls)
 /**
  * classifier(mac address) update component info.
  *
- * @param component_info
- *  The pointer to struct sppwk_comp_info.@n
- *  The data for updating the internal data of classifier.
- *
- * @retval SPP_RET_OK succeeded.
- * @retval SPP_RET_NG failed.
+ * @param comp_info Pointer to internal data of classifier.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
-int spp_classifier_mac_update(struct sppwk_comp_info *component_info);
+int spp_classifier_mac_update(struct sppwk_comp_info *comp_info);
 
 /**
- * Update forward info
- *
- * @param component
- *  The pointer to struct sppwk_comp_info.@n
- *  The data for updating the internal data of forwarder and merger.
+ * Update forwarder info.
  *
- * @retval SPP_RET_OK succeeded.
- * @retval SPP_RET_NG failed.
+ * @param component Pointer to data of forwarder and merger.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
 int spp_forward_update(struct sppwk_comp_info *component);
 
@@ -102,17 +87,11 @@ int spp_classifier_mac_iterate_table(
 /**
  * classifier get component status.
  *
- *
- * @param lcore_id
- *  The logical core ID for classifier.
- * @param id
- *  The unique component ID.
- * @param params
- *  The pointer to struct spp_iterate_core_params.@n
- *  Detailed data of classifier status.
- *
- * @retval SPP_RET_OK succeeded.
- * @retval SPP_RET_NG failed.
+ * @param[in] lcore_id Lcore ID for classifier.
+ * @param[in] id Unique component ID.
+ * @param[in,out] params Pointer to detailed data of classifier status.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
 int spp_classifier_get_component_status(unsigned int lcore_id, int id,
 		struct spp_iterate_core_params *params);
@@ -120,19 +99,13 @@ int spp_classifier_get_component_status(unsigned int lcore_id, int id,
 /**
  * Merge/Forward get component status
  *
- * @param lcore_id
- *  The logical core ID for forwarder and merger.
- * @param id
- *  The unique component ID.
- * @param params
- *  The pointer to struct spp_iterate_core_params.@n
- *  Detailed data of forwarder/merger status.
- *
- * @retval SPP_RET_OK succeeded.
- * @retval SPP_RET_NG failed.
+ * @param lcore_id Lcore ID for forwarder and merger.
+ * @param id Unique component ID.
+ * @param params Pointer detailed data of forwarder and merger status.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
-int spp_forward_get_component_status(
-		unsigned int lcore_id, int id,
+int spp_forward_get_component_status(unsigned int lcore_id, int id,
 		struct spp_iterate_core_params *params);
 
 #endif  /* _SPPWK_TH_VF_DEPS_H_ */
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 5398d25..cd0c546 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -342,7 +342,7 @@ init_component_info(struct component_info *cmp_info,
 		clsd_data_rx->iface_no = 0;
 		clsd_data_rx->iface_no_global = 0;
 		clsd_data_rx->port = 0;
-		clsd_data_rx->num_pkt = 0;
+		clsd_data_rx->nof_pkts = 0;
 	} else {
 		clsd_data_rx->iface_type =
 			component_info->rx_ports[0]->iface_type;
@@ -351,7 +351,7 @@ init_component_info(struct component_info *cmp_info,
 			component_info->rx_ports[0]->iface_no;
 		clsd_data_rx->port =
 			component_info->rx_ports[0]->ethdev_port_id;
-		clsd_data_rx->num_pkt = 0;
+		clsd_data_rx->nof_pkts = 0;
 	}
 
 	/* set tx */
@@ -366,7 +366,7 @@ init_component_info(struct component_info *cmp_info,
 		clsd_data_tx[i].iface_no        = i;
 		clsd_data_tx[i].iface_no_global = tx_port->iface_no;
 		clsd_data_tx[i].port            = tx_port->ethdev_port_id;
-		clsd_data_tx[i].num_pkt         = 0;
+		clsd_data_tx[i].nof_pkts = 0;
 
 		if (tx_port->cls_attrs.mac_addr == 0)
 			continue;
@@ -457,19 +457,19 @@ transmit_packet(struct classified_data *clsd_data)
 
 	/* transmit packets */
 	n_tx = spp_eth_tx_burst(clsd_data->port, 0,
-			clsd_data->pkts, clsd_data->num_pkt);
+			clsd_data->pkts, clsd_data->nof_pkts);
 
 	/* free cannot transmit packets */
-	if (unlikely(n_tx != clsd_data->num_pkt)) {
-		for (i = n_tx; i < clsd_data->num_pkt; i++)
+	if (unlikely(n_tx != clsd_data->nof_pkts)) {
+		for (i = n_tx; i < clsd_data->nof_pkts; i++)
 			rte_pktmbuf_free(clsd_data->pkts[i]);
 		RTE_LOG(DEBUG, SPP_CLASSIFIER_MAC,
 				"drop packets(tx). num=%hu, ethdev_port_id=%hu\n",
-				(uint16_t)(clsd_data->num_pkt - n_tx),
+				(uint16_t)(clsd_data->nof_pkts - n_tx),
 				clsd_data->port);
 	}
 
-	clsd_data->num_pkt = 0;
+	clsd_data->nof_pkts = 0;
 }
 
 /* transmit packet to one destination. */
@@ -480,13 +480,13 @@ transmit_all_packet(struct component_info *cmp_info)
 	struct classified_data *clsd_data_tx = cmp_info->classified_data_tx;
 
 	for (i = 0; i < cmp_info->n_classified_data_tx; i++) {
-		if (unlikely(clsd_data_tx[i].num_pkt != 0)) {
+		if (unlikely(clsd_data_tx[i].nof_pkts != 0)) {
 			RTE_LOG(INFO, SPP_CLASSIFIER_MAC,
 					"transmit all packets (drain). "
 					"index=%d, "
-					"num_pkt=%hu\n",
+					"nof_pkts=%hu\n",
 					i,
-					clsd_data_tx[i].num_pkt);
+					clsd_data_tx[i].nof_pkts);
 			transmit_packet(&clsd_data_tx[i]);
 		}
 	}
@@ -496,19 +496,19 @@ transmit_all_packet(struct component_info *cmp_info)
 static inline void
 push_packet(struct rte_mbuf *pkt, struct classified_data *clsd_data)
 {
-	clsd_data->pkts[clsd_data->num_pkt++] = pkt;
+	clsd_data->pkts[clsd_data->nof_pkts++] = pkt;
 
 	/* transmit packet, if buffer is filled */
-	if (unlikely(clsd_data->num_pkt == MAX_PKT_BURST)) {
+	if (unlikely(clsd_data->nof_pkts == MAX_PKT_BURST)) {
 		RTE_LOG(DEBUG, SPP_CLASSIFIER_MAC,
 				"transmit packets (buffer is filled). "
 				"iface_type=%d, iface_no={%d,%d}, "
-				"tx_port=%hu, num_pkt=%hu\n",
+				"tx_port=%hu, nof_pkts=%hu\n",
 				clsd_data->iface_type,
 				clsd_data->iface_no_global,
 				clsd_data->iface_no,
 				clsd_data->port,
-				clsd_data->num_pkt);
+				clsd_data->nof_pkts);
 		transmit_packet(clsd_data);
 	}
 }
@@ -679,14 +679,12 @@ change_classifier_index(struct management_info *mng_info, int id)
 									0, 0);
 
 		/* Transmit all packets for switching the using data. */
-		transmit_all_packet(mng_info->cmp_infos +
-				mng_info->ref_index);
+		transmit_all_packet(mng_info->cmp_infos + mng_info->ref_index);
 
 		RTE_LOG(DEBUG, SPP_CLASSIFIER_MAC,
 				"Core[%u] Change update index.\n", id);
 		mng_info->ref_index =
-				(mng_info->upd_index + 1) %
-				NOF_CLS_INFO;
+				(mng_info->upd_index + 1) % NOF_CLS_INFO;
 	}
 }
 
@@ -695,7 +693,6 @@ int
 spp_classifier_mac_init(void)
 {
 	memset(g_mng_infos, 0, sizeof(g_mng_infos));
-
 	return 0;
 }
 
@@ -778,13 +775,13 @@ spp_classifier_mac_do(int id)
 	cur_tsc = rte_rdtsc();
 	if (unlikely(cur_tsc - prev_tsc > drain_tsc)) {
 		for (i = 0; i < cmp_info->n_classified_data_tx; i++) {
-			if (likely(clsd_data_tx[i].num_pkt == 0))
+			if (likely(clsd_data_tx[i].nof_pkts == 0))
 				continue;
 
 			RTE_LOG(DEBUG, SPP_CLASSIFIER_MAC,
 					"transmit packets (drain). index=%d, "
-					"num_pkt=%hu, interval=%lu\n",
-					i, clsd_data_tx[i].num_pkt,
+					"nof_pkts=%hu, interval=%lu\n",
+					i, clsd_data_tx[i].nof_pkts,
 					cur_tsc - prev_tsc);
 				transmit_packet(&clsd_data_tx[i]);
 		}
@@ -889,18 +886,13 @@ mac_classification_iterate_table(
 				SPP_DEFAULT_CLASSIFIED_SPEC_STR,
 				cmp_info, clsd_data);
 
-		(*params->element_proc)(
-				params,
-				type,
-				vid,
-				SPP_DEFAULT_CLASSIFIED_SPEC_STR,
-				&port);
+		(*params->element_proc)(params, type, vid,
+				SPP_DEFAULT_CLASSIFIED_SPEC_STR, &port);
 	}
 
 	next = 0;
 	while (1) {
-		ret = rte_hash_iterate(mac_cls->cls_tbl,
-				&key, &data, &next);
+		ret = rte_hash_iterate(mac_cls->cls_tbl, &key, &data, &next);
 
 		if (unlikely(ret < 0))
 			break;
@@ -913,11 +905,7 @@ mac_classification_iterate_table(
 
 		LOG_ENT((long)data, vid, mac_addr_str, cmp_info, clsd_data);
 
-		(*params->element_proc)(
-				params,
-				type,
-				vid,
-				mac_addr_str,
+		(*params->element_proc)(params, type, vid, mac_addr_str,
 				&port);
 	}
 }
@@ -947,12 +935,9 @@ spp_classifier_mac_iterate_table(
 			if (cmp_info->mac_classifications[n] == NULL)
 				continue;
 
-			mac_classification_iterate_table(
-					params,
-					(uint16_t)n,
+			mac_classification_iterate_table(params, (uint16_t) n,
 					cmp_info->mac_classifications[n],
-					cmp_info,
-					clsd_data);
+					cmp_info, clsd_data);
 		}
 	}
 
-- 
2.17.1



From spp-request@dpdk.org Mon Jun 24 11:25:22 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd105.ddreams.local
 (zssg-mailmd105.ddreams.local [10.160.123.100])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL00UI902L8Y40@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:25:33 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd105.ddreams.local by
 zssg-mailmd105.ddreams.local (dDREAMS) id <0PTL00M0E02L1A00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:33 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd105.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00HCX02LYD20@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:33 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id 7E0167E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:33 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 7CF758E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:33 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 721E28E6058	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:33 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 4969F8E6055	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:32 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:32 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PWcl013541;	Mon,
 24 Jun 2019 11:25:32 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2PWCA013540;	Mon, 24 Jun 2019 11:25:32 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2PW1D013532	for unknown; Mon,
 24 Jun 2019 11:25:32 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PVwk006551 for
 unknown; Mon, 24 Jun 2019 11:25:31 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PVaR006546 for
 unknown; Mon, 24 Jun 2019 11:25:31 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2PPke003851	for unknown; Mon,
 24 Jun 2019 11:25:30 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id ACB061BF6D	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 24 Jun 2019 04:25:24 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 4
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 24 Jun 2019 04:25:22 +0200
Message-id: <mailman.23357.1561343122.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH 00/11] Refactor libs for classifier in spp_vf
      (yasufum.o@gmail.com)
   2. [PATCH 01/11] shared/sec: refactor defines of VLAN in spp_vf
      (yasufum.o@gmail.com)
   3. [PATCH 02/11] shared/sec: rename struct mac_classification
      (yasufum.o@gmail.com)
   4. [PATCH 03/11] shared/sec: refactor comments in vf_deps.h
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon, 24 Jun 2019 11:24:53 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 00/11] Refactor libs for classifier in spp_vf
Message-ID: <20190624022504.18752-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Functions for classifier table are hard to maintain because for long
names of functions and variables, complex dependencies of shared libs
and dedicated functions, or so.

This update is to fix these issues. Some of dependencies are still
remained, but reduced by separating many dedicated functions from shared
libs or adding comments for explaining.

Yasufumi Ogawa (11):
  shared/sec: refactor defines of VLAN in spp_vf
  shared/sec: rename struct mac_classification
  shared/sec: refactor comments in vf_deps.h
  shared/sec: rename struct classified_data
  shared/sec: revise usage of term component_info
  shared/sec: revise members of struct cls_port_info
  shared/sec: rename func free_mac_classification
  shared/sec: refactor updating classifier info
  shared/sec: refactor updating forwarder
  shared/sec: refactor getting classifier status
  shared/sec: refactor setup cls table stat in JSON

 .../secondary/spp_worker_th/cmd_parser.c      |   2 +-
 .../secondary/spp_worker_th/cmd_runner.c      |  37 +-
 .../secondary/spp_worker_th/cmd_utils.c       |   4 +-
 .../secondary/spp_worker_th/cmd_utils.h       |   5 +-
 src/shared/secondary/spp_worker_th/vf_deps.h  | 158 +++-----
 src/vf/classifier_mac.c                       | 382 +++++++++---------
 src/vf/classifier_mac.h                       |   2 +-
 src/vf/spp_forward.c                          | 105 +++--
 8 files changed, 330 insertions(+), 365 deletions(-)

-- 
2.17.1



------------------------------

Message: 2
Date: Mon, 24 Jun 2019 11:24:54 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 01/11] shared/sec: refactor defines of VLAN in
	spp_vf
Message-ID: <20190624022504.18752-2-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

* Rename `SPP_NUM_VLAN_VID` to `NOF_VLAN` and move it to `vf_deps.h`.

* Rename `NUM_CLASSIFIER_MAC_INFO` to `NOF_CLS_INFO` and move it to
  `classifier_mac.c`.

* Rename `NUM_CLASSIFIER_MAC_TABLE_ENTRY` to `NOF_CLS_TABLE_ENTRIES`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/shared/secondary/spp_worker_th/cmd_utils.h |  3 ---
 src/shared/secondary/spp_worker_th/vf_deps.h   |  6 +++---
 src/vf/classifier_mac.c                        | 17 ++++++++++-------
 3 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index ee44cee..1d6c332 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -40,9 +40,6 @@
 
 #define SPP_PORT_ABILITY_MAX 4  /* Max num of port abilities. */
 
-/** Number of VLAN ID */
-#define SPP_NUM_VLAN_VID 4096
-
 /** Maximum VLAN PCP */
 #define SPP_VLAN_PCP_MAX 7
 
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index fe03490..fd0dc5d 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -9,8 +9,8 @@
 #include <rte_hash.h>
 #include "cmd_utils.h"
 
-/* number of classifier information (reference/update) */
-#define NUM_CLASSIFIER_MAC_INFO 2
+/** Number of VLAN ID */
+#define NOF_VLAN 4096
 
 /* mac address classification */
 struct mac_classification {
@@ -54,7 +54,7 @@ struct component_info {
 	int mac_addr_entry;  /* mac address entry flag */
 
 	/* mac address classification per vlan-id */
-	struct mac_classification *mac_classifications[SPP_NUM_VLAN_VID];
+	struct mac_classification *mac_classifications[NOF_VLAN];
 
 	int n_classified_data_tx;  /* number of transmission ports */
 	struct classified_data classified_data_rx;  /* RX handled by cls */
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index b3a6cba..76dd9e7 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -35,8 +35,11 @@
 #define DEFAULT_HASH_FUNC rte_jhash
 #endif
 
+/* number of classifier information (reference/update) */
+#define NOF_CLS_INFO 2
+
 /* number of classifier mac table entry */
-#define NUM_CLASSIFIER_MAC_TABLE_ENTRY 128
+#define NOF_CLS_TABLE_ENTRIES 128
 
 /* interval that wait until change update index (micro second) */
 #define CHANGE_UPDATE_INDEX_WAIT_INTERVAL SPP_CHANGE_UPDATE_INTERVAL
@@ -53,7 +56,7 @@
 /* classifier management information */
 struct management_info {
 	/* classifier information */
-	struct component_info cmp_infos[NUM_CLASSIFIER_MAC_INFO];
+	struct component_info cmp_infos[NOF_CLS_INFO];
 
 	/* Reference index number for classifier information */
 	volatile int ref_index;
@@ -75,7 +78,7 @@ uninit_classifier(struct management_info *mng_info)
 
 	mng_info->is_used = 0;
 
-	for (i = 0; i < NUM_CLASSIFIER_MAC_INFO; ++i)
+	for (i = 0; i < NOF_CLS_INFO; ++i)
 		uninit_component_info(mng_info->cmp_infos + (long)i);
 
 	memset(mng_info, 0, sizeof(struct management_info));
@@ -298,7 +301,7 @@ create_mac_classification(void)
 	/* set hash creating parameters */
 	struct rte_hash_parameters hash_params = {
 			.name      = hash_tab_name,
-			.entries   = NUM_CLASSIFIER_MAC_TABLE_ENTRY,
+			.entries   = NOF_CLS_TABLE_ENTRIES,
 			.key_len   = sizeof(struct ether_addr),
 			.hash_func = DEFAULT_HASH_FUNC,
 			.hash_func_init_val = 0,
@@ -440,7 +443,7 @@ uninit_component_info(struct component_info *cmp_info)
 {
 	int i;
 
-	for (i = 0; i < SPP_NUM_VLAN_VID; ++i)
+	for (i = 0; i < NOF_VLAN; ++i)
 		free_mac_classification(cmp_info->mac_classifications[i]);
 
 	memset(cmp_info, 0, sizeof(struct component_info));
@@ -686,7 +689,7 @@ change_classifier_index(struct management_info *mng_info, int id)
 				"Core[%u] Change update index.\n", id);
 		mng_info->ref_index =
 				(mng_info->upd_index + 1) %
-				NUM_CLASSIFIER_MAC_INFO;
+				NOF_CLS_INFO;
 	}
 }
 
@@ -943,7 +946,7 @@ spp_classifier_mac_iterate_table(
 		RTE_LOG(DEBUG, SPP_CLASSIFIER_MAC,
 			"Core[%u] Start iterate classifier table.\n", i);
 
-		for (n = 0; n < SPP_NUM_VLAN_VID; ++n) {
+		for (n = 0; n < NOF_VLAN; ++n) {
 			if (cmp_info->mac_classifications[n] == NULL)
 				continue;
 
-- 
2.17.1



------------------------------

Message: 3
Date: Mon, 24 Jun 2019 11:24:55 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 02/11] shared/sec: rename struct
	mac_classification
Message-ID: <20190624022504.18752-3-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Struct `mac_classification` defines a set of attirbutes for
classification. This update is to rename the struct to `mac_classifier`
and also its members.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/shared/secondary/spp_worker_th/vf_deps.h | 27 ++++-----
 src/vf/classifier_mac.c                      | 61 ++++++++++----------
 2 files changed, 39 insertions(+), 49 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index fd0dc5d..c6016b8 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -12,19 +12,12 @@
 /** Number of VLAN ID */
 #define NOF_VLAN 4096
 
-/* mac address classification */
-struct mac_classification {
-	/* hash table keeps classification */
-	struct rte_hash *classification_tab;
-
-	/* number of valid classification */
-	int num_active_classified;
-
-	/* index of valid classification */
-	int active_classifieds[RTE_MAX_ETHPORTS];
-
-	/* index of default classification */
-	int default_classified;
+/* Classifier for MAC addresses. */
+struct mac_classifier {
+	struct rte_hash *cls_tbl;  /* Hash table for MAC classification. */
+	int nof_cls_ports;  /* Num of ports classified validly. */
+	int cls_ports[RTE_MAX_ETHPORTS];  /* Ports for classification. */
+	int default_cls_idx;  /* Default index for classification. */
 };
 
 /* classified data (destination port, target packets, etc) */
@@ -54,7 +47,7 @@ struct component_info {
 	int mac_addr_entry;  /* mac address entry flag */
 
 	/* mac address classification per vlan-id */
-	struct mac_classification *mac_classifications[NOF_VLAN];
+	struct mac_classifier *mac_classifications[NOF_VLAN];
 
 	int n_classified_data_tx;  /* number of transmission ports */
 	struct classified_data classified_data_rx;  /* RX handled by cls */
@@ -64,13 +57,13 @@ struct component_info {
 
 /* free mac classification instance. */
 static inline void
-free_mac_classification(struct mac_classification *mac_cls)
+free_mac_classification(struct mac_classifier *mac_cls)
 {
 	if (mac_cls == NULL)
 		return;
 
-	if (mac_cls->classification_tab != NULL)
-		rte_hash_free(mac_cls->classification_tab);
+	if (mac_cls->cls_tbl != NULL)
+		rte_hash_free(mac_cls->cls_tbl);
 
 	rte_free(mac_cls);
 }
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 76dd9e7..5398d25 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -272,23 +272,23 @@ is_used_mng_info(const struct management_info *mng_info)
 }
 
 /* create mac classification instance. */
-static struct mac_classification *
+static struct mac_classifier *
 create_mac_classification(void)
 {
-	struct mac_classification *mac_cls;
+	struct mac_classifier *mac_cls;
 	char hash_tab_name[HASH_TABLE_NAME_BUF_SZ];
 	struct rte_hash **mac_cls_tab;
 
-	mac_cls = (struct mac_classification *)rte_zmalloc(
-			NULL, sizeof(struct mac_classification), 0);
+	mac_cls = (struct mac_classifier *)rte_zmalloc(
+			NULL, sizeof(struct mac_classifier), 0);
 
 	if (unlikely(mac_cls == NULL))
 		return NULL;
 
-	mac_cls->num_active_classified = 0;
-	mac_cls->default_classified = -1;
+	mac_cls->nof_cls_ports = 0;
+	mac_cls->default_cls_idx = -1;
 
-	mac_cls_tab = &mac_cls->classification_tab;
+	mac_cls_tab = &mac_cls->cls_tbl;
 
 	/* make hash table name(require uniqueness between processes) */
 	sprintf(hash_tab_name, "cmtab_%07x%02hx",
@@ -328,7 +328,7 @@ init_component_info(struct component_info *cmp_info,
 {
 	int ret = SPP_RET_NG;
 	int i;
-	struct mac_classification *mac_cls;
+	struct mac_classifier *mac_cls;
 	struct ether_addr eth_addr;
 	char mac_addr_str[ETHER_ADDR_STR_BUF_SZ];
 	struct classified_data *clsd_data_rx = &cmp_info->classified_data_rx;
@@ -385,8 +385,7 @@ init_component_info(struct component_info *cmp_info,
 		mac_cls = cmp_info->mac_classifications[vid];
 
 		/* store active tx_port that associate with mac address */
-		mac_cls->active_classifieds[
-				mac_cls->num_active_classified++] = i;
+		mac_cls->cls_ports[mac_cls->nof_cls_ports++] = i;
 
 		/* mac address entry flag set */
 		cmp_info->mac_addr_entry = 1;
@@ -394,7 +393,7 @@ init_component_info(struct component_info *cmp_info,
 		/* store default classified */
 		if (unlikely(tx_port->cls_attrs.mac_addr ==
 				SPP_DEFAULT_CLASSIFIED_DMY_ADDR)) {
-			mac_cls->default_classified = i;
+			mac_cls->default_cls_idx = i;
 			RTE_LOG(INFO, SPP_CLASSIFIER_MAC,
 					"default classified. vid=%hu, "
 					"iface_type=%d, iface_no=%d, "
@@ -412,7 +411,7 @@ init_component_info(struct component_info *cmp_info,
 		ether_format_addr(mac_addr_str, sizeof(mac_addr_str),
 				&eth_addr);
 
-		ret = rte_hash_add_key_data(mac_cls->classification_tab,
+		ret = rte_hash_add_key_data(mac_cls->cls_tbl,
 				(void *)&eth_addr, (void *)(long)i);
 		if (unlikely(ret < 0)) {
 			RTE_LOG(ERR, SPP_CLASSIFIER_MAC,
@@ -518,7 +517,7 @@ push_packet(struct rte_mbuf *pkt, struct classified_data *clsd_data)
 static inline int
 get_general_default_classified_index(struct component_info *cmp_info)
 {
-	struct mac_classification *mac_cls;
+	struct mac_classifier *mac_cls;
 
 	mac_cls = cmp_info->mac_classifications[VLAN_UNTAGGED_VID];
 	if (unlikely(mac_cls == NULL)) {
@@ -527,7 +526,7 @@ get_general_default_classified_index(struct component_info *cmp_info)
 		return SPP_RET_NG;
 	}
 
-	return mac_cls->default_classified;
+	return mac_cls->default_cls_idx;
 }
 
 /* handle L2 multicast(include broadcast) packet */
@@ -537,7 +536,7 @@ handle_l2multicast_packet(struct rte_mbuf *pkt,
 		struct classified_data *clsd_data)
 {
 	int i;
-	struct mac_classification *mac_cls;
+	struct mac_classifier *mac_cls;
 	uint16_t vid = get_vid(pkt);
 	int gen_def_clsd_idx = get_general_default_classified_index(cmp_info);
 	int n_act_clsd;
@@ -545,7 +544,7 @@ handle_l2multicast_packet(struct rte_mbuf *pkt,
 	/* select mac address classification by vid */
 	mac_cls = cmp_info->mac_classifications[vid];
 	if (unlikely(mac_cls == NULL ||
-			mac_cls->num_active_classified == 0)) {
+			mac_cls->nof_cls_ports == 0)) {
 		/* specific vlan is not registered
 		 * use untagged's default(as general default)
 		 */
@@ -564,18 +563,16 @@ handle_l2multicast_packet(struct rte_mbuf *pkt,
 	}
 
 	/* add to mbuf's refcnt */
-	n_act_clsd = mac_cls->num_active_classified;
+	n_act_clsd = mac_cls->nof_cls_ports;
 	if (gen_def_clsd_idx >= 0 && vid != VLAN_UNTAGGED_VID)
 		++n_act_clsd;
 
 	rte_mbuf_refcnt_update(pkt, (int16_t)(n_act_clsd - 1));
 
 	/* transmit to specific segment & general default */
-	for (i = 0; i < mac_cls->num_active_classified; i++) {
-		LOG_CLS((long)mac_cls->active_classifieds[i],
-				pkt, cmp_info, clsd_data);
-		push_packet(pkt, clsd_data +
-				(long)mac_cls->active_classifieds[i]);
+	for (i = 0; i < mac_cls->nof_cls_ports; i++) {
+		LOG_CLS((long)mac_cls->cls_ports[i], pkt, cmp_info, clsd_data);
+		push_packet(pkt, clsd_data + (long)mac_cls->cls_ports[i]);
 	}
 
 	if (gen_def_clsd_idx >= 0 && vid != VLAN_UNTAGGED_VID) {
@@ -592,7 +589,7 @@ select_classified_index(const struct rte_mbuf *pkt,
 	int ret;
 	struct ether_hdr *eth;
 	void *lookup_data;
-	struct mac_classification *mac_cls;
+	struct mac_classifier *mac_cls;
 	uint16_t vid;
 
 	eth = rte_pktmbuf_mtod(pkt, struct ether_hdr *);
@@ -607,7 +604,7 @@ select_classified_index(const struct rte_mbuf *pkt,
 	}
 
 	/* find in table (by destination mac address) */
-	ret = rte_hash_lookup_data(mac_cls->classification_tab,
+	ret = rte_hash_lookup_data(mac_cls->cls_tbl,
 			(const void *)&eth->d_addr, &lookup_data);
 	if (ret >= 0) {
 		LOG_DBG(cmp_info->name, "Mac address is registered. "
@@ -624,7 +621,7 @@ select_classified_index(const struct rte_mbuf *pkt,
 		return -2;
 
 	/* if default is not set, use untagged's default */
-	if (unlikely(mac_cls->default_classified < 0 &&
+	if (unlikely(mac_cls->default_cls_idx < 0 &&
 			vid != VLAN_UNTAGGED_VID)) {
 		LOG_DBG(cmp_info->name, "Vid's default is not set. "
 				"use general default. vid=%hu\n", vid);
@@ -633,7 +630,7 @@ select_classified_index(const struct rte_mbuf *pkt,
 
 	/* use default */
 	LOG_DBG(cmp_info->name, "Use vid's default. vid=%hu\n", vid);
-	return mac_cls->default_classified;
+	return mac_cls->default_cls_idx;
 }
 
 /*
@@ -865,7 +862,7 @@ static void
 mac_classification_iterate_table(
 		struct spp_iterate_classifier_table_params *params,
 		uint16_t vid,
-		struct mac_classification *mac_cls,
+		struct mac_classifier *mac_cls,
 		__rte_unused struct component_info *cmp_info,
 		struct classified_data *clsd_data)
 {
@@ -881,13 +878,13 @@ mac_classification_iterate_table(
 	if (unlikely(vid == VLAN_UNTAGGED_VID))
 		type = SPP_CLASSIFIER_TYPE_MAC;
 
-	if (mac_cls->default_classified >= 0) {
+	if (mac_cls->default_cls_idx >= 0) {
 		port.iface_type = (clsd_data +
-				mac_cls->default_classified)->iface_type;
+				mac_cls->default_cls_idx)->iface_type;
 		port.iface_no   = (clsd_data +
-				mac_cls->default_classified)->iface_no_global;
+				mac_cls->default_cls_idx)->iface_no_global;
 
-		LOG_ENT((long)mac_cls->default_classified,
+		LOG_ENT((long)mac_cls->default_cls_idx,
 				vid,
 				SPP_DEFAULT_CLASSIFIED_SPEC_STR,
 				cmp_info, clsd_data);
@@ -902,7 +899,7 @@ mac_classification_iterate_table(
 
 	next = 0;
 	while (1) {
-		ret = rte_hash_iterate(mac_cls->classification_tab,
+		ret = rte_hash_iterate(mac_cls->cls_tbl,
 				&key, &data, &next);
 
 		if (unlikely(ret < 0))
-- 
2.17.1



------------------------------

Message: 4
Date: Mon, 24 Jun 2019 11:24:56 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 03/11] shared/sec: refactor comments in
	vf_deps.h
Message-ID: <20190624022504.18752-4-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to revise comments and format in `vf_deps.h` for
refactoring.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/shared/secondary/spp_worker_th/vf_deps.h | 81 +++++++-------------
 src/vf/classifier_mac.c                      | 67 +++++++---------
 2 files changed, 53 insertions(+), 95 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index c6016b8..3e8fc01 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -21,24 +21,15 @@ struct mac_classifier {
 };
 
 /* classified data (destination port, target packets, etc) */
+/* TODO(yasufum) rename `classified_data`. */
+/* TODO(yasufum) confirm what `iface_no_global` does mean? */
 struct classified_data {
-	/* interface type (see "enum port_type") */
-	enum port_type  iface_type;
-
-	/* index of ports handled by classifier */
-	int             iface_no;
-
-	/* id for interface generated by spp_vf */
-	int             iface_no_global;
-
-	/* port id generated by DPDK */
-	uint16_t        port;
-
-	/* the number of packets in pkts[] */
-	uint16_t        num_pkt;
-
-	/* packet array to be classified */
-	struct rte_mbuf *pkts[MAX_PKT_BURST];
+	enum port_type iface_type;
+	int iface_no;   /* Index of ports handled by classifier. */
+	int iface_no_global;  /* ID for interface generated by spp_vf */
+	uint16_t port;  /* Ethdev port ID. */
+	uint16_t nof_pkts;  /* Number of packets in pkts[]. */
+	struct rte_mbuf *pkts[MAX_PKT_BURST];  /* packets to be classified. */
 };
 
 /* classifier component information */
@@ -71,24 +62,18 @@ free_mac_classification(struct mac_classifier *mac_cls)
 /**
  * classifier(mac address) update component info.
  *
- * @param component_info
- *  The pointer to struct sppwk_comp_info.@n
- *  The data for updating the internal data of classifier.
- *
- * @retval SPP_RET_OK succeeded.
- * @retval SPP_RET_NG failed.
+ * @param comp_info Pointer to internal data of classifier.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
-int spp_classifier_mac_update(struct sppwk_comp_info *component_info);
+int spp_classifier_mac_update(struct sppwk_comp_info *comp_info);
 
 /**
- * Update forward info
- *
- * @param component
- *  The pointer to struct sppwk_comp_info.@n
- *  The data for updating the internal data of forwarder and merger.
+ * Update forwarder info.
  *
- * @retval SPP_RET_OK succeeded.
- * @retval SPP_RET_NG failed.
+ * @param component Pointer to data of forwarder and merger.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
 int spp_forward_update(struct sppwk_comp_info *component);
 
@@ -102,17 +87,11 @@ int spp_classifier_mac_iterate_table(
 /**
  * classifier get component status.
  *
- *
- * @param lcore_id
- *  The logical core ID for classifier.
- * @param id
- *  The unique component ID.
- * @param params
- *  The pointer to struct spp_iterate_core_params.@n
- *  Detailed data of classifier status.
- *
- * @retval SPP_RET_OK succeeded.
- * @retval SPP_RET_NG failed.
+ * @param[in] lcore_id Lcore ID for classifier.
+ * @param[in] id Unique component ID.
+ * @param[in,out] params Pointer to detailed data of classifier status.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
 int spp_classifier_get_component_status(unsigned int lcore_id, int id,
 		struct spp_iterate_core_params *params);
@@ -120,19 +99,13 @@ int spp_classifier_get_component_status(unsigned int lcore_id, int id,
 /**
  * Merge/Forward get component status
  *
- * @param lcore_id
- *  The logical core ID for forwarder and merger.
- * @param id
- *  The unique component ID.
- * @param params
- *  The pointer to struct spp_iterate_core_params.@n
- *  Detailed data of forwarder/merger status.
- *
- * @retval SPP_RET_OK succeeded.
- * @retval SPP_RET_NG failed.
+ * @param lcore_id Lcore ID for forwarder and merger.
+ * @param id Unique component ID.
+ * @param params Pointer detailed data of forwarder and merger status.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
-int spp_forward_get_component_status(
-		unsigned int lcore_id, int id,
+int spp_forward_get_component_status(unsigned int lcore_id, int id,
 		struct spp_iterate_core_params *params);
 
 #endif  /* _SPPWK_TH_VF_DEPS_H_ */
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 5398d25..cd0c546 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -342,7 +342,7 @@ init_component_info(struct component_info *cmp_info,
 		clsd_data_rx->iface_no = 0;
 		clsd_data_rx->iface_no_global = 0;
 		clsd_data_rx->port = 0;
-		clsd_data_rx->num_pkt = 0;
+		clsd_data_rx->nof_pkts = 0;
 	} else {
 		clsd_data_rx->iface_type =
 			component_info->rx_ports[0]->iface_type;
@@ -351,7 +351,7 @@ init_component_info(struct component_info *cmp_info,
 			component_info->rx_ports[0]->iface_no;
 		clsd_data_rx->port =
 			component_info->rx_ports[0]->ethdev_port_id;
-		clsd_data_rx->num_pkt = 0;
+		clsd_data_rx->nof_pkts = 0;
 	}
 
 	/* set tx */
@@ -366,7 +366,7 @@ init_component_info(struct component_info *cmp_info,
 		clsd_data_tx[i].iface_no        = i;
 		clsd_data_tx[i].iface_no_global = tx_port->iface_no;
 		clsd_data_tx[i].port            = tx_port->ethdev_port_id;
-		clsd_data_tx[i].num_pkt         = 0;
+		clsd_data_tx[i].nof_pkts = 0;
 
 		if (tx_port->cls_attrs.mac_addr == 0)
 			continue;
@@ -457,19 +457,19 @@ transmit_packet(struct classified_data *clsd_data)
 
 	/* transmit packets */
 	n_tx = spp_eth_tx_burst(clsd_data->port, 0,
-			clsd_data->pkts, clsd_data->num_pkt);
+			clsd_data->pkts, clsd_data->nof_pkts);
 
 	/* free cannot transmit packets */
-	if (unlikely(n_tx != clsd_data->num_pkt)) {
-		for (i = n_tx; i < clsd_data->num_pkt; i++)
+	if (unlikely(n_tx != clsd_data->nof_pkts)) {
+		for (i = n_tx; i < clsd_data->nof_pkts; i++)
 			rte_pktmbuf_free(clsd_data->pkts[i]);
 		RTE_LOG(DEBUG, SPP_CLASSIFIER_MAC,
 				"drop packets(tx). num=%hu, ethdev_port_id=%hu\n",
-				(uint16_t)(clsd_data->num_pkt - n_tx),
+				(uint16_t)(clsd_data->nof_pkts - n_tx),
 				clsd_data->port);
 	}
 
-	clsd_data->num_pkt = 0;
+	clsd_data->nof_pkts = 0;
 }
 
 /* transmit packet to one destination. */
@@ -480,13 +480,13 @@ transmit_all_packet(struct component_info *cmp_info)
 	struct classified_data *clsd_data_tx = cmp_info->classified_data_tx;
 
 	for (i = 0; i < cmp_info->n_classified_data_tx; i++) {
-		if (unlikely(clsd_data_tx[i].num_pkt != 0)) {
+		if (unlikely(clsd_data_tx[i].nof_pkts != 0)) {
 			RTE_LOG(INFO, SPP_CLASSIFIER_MAC,
 					"transmit all packets (drain). "
 					"index=%d, "
-					"num_pkt=%hu\n",
+					"nof_pkts=%hu\n",
 					i,
-					clsd_data_tx[i].num_pkt);
+					clsd_data_tx[i].nof_pkts);
 			transmit_packet(&clsd_data_tx[i]);
 		}
 	}
@@ -496,19 +496,19 @@ transmit_all_packet(struct component_info *cmp_info)
 static inline void
 push_packet(struct rte_mbuf *pkt, struct classified_data *clsd_data)
 {
-	clsd_data->pkts[clsd_data->num_pkt++] = pkt;
+	clsd_data->pkts[clsd_data->nof_pkts++] = pkt;
 
 	/* transmit packet, if buffer is filled */
-	if (unlikely(clsd_data->num_pkt == MAX_PKT_BURST)) {
+	if (unlikely(clsd_data->nof_pkts == MAX_PKT_BURST)) {
 		RTE_LOG(DEBUG, SPP_CLASSIFIER_MAC,
 				"transmit packets (buffer is filled). "
 				"iface_type=%d, iface_no={%d,%d}, "
-				"tx_port=%hu, num_pkt=%hu\n",
+				"tx_port=%hu, nof_pkts=%hu\n",
 				clsd_data->iface_type,
 				clsd_data->iface_no_global,
 				clsd_data->iface_no,
 				clsd_data->port,
-				clsd_data->num_pkt);
+				clsd_data->nof_pkts);
 		transmit_packet(clsd_data);
 	}
 }
@@ -679,14 +679,12 @@ change_classifier_index(struct management_info *mng_info, int id)
 									0, 0);
 
 		/* Transmit all packets for switching the using data. */
-		transmit_all_packet(mng_info->cmp_infos +
-				mng_info->ref_index);
+		transmit_all_packet(mng_info->cmp_infos + mng_info->ref_index);
 
 		RTE_LOG(DEBUG, SPP_CLASSIFIER_MAC,
 				"Core[%u] Change update index.\n", id);
 		mng_info->ref_index =
-				(mng_info->upd_index + 1) %
-				NOF_CLS_INFO;
+				(mng_info->upd_index + 1) % NOF_CLS_INFO;
 	}
 }
 
@@ -695,7 +693,6 @@ int
 spp_classifier_mac_init(void)
 {
 	memset(g_mng_infos, 0, sizeof(g_mng_infos));
-
 	return 0;
 }
 
@@ -778,13 +775,13 @@ spp_classifier_mac_do(int id)
 	cur_tsc = rte_rdtsc();
 	if (unlikely(cur_tsc - prev_tsc > drain_tsc)) {
 		for (i = 0; i < cmp_info->n_classified_data_tx; i++) {
-			if (likely(clsd_data_tx[i].num_pkt == 0))
+			if (likely(clsd_data_tx[i].nof_pkts == 0))
 				continue;
 
 			RTE_LOG(DEBUG, SPP_CLASSIFIER_MAC,
 					"transmit packets (drain). index=%d, "
-					"num_pkt=%hu, interval=%lu\n",
-					i, clsd_data_tx[i].num_pkt,
+					"nof_pkts=%hu, interval=%lu\n",
+					i, clsd_data_tx[i].nof_pkts,
 					cur_tsc - prev_tsc);
 				transmit_packet(&clsd_data_tx[i]);
 		}
@@ -889,18 +886,13 @@ mac_classification_iterate_table(
 				SPP_DEFAULT_CLASSIFIED_SPEC_STR,
 				cmp_info, clsd_data);
 
-		(*params->element_proc)(
-				params,
-				type,
-				vid,
-				SPP_DEFAULT_CLASSIFIED_SPEC_STR,
-				&port);
+		(*params->element_proc)(params, type, vid,
+				SPP_DEFAULT_CLASSIFIED_SPEC_STR, &port);
 	}
 
 	next = 0;
 	while (1) {
-		ret = rte_hash_iterate(mac_cls->cls_tbl,
-				&key, &data, &next);
+		ret = rte_hash_iterate(mac_cls->cls_tbl, &key, &data, &next);
 
 		if (unlikely(ret < 0))
 			break;
@@ -913,11 +905,7 @@ mac_classification_iterate_table(
 
 		LOG_ENT((long)data, vid, mac_addr_str, cmp_info, clsd_data);
 
-		(*params->element_proc)(
-				params,
-				type,
-				vid,
-				mac_addr_str,
+		(*params->element_proc)(params, type, vid, mac_addr_str,
 				&port);
 	}
 }
@@ -947,12 +935,9 @@ spp_classifier_mac_iterate_table(
 			if (cmp_info->mac_classifications[n] == NULL)
 				continue;
 
-			mac_classification_iterate_table(
-					params,
-					(uint16_t)n,
+			mac_classification_iterate_table(params, (uint16_t) n,
 					cmp_info->mac_classifications[n],
-					cmp_info,
-					clsd_data);
+					cmp_info, clsd_data);
 		}
 	}
 
-- 
2.17.1



End of spp Digest, Vol 31, Issue 4
**********************************


From yasufum.o@gmail.com Mon Jun 24 11:24:58 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd103.ddreams.local
 (zssg-mailmd103.ddreams.local [10.160.123.98]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00UIT02N8Y40@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:25:35 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd103.ddreams.local by
 zssg-mailmd103.ddreams.local (dDREAMS) id <0PTL0164402NU300@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:35 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd103.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00U9202NQ170@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:35 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id 0AD677E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:35 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 09A618E605E	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:35 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id F30F78E6050	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:34 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 7FD4A8E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:34 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:34 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PYE7013590;	Mon,
 24 Jun 2019 11:25:34 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2PYew013589;	Mon, 24 Jun 2019 11:25:34 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2PYnl013586	for unknown; Mon,
 24 Jun 2019 11:25:34 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PXMk006005 for
 unknown; Mon, 24 Jun 2019 11:25:33 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PX4m006002; Mon,
 24 Jun 2019 11:25:33 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PXFT016450;	Mon,
 24 Jun 2019 11:25:33 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O2PXUn016446	for unknown; Mon, 24 Jun 2019 11:25:33 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PX3j006560 for
 unknown; Mon, 24 Jun 2019 11:25:33 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PXmR006557 for
 unknown; Mon, 24 Jun 2019 11:25:33 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2PK2l003816	for unknown; Mon,
 24 Jun 2019 11:25:32 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id CAE6D1BF6D;	Mon, 24 Jun 2019 04:25:31 +0200 (CEST)
Received: from mail-pg1-f196.google.com
 (mail-pg1-f196.google.com [209.85.215.196]) by dpdk.org (Postfix)
 with ESMTP id E82191BF54 for <spp@dpdk.org>; Mon,
 24 Jun 2019 04:25:29 +0200 (CEST)
Received: by mail-pg1-f196.google.com with SMTP id f25so6241810pgv.10 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 19:25:29 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id a3sm9927461pje.3.2019.06.23.19.25.27
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 19:25:28 -0700 (PDT)
Date: Mon, 24 Jun 2019 11:24:58 +0900
From: yasufum.o@gmail.com
Subject: [spp 04364] [spp] [PATCH 05/11] shared/sec: revise usage of term
 component_info
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624022504.18752-6-yasufum.o@gmail.com>
In-reply-to: <20190624022504.18752-1-yasufum.o@gmail.com>
References: <20190624022504.18752-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04364
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=iPegI9YpO85+RR3vQVZdvLajIzzbJEn+T8wTloHQBrU=;
 b=biWwqJceYNe9AxLy30KFzCZ1fUgxmL5jlvop0epG4VZTp9obx+YCRuLbV23uaRQcfz
 chSfJ5uDqT16GFzN66v3BO+DV/8sgJ7NnJYE663t4w37buKjFQYIsmfz/n0gOycIO12M
 ACI159UE5ft0oWb2NZQa5wjV8sR/5ZU9s/X6rBrcSofjtxoKf1rqVhAVyl+wmhhHl3Oe
 nHtRADH6I+74IHHHgS6DtNjgk9M7OWbVEjVU8/9lawXETHCuyZKHWmQFnO5uZtmxwRsz
 z+SbznwhcwPreiGuxzJAPtGMZmCCeYgIqJ3Artf4+t8LUgDwwZn6Nw1aSetnvl9DkmjX K0zg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=iPegI9YpO85+RR3vQVZdvLajIzzbJEn+T8wTloHQBrU=;
 b=pnnYM5aRgjabu1vmFKFudLx1QRZcIzYkAFRC6MhbaXnClixynINuYjdjSB7Ey5rC95
 XJS5aTrr5t4AIoUFDwJQJXi2JU3IkKWmfA42MZow92rCjPMwrf+8NjQsNjRvSESPWhC2
 jdaB0ENv+9amJAI9GXGtybiBTsGvPofIANIrPO/6JdyhdZ0n5wHMzC7RAW+sX3xwCWp/
 htteLxwuwJ7aGbnRKcwAtq8SRlMDFQSuEgg1mtd7M35unBTmxyGMJNSv+BdAhA4Zqs7R
 siDIspJlsx4t+c6tMsx3ZOsteY7XJrSKTFnM/rwR76XlmLDR9kMC8q65XKVDFdt76XZs vDUg==
X-Gm-Message-State: APjAAAUcnCQChwyhwn5a0NY93NdjXPvoH7SU7bVDnNDlr5CIrH1lGnmz
 t/8Nx/VAUeXlp8CLZfYU+BJ4uTFa
X-Google-Smtp-Source:
 APXvYqwCmRM5upSOAWULbg1WTsKsEZONJSzs6JBgn3InbVFg4Mbz4yY3JmwvwIiusCfQvqQvydKfYw==
X-Received: by 2002:a63:b953:: with SMTP id v19mr19723351pgo.69.1561343128944;
 Sun, 23 Jun 2019 19:25:28 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 316
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Several types of `component`s and its attributes are defined as structs.
Some of instances of attributes of components are roughly named as
`component_info`, but it is confusing because it has no info which
type of component. This update is to fix the issue by revising the
names.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/shared/secondary/spp_worker_th/vf_deps.h |  9 +--
 src/vf/classifier_mac.c                      | 79 ++++++++++----------
 2 files changed, 42 insertions(+), 46 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 8085357..8364a13 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -32,13 +32,10 @@ struct cls_port_info {
 };
 
 /* classifier component information */
-struct component_info {
+struct cls_comp_info {
 	char name[STR_LEN_NAME];  /* component name */
 	int mac_addr_entry;  /* mac address entry flag */
-
-	/* mac address classification per vlan-id */
-	struct mac_classifier *mac_classifications[NOF_VLAN];
-
+	struct mac_classifier *mac_clfs[NOF_VLAN];  /* classifiers per VLAN. */
 	int n_classified_data_tx;  /* number of transmission ports */
 	struct cls_port_info classified_data_rx;  /* RX handled by cls */
 	/* transmission ports handled by classifier */
@@ -78,7 +75,7 @@ int spp_forward_update(struct sppwk_comp_info *component);
 
 void init_classifier_info(int component_id);
 
-void uninit_component_info(struct component_info *cmp_info);
+void uninit_component_info(struct cls_comp_info *cmp_info);
 
 int spp_classifier_mac_iterate_table(
 		struct spp_iterate_classifier_table_params *params);
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index b2388af..8edad6d 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -56,7 +56,7 @@
 /* classifier management information */
 struct management_info {
 	/* classifier information */
-	struct component_info cmp_infos[NOF_CLS_INFO];
+	struct cls_comp_info cmp_infos[NOF_CLS_INFO];
 
 	/* Reference index number for classifier information */
 	volatile int ref_index;
@@ -182,7 +182,7 @@ static void
 log_classification(
 		long clsd_idx,
 		struct rte_mbuf *pkt,
-		struct component_info *cmp_info,
+		struct cls_comp_info *cmp_info,
 		struct cls_port_info *clsd_data,
 		const char *func_name,
 		int line_num)
@@ -229,7 +229,7 @@ log_entry(
 		long clsd_idx,
 		uint16_t vid,
 		const char *mac_addr_str,
-		struct component_info *cmp_info,
+		struct cls_comp_info *cmp_info,
 		struct cls_port_info *clsd_data,
 		const char *func_name,
 		int line_num)
@@ -322,8 +322,8 @@ create_mac_classification(void)
 
 /* initialize classifier information. */
 static int
-init_component_info(struct component_info *cmp_info,
-		const struct sppwk_comp_info *component_info)
+init_component_info(struct cls_comp_info *cmp_info,
+		const struct sppwk_comp_info *wk_comp_info)
 {
 	int ret = SPP_RET_NG;
 	int i;
@@ -336,7 +336,7 @@ init_component_info(struct component_info *cmp_info,
 	uint16_t vid;
 
 	/* set rx */
-	if (component_info->nof_rx == 0) {
+	if (wk_comp_info->nof_rx == 0) {
 		clsd_data_rx->iface_type = UNDEF;
 		clsd_data_rx->iface_no = 0;
 		clsd_data_rx->iface_no_global = 0;
@@ -344,20 +344,20 @@ init_component_info(struct component_info *cmp_info,
 		clsd_data_rx->nof_pkts = 0;
 	} else {
 		clsd_data_rx->iface_type =
-			component_info->rx_ports[0]->iface_type;
+			wk_comp_info->rx_ports[0]->iface_type;
 		clsd_data_rx->iface_no = 0;
 		clsd_data_rx->iface_no_global =
-			component_info->rx_ports[0]->iface_no;
+			wk_comp_info->rx_ports[0]->iface_no;
 		clsd_data_rx->ethdev_port_id =
-			component_info->rx_ports[0]->ethdev_port_id;
+			wk_comp_info->rx_ports[0]->ethdev_port_id;
 		clsd_data_rx->nof_pkts = 0;
 	}
 
 	/* set tx */
-	cmp_info->n_classified_data_tx = component_info->nof_tx;
+	cmp_info->n_classified_data_tx = wk_comp_info->nof_tx;
 	cmp_info->mac_addr_entry = 0;
-	for (i = 0; i < component_info->nof_tx; i++) {
-		tx_port = component_info->tx_ports[i];
+	for (i = 0; i < wk_comp_info->nof_tx; i++) {
+		tx_port = wk_comp_info->tx_ports[i];
 		vid = tx_port->cls_attrs.vlantag.vid;
 
 		/* store ports information */
@@ -371,17 +371,16 @@ init_component_info(struct component_info *cmp_info,
 			continue;
 
 		/* if mac classification is NULL, make instance */
-		if (unlikely(cmp_info->mac_classifications[vid] == NULL)) {
+		if (unlikely(cmp_info->mac_clfs[vid] == NULL)) {
 			RTE_LOG(DEBUG, SPP_CLASSIFIER_MAC,
 					"Mac classification is not registered."
 					" create. vid=%hu\n", vid);
-			cmp_info->mac_classifications[vid] =
+			cmp_info->mac_clfs[vid] =
 					create_mac_classification();
-			if (unlikely(cmp_info->mac_classifications[vid] ==
-					NULL))
+			if (unlikely(cmp_info->mac_clfs[vid] == NULL))
 				return SPP_RET_NG;
 		}
-		mac_cls = cmp_info->mac_classifications[vid];
+		mac_cls = cmp_info->mac_clfs[vid];
 
 		/* store active tx_port that associate with mac address */
 		mac_cls->cls_ports[mac_cls->nof_cls_ports++] = i;
@@ -437,14 +436,14 @@ init_component_info(struct component_info *cmp_info,
 
 /* uninitialize classifier information. */
 void
-uninit_component_info(struct component_info *cmp_info)
+uninit_component_info(struct cls_comp_info *cmp_info)
 {
 	int i;
 
 	for (i = 0; i < NOF_VLAN; ++i)
-		free_mac_classification(cmp_info->mac_classifications[i]);
+		free_mac_classification(cmp_info->mac_clfs[i]);
 
-	memset(cmp_info, 0, sizeof(struct component_info));
+	memset(cmp_info, 0, sizeof(struct cls_comp_info));
 }
 
 /* transmit packet to one destination. */
@@ -473,7 +472,7 @@ transmit_packet(struct cls_port_info *clsd_data)
 
 /* transmit packet to one destination. */
 static inline void
-transmit_all_packet(struct component_info *cmp_info)
+transmit_all_packet(struct cls_comp_info *cmp_info)
 {
 	int i;
 	struct cls_port_info *clsd_data_tx = cmp_info->classified_data_tx;
@@ -514,11 +513,11 @@ push_packet(struct rte_mbuf *pkt, struct cls_port_info *clsd_data)
 
 /* get index of general default classified */
 static inline int
-get_general_default_classified_index(struct component_info *cmp_info)
+get_general_default_classified_index(struct cls_comp_info *cmp_info)
 {
 	struct mac_classifier *mac_cls;
 
-	mac_cls = cmp_info->mac_classifications[VLAN_UNTAGGED_VID];
+	mac_cls = cmp_info->mac_clfs[VLAN_UNTAGGED_VID];
 	if (unlikely(mac_cls == NULL)) {
 		LOG_DBG(cmp_info->name, "Untagged's default is not set. "
 				"vid=%d\n", (int)VLAN_UNTAGGED_VID);
@@ -531,7 +530,7 @@ get_general_default_classified_index(struct component_info *cmp_info)
 /* handle L2 multicast(include broadcast) packet */
 static inline void
 handle_l2multicast_packet(struct rte_mbuf *pkt,
-		struct component_info *cmp_info,
+		struct cls_comp_info *cmp_info,
 		struct cls_port_info *clsd_data)
 {
 	int i;
@@ -541,7 +540,7 @@ handle_l2multicast_packet(struct rte_mbuf *pkt,
 	int n_act_clsd;
 
 	/* select mac address classification by vid */
-	mac_cls = cmp_info->mac_classifications[vid];
+	mac_cls = cmp_info->mac_clfs[vid];
 	if (unlikely(mac_cls == NULL ||
 			mac_cls->nof_cls_ports == 0)) {
 		/* specific vlan is not registered
@@ -583,7 +582,7 @@ handle_l2multicast_packet(struct rte_mbuf *pkt,
 /* select index of classified */
 static inline int
 select_classified_index(const struct rte_mbuf *pkt,
-		struct component_info *cmp_info)
+		struct cls_comp_info *cmp_info)
 {
 	int ret;
 	struct ether_hdr *eth;
@@ -595,7 +594,7 @@ select_classified_index(const struct rte_mbuf *pkt,
 	vid = get_vid(pkt);
 
 	/* select mac address classification by vid */
-	mac_cls = cmp_info->mac_classifications[vid];
+	mac_cls = cmp_info->mac_clfs[vid];
 	if (unlikely(mac_cls == NULL)) {
 		LOG_DBG(cmp_info->name, "Mac classification is not "
 				"registered. vid=%hu\n", vid);
@@ -638,7 +637,7 @@ select_classified_index(const struct rte_mbuf *pkt,
  */
 static inline void
 classify_packet(struct rte_mbuf **rx_pkts, uint16_t n_rx,
-		struct component_info *cmp_info,
+		struct cls_comp_info *cmp_info,
 		struct cls_port_info *clsd_data)
 {
 	int i;
@@ -697,12 +696,12 @@ spp_classifier_mac_init(void)
 
 /* classifier(mac address) update component info. */
 int
-spp_classifier_mac_update(struct sppwk_comp_info *component_info)
+spp_classifier_mac_update(struct sppwk_comp_info *wk_comp_info)
 {
 	int ret = SPP_RET_NG;
-	int id = component_info->comp_id;
+	int id = wk_comp_info->comp_id;
 	struct management_info *mng_info = g_mng_infos + id;
-	struct component_info *cmp_info = NULL;
+	struct cls_comp_info *cmp_info = NULL;
 
 	RTE_LOG(INFO, SPP_CLASSIFIER_MAC,
 			"Component[%u] Start update component.\n", id);
@@ -710,13 +709,13 @@ spp_classifier_mac_update(struct sppwk_comp_info *component_info)
 	cmp_info = mng_info->cmp_infos + mng_info->upd_index;
 
 	/* initialize update side classifier information */
-	ret = init_component_info(cmp_info, component_info);
+	ret = init_component_info(cmp_info, wk_comp_info);
 	if (unlikely(ret != SPP_RET_OK)) {
 		RTE_LOG(ERR, SPP_CLASSIFIER_MAC,
 				"Cannot update classifier mac. ret=%d\n", ret);
 		return ret;
 	}
-	memcpy(cmp_info->name, component_info->name, STR_LEN_NAME);
+	memcpy(cmp_info->name, wk_comp_info->name, STR_LEN_NAME);
 
 	/* change index of reference side */
 	mng_info->upd_index = mng_info->ref_index;
@@ -743,7 +742,7 @@ spp_classifier_mac_do(int id)
 	int i;
 	int n_rx;
 	struct management_info *mng_info = g_mng_infos + id;
-	struct component_info *cmp_info = NULL;
+	struct cls_comp_info *cmp_info = NULL;
 	struct rte_mbuf *rx_pkts[MAX_PKT_BURST];
 
 	struct cls_port_info *clsd_data_rx = NULL;
@@ -811,7 +810,7 @@ spp_classifier_get_component_status(
 	int ret = SPP_RET_NG;
 	int i, nof_tx, nof_rx = 0;  /* Num of RX and TX ports. */
 	struct management_info *mng_info;
-	struct component_info *cmp_info;
+	struct cls_comp_info *cmp_info;
 	struct cls_port_info *clsd_data;
 	struct sppwk_port_idx rx_ports[RTE_MAX_ETHPORTS];
 	struct sppwk_port_idx tx_ports[RTE_MAX_ETHPORTS];
@@ -860,7 +859,7 @@ mac_classification_iterate_table(
 		struct spp_iterate_classifier_table_params *params,
 		uint16_t vid,
 		struct mac_classifier *mac_cls,
-		__rte_unused struct component_info *cmp_info,
+		__rte_unused struct cls_comp_info *cmp_info,
 		struct cls_port_info *clsd_data)
 {
 	int ret;
@@ -917,7 +916,7 @@ spp_classifier_mac_iterate_table(
 {
 	int i, n;
 	struct management_info *mng_info;
-	struct component_info *cmp_info;
+	struct cls_comp_info *cmp_info;
 	struct cls_port_info *clsd_data;
 
 	for (i = 0; i < RTE_MAX_LCORE; i++) {
@@ -932,12 +931,12 @@ spp_classifier_mac_iterate_table(
 			"Core[%u] Start iterate classifier table.\n", i);
 
 		for (n = 0; n < NOF_VLAN; ++n) {
-			if (cmp_info->mac_classifications[n] == NULL)
+			if (cmp_info->mac_clfs[n] == NULL)
 				continue;
 
 			mac_classification_iterate_table(params, (uint16_t) n,
-					cmp_info->mac_classifications[n],
-					cmp_info, clsd_data);
+					cmp_info->mac_clfs[n], cmp_info,
+					clsd_data);
 		}
 	}
 
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 11:24:57 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd101.ddreams.local
 (zssg-mailmd101.ddreams.local [10.160.123.96]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00UJO02Q8Y40@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:25:38 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd101.ddreams.local by
 zssg-mailmd101.ddreams.local (dDREAMS) id <0PTL01D0402QJP00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:38 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd101.ddreams.local
 (dDREAMS) with ESMTP id <0PTL016R802QW030@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:38 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id 2F2617E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:38 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 2DE308E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:38 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 22CFB8E6050	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:38 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 060BC8E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:37 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:36 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Pa0U013604;	Mon,
 24 Jun 2019 11:25:36 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2PaSu013603;	Mon, 24 Jun 2019 11:25:36 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2Pab1013600	for unknown; Mon,
 24 Jun 2019 11:25:36 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PaZ8006032 for
 unknown; Mon, 24 Jun 2019 11:25:36 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PaJM006029; Mon,
 24 Jun 2019 11:25:36 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PaHF016473;	Mon,
 24 Jun 2019 11:25:36 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O2PauS016469	for unknown; Mon, 24 Jun 2019 11:25:36 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PZ7M006583 for
 unknown; Mon, 24 Jun 2019 11:25:35 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PZut006580 for
 unknown; Mon, 24 Jun 2019 11:25:35 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2PTFu003872	for unknown; Mon,
 24 Jun 2019 11:25:34 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id BACE21BF6E;	Mon, 24 Jun 2019 04:25:28 +0200 (CEST)
Received: from mail-pl1-f193.google.com
 (mail-pl1-f193.google.com [209.85.214.193]) by dpdk.org (Postfix)
 with ESMTP id 810911BF6B for <spp@dpdk.org>; Mon,
 24 Jun 2019 04:25:26 +0200 (CEST)
Received: by mail-pl1-f193.google.com with SMTP id ay6so5958034plb.9 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 19:25:26 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id a3sm9927461pje.3.2019.06.23.19.25.24
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 19:25:25 -0700 (PDT)
Date: Mon, 24 Jun 2019 11:24:57 +0900
From: yasufum.o@gmail.com
Subject: [spp 04365] [spp] [PATCH 04/11] shared/sec: rename struct
 classified_data
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624022504.18752-5-yasufum.o@gmail.com>
In-reply-to: <20190624022504.18752-1-yasufum.o@gmail.com>
References: <20190624022504.18752-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04365
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=f1zFhm0li3K3WAXPHGSWgwlsP9sdjVn2AJgFLtNSum8=;
 b=Z/3fRNBE6HpOg+BcCtdRlTcvga2Rh6EyVg0JKoabEpf+FiGhNPPaf8RF4VA+ThKyns
 9CPWn+ise/H0DZMYr3MgInud21z34wuPnrZLPGJqvOGzzeOpW66KNNyP1/ZXu4vjpfI0
 m6mSPyAn7y5mJTmwdpw9AFO4LmYRKlrA51STlFKIAC1THGD887luBrPAuHRaTxtkEge0
 5cuwUBb4RWvA1KM5W0/RG/iOjegizmvaH+weKcfrgJualVkeAH9fnlTlauy3uWn4M0tC
 qCS4358mwe5F2QaIIkf3Mjnk0Qs7XXF/vu9uyTU5IeqfnJ8rqZW0oxrObqXEN7zl+kWY 4dXA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=f1zFhm0li3K3WAXPHGSWgwlsP9sdjVn2AJgFLtNSum8=;
 b=iuCQ1QRaf+vH4CLCEpVpogtwsrHApAPuG1EFCYfA9Zm5EaXJq2i0efydMAsuUskJB8
 MXiAdWDSSVsE3pQs500M9rOcWTMnFZrtYP57X22swefKixB22frC+GCK0G4kGiRDwCD9
 qFfn7vfq3Izsz4wxZgV1RgCypMD9zjq8hFmcnGItenPgERJxSx+NcLySfCw/+e60FWyg
 e2/Dvp14aro5uo+BUnV3gnH6ZtuttOf/1azUMxb2zBMZEgq+wtOnQcQv7s/ZVzh/jaCd
 z6BktdSz3klOS87E2jpo1yVLoMNslR9+6bkfr1PvoQf3nW4ADHMBnFKHg1EWLkVeuxK9 Foww==
X-Gm-Message-State: APjAAAWLp85Qz+HiE8SkVYDynJhg03Vx/933jOQXKs4C1bAm15bZAPyK
 /iokwHwEDhk/bPrnWx7WHkHV9W9T
X-Google-Smtp-Source:
 APXvYqzwgF05d5sGtgy9IahsWOgkK26Zn+DV1dhN2EtKpEq7k/125liyH8h20LUW7m4VIzW9rzXGHw==
X-Received: by 2002:a17:902:2aab:: with SMTP id
 j40mr101360989plb.76.1561343125516; Sun, 23 Jun 2019 19:25:25 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 243
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to rename struct `classified_data` to `cls_port_info`
because it is a set of attributes of a port and not classified data
actually.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/shared/secondary/spp_worker_th/vf_deps.h | 13 +++--
 src/vf/classifier_mac.c                      | 50 ++++++++++----------
 2 files changed, 31 insertions(+), 32 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 3e8fc01..8085357 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -20,14 +20,13 @@ struct mac_classifier {
 	int default_cls_idx;  /* Default index for classification. */
 };
 
-/* classified data (destination port, target packets, etc) */
-/* TODO(yasufum) rename `classified_data`. */
-/* TODO(yasufum) confirm what `iface_no_global` does mean? */
-struct classified_data {
+/* Set of attirbutes of port for classification.  */
+/* TODO(yasufum) confirm what is `iface_no_global`. */
+struct cls_port_info {
 	enum port_type iface_type;
 	int iface_no;   /* Index of ports handled by classifier. */
 	int iface_no_global;  /* ID for interface generated by spp_vf */
-	uint16_t port;  /* Ethdev port ID. */
+	uint16_t ethdev_port_id;  /* Ethdev port ID. */
 	uint16_t nof_pkts;  /* Number of packets in pkts[]. */
 	struct rte_mbuf *pkts[MAX_PKT_BURST];  /* packets to be classified. */
 };
@@ -41,9 +40,9 @@ struct component_info {
 	struct mac_classifier *mac_classifications[NOF_VLAN];
 
 	int n_classified_data_tx;  /* number of transmission ports */
-	struct classified_data classified_data_rx;  /* RX handled by cls */
+	struct cls_port_info classified_data_rx;  /* RX handled by cls */
 	/* transmission ports handled by classifier */
-	struct classified_data classified_data_tx[RTE_MAX_ETHPORTS];
+	struct cls_port_info classified_data_tx[RTE_MAX_ETHPORTS];
 };
 
 /* free mac classification instance. */
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index cd0c546..b2388af 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -183,7 +183,7 @@ log_classification(
 		long clsd_idx,
 		struct rte_mbuf *pkt,
 		struct component_info *cmp_info,
-		struct classified_data *clsd_data,
+		struct cls_port_info *clsd_data,
 		const char *func_name,
 		int line_num)
 {
@@ -203,8 +203,7 @@ log_classification(
 	if (clsd_idx < 0)
 		snprintf(iface_str, sizeof(iface_str), "%ld", clsd_idx);
 	else
-		spp_format_port_string(
-				iface_str,
+		spp_format_port_string(iface_str,
 				clsd_data[clsd_idx].iface_type,
 				clsd_data[clsd_idx].iface_no_global);
 
@@ -231,7 +230,7 @@ log_entry(
 		uint16_t vid,
 		const char *mac_addr_str,
 		struct component_info *cmp_info,
-		struct classified_data *clsd_data,
+		struct cls_port_info *clsd_data,
 		const char *func_name,
 		int line_num)
 {
@@ -331,8 +330,8 @@ init_component_info(struct component_info *cmp_info,
 	struct mac_classifier *mac_cls;
 	struct ether_addr eth_addr;
 	char mac_addr_str[ETHER_ADDR_STR_BUF_SZ];
-	struct classified_data *clsd_data_rx = &cmp_info->classified_data_rx;
-	struct classified_data *clsd_data_tx = cmp_info->classified_data_tx;
+	struct cls_port_info *clsd_data_rx = &cmp_info->classified_data_rx;
+	struct cls_port_info *clsd_data_tx = cmp_info->classified_data_tx;
 	struct sppwk_port_info *tx_port = NULL;
 	uint16_t vid;
 
@@ -341,7 +340,7 @@ init_component_info(struct component_info *cmp_info,
 		clsd_data_rx->iface_type = UNDEF;
 		clsd_data_rx->iface_no = 0;
 		clsd_data_rx->iface_no_global = 0;
-		clsd_data_rx->port = 0;
+		clsd_data_rx->ethdev_port_id = 0;
 		clsd_data_rx->nof_pkts = 0;
 	} else {
 		clsd_data_rx->iface_type =
@@ -349,7 +348,7 @@ init_component_info(struct component_info *cmp_info,
 		clsd_data_rx->iface_no = 0;
 		clsd_data_rx->iface_no_global =
 			component_info->rx_ports[0]->iface_no;
-		clsd_data_rx->port =
+		clsd_data_rx->ethdev_port_id =
 			component_info->rx_ports[0]->ethdev_port_id;
 		clsd_data_rx->nof_pkts = 0;
 	}
@@ -362,10 +361,10 @@ init_component_info(struct component_info *cmp_info,
 		vid = tx_port->cls_attrs.vlantag.vid;
 
 		/* store ports information */
-		clsd_data_tx[i].iface_type      = tx_port->iface_type;
-		clsd_data_tx[i].iface_no        = i;
+		clsd_data_tx[i].iface_type = tx_port->iface_type;
+		clsd_data_tx[i].iface_no = i;
 		clsd_data_tx[i].iface_no_global = tx_port->iface_no;
-		clsd_data_tx[i].port            = tx_port->ethdev_port_id;
+		clsd_data_tx[i].ethdev_port_id = tx_port->ethdev_port_id;
 		clsd_data_tx[i].nof_pkts = 0;
 
 		if (tx_port->cls_attrs.mac_addr == 0)
@@ -450,13 +449,13 @@ uninit_component_info(struct component_info *cmp_info)
 
 /* transmit packet to one destination. */
 static inline void
-transmit_packet(struct classified_data *clsd_data)
+transmit_packet(struct cls_port_info *clsd_data)
 {
 	int i;
 	uint16_t n_tx;
 
 	/* transmit packets */
-	n_tx = spp_eth_tx_burst(clsd_data->port, 0,
+	n_tx = spp_eth_tx_burst(clsd_data->ethdev_port_id, 0,
 			clsd_data->pkts, clsd_data->nof_pkts);
 
 	/* free cannot transmit packets */
@@ -466,7 +465,7 @@ transmit_packet(struct classified_data *clsd_data)
 		RTE_LOG(DEBUG, SPP_CLASSIFIER_MAC,
 				"drop packets(tx). num=%hu, ethdev_port_id=%hu\n",
 				(uint16_t)(clsd_data->nof_pkts - n_tx),
-				clsd_data->port);
+				clsd_data->ethdev_port_id);
 	}
 
 	clsd_data->nof_pkts = 0;
@@ -477,7 +476,7 @@ static inline void
 transmit_all_packet(struct component_info *cmp_info)
 {
 	int i;
-	struct classified_data *clsd_data_tx = cmp_info->classified_data_tx;
+	struct cls_port_info *clsd_data_tx = cmp_info->classified_data_tx;
 
 	for (i = 0; i < cmp_info->n_classified_data_tx; i++) {
 		if (unlikely(clsd_data_tx[i].nof_pkts != 0)) {
@@ -494,7 +493,7 @@ transmit_all_packet(struct component_info *cmp_info)
 
 /* set mbuf pointer to tx buffer and transmit packet, if buffer is filled */
 static inline void
-push_packet(struct rte_mbuf *pkt, struct classified_data *clsd_data)
+push_packet(struct rte_mbuf *pkt, struct cls_port_info *clsd_data)
 {
 	clsd_data->pkts[clsd_data->nof_pkts++] = pkt;
 
@@ -507,7 +506,7 @@ push_packet(struct rte_mbuf *pkt, struct classified_data *clsd_data)
 				clsd_data->iface_type,
 				clsd_data->iface_no_global,
 				clsd_data->iface_no,
-				clsd_data->port,
+				clsd_data->ethdev_port_id,
 				clsd_data->nof_pkts);
 		transmit_packet(clsd_data);
 	}
@@ -533,7 +532,7 @@ get_general_default_classified_index(struct component_info *cmp_info)
 static inline void
 handle_l2multicast_packet(struct rte_mbuf *pkt,
 		struct component_info *cmp_info,
-		struct classified_data *clsd_data)
+		struct cls_port_info *clsd_data)
 {
 	int i;
 	struct mac_classifier *mac_cls;
@@ -640,7 +639,7 @@ select_classified_index(const struct rte_mbuf *pkt,
 static inline void
 classify_packet(struct rte_mbuf **rx_pkts, uint16_t n_rx,
 		struct component_info *cmp_info,
-		struct classified_data *clsd_data)
+		struct cls_port_info *clsd_data)
 {
 	int i;
 	long clsd_idx;
@@ -747,8 +746,8 @@ spp_classifier_mac_do(int id)
 	struct component_info *cmp_info = NULL;
 	struct rte_mbuf *rx_pkts[MAX_PKT_BURST];
 
-	struct classified_data *clsd_data_rx = NULL;
-	struct classified_data *clsd_data_tx = NULL;
+	struct cls_port_info *clsd_data_rx = NULL;
+	struct cls_port_info *clsd_data_tx = NULL;
 
 	uint64_t cur_tsc, prev_tsc = 0;
 	const uint64_t drain_tsc = (rte_get_tsc_hz() + US_PER_S - 1) /
@@ -792,7 +791,8 @@ spp_classifier_mac_do(int id)
 		return SPP_RET_OK;
 
 	/* retrieve packets */
-	n_rx = spp_eth_rx_burst(clsd_data_rx->port, 0, rx_pkts, MAX_PKT_BURST);
+	n_rx = spp_eth_rx_burst(clsd_data_rx->ethdev_port_id, 0, rx_pkts,
+			MAX_PKT_BURST);
 	if (unlikely(n_rx == 0))
 		return SPP_RET_OK;
 
@@ -812,7 +812,7 @@ spp_classifier_get_component_status(
 	int i, nof_tx, nof_rx = 0;  /* Num of RX and TX ports. */
 	struct management_info *mng_info;
 	struct component_info *cmp_info;
-	struct classified_data *clsd_data;
+	struct cls_port_info *clsd_data;
 	struct sppwk_port_idx rx_ports[RTE_MAX_ETHPORTS];
 	struct sppwk_port_idx tx_ports[RTE_MAX_ETHPORTS];
 
@@ -861,7 +861,7 @@ mac_classification_iterate_table(
 		uint16_t vid,
 		struct mac_classifier *mac_cls,
 		__rte_unused struct component_info *cmp_info,
-		struct classified_data *clsd_data)
+		struct cls_port_info *clsd_data)
 {
 	int ret;
 	const void *key;
@@ -918,7 +918,7 @@ spp_classifier_mac_iterate_table(
 	int i, n;
 	struct management_info *mng_info;
 	struct component_info *cmp_info;
-	struct classified_data *clsd_data;
+	struct cls_port_info *clsd_data;
 
 	for (i = 0; i < RTE_MAX_LCORE; i++) {
 		mng_info = g_mng_infos + i;
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 11:24:59 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd101.ddreams.local
 (zssg-mailmd101.ddreams.local [10.160.123.96]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00UJU02Q8Y40@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:25:38 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd101.ddreams.local by
 zssg-mailmd101.ddreams.local (dDREAMS) id <0PTL01D0602QJP00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:38 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd101.ddreams.local
 (dDREAMS) with ESMTP id <0PTL016RA02QW030@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:38 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id 482587E6038	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:38 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 468618E6068	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:38 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 39ED58E605D	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:38 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 8C71A8E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:37 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:37 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PboQ013611;	Mon,
 24 Jun 2019 11:25:37 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2Pbfv013610;	Mon, 24 Jun 2019 11:25:37 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2Pbe3013607	for unknown; Mon,
 24 Jun 2019 11:25:37 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PaHk006042 for
 unknown; Mon, 24 Jun 2019 11:25:37 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Pal2006039; Mon,
 24 Jun 2019 11:25:36 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Pail016480;	Mon,
 24 Jun 2019 11:25:36 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O2Pa2u016476	for unknown; Mon, 24 Jun 2019 11:25:36 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PaLY006590 for
 unknown; Mon, 24 Jun 2019 11:25:36 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Paba006587 for
 unknown; Mon, 24 Jun 2019 11:25:36 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2PK2n003816	for unknown; Mon,
 24 Jun 2019 11:25:35 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id D91641BF6C;	Mon, 24 Jun 2019 04:25:34 +0200 (CEST)
Received: from mail-pf1-f194.google.com
 (mail-pf1-f194.google.com [209.85.210.194]) by dpdk.org (Postfix)
 with ESMTP id 96F861BF6F for <spp@dpdk.org>; Mon,
 24 Jun 2019 04:25:32 +0200 (CEST)
Received: by mail-pf1-f194.google.com with SMTP id c85so6611166pfc.1 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 19:25:32 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id a3sm9927461pje.3.2019.06.23.19.25.30
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 19:25:31 -0700 (PDT)
Date: Mon, 24 Jun 2019 11:24:59 +0900
From: yasufum.o@gmail.com
Subject: [spp 04366] [spp] [PATCH 06/11] shared/sec: revise members of struct
	cls_port_info
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624022504.18752-7-yasufum.o@gmail.com>
In-reply-to: <20190624022504.18752-1-yasufum.o@gmail.com>
References: <20190624022504.18752-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04366
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=W+sTMqginMOnVVZukgEaoxyT4vCaT27jZt3OI+irFEc=;
 b=jsVm4UOngbUhOIidBpJe6hJUUeBv12fDXC1R30ANQep3g57Oq7jDijrjGnShiGVvEo
 VWxitUP7i6H4x0YFAAc0Z1m+BlffNCJdw3unqGR4AkYGhgiTUn+cAh4e928zxOdd7bTa
 hSxwIYk4WsfBNe0syK+lw5iT2S5F45ODx3czrak37irOL6RmJXUsWIiU+D9zMyw3OKo1
 87sepUMujw0Ty8/vNdOzWGfknLLyjXvQpoft6rtz+wrR3CQbbpPaInyxqQZx+WfoEB2U
 T7qysZTl2SKDAz2b4BQwRZbxHp72Bl4TqhMoXUwcB0f70E4prpmyASKbBqfpPqJ8G13J s+Qw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=W+sTMqginMOnVVZukgEaoxyT4vCaT27jZt3OI+irFEc=;
 b=G5Ehxe5H3bCn0l8/r7TqDm4MjRU+KyaFOW0uRMBWk8AJKqUIGFDYTXAJ3iJqj0DXkV
 Bf7LlLBYXq595M+Ty666aDePQ5LTtIwKIWo5w9L7+vykwKZisATFpZKwgI+Xv6zXY/4K
 fDd+oxMZqOCO04l5yhh7sgBLbS6duz0Y3A0aYcDRDj7Fb4I2PgTCHohpi3gnjsDMCvKh
 yU4+RxnFVLHcuVxQM7CJlTXdqPU+hUFAP55+17MuAqUdukRCmJ/2M/B6CtnGwBb2xD1N
 +VElSKnKnze1MO6fXJaOfv4yO/5p1BZqXs1wyRI6XCRMMgs0wVAmWqI7cbiF+AAhNdVw nvzQ==
X-Gm-Message-State: APjAAAW1c8cXo4w6EkO+Pd+VnoOHxTuVPQomIxqGiH39rYIlkCg8BcB8
 1Kvg5NozKXqOdDtN1hDW8y+zeS+Q
X-Google-Smtp-Source:
 APXvYqw8ieFSIkJEqpXgNG6Urs50N+7Ru8mmGSP30mlSBdNJkwrvky+KFxTjNePVFGV0/CFZ/coMFA==
X-Received: by 2002:a65:404a:: with SMTP id h10mr31231101pgp.262.1561343131626;
 Sun, 23 Jun 2019 19:25:31 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 184
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

To refactor, revise members of struct `cls_port_info` in which struct
of information of port is name as "classified data" and it is not
describing the feature.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/shared/secondary/spp_worker_th/vf_deps.h | 10 +--
 src/vf/classifier_mac.c                      | 65 ++++++++++----------
 2 files changed, 37 insertions(+), 38 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 8364a13..79e2abb 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -20,7 +20,7 @@ struct mac_classifier {
 	int default_cls_idx;  /* Default index for classification. */
 };
 
-/* Set of attirbutes of port for classification.  */
+/* Attirbutes of port for classification. */
 /* TODO(yasufum) confirm what is `iface_no_global`. */
 struct cls_port_info {
 	enum port_type iface_type;
@@ -36,10 +36,10 @@ struct cls_comp_info {
 	char name[STR_LEN_NAME];  /* component name */
 	int mac_addr_entry;  /* mac address entry flag */
 	struct mac_classifier *mac_clfs[NOF_VLAN];  /* classifiers per VLAN. */
-	int n_classified_data_tx;  /* number of transmission ports */
-	struct cls_port_info classified_data_rx;  /* RX handled by cls */
-	/* transmission ports handled by classifier */
-	struct cls_port_info classified_data_tx[RTE_MAX_ETHPORTS];
+	int nof_tx_ports;  /* Number of TX ports info entries. */
+	/* Classifier has one RX port and several TX ports. */
+	struct cls_port_info rx_port_i;  /* RX port info classified. */
+	struct cls_port_info tx_ports_i[RTE_MAX_ETHPORTS];  /* TX info. */
 };
 
 /* free mac classification instance. */
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 8edad6d..4213372 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -330,42 +330,43 @@ init_component_info(struct cls_comp_info *cmp_info,
 	struct mac_classifier *mac_cls;
 	struct ether_addr eth_addr;
 	char mac_addr_str[ETHER_ADDR_STR_BUF_SZ];
-	struct cls_port_info *clsd_data_rx = &cmp_info->classified_data_rx;
-	struct cls_port_info *clsd_data_tx = cmp_info->classified_data_tx;
+	/* Classifier has one RX port and several TX ports. */
+	struct cls_port_info *cls_rx_port_info = &cmp_info->rx_port_i;
+	struct cls_port_info *cls_tx_ports_info = cmp_info->tx_ports_i;
 	struct sppwk_port_info *tx_port = NULL;
 	uint16_t vid;
 
 	/* set rx */
 	if (wk_comp_info->nof_rx == 0) {
-		clsd_data_rx->iface_type = UNDEF;
-		clsd_data_rx->iface_no = 0;
-		clsd_data_rx->iface_no_global = 0;
-		clsd_data_rx->ethdev_port_id = 0;
-		clsd_data_rx->nof_pkts = 0;
+		cls_rx_port_info->iface_type = UNDEF;
+		cls_rx_port_info->iface_no = 0;
+		cls_rx_port_info->iface_no_global = 0;
+		cls_rx_port_info->ethdev_port_id = 0;
+		cls_rx_port_info->nof_pkts = 0;
 	} else {
-		clsd_data_rx->iface_type =
+		cls_rx_port_info->iface_type =
 			wk_comp_info->rx_ports[0]->iface_type;
-		clsd_data_rx->iface_no = 0;
-		clsd_data_rx->iface_no_global =
+		cls_rx_port_info->iface_no = 0;
+		cls_rx_port_info->iface_no_global =
 			wk_comp_info->rx_ports[0]->iface_no;
-		clsd_data_rx->ethdev_port_id =
+		cls_rx_port_info->ethdev_port_id =
 			wk_comp_info->rx_ports[0]->ethdev_port_id;
-		clsd_data_rx->nof_pkts = 0;
+		cls_rx_port_info->nof_pkts = 0;
 	}
 
 	/* set tx */
-	cmp_info->n_classified_data_tx = wk_comp_info->nof_tx;
+	cmp_info->nof_tx_ports = wk_comp_info->nof_tx;
 	cmp_info->mac_addr_entry = 0;
 	for (i = 0; i < wk_comp_info->nof_tx; i++) {
 		tx_port = wk_comp_info->tx_ports[i];
 		vid = tx_port->cls_attrs.vlantag.vid;
 
 		/* store ports information */
-		clsd_data_tx[i].iface_type = tx_port->iface_type;
-		clsd_data_tx[i].iface_no = i;
-		clsd_data_tx[i].iface_no_global = tx_port->iface_no;
-		clsd_data_tx[i].ethdev_port_id = tx_port->ethdev_port_id;
-		clsd_data_tx[i].nof_pkts = 0;
+		cls_tx_ports_info[i].iface_type = tx_port->iface_type;
+		cls_tx_ports_info[i].iface_no = i;
+		cls_tx_ports_info[i].iface_no_global = tx_port->iface_no;
+		cls_tx_ports_info[i].ethdev_port_id = tx_port->ethdev_port_id;
+		cls_tx_ports_info[i].nof_pkts = 0;
 
 		if (tx_port->cls_attrs.mac_addr == 0)
 			continue;
@@ -475,9 +476,9 @@ static inline void
 transmit_all_packet(struct cls_comp_info *cmp_info)
 {
 	int i;
-	struct cls_port_info *clsd_data_tx = cmp_info->classified_data_tx;
+	struct cls_port_info *clsd_data_tx = cmp_info->tx_ports_i;
 
-	for (i = 0; i < cmp_info->n_classified_data_tx; i++) {
+	for (i = 0; i < cmp_info->nof_tx_ports; i++) {
 		if (unlikely(clsd_data_tx[i].nof_pkts != 0)) {
 			RTE_LOG(INFO, SPP_CLASSIFIER_MAC,
 					"transmit all packets (drain). "
@@ -756,8 +757,8 @@ spp_classifier_mac_do(int id)
 	change_classifier_index(mng_info, id);
 
 	cmp_info = mng_info->cmp_infos + mng_info->ref_index;
-	clsd_data_rx = &cmp_info->classified_data_rx;
-	clsd_data_tx = cmp_info->classified_data_tx;
+	clsd_data_rx = &cmp_info->rx_port_i;
+	clsd_data_tx = cmp_info->tx_ports_i;
 
 	/**
 	 * decide classifier information of the current cycle If at least,
@@ -765,14 +766,14 @@ spp_classifier_mac_do(int id)
 	 * classifying. If not, stop classifying.
 	 */
 	if (!(clsd_data_rx->iface_type != UNDEF &&
-			cmp_info->n_classified_data_tx >= 1 &&
-				cmp_info->mac_addr_entry == 1))
+			cmp_info->nof_tx_ports >= 1 &&
+			cmp_info->mac_addr_entry == 1))
 		return SPP_RET_OK;
 
 	/* drain tx packets, if buffer is not filled for interval */
 	cur_tsc = rte_rdtsc();
 	if (unlikely(cur_tsc - prev_tsc > drain_tsc)) {
-		for (i = 0; i < cmp_info->n_classified_data_tx; i++) {
+		for (i = 0; i < cmp_info->nof_tx_ports; i++) {
 			if (likely(clsd_data_tx[i].nof_pkts == 0))
 				continue;
 
@@ -825,19 +826,17 @@ spp_classifier_get_component_status(
 	}
 
 	cmp_info = mng_info->cmp_infos + mng_info->ref_index;
-	clsd_data = cmp_info->classified_data_tx;
+	clsd_data = cmp_info->tx_ports_i;
 
 	memset(rx_ports, 0x00, sizeof(rx_ports));
-	if (cmp_info->classified_data_rx.iface_type != UNDEF) {
+	if (cmp_info->rx_port_i.iface_type != UNDEF) {
 		nof_rx = 1;
-		rx_ports[0].iface_type = cmp_info->
-				classified_data_rx.iface_type;
-		rx_ports[0].iface_no   = cmp_info->
-				classified_data_rx.iface_no_global;
+		rx_ports[0].iface_type = cmp_info->rx_port_i.iface_type;
+		rx_ports[0].iface_no = cmp_info->rx_port_i.iface_no_global;
 	}
 
 	memset(tx_ports, 0x00, sizeof(tx_ports));
-	nof_tx = cmp_info->n_classified_data_tx;
+	nof_tx = cmp_info->nof_tx_ports;
 	for (i = 0; i < nof_tx; i++) {
 		tx_ports[i].iface_type = clsd_data[i].iface_type;
 		tx_ports[i].iface_no   = clsd_data[i].iface_no_global;
@@ -925,7 +924,7 @@ spp_classifier_mac_iterate_table(
 			continue;
 
 		cmp_info = mng_info->cmp_infos + mng_info->ref_index;
-		clsd_data = cmp_info->classified_data_tx;
+		clsd_data = cmp_info->tx_ports_i;
 
 		RTE_LOG(DEBUG, SPP_CLASSIFIER_MAC,
 			"Core[%u] Start iterate classifier table.\n", i);
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 11:25:00 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd103.ddreams.local
 (zssg-mailmd103.ddreams.local [10.160.123.98]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00UK202R8Y40@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:25:39 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd103.ddreams.local by
 zssg-mailmd103.ddreams.local (dDREAMS) id <0PTL0170202RDE00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:39 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd103.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00UCD02RQ170@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:39 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id 565217E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:39 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 53B038E606A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:39 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 519FA8E6066	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:39 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id C810B8E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:38 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:38 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Pc9g013619;	Mon,
 24 Jun 2019 11:25:38 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2PcSP013617;	Mon, 24 Jun 2019 11:25:38 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2PcVB013614	for unknown; Mon,
 24 Jun 2019 11:25:38 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Pcta006050 for
 unknown; Mon, 24 Jun 2019 11:25:38 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PcIk006047; Mon,
 24 Jun 2019 11:25:38 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PbtS016487;	Mon,
 24 Jun 2019 11:25:37 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O2PbY9016483	for unknown; Mon, 24 Jun 2019 11:25:37 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PbB6006598 for
 unknown; Mon, 24 Jun 2019 11:25:37 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PbA0006595 for
 unknown; Mon, 24 Jun 2019 11:25:37 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2PTFw003872	for unknown; Mon,
 24 Jun 2019 11:25:36 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id F016D1BF72;	Mon, 24 Jun 2019 04:25:35 +0200 (CEST)
Received: from mail-pg1-f196.google.com
 (mail-pg1-f196.google.com [209.85.215.196]) by dpdk.org (Postfix)
 with ESMTP id 0C0D11BF71 for <spp@dpdk.org>; Mon,
 24 Jun 2019 04:25:35 +0200 (CEST)
Received: by mail-pg1-f196.google.com with SMTP id f25so6241887pgv.10 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 19:25:34 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id a3sm9927461pje.3.2019.06.23.19.25.32
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 19:25:33 -0700 (PDT)
Date: Mon, 24 Jun 2019 11:25:00 +0900
From: yasufum.o@gmail.com
Subject: [spp 04367] [spp] [PATCH 07/11] shared/sec: rename func
 free_mac_classification
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624022504.18752-8-yasufum.o@gmail.com>
In-reply-to: <20190624022504.18752-1-yasufum.o@gmail.com>
References: <20190624022504.18752-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04367
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=aXlKJpo65Y8u4I4qZysfxWpuwxkvufWmEDK9IZjvR1A=;
 b=ZUWdH2NMJbMHkpnA1j/72ioMVJPaSs8LsuiOwyUOz5TzcEczM+YJ6psXHH8NktCjBX
 brwy3pYe+sFDIIUak3Sl41E4AlFOqXLEBqhfkecTqi1GTSrcksQXpugTs3aKHYVPHuCz
 Uo5Ejwi9rpTRQSrVe8PYar5zLslkUCBMvnBf+W8ZrlFVBc+ByDHk40EKt5IQBH+JoQwm
 nEgarlDCZmrdJ0dZ2sWFAlAMSWpaUNF+uHpu1G8QEPU8yyWRYhVRDLEe8+b3ULiyn+IH
 uuzU7kH7Awee+At67hpb9Lj0Pd/ZN61N3LztvUNw7lwc9PT1lFAnO/9qTS7pwvaQCIek HkGQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=aXlKJpo65Y8u4I4qZysfxWpuwxkvufWmEDK9IZjvR1A=;
 b=Pc7nj/mj1AeR4OqMgnbcdVb1wSHg7aYk2tC1wLLygYOc5tKnAjDKk31lhPqEpiZ46g
 mR/IBg4hiWD+TkojpjKB4yJtwymHCOXFZPWyZiy8+i3+WVhnNN2LAB9NksfMekMcxX6F
 U3XnRhmHZo6V826s+9GsTnlYLgF6T7y+UG7+NJytNr1RnAKkfo4+UtZylAQSaOeZluZK
 S/TSNz4TaQ0pjRoBcTlIhnRg8qZySiwwmR6iqCmcT7KLh7XduKjY3o0a0eCFdRuDUPRC
 MyRD1G7EM2co3cFUwwLIHqVQzROvVBoxeC/FtEoy4P5L9SwMYie+WCP+yBNKZbyLNz6M ou4Q==
X-Gm-Message-State: APjAAAX3nH5AUAXlsamrptjYO1Eu7CxtsLWiGuJbvWNw4e+Vr82Sesb3
 3ZE3SyMkGbeXBBWj2QGkEdVQe5r5
X-Google-Smtp-Source:
 APXvYqzJ56sXRm6Pjnp5Ho15CI2OQwSqAiz8BR0kLegHQI6zDRf8BsQfuBmt0mL/n7Jc7k4cCrf53Q==
X-Received: by 2002:a17:90a:b903:: with SMTP id
 p3mr21552742pjr.79.1561343134151; Sun, 23 Jun 2019 19:25:34 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 64
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Rename free_mac_classification() to free_mac_classifier() for releasing
resources of classifier.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/shared/secondary/spp_worker_th/vf_deps.h | 14 ++++++--------
 src/vf/classifier_mac.c                      |  8 +++-----
 2 files changed, 9 insertions(+), 13 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 79e2abb..9b59b3d 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -42,17 +42,15 @@ struct cls_comp_info {
 	struct cls_port_info tx_ports_i[RTE_MAX_ETHPORTS];  /* TX info. */
 };
 
-/* free mac classification instance. */
+/* Release instance of mac classifier. */
 static inline void
-free_mac_classification(struct mac_classifier *mac_cls)
+free_mac_classifier(struct mac_classifier *mac_clf)
 {
-	if (mac_cls == NULL)
+	if (mac_clf == NULL)
 		return;
-
-	if (mac_cls->cls_tbl != NULL)
-		rte_hash_free(mac_cls->cls_tbl);
-
-	rte_free(mac_cls);
+	if (mac_clf->cls_tbl != NULL)
+		rte_hash_free(mac_clf->cls_tbl);
+	rte_free(mac_clf);
 }
 
 /**
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 4213372..232ed19 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -437,14 +437,12 @@ init_component_info(struct cls_comp_info *cmp_info,
 
 /* uninitialize classifier information. */
 void
-uninit_component_info(struct cls_comp_info *cmp_info)
+uninit_component_info(struct cls_comp_info *comp_info)
 {
 	int i;
-
 	for (i = 0; i < NOF_VLAN; ++i)
-		free_mac_classification(cmp_info->mac_clfs[i]);
-
-	memset(cmp_info, 0, sizeof(struct cls_comp_info));
+		free_mac_classifier(comp_info->mac_clfs[i]);
+	memset(comp_info, 0, sizeof(struct cls_comp_info));
 }
 
 /* transmit packet to one destination. */
-- 
2.17.1



From spp-request@dpdk.org Mon Jun 24 11:25:33 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd103.ddreams.local
 (zssg-mailmd103.ddreams.local [10.160.123.98]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00ULB02W8Y40@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:25:44 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd103.ddreams.local by
 zssg-mailmd103.ddreams.local (dDREAMS) id <0PTL0170E02WFP00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:44 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd103.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00UFF02WQ170@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:44 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf101.ddreams.local (Postfix) with ESMTP id 0DAF57E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:44 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 0C27A8E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:44 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 011138E6055	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:44 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id AA2C68E6058	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:42 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf101.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:42 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Pgcj013639;	Mon,
 24 Jun 2019 11:25:42 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2PgNs013638;	Mon, 24 Jun 2019 11:25:42 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2PgFo013635	for unknown; Mon,
 24 Jun 2019 11:25:42 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Pgrv006656 for
 unknown; Mon, 24 Jun 2019 11:25:42 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Pgop006651 for
 unknown; Mon, 24 Jun 2019 11:25:42 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2PZ5i003920	for unknown; Mon,
 24 Jun 2019 11:25:41 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id E2F2A1BF70	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 24 Jun 2019 04:25:34 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 5
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 24 Jun 2019 04:25:33 +0200
Message-id: <mailman.23359.1561343133.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH 04/11] shared/sec: rename struct classified_data
      (yasufum.o@gmail.com)
   2. [PATCH 05/11] shared/sec: revise usage of term component_info
      (yasufum.o@gmail.com)
   3. [PATCH 06/11] shared/sec: revise members of struct
      cls_port_info (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon, 24 Jun 2019 11:24:57 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 04/11] shared/sec: rename struct classified_data
Message-ID: <20190624022504.18752-5-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to rename struct `classified_data` to `cls_port_info`
because it is a set of attributes of a port and not classified data
actually.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/shared/secondary/spp_worker_th/vf_deps.h | 13 +++--
 src/vf/classifier_mac.c                      | 50 ++++++++++----------
 2 files changed, 31 insertions(+), 32 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 3e8fc01..8085357 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -20,14 +20,13 @@ struct mac_classifier {
 	int default_cls_idx;  /* Default index for classification. */
 };
 
-/* classified data (destination port, target packets, etc) */
-/* TODO(yasufum) rename `classified_data`. */
-/* TODO(yasufum) confirm what `iface_no_global` does mean? */
-struct classified_data {
+/* Set of attirbutes of port for classification.  */
+/* TODO(yasufum) confirm what is `iface_no_global`. */
+struct cls_port_info {
 	enum port_type iface_type;
 	int iface_no;   /* Index of ports handled by classifier. */
 	int iface_no_global;  /* ID for interface generated by spp_vf */
-	uint16_t port;  /* Ethdev port ID. */
+	uint16_t ethdev_port_id;  /* Ethdev port ID. */
 	uint16_t nof_pkts;  /* Number of packets in pkts[]. */
 	struct rte_mbuf *pkts[MAX_PKT_BURST];  /* packets to be classified. */
 };
@@ -41,9 +40,9 @@ struct component_info {
 	struct mac_classifier *mac_classifications[NOF_VLAN];
 
 	int n_classified_data_tx;  /* number of transmission ports */
-	struct classified_data classified_data_rx;  /* RX handled by cls */
+	struct cls_port_info classified_data_rx;  /* RX handled by cls */
 	/* transmission ports handled by classifier */
-	struct classified_data classified_data_tx[RTE_MAX_ETHPORTS];
+	struct cls_port_info classified_data_tx[RTE_MAX_ETHPORTS];
 };
 
 /* free mac classification instance. */
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index cd0c546..b2388af 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -183,7 +183,7 @@ log_classification(
 		long clsd_idx,
 		struct rte_mbuf *pkt,
 		struct component_info *cmp_info,
-		struct classified_data *clsd_data,
+		struct cls_port_info *clsd_data,
 		const char *func_name,
 		int line_num)
 {
@@ -203,8 +203,7 @@ log_classification(
 	if (clsd_idx < 0)
 		snprintf(iface_str, sizeof(iface_str), "%ld", clsd_idx);
 	else
-		spp_format_port_string(
-				iface_str,
+		spp_format_port_string(iface_str,
 				clsd_data[clsd_idx].iface_type,
 				clsd_data[clsd_idx].iface_no_global);
 
@@ -231,7 +230,7 @@ log_entry(
 		uint16_t vid,
 		const char *mac_addr_str,
 		struct component_info *cmp_info,
-		struct classified_data *clsd_data,
+		struct cls_port_info *clsd_data,
 		const char *func_name,
 		int line_num)
 {
@@ -331,8 +330,8 @@ init_component_info(struct component_info *cmp_info,
 	struct mac_classifier *mac_cls;
 	struct ether_addr eth_addr;
 	char mac_addr_str[ETHER_ADDR_STR_BUF_SZ];
-	struct classified_data *clsd_data_rx = &cmp_info->classified_data_rx;
-	struct classified_data *clsd_data_tx = cmp_info->classified_data_tx;
+	struct cls_port_info *clsd_data_rx = &cmp_info->classified_data_rx;
+	struct cls_port_info *clsd_data_tx = cmp_info->classified_data_tx;
 	struct sppwk_port_info *tx_port = NULL;
 	uint16_t vid;
 
@@ -341,7 +340,7 @@ init_component_info(struct component_info *cmp_info,
 		clsd_data_rx->iface_type = UNDEF;
 		clsd_data_rx->iface_no = 0;
 		clsd_data_rx->iface_no_global = 0;
-		clsd_data_rx->port = 0;
+		clsd_data_rx->ethdev_port_id = 0;
 		clsd_data_rx->nof_pkts = 0;
 	} else {
 		clsd_data_rx->iface_type =
@@ -349,7 +348,7 @@ init_component_info(struct component_info *cmp_info,
 		clsd_data_rx->iface_no = 0;
 		clsd_data_rx->iface_no_global =
 			component_info->rx_ports[0]->iface_no;
-		clsd_data_rx->port =
+		clsd_data_rx->ethdev_port_id =
 			component_info->rx_ports[0]->ethdev_port_id;
 		clsd_data_rx->nof_pkts = 0;
 	}
@@ -362,10 +361,10 @@ init_component_info(struct component_info *cmp_info,
 		vid = tx_port->cls_attrs.vlantag.vid;
 
 		/* store ports information */
-		clsd_data_tx[i].iface_type      = tx_port->iface_type;
-		clsd_data_tx[i].iface_no        = i;
+		clsd_data_tx[i].iface_type = tx_port->iface_type;
+		clsd_data_tx[i].iface_no = i;
 		clsd_data_tx[i].iface_no_global = tx_port->iface_no;
-		clsd_data_tx[i].port            = tx_port->ethdev_port_id;
+		clsd_data_tx[i].ethdev_port_id = tx_port->ethdev_port_id;
 		clsd_data_tx[i].nof_pkts = 0;
 
 		if (tx_port->cls_attrs.mac_addr == 0)
@@ -450,13 +449,13 @@ uninit_component_info(struct component_info *cmp_info)
 
 /* transmit packet to one destination. */
 static inline void
-transmit_packet(struct classified_data *clsd_data)
+transmit_packet(struct cls_port_info *clsd_data)
 {
 	int i;
 	uint16_t n_tx;
 
 	/* transmit packets */
-	n_tx = spp_eth_tx_burst(clsd_data->port, 0,
+	n_tx = spp_eth_tx_burst(clsd_data->ethdev_port_id, 0,
 			clsd_data->pkts, clsd_data->nof_pkts);
 
 	/* free cannot transmit packets */
@@ -466,7 +465,7 @@ transmit_packet(struct classified_data *clsd_data)
 		RTE_LOG(DEBUG, SPP_CLASSIFIER_MAC,
 				"drop packets(tx). num=%hu, ethdev_port_id=%hu\n",
 				(uint16_t)(clsd_data->nof_pkts - n_tx),
-				clsd_data->port);
+				clsd_data->ethdev_port_id);
 	}
 
 	clsd_data->nof_pkts = 0;
@@ -477,7 +476,7 @@ static inline void
 transmit_all_packet(struct component_info *cmp_info)
 {
 	int i;
-	struct classified_data *clsd_data_tx = cmp_info->classified_data_tx;
+	struct cls_port_info *clsd_data_tx = cmp_info->classified_data_tx;
 
 	for (i = 0; i < cmp_info->n_classified_data_tx; i++) {
 		if (unlikely(clsd_data_tx[i].nof_pkts != 0)) {
@@ -494,7 +493,7 @@ transmit_all_packet(struct component_info *cmp_info)
 
 /* set mbuf pointer to tx buffer and transmit packet, if buffer is filled */
 static inline void
-push_packet(struct rte_mbuf *pkt, struct classified_data *clsd_data)
+push_packet(struct rte_mbuf *pkt, struct cls_port_info *clsd_data)
 {
 	clsd_data->pkts[clsd_data->nof_pkts++] = pkt;
 
@@ -507,7 +506,7 @@ push_packet(struct rte_mbuf *pkt, struct classified_data *clsd_data)
 				clsd_data->iface_type,
 				clsd_data->iface_no_global,
 				clsd_data->iface_no,
-				clsd_data->port,
+				clsd_data->ethdev_port_id,
 				clsd_data->nof_pkts);
 		transmit_packet(clsd_data);
 	}
@@ -533,7 +532,7 @@ get_general_default_classified_index(struct component_info *cmp_info)
 static inline void
 handle_l2multicast_packet(struct rte_mbuf *pkt,
 		struct component_info *cmp_info,
-		struct classified_data *clsd_data)
+		struct cls_port_info *clsd_data)
 {
 	int i;
 	struct mac_classifier *mac_cls;
@@ -640,7 +639,7 @@ select_classified_index(const struct rte_mbuf *pkt,
 static inline void
 classify_packet(struct rte_mbuf **rx_pkts, uint16_t n_rx,
 		struct component_info *cmp_info,
-		struct classified_data *clsd_data)
+		struct cls_port_info *clsd_data)
 {
 	int i;
 	long clsd_idx;
@@ -747,8 +746,8 @@ spp_classifier_mac_do(int id)
 	struct component_info *cmp_info = NULL;
 	struct rte_mbuf *rx_pkts[MAX_PKT_BURST];
 
-	struct classified_data *clsd_data_rx = NULL;
-	struct classified_data *clsd_data_tx = NULL;
+	struct cls_port_info *clsd_data_rx = NULL;
+	struct cls_port_info *clsd_data_tx = NULL;
 
 	uint64_t cur_tsc, prev_tsc = 0;
 	const uint64_t drain_tsc = (rte_get_tsc_hz() + US_PER_S - 1) /
@@ -792,7 +791,8 @@ spp_classifier_mac_do(int id)
 		return SPP_RET_OK;
 
 	/* retrieve packets */
-	n_rx = spp_eth_rx_burst(clsd_data_rx->port, 0, rx_pkts, MAX_PKT_BURST);
+	n_rx = spp_eth_rx_burst(clsd_data_rx->ethdev_port_id, 0, rx_pkts,
+			MAX_PKT_BURST);
 	if (unlikely(n_rx == 0))
 		return SPP_RET_OK;
 
@@ -812,7 +812,7 @@ spp_classifier_get_component_status(
 	int i, nof_tx, nof_rx = 0;  /* Num of RX and TX ports. */
 	struct management_info *mng_info;
 	struct component_info *cmp_info;
-	struct classified_data *clsd_data;
+	struct cls_port_info *clsd_data;
 	struct sppwk_port_idx rx_ports[RTE_MAX_ETHPORTS];
 	struct sppwk_port_idx tx_ports[RTE_MAX_ETHPORTS];
 
@@ -861,7 +861,7 @@ mac_classification_iterate_table(
 		uint16_t vid,
 		struct mac_classifier *mac_cls,
 		__rte_unused struct component_info *cmp_info,
-		struct classified_data *clsd_data)
+		struct cls_port_info *clsd_data)
 {
 	int ret;
 	const void *key;
@@ -918,7 +918,7 @@ spp_classifier_mac_iterate_table(
 	int i, n;
 	struct management_info *mng_info;
 	struct component_info *cmp_info;
-	struct classified_data *clsd_data;
+	struct cls_port_info *clsd_data;
 
 	for (i = 0; i < RTE_MAX_LCORE; i++) {
 		mng_info = g_mng_infos + i;
-- 
2.17.1



------------------------------

Message: 2
Date: Mon, 24 Jun 2019 11:24:58 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 05/11] shared/sec: revise usage of term
	component_info
Message-ID: <20190624022504.18752-6-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Several types of `component`s and its attributes are defined as structs.
Some of instances of attributes of components are roughly named as
`component_info`, but it is confusing because it has no info which
type of component. This update is to fix the issue by revising the
names.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/shared/secondary/spp_worker_th/vf_deps.h |  9 +--
 src/vf/classifier_mac.c                      | 79 ++++++++++----------
 2 files changed, 42 insertions(+), 46 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 8085357..8364a13 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -32,13 +32,10 @@ struct cls_port_info {
 };
 
 /* classifier component information */
-struct component_info {
+struct cls_comp_info {
 	char name[STR_LEN_NAME];  /* component name */
 	int mac_addr_entry;  /* mac address entry flag */
-
-	/* mac address classification per vlan-id */
-	struct mac_classifier *mac_classifications[NOF_VLAN];
-
+	struct mac_classifier *mac_clfs[NOF_VLAN];  /* classifiers per VLAN. */
 	int n_classified_data_tx;  /* number of transmission ports */
 	struct cls_port_info classified_data_rx;  /* RX handled by cls */
 	/* transmission ports handled by classifier */
@@ -78,7 +75,7 @@ int spp_forward_update(struct sppwk_comp_info *component);
 
 void init_classifier_info(int component_id);
 
-void uninit_component_info(struct component_info *cmp_info);
+void uninit_component_info(struct cls_comp_info *cmp_info);
 
 int spp_classifier_mac_iterate_table(
 		struct spp_iterate_classifier_table_params *params);
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index b2388af..8edad6d 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -56,7 +56,7 @@
 /* classifier management information */
 struct management_info {
 	/* classifier information */
-	struct component_info cmp_infos[NOF_CLS_INFO];
+	struct cls_comp_info cmp_infos[NOF_CLS_INFO];
 
 	/* Reference index number for classifier information */
 	volatile int ref_index;
@@ -182,7 +182,7 @@ static void
 log_classification(
 		long clsd_idx,
 		struct rte_mbuf *pkt,
-		struct component_info *cmp_info,
+		struct cls_comp_info *cmp_info,
 		struct cls_port_info *clsd_data,
 		const char *func_name,
 		int line_num)
@@ -229,7 +229,7 @@ log_entry(
 		long clsd_idx,
 		uint16_t vid,
 		const char *mac_addr_str,
-		struct component_info *cmp_info,
+		struct cls_comp_info *cmp_info,
 		struct cls_port_info *clsd_data,
 		const char *func_name,
 		int line_num)
@@ -322,8 +322,8 @@ create_mac_classification(void)
 
 /* initialize classifier information. */
 static int
-init_component_info(struct component_info *cmp_info,
-		const struct sppwk_comp_info *component_info)
+init_component_info(struct cls_comp_info *cmp_info,
+		const struct sppwk_comp_info *wk_comp_info)
 {
 	int ret = SPP_RET_NG;
 	int i;
@@ -336,7 +336,7 @@ init_component_info(struct component_info *cmp_info,
 	uint16_t vid;
 
 	/* set rx */
-	if (component_info->nof_rx == 0) {
+	if (wk_comp_info->nof_rx == 0) {
 		clsd_data_rx->iface_type = UNDEF;
 		clsd_data_rx->iface_no = 0;
 		clsd_data_rx->iface_no_global = 0;
@@ -344,20 +344,20 @@ init_component_info(struct component_info *cmp_info,
 		clsd_data_rx->nof_pkts = 0;
 	} else {
 		clsd_data_rx->iface_type =
-			component_info->rx_ports[0]->iface_type;
+			wk_comp_info->rx_ports[0]->iface_type;
 		clsd_data_rx->iface_no = 0;
 		clsd_data_rx->iface_no_global =
-			component_info->rx_ports[0]->iface_no;
+			wk_comp_info->rx_ports[0]->iface_no;
 		clsd_data_rx->ethdev_port_id =
-			component_info->rx_ports[0]->ethdev_port_id;
+			wk_comp_info->rx_ports[0]->ethdev_port_id;
 		clsd_data_rx->nof_pkts = 0;
 	}
 
 	/* set tx */
-	cmp_info->n_classified_data_tx = component_info->nof_tx;
+	cmp_info->n_classified_data_tx = wk_comp_info->nof_tx;
 	cmp_info->mac_addr_entry = 0;
-	for (i = 0; i < component_info->nof_tx; i++) {
-		tx_port = component_info->tx_ports[i];
+	for (i = 0; i < wk_comp_info->nof_tx; i++) {
+		tx_port = wk_comp_info->tx_ports[i];
 		vid = tx_port->cls_attrs.vlantag.vid;
 
 		/* store ports information */
@@ -371,17 +371,16 @@ init_component_info(struct component_info *cmp_info,
 			continue;
 
 		/* if mac classification is NULL, make instance */
-		if (unlikely(cmp_info->mac_classifications[vid] == NULL)) {
+		if (unlikely(cmp_info->mac_clfs[vid] == NULL)) {
 			RTE_LOG(DEBUG, SPP_CLASSIFIER_MAC,
 					"Mac classification is not registered."
 					" create. vid=%hu\n", vid);
-			cmp_info->mac_classifications[vid] =
+			cmp_info->mac_clfs[vid] =
 					create_mac_classification();
-			if (unlikely(cmp_info->mac_classifications[vid] ==
-					NULL))
+			if (unlikely(cmp_info->mac_clfs[vid] == NULL))
 				return SPP_RET_NG;
 		}
-		mac_cls = cmp_info->mac_classifications[vid];
+		mac_cls = cmp_info->mac_clfs[vid];
 
 		/* store active tx_port that associate with mac address */
 		mac_cls->cls_ports[mac_cls->nof_cls_ports++] = i;
@@ -437,14 +436,14 @@ init_component_info(struct component_info *cmp_info,
 
 /* uninitialize classifier information. */
 void
-uninit_component_info(struct component_info *cmp_info)
+uninit_component_info(struct cls_comp_info *cmp_info)
 {
 	int i;
 
 	for (i = 0; i < NOF_VLAN; ++i)
-		free_mac_classification(cmp_info->mac_classifications[i]);
+		free_mac_classification(cmp_info->mac_clfs[i]);
 
-	memset(cmp_info, 0, sizeof(struct component_info));
+	memset(cmp_info, 0, sizeof(struct cls_comp_info));
 }
 
 /* transmit packet to one destination. */
@@ -473,7 +472,7 @@ transmit_packet(struct cls_port_info *clsd_data)
 
 /* transmit packet to one destination. */
 static inline void
-transmit_all_packet(struct component_info *cmp_info)
+transmit_all_packet(struct cls_comp_info *cmp_info)
 {
 	int i;
 	struct cls_port_info *clsd_data_tx = cmp_info->classified_data_tx;
@@ -514,11 +513,11 @@ push_packet(struct rte_mbuf *pkt, struct cls_port_info *clsd_data)
 
 /* get index of general default classified */
 static inline int
-get_general_default_classified_index(struct component_info *cmp_info)
+get_general_default_classified_index(struct cls_comp_info *cmp_info)
 {
 	struct mac_classifier *mac_cls;
 
-	mac_cls = cmp_info->mac_classifications[VLAN_UNTAGGED_VID];
+	mac_cls = cmp_info->mac_clfs[VLAN_UNTAGGED_VID];
 	if (unlikely(mac_cls == NULL)) {
 		LOG_DBG(cmp_info->name, "Untagged's default is not set. "
 				"vid=%d\n", (int)VLAN_UNTAGGED_VID);
@@ -531,7 +530,7 @@ get_general_default_classified_index(struct component_info *cmp_info)
 /* handle L2 multicast(include broadcast) packet */
 static inline void
 handle_l2multicast_packet(struct rte_mbuf *pkt,
-		struct component_info *cmp_info,
+		struct cls_comp_info *cmp_info,
 		struct cls_port_info *clsd_data)
 {
 	int i;
@@ -541,7 +540,7 @@ handle_l2multicast_packet(struct rte_mbuf *pkt,
 	int n_act_clsd;
 
 	/* select mac address classification by vid */
-	mac_cls = cmp_info->mac_classifications[vid];
+	mac_cls = cmp_info->mac_clfs[vid];
 	if (unlikely(mac_cls == NULL ||
 			mac_cls->nof_cls_ports == 0)) {
 		/* specific vlan is not registered
@@ -583,7 +582,7 @@ handle_l2multicast_packet(struct rte_mbuf *pkt,
 /* select index of classified */
 static inline int
 select_classified_index(const struct rte_mbuf *pkt,
-		struct component_info *cmp_info)
+		struct cls_comp_info *cmp_info)
 {
 	int ret;
 	struct ether_hdr *eth;
@@ -595,7 +594,7 @@ select_classified_index(const struct rte_mbuf *pkt,
 	vid = get_vid(pkt);
 
 	/* select mac address classification by vid */
-	mac_cls = cmp_info->mac_classifications[vid];
+	mac_cls = cmp_info->mac_clfs[vid];
 	if (unlikely(mac_cls == NULL)) {
 		LOG_DBG(cmp_info->name, "Mac classification is not "
 				"registered. vid=%hu\n", vid);
@@ -638,7 +637,7 @@ select_classified_index(const struct rte_mbuf *pkt,
  */
 static inline void
 classify_packet(struct rte_mbuf **rx_pkts, uint16_t n_rx,
-		struct component_info *cmp_info,
+		struct cls_comp_info *cmp_info,
 		struct cls_port_info *clsd_data)
 {
 	int i;
@@ -697,12 +696,12 @@ spp_classifier_mac_init(void)
 
 /* classifier(mac address) update component info. */
 int
-spp_classifier_mac_update(struct sppwk_comp_info *component_info)
+spp_classifier_mac_update(struct sppwk_comp_info *wk_comp_info)
 {
 	int ret = SPP_RET_NG;
-	int id = component_info->comp_id;
+	int id = wk_comp_info->comp_id;
 	struct management_info *mng_info = g_mng_infos + id;
-	struct component_info *cmp_info = NULL;
+	struct cls_comp_info *cmp_info = NULL;
 
 	RTE_LOG(INFO, SPP_CLASSIFIER_MAC,
 			"Component[%u] Start update component.\n", id);
@@ -710,13 +709,13 @@ spp_classifier_mac_update(struct sppwk_comp_info *component_info)
 	cmp_info = mng_info->cmp_infos + mng_info->upd_index;
 
 	/* initialize update side classifier information */
-	ret = init_component_info(cmp_info, component_info);
+	ret = init_component_info(cmp_info, wk_comp_info);
 	if (unlikely(ret != SPP_RET_OK)) {
 		RTE_LOG(ERR, SPP_CLASSIFIER_MAC,
 				"Cannot update classifier mac. ret=%d\n", ret);
 		return ret;
 	}
-	memcpy(cmp_info->name, component_info->name, STR_LEN_NAME);
+	memcpy(cmp_info->name, wk_comp_info->name, STR_LEN_NAME);
 
 	/* change index of reference side */
 	mng_info->upd_index = mng_info->ref_index;
@@ -743,7 +742,7 @@ spp_classifier_mac_do(int id)
 	int i;
 	int n_rx;
 	struct management_info *mng_info = g_mng_infos + id;
-	struct component_info *cmp_info = NULL;
+	struct cls_comp_info *cmp_info = NULL;
 	struct rte_mbuf *rx_pkts[MAX_PKT_BURST];
 
 	struct cls_port_info *clsd_data_rx = NULL;
@@ -811,7 +810,7 @@ spp_classifier_get_component_status(
 	int ret = SPP_RET_NG;
 	int i, nof_tx, nof_rx = 0;  /* Num of RX and TX ports. */
 	struct management_info *mng_info;
-	struct component_info *cmp_info;
+	struct cls_comp_info *cmp_info;
 	struct cls_port_info *clsd_data;
 	struct sppwk_port_idx rx_ports[RTE_MAX_ETHPORTS];
 	struct sppwk_port_idx tx_ports[RTE_MAX_ETHPORTS];
@@ -860,7 +859,7 @@ mac_classification_iterate_table(
 		struct spp_iterate_classifier_table_params *params,
 		uint16_t vid,
 		struct mac_classifier *mac_cls,
-		__rte_unused struct component_info *cmp_info,
+		__rte_unused struct cls_comp_info *cmp_info,
 		struct cls_port_info *clsd_data)
 {
 	int ret;
@@ -917,7 +916,7 @@ spp_classifier_mac_iterate_table(
 {
 	int i, n;
 	struct management_info *mng_info;
-	struct component_info *cmp_info;
+	struct cls_comp_info *cmp_info;
 	struct cls_port_info *clsd_data;
 
 	for (i = 0; i < RTE_MAX_LCORE; i++) {
@@ -932,12 +931,12 @@ spp_classifier_mac_iterate_table(
 			"Core[%u] Start iterate classifier table.\n", i);
 
 		for (n = 0; n < NOF_VLAN; ++n) {
-			if (cmp_info->mac_classifications[n] == NULL)
+			if (cmp_info->mac_clfs[n] == NULL)
 				continue;
 
 			mac_classification_iterate_table(params, (uint16_t) n,
-					cmp_info->mac_classifications[n],
-					cmp_info, clsd_data);
+					cmp_info->mac_clfs[n], cmp_info,
+					clsd_data);
 		}
 	}
 
-- 
2.17.1



------------------------------

Message: 3
Date: Mon, 24 Jun 2019 11:24:59 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 06/11] shared/sec: revise members of struct
	cls_port_info
Message-ID: <20190624022504.18752-7-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

To refactor, revise members of struct `cls_port_info` in which struct
of information of port is name as "classified data" and it is not
describing the feature.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/shared/secondary/spp_worker_th/vf_deps.h | 10 +--
 src/vf/classifier_mac.c                      | 65 ++++++++++----------
 2 files changed, 37 insertions(+), 38 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 8364a13..79e2abb 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -20,7 +20,7 @@ struct mac_classifier {
 	int default_cls_idx;  /* Default index for classification. */
 };
 
-/* Set of attirbutes of port for classification.  */
+/* Attirbutes of port for classification. */
 /* TODO(yasufum) confirm what is `iface_no_global`. */
 struct cls_port_info {
 	enum port_type iface_type;
@@ -36,10 +36,10 @@ struct cls_comp_info {
 	char name[STR_LEN_NAME];  /* component name */
 	int mac_addr_entry;  /* mac address entry flag */
 	struct mac_classifier *mac_clfs[NOF_VLAN];  /* classifiers per VLAN. */
-	int n_classified_data_tx;  /* number of transmission ports */
-	struct cls_port_info classified_data_rx;  /* RX handled by cls */
-	/* transmission ports handled by classifier */
-	struct cls_port_info classified_data_tx[RTE_MAX_ETHPORTS];
+	int nof_tx_ports;  /* Number of TX ports info entries. */
+	/* Classifier has one RX port and several TX ports. */
+	struct cls_port_info rx_port_i;  /* RX port info classified. */
+	struct cls_port_info tx_ports_i[RTE_MAX_ETHPORTS];  /* TX info. */
 };
 
 /* free mac classification instance. */
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 8edad6d..4213372 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -330,42 +330,43 @@ init_component_info(struct cls_comp_info *cmp_info,
 	struct mac_classifier *mac_cls;
 	struct ether_addr eth_addr;
 	char mac_addr_str[ETHER_ADDR_STR_BUF_SZ];
-	struct cls_port_info *clsd_data_rx = &cmp_info->classified_data_rx;
-	struct cls_port_info *clsd_data_tx = cmp_info->classified_data_tx;
+	/* Classifier has one RX port and several TX ports. */
+	struct cls_port_info *cls_rx_port_info = &cmp_info->rx_port_i;
+	struct cls_port_info *cls_tx_ports_info = cmp_info->tx_ports_i;
 	struct sppwk_port_info *tx_port = NULL;
 	uint16_t vid;
 
 	/* set rx */
 	if (wk_comp_info->nof_rx == 0) {
-		clsd_data_rx->iface_type = UNDEF;
-		clsd_data_rx->iface_no = 0;
-		clsd_data_rx->iface_no_global = 0;
-		clsd_data_rx->ethdev_port_id = 0;
-		clsd_data_rx->nof_pkts = 0;
+		cls_rx_port_info->iface_type = UNDEF;
+		cls_rx_port_info->iface_no = 0;
+		cls_rx_port_info->iface_no_global = 0;
+		cls_rx_port_info->ethdev_port_id = 0;
+		cls_rx_port_info->nof_pkts = 0;
 	} else {
-		clsd_data_rx->iface_type =
+		cls_rx_port_info->iface_type =
 			wk_comp_info->rx_ports[0]->iface_type;
-		clsd_data_rx->iface_no = 0;
-		clsd_data_rx->iface_no_global =
+		cls_rx_port_info->iface_no = 0;
+		cls_rx_port_info->iface_no_global =
 			wk_comp_info->rx_ports[0]->iface_no;
-		clsd_data_rx->ethdev_port_id =
+		cls_rx_port_info->ethdev_port_id =
 			wk_comp_info->rx_ports[0]->ethdev_port_id;
-		clsd_data_rx->nof_pkts = 0;
+		cls_rx_port_info->nof_pkts = 0;
 	}
 
 	/* set tx */
-	cmp_info->n_classified_data_tx = wk_comp_info->nof_tx;
+	cmp_info->nof_tx_ports = wk_comp_info->nof_tx;
 	cmp_info->mac_addr_entry = 0;
 	for (i = 0; i < wk_comp_info->nof_tx; i++) {
 		tx_port = wk_comp_info->tx_ports[i];
 		vid = tx_port->cls_attrs.vlantag.vid;
 
 		/* store ports information */
-		clsd_data_tx[i].iface_type = tx_port->iface_type;
-		clsd_data_tx[i].iface_no = i;
-		clsd_data_tx[i].iface_no_global = tx_port->iface_no;
-		clsd_data_tx[i].ethdev_port_id = tx_port->ethdev_port_id;
-		clsd_data_tx[i].nof_pkts = 0;
+		cls_tx_ports_info[i].iface_type = tx_port->iface_type;
+		cls_tx_ports_info[i].iface_no = i;
+		cls_tx_ports_info[i].iface_no_global = tx_port->iface_no;
+		cls_tx_ports_info[i].ethdev_port_id = tx_port->ethdev_port_id;
+		cls_tx_ports_info[i].nof_pkts = 0;
 
 		if (tx_port->cls_attrs.mac_addr == 0)
 			continue;
@@ -475,9 +476,9 @@ static inline void
 transmit_all_packet(struct cls_comp_info *cmp_info)
 {
 	int i;
-	struct cls_port_info *clsd_data_tx = cmp_info->classified_data_tx;
+	struct cls_port_info *clsd_data_tx = cmp_info->tx_ports_i;
 
-	for (i = 0; i < cmp_info->n_classified_data_tx; i++) {
+	for (i = 0; i < cmp_info->nof_tx_ports; i++) {
 		if (unlikely(clsd_data_tx[i].nof_pkts != 0)) {
 			RTE_LOG(INFO, SPP_CLASSIFIER_MAC,
 					"transmit all packets (drain). "
@@ -756,8 +757,8 @@ spp_classifier_mac_do(int id)
 	change_classifier_index(mng_info, id);
 
 	cmp_info = mng_info->cmp_infos + mng_info->ref_index;
-	clsd_data_rx = &cmp_info->classified_data_rx;
-	clsd_data_tx = cmp_info->classified_data_tx;
+	clsd_data_rx = &cmp_info->rx_port_i;
+	clsd_data_tx = cmp_info->tx_ports_i;
 
 	/**
 	 * decide classifier information of the current cycle If at least,
@@ -765,14 +766,14 @@ spp_classifier_mac_do(int id)
 	 * classifying. If not, stop classifying.
 	 */
 	if (!(clsd_data_rx->iface_type != UNDEF &&
-			cmp_info->n_classified_data_tx >= 1 &&
-				cmp_info->mac_addr_entry == 1))
+			cmp_info->nof_tx_ports >= 1 &&
+			cmp_info->mac_addr_entry == 1))
 		return SPP_RET_OK;
 
 	/* drain tx packets, if buffer is not filled for interval */
 	cur_tsc = rte_rdtsc();
 	if (unlikely(cur_tsc - prev_tsc > drain_tsc)) {
-		for (i = 0; i < cmp_info->n_classified_data_tx; i++) {
+		for (i = 0; i < cmp_info->nof_tx_ports; i++) {
 			if (likely(clsd_data_tx[i].nof_pkts == 0))
 				continue;
 
@@ -825,19 +826,17 @@ spp_classifier_get_component_status(
 	}
 
 	cmp_info = mng_info->cmp_infos + mng_info->ref_index;
-	clsd_data = cmp_info->classified_data_tx;
+	clsd_data = cmp_info->tx_ports_i;
 
 	memset(rx_ports, 0x00, sizeof(rx_ports));
-	if (cmp_info->classified_data_rx.iface_type != UNDEF) {
+	if (cmp_info->rx_port_i.iface_type != UNDEF) {
 		nof_rx = 1;
-		rx_ports[0].iface_type = cmp_info->
-				classified_data_rx.iface_type;
-		rx_ports[0].iface_no   = cmp_info->
-				classified_data_rx.iface_no_global;
+		rx_ports[0].iface_type = cmp_info->rx_port_i.iface_type;
+		rx_ports[0].iface_no = cmp_info->rx_port_i.iface_no_global;
 	}
 
 	memset(tx_ports, 0x00, sizeof(tx_ports));
-	nof_tx = cmp_info->n_classified_data_tx;
+	nof_tx = cmp_info->nof_tx_ports;
 	for (i = 0; i < nof_tx; i++) {
 		tx_ports[i].iface_type = clsd_data[i].iface_type;
 		tx_ports[i].iface_no   = clsd_data[i].iface_no_global;
@@ -925,7 +924,7 @@ spp_classifier_mac_iterate_table(
 			continue;
 
 		cmp_info = mng_info->cmp_infos + mng_info->ref_index;
-		clsd_data = cmp_info->classified_data_tx;
+		clsd_data = cmp_info->tx_ports_i;
 
 		RTE_LOG(DEBUG, SPP_CLASSIFIER_MAC,
 			"Core[%u] Start iterate classifier table.\n", i);
-- 
2.17.1



End of spp Digest, Vol 31, Issue 5
**********************************


From yasufum.o@gmail.com Mon Jun 24 11:25:01 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd106.ddreams.local
 (zssg-mailmd106.ddreams.local [10.160.123.101])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL00UMJ02Z8Y40@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:25:47 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd106.ddreams.local by
 zssg-mailmd106.ddreams.local (dDREAMS) id <0PTL0050O02ZI100@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:47 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd106.ddreams.local
 (dDREAMS) with ESMTP id <0PTL010V802YJ7A0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:47 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id 8857A7E603C	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:47 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 871238E605E	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:47 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 8555B8E6056	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:47 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 5B4908E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:46 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:46 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Pkw0013654;	Mon,
 24 Jun 2019 11:25:46 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2PkKY013653;	Mon, 24 Jun 2019 11:25:46 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2PjNe013650	for unknown; Mon,
 24 Jun 2019 11:25:46 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PjEx006108 for
 unknown; Mon, 24 Jun 2019 11:25:45 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PjJ1006105; Mon,
 24 Jun 2019 11:25:45 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Pj4q016524;	Mon,
 24 Jun 2019 11:25:45 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O2Pjiu016520	for unknown; Mon, 24 Jun 2019 11:25:45 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PjOZ006706 for
 unknown; Mon, 24 Jun 2019 11:25:45 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PjJI006700 for
 unknown; Mon, 24 Jun 2019 11:25:45 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2PcGa003942	for unknown; Mon,
 24 Jun 2019 11:25:44 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 0C3B61BF73;	Mon, 24 Jun 2019 04:25:38 +0200 (CEST)
Received: from mail-pf1-f193.google.com
 (mail-pf1-f193.google.com [209.85.210.193]) by dpdk.org (Postfix)
 with ESMTP id 2D5591BF51 for <spp@dpdk.org>; Mon,
 24 Jun 2019 04:25:37 +0200 (CEST)
Received: by mail-pf1-f193.google.com with SMTP id y15so1956357pfn.5 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 19:25:37 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id a3sm9927461pje.3.2019.06.23.19.25.35
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 19:25:35 -0700 (PDT)
Date: Mon, 24 Jun 2019 11:25:01 +0900
From: yasufum.o@gmail.com
Subject: [spp 04368] [spp] [PATCH 08/11] shared/sec: refactor updating
 classifier info
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624022504.18752-9-yasufum.o@gmail.com>
In-reply-to: <20190624022504.18752-1-yasufum.o@gmail.com>
References: <20190624022504.18752-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04368
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=rEIEj9hI3VSXmN54D4SKtLK0P55uZIsURWp/zUdb8+o=;
 b=J/WIRw5/wUbuqKp43QGvKoyuFLWzaJav3/X4aR/8obcT9lKpf2BJK4zqJAlO/siNTD
 /La84IKdkOH6LJGj4hFZyI3DGgVdbm4ai5qXyWCpsN4plm7kPL6dwYhC2/2qotB5LIwe
 J9dNMODVk7bnnF77MWlpr3yUg9PBr1Oy8tG+DiwWzk5MuogJoCstnmSzDWQyNESDTQY3
 CiCQQBGpLUCncwNgAzlxoiqQtJaDDmqxOf/B9U9UGVaIuv0Jrt/TXSdUMyazHgmyEMU4
 9W3hTB/iasgGqeUX6wnm/AxlNczzc7roNFrivu5MUbVXkYAjA++KZTgLfH3w6DyDjETD 6Y2Q==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=rEIEj9hI3VSXmN54D4SKtLK0P55uZIsURWp/zUdb8+o=;
 b=B8x8ZhoOSVTVpDgIfR73nCZisCyCYDV2i0oUjfCrliblLWKVYEE5zpT5nKdddeeuyP
 sojluGQ6plozUuaiR6gRJYEOl321UX7o+SXbGRm1ke7c3Ls9m9vgcYYsSCvllc2Z4zhP
 89DibBDLPaFzYHTxBWvNd2BZmFT/1ZXnHN18vy7Ni7kYATtkR/ZV+XuU74w2D7//uDpG
 /c9T7SFLPUAUUr888YeKUOBqBwlvaphtyb+t3fj6FlXl07N5CWK///YJVRk3ABg8wz1R
 +Zf7D6w3P0pqlt8VN4pNQ4vaKikrjDvzKDiQWNPTVo5wVOPQ1CLBJ79puRCtfdhJMYzj 0Tsg==
X-Gm-Message-State: APjAAAXmisf0flVViPL0bR8+bu16EpQ60Woj7NzrVqhY8JDnFK2yJhke
 4NhGAhh/83bP9maCI/Oau3Vl/2dE
X-Google-Smtp-Source:
 APXvYqz03HdhEnpL5/CsyxSdDZQfvUVhLOiqU8VX4WRbzcK5jvGZCz9pFuiTBx4eSw09DJEGA0LS5Q==
X-Received: by 2002:a17:90a:35e5:: with SMTP id
 r92mr22325404pjb.34.1561343136233; Sun, 23 Jun 2019 19:25:36 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 92
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Rename spp_classifier_mac_update() to update_classifier(), and revise
names of vars and log messages in the function for refactoring.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/cmd_utils.c       |  2 +-
 src/shared/secondary/spp_worker_th/vf_deps.h  |  2 +-
 src/vf/classifier_mac.c                       | 23 ++++++++++---------
 3 files changed, 14 insertions(+), 13 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index ae6be1a..d5faa35 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -891,7 +891,7 @@ update_comp_info(void)
 
 #ifdef SPP_VF_MODULE
 		if (comp_info->wk_type == SPPWK_TYPE_CLS)
-			ret = spp_classifier_mac_update(comp_info);
+			ret = update_classifier(comp_info);
 		else
 			ret = spp_forward_update(comp_info);
 #endif /* SPP_VF_MODULE */
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 9b59b3d..8d3cd81 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -60,7 +60,7 @@ free_mac_classifier(struct mac_classifier *mac_clf)
  * @retval SPP_RET_OK If succeeded.
  * @retval SPP_RET_NG If failed.
  */
-int spp_classifier_mac_update(struct sppwk_comp_info *comp_info);
+int update_classifier(struct sppwk_comp_info *comp_info);
 
 /**
  * Update forwarder info.
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 232ed19..f6074e4 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -695,26 +695,27 @@ spp_classifier_mac_init(void)
 
 /* classifier(mac address) update component info. */
 int
-spp_classifier_mac_update(struct sppwk_comp_info *wk_comp_info)
+update_classifier(struct sppwk_comp_info *wk_comp_info)
 {
-	int ret = SPP_RET_NG;
-	int id = wk_comp_info->comp_id;
-	struct management_info *mng_info = g_mng_infos + id;
-	struct cls_comp_info *cmp_info = NULL;
+	int ret;
+	int wk_id = wk_comp_info->comp_id;
+	struct management_info *mng_info = g_mng_infos + wk_id;
+	struct cls_comp_info *cls_info = NULL;
 
 	RTE_LOG(INFO, SPP_CLASSIFIER_MAC,
-			"Component[%u] Start update component.\n", id);
+			"Start updating classifier, id=%u.\n", wk_id);
 
-	cmp_info = mng_info->cmp_infos + mng_info->upd_index;
+	/* TODO(yasufum) rename `infos`. */
+	cls_info = mng_info->cmp_infos + mng_info->upd_index;
 
 	/* initialize update side classifier information */
-	ret = init_component_info(cmp_info, wk_comp_info);
+	ret = init_component_info(cls_info, wk_comp_info);
 	if (unlikely(ret != SPP_RET_OK)) {
 		RTE_LOG(ERR, SPP_CLASSIFIER_MAC,
-				"Cannot update classifier mac. ret=%d\n", ret);
+				"Cannot update classifier, ret=%d.\n", ret);
 		return ret;
 	}
-	memcpy(cmp_info->name, wk_comp_info->name, STR_LEN_NAME);
+	memcpy(cls_info->name, wk_comp_info->name, STR_LEN_NAME);
 
 	/* change index of reference side */
 	mng_info->upd_index = mng_info->ref_index;
@@ -729,7 +730,7 @@ spp_classifier_mac_update(struct sppwk_comp_info *wk_comp_info)
 	uninit_component_info(mng_info->cmp_infos + mng_info->upd_index);
 
 	RTE_LOG(INFO, SPP_CLASSIFIER_MAC,
-			"Component[%u] Complete update component.\n", id);
+			"Done update classifier, id=%u.\n", wk_id);
 
 	return SPP_RET_OK;
 }
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 11:25:02 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00UND0318Y40@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:25:49 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTL00Z3Q0315T00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:49 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00V28031YD20@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:49 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id C22B87E603C	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:49 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id C0F528E6061	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:49 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id BF5858E606B	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:49 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 470728E605C	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:49 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:49 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PnVo013664;	Mon,
 24 Jun 2019 11:25:49 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2PnKF013663;	Mon, 24 Jun 2019 11:25:49 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2PmMS013660	for unknown; Mon,
 24 Jun 2019 11:25:48 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PmvX006127 for
 unknown; Mon, 24 Jun 2019 11:25:48 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PmCl006120; Mon,
 24 Jun 2019 11:25:48 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PmDC016531;	Mon,
 24 Jun 2019 11:25:48 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O2Pmvi016527	for unknown; Mon, 24 Jun 2019 11:25:48 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PmWM006736 for
 unknown; Mon, 24 Jun 2019 11:25:48 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Pmjf006730 for
 unknown; Mon, 24 Jun 2019 11:25:48 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2Pfj9003966	for unknown; Mon,
 24 Jun 2019 11:25:47 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 1B0F91BF54;	Mon, 24 Jun 2019 04:25:41 +0200 (CEST)
Received: from mail-pl1-f194.google.com
 (mail-pl1-f194.google.com [209.85.214.194]) by dpdk.org (Postfix)
 with ESMTP id EF5F81BF54 for <spp@dpdk.org>; Mon,
 24 Jun 2019 04:25:39 +0200 (CEST)
Received: by mail-pl1-f194.google.com with SMTP id bi6so5980798plb.12 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 19:25:39 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id a3sm9927461pje.3.2019.06.23.19.25.37
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 19:25:38 -0700 (PDT)
Date: Mon, 24 Jun 2019 11:25:02 +0900
From: yasufum.o@gmail.com
Subject: [spp 04369] [spp] [PATCH 09/11] shared/sec: refactor updating forwarder
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624022504.18752-10-yasufum.o@gmail.com>
In-reply-to: <20190624022504.18752-1-yasufum.o@gmail.com>
References: <20190624022504.18752-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04369
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=LD2bq3PQO9vhFNcCmJlOiuJO4oMEGMm9R5UzRR+GZNA=;
 b=IKj2i9yEiiWiqBRAn1Y2NgC/vfodtIEKbiyVe0sbtEWbemIHKTyF6om9Bt/up66iJC
 4p3zRlnH1+MlW9aWSfsmzr0aLjTVHC+wzeo7LRxZVxZGZ4PEyF6MNwlQEkFRl6UJK31O
 +gflsT/GdZVtuZVzIj7qQdhqCuCnCl/T/Lsw6gsqaZOKvIFokX55lSLnxbwuAuE33n7N
 5GT/LN1ym/7UKayRN4M7iBPN/QThWbJEWrdp76xoZTWY/95muT6d3IQAJVZtfvrJ3WCU
 4ViFSmB/o1MBnLjNM7yzGdnLxd2VU1u82M5KYxS7hk0v4So+3BQikY8zNTvU2oJjiyWJ wiEA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=LD2bq3PQO9vhFNcCmJlOiuJO4oMEGMm9R5UzRR+GZNA=;
 b=pqDOY3kvHhte87qmM0eGrsayrcDLFn6jmP5tCpmfcOTzqcGPuE/T8er21F8JNcW38c
 1/r496JD2t93THk+cCf1R3lPzmtDUKPk0NaLqqLCZGSRanekt6nQhEnl0ga/dE34PMcS
 bwEjfw8bhBjbfyHWx/mm2JgLMlKiGGycxGdhneRtF/rPqXeWQ5xsPEwraLWipd/qJlxg
 MCDqbwaVAv8bB9B8zV5RF6TrwSOBSEKsdLV5a2p6nELmHQjrw0/26v1DudkVisH+F/8p
 pzn/s/KnHraTYw5F4j2hZQYt59YLmSO7PfKz/aUpehJ/5KOqE61w5WCN/wlBG1Y/fj5W oIPg==
X-Gm-Message-State: APjAAAX4kKtuubO35Z2Wtix4AC2Rd4RrbDTSn1IRHP79wYr555FdUxtR
 nsatlKjnnQM4dXdjGhOr58EZT7wJ
X-Google-Smtp-Source:
 APXvYqz3KPR9XIDVo4H+60pChruyGcWpet7LYTUO6SS8NujYgccSOTEX/Ns00xOiFLxFOaPXt23nHA==
X-Received: by 2002:a17:902:2f:: with SMTP id 44mr84526209pla.5.1561343139100;
 Sun, 23 Jun 2019 19:25:39 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 161
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Rename spp_forward_update() to update_forwarder(), and revise
vars and log messages for refactoring.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/cmd_utils.c       |  2 +-
 src/shared/secondary/spp_worker_th/vf_deps.h  |  6 +-
 src/vf/spp_forward.c                          | 70 +++++++++----------
 3 files changed, 39 insertions(+), 39 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index d5faa35..709c3da 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -893,7 +893,7 @@ update_comp_info(void)
 		if (comp_info->wk_type == SPPWK_TYPE_CLS)
 			ret = update_classifier(comp_info);
 		else
-			ret = spp_forward_update(comp_info);
+			ret = update_forwarder(comp_info);
 #endif /* SPP_VF_MODULE */
 
 #ifdef SPP_MIRROR_MODULE
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 8d3cd81..3ae4fc9 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -54,13 +54,13 @@ free_mac_classifier(struct mac_classifier *mac_clf)
 }
 
 /**
- * classifier(mac address) update component info.
+ * Update classifier info.
  *
  * @param comp_info Pointer to internal data of classifier.
  * @retval SPP_RET_OK If succeeded.
  * @retval SPP_RET_NG If failed.
  */
-int update_classifier(struct sppwk_comp_info *comp_info);
+int update_classifier(struct sppwk_comp_info *wk_comp_info);
 
 /**
  * Update forwarder info.
@@ -69,7 +69,7 @@ int update_classifier(struct sppwk_comp_info *comp_info);
  * @retval SPP_RET_OK If succeeded.
  * @retval SPP_RET_NG If failed.
  */
-int spp_forward_update(struct sppwk_comp_info *component);
+int update_forwarder(struct sppwk_comp_info *wk_comp_info);
 
 void init_classifier_info(int component_id);
 
diff --git a/src/vf/spp_forward.c b/src/vf/spp_forward.c
index 909f084..7746d40 100644
--- a/src/vf/spp_forward.c
+++ b/src/vf/spp_forward.c
@@ -51,64 +51,64 @@ spp_forward_init(void)
 
 /* Update forward info */
 int
-spp_forward_update(struct sppwk_comp_info *component)
+update_forwarder(struct sppwk_comp_info *comp_info)
 {
 	int cnt = 0;
-	int nof_rx = component->nof_rx;
-	int nof_tx = component->nof_tx;
+	int nof_rx = comp_info->nof_rx;
+	int nof_tx = comp_info->nof_tx;
 	int max = (nof_rx > nof_tx)?nof_rx*nof_tx:nof_tx;
-	struct forward_info *info = &g_forward_info[component->comp_id];
-	struct forward_path *path = &info->path[info->upd_index];
-
-	/* Forward component allows only one receiving port. */
-	if ((component->wk_type == SPPWK_TYPE_FWD) &&
+	struct forward_info *fwd_info = &g_forward_info[comp_info->comp_id];
+	/* TODO(yasufum) rename `path` of struct forward_path. */
+	struct forward_path *fwd_path = &fwd_info->path[fwd_info->upd_index];
+
+	/**
+	 * Check num of RX and TX ports because forwarder has just a set of
+	 * RX and TX.
+	 */
+	if ((comp_info->wk_type == SPPWK_TYPE_FWD) &&
 			unlikely(nof_rx > 1)) {
 		RTE_LOG(ERR, FORWARD,
-			"Component[%d] Setting error. (type = %d, rx = %d)\n",
-			component->comp_id, component->wk_type, nof_rx);
+			"Invalid forwarder type or num of RX ports "
+			"(id=%d, type=%d, nof_rx=%d).\n",
+			comp_info->comp_id, comp_info->wk_type, nof_rx);
 		return SPP_RET_NG;
 	}
-
-	/* Component allows only one transmit port. */
 	if (unlikely(nof_tx != 0) && unlikely(nof_tx != 1)) {
 		RTE_LOG(ERR, FORWARD,
-			"Component[%d] Setting error. (type = %d, tx = %d)\n",
-			component->comp_id, component->wk_type, nof_tx);
+			"Invalid forwarder type or num of TX ports "
+			"(id=%d, type=%d, nof_tx=%d).\n",
+			comp_info->comp_id, comp_info->wk_type, nof_tx);
 		return SPP_RET_NG;
 	}
 
-	memset(path, 0x00, sizeof(struct forward_path));
+	memset(fwd_path, 0x00, sizeof(struct forward_path));
 
 	RTE_LOG(INFO, FORWARD,
-			"Component[%d] Start update component. "
-			"(name = %s, type = %d)\n",
-			component->comp_id,
-			component->name,
-			component->wk_type);
-
-	memcpy(&path->name, component->name, STR_LEN_NAME);
-	path->wk_type = component->wk_type;
-	path->num_rx = component->nof_rx;
-	path->num_tx = component->nof_tx;
+			"Start updating forwarder (id=%d, name=%s, type=%d)\n",
+			comp_info->comp_id, comp_info->name,
+			comp_info->wk_type);
+
+	memcpy(&fwd_path->name, comp_info->name, STR_LEN_NAME);
+	fwd_path->wk_type = comp_info->wk_type;
+	fwd_path->num_rx = comp_info->nof_rx;
+	fwd_path->num_tx = comp_info->nof_tx;
 	for (cnt = 0; cnt < nof_rx; cnt++)
-		memcpy(&path->ports[cnt].rx, component->rx_ports[cnt],
+		memcpy(&fwd_path->ports[cnt].rx, comp_info->rx_ports[cnt],
 				sizeof(struct sppwk_port_info));
 
-	/* Transmit port is set according with larger nof_rx / nof_tx. */
+	/* TX port is set according with larger nof_rx / nof_tx. */
 	for (cnt = 0; cnt < max; cnt++)
-		memcpy(&path->ports[cnt].tx, component->tx_ports[0],
+		memcpy(&fwd_path->ports[cnt].tx, comp_info->tx_ports[0],
 				sizeof(struct sppwk_port_info));
 
-	info->upd_index = info->ref_index;
-	while (likely(info->ref_index == info->upd_index))
+	fwd_info->upd_index = fwd_info->ref_index;
+	while (likely(fwd_info->ref_index == fwd_info->upd_index))
 		rte_delay_us_block(SPP_CHANGE_UPDATE_INTERVAL);
 
 	RTE_LOG(INFO, FORWARD,
-			"Component[%d] Complete update component. "
-			"(name = %s, type = %d)\n",
-			component->comp_id,
-			component->name,
-			component->wk_type);
+			"Done update forwarder. (id=%d, name=%s, type=%d)\n",
+			comp_info->comp_id, comp_info->name,
+			comp_info->wk_type);
 
 	return SPP_RET_OK;
 }
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 11:25:03 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd105.ddreams.local
 (zssg-mailmd105.ddreams.local [10.160.123.100])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL00UOB0358Y40@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:25:53 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd105.ddreams.local by
 zssg-mailmd105.ddreams.local (dDREAMS) id <0PTL00M3W0355H00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:53 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd105.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00HQ3035YD20@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:53 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id 2ECB07E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:53 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 2CEA88E605D	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:53 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 21CE08E6050	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:53 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 6E13D8E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:52 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:52 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Pqs6013680;	Mon,
 24 Jun 2019 11:25:52 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2PqiU013679;	Mon, 24 Jun 2019 11:25:52 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2Pq01013676	for unknown; Mon,
 24 Jun 2019 11:25:52 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PpB1006159 for
 unknown; Mon, 24 Jun 2019 11:25:51 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PpiM006156; Mon,
 24 Jun 2019 11:25:51 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PpC8016552;	Mon,
 24 Jun 2019 11:25:51 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O2PpJa016548	for unknown; Mon, 24 Jun 2019 11:25:51 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PpoC006800 for
 unknown; Mon, 24 Jun 2019 11:25:51 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PpAZ006794 for
 unknown; Mon, 24 Jun 2019 11:25:51 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2Pil4003992	for unknown; Mon,
 24 Jun 2019 11:25:50 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 2AB291BF6C;	Mon, 24 Jun 2019 04:25:44 +0200 (CEST)
Received: from mail-pl1-f193.google.com
 (mail-pl1-f193.google.com [209.85.214.193]) by dpdk.org (Postfix)
 with ESMTP id AD5A41BF6C for <spp@dpdk.org>; Mon,
 24 Jun 2019 04:25:42 +0200 (CEST)
Received: by mail-pl1-f193.google.com with SMTP id c14so5992985plo.0 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 19:25:42 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id a3sm9927461pje.3.2019.06.23.19.25.40
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 19:25:41 -0700 (PDT)
Date: Mon, 24 Jun 2019 11:25:03 +0900
From: yasufum.o@gmail.com
Subject: [spp 04370] [spp] [PATCH 10/11] shared/sec: refactor getting
 classifier status
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624022504.18752-11-yasufum.o@gmail.com>
In-reply-to: <20190624022504.18752-1-yasufum.o@gmail.com>
References: <20190624022504.18752-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04370
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=yxUDLMdHdJZYQp4XOIx9bJ43ha1C5VoVDA6xdJ5f/LY=;
 b=FhpXWiHCNW5Coj8cD+sz4FDuRwD+LEs1k55Nwu4osj5LsFMsjU+emxoqFQxtUzFl63
 3md9Y4gaGj8wAUSA6hg73Znt5Yq4Mu9zSF3yuaLkOtJ9IEWf9hn3tKnCLR5eFp94s0Mk
 DqO/TjQXcxO1d+2hoHJe1WfCSRZ73aG5OArs9jc2ScHKxTcr1eoACiKD66uu1xzCOWZB
 bxZvfnaeiW7ZQR4NURPGin7zMb1Y7wl5Ut3oaH825Sw/Se3GaqgkFopNFwt9ei5Lh35p
 Jd63b5of/y8nee1bhlEZqEsG1T2lH7EDLthNQQ8Ac06U75o8ilGYcJ4c0pDDJZyRQhmD WGRA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=yxUDLMdHdJZYQp4XOIx9bJ43ha1C5VoVDA6xdJ5f/LY=;
 b=j+TsMpdC5mRb8RcUW6U+Av0nOjiY3Y/Ewco7MMmAj4hpkISMAp7D3uysO/DYLHX8oJ
 lp3LwM8uA8XjwN7an54IB0riRc3A8mewOcUZpmbMNTtBOZjklf8cIDgselbvmeUthx+9
 J6ORTMdsWRJLc/zfTwGUU++vlz7sneJQ3qQV/Mio65pEgaxWVaQJev5wKokfIRyvRUhH
 ssb2BPFFZsGjzbb8Vs+XVnhkCXxq6/sHSfI5ZSpts6VZEK7eB+RR85ZzfbBFqtf2BGpJ
 7Os845WybgeX7kSRws32RE/DCB+n/O2OnhlQaAG97cOy9nVX17mUZu4bF2mNDKBPbyda qxAw==
X-Gm-Message-State: APjAAAVacPOw7iNbrdjS12ygrrn0MID6/SAql7GkG7qAlckKyM9V3Ie3
 1v8r1l64G1Io5L8PNoGc8bdEEEFc
X-Google-Smtp-Source:
 APXvYqxdCKaGCZ/2D8ugpW0wHw3Wfl6WcldhUsjGX6Ug8ODOhZg1AUC/pPskw4jsfroLBNxebofwgw==
X-Received: by 2002:a17:902:6902:: with SMTP id
 j2mr73296290plk.321.1561343141672; Sun, 23 Jun 2019 19:25:41 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 209
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to rename spp_classifier_get_component_status() to
get_classifier_status() to simplify, and revise vars and log messages
for refactoring.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/cmd_runner.c      | 12 +++----
 src/shared/secondary/spp_worker_th/vf_deps.h  |  8 ++---
 src/vf/classifier_mac.c                       | 22 ++++++------
 src/vf/spp_forward.c                          | 35 +++++++++----------
 4 files changed, 36 insertions(+), 41 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index a768575..856e79e 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -532,15 +532,11 @@ spp_iterate_core_info(struct spp_iterate_core_params *params)
 			comp_info = (comp_info_base + core->id[cnt]);
 #ifdef SPP_VF_MODULE
 			if (comp_info->wk_type == SPPWK_TYPE_CLS) {
-				ret = spp_classifier_get_component_status(
-						lcore_id,
-						core->id[cnt],
-						params);
+				ret = get_classifier_status(lcore_id,
+						core->id[cnt], params);
 			} else {
-				ret = spp_forward_get_component_status(
-						lcore_id,
-						core->id[cnt],
-						params);
+				ret = get_forwarder_status(lcore_id,
+						core->id[cnt], params);
 			}
 #endif /* SPP_VF_MODULE */
 #ifdef SPP_MIRROR_MODULE
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 3ae4fc9..fb34215 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -79,7 +79,7 @@ int spp_classifier_mac_iterate_table(
 		struct spp_iterate_classifier_table_params *params);
 
 /**
- * classifier get component status.
+ * Get classifier status.
  *
  * @param[in] lcore_id Lcore ID for classifier.
  * @param[in] id Unique component ID.
@@ -87,11 +87,11 @@ int spp_classifier_mac_iterate_table(
  * @retval SPP_RET_OK If succeeded.
  * @retval SPP_RET_NG If failed.
  */
-int spp_classifier_get_component_status(unsigned int lcore_id, int id,
+int get_classifier_status(unsigned int lcore_id, int id,
 		struct spp_iterate_core_params *params);
 
 /**
- * Merge/Forward get component status
+ * Get forwarder status.
  *
  * @param lcore_id Lcore ID for forwarder and merger.
  * @param id Unique component ID.
@@ -99,7 +99,7 @@ int spp_classifier_get_component_status(unsigned int lcore_id, int id,
  * @retval SPP_RET_OK If succeeded.
  * @retval SPP_RET_NG If failed.
  */
-int spp_forward_get_component_status(unsigned int lcore_id, int id,
+int get_forwarder_status(unsigned int lcore_id, int id,
 		struct spp_iterate_core_params *params);
 
 #endif  /* _SPPWK_TH_VF_DEPS_H_ */
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index f6074e4..9023a69 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -803,29 +803,29 @@ spp_classifier_mac_do(int id)
 
 /* classifier iterate component information */
 int
-spp_classifier_get_component_status(
-		unsigned int lcore_id, int id,
+get_classifier_status(unsigned int lcore_id, int id,
 		struct spp_iterate_core_params *params)
 {
 	int ret = SPP_RET_NG;
-	int i, nof_tx, nof_rx = 0;  /* Num of RX and TX ports. */
+	int i;
+	int nof_tx, nof_rx = 0;  /* Num of RX and TX ports. */
 	struct management_info *mng_info;
 	struct cls_comp_info *cmp_info;
-	struct cls_port_info *clsd_data;
+	struct cls_port_info *port_info;
 	struct sppwk_port_idx rx_ports[RTE_MAX_ETHPORTS];
 	struct sppwk_port_idx tx_ports[RTE_MAX_ETHPORTS];
 
 	mng_info = g_mng_infos + id;
 	if (!is_used_mng_info(mng_info)) {
 		RTE_LOG(ERR, SPP_CLASSIFIER_MAC,
-				"Component[%d] Not used. "
-				"(status)(core = %d, type = %d)\n",
+				"Classifier is not used "
+				"(comp_id=%d, lcore_id=%d, type=%d).\n",
 				id, lcore_id, SPPWK_TYPE_CLS);
 		return SPP_RET_NG;
 	}
 
 	cmp_info = mng_info->cmp_infos + mng_info->ref_index;
-	clsd_data = cmp_info->tx_ports_i;
+	port_info = cmp_info->tx_ports_i;
 
 	memset(rx_ports, 0x00, sizeof(rx_ports));
 	if (cmp_info->rx_port_i.iface_type != UNDEF) {
@@ -837,14 +837,14 @@ spp_classifier_get_component_status(
 	memset(tx_ports, 0x00, sizeof(tx_ports));
 	nof_tx = cmp_info->nof_tx_ports;
 	for (i = 0; i < nof_tx; i++) {
-		tx_ports[i].iface_type = clsd_data[i].iface_type;
-		tx_ports[i].iface_no   = clsd_data[i].iface_no_global;
+		tx_ports[i].iface_type = port_info[i].iface_type;
+		tx_ports[i].iface_no = port_info[i].iface_no_global;
 	}
 
 	/* Set the information with the function specified by the command. */
+	/* TODO(yasufum) rename `element_proc` */
 	ret = (*params->element_proc)(
-		params, lcore_id,
-		cmp_info->name, SPPWK_TYPE_CLS_STR,
+		params, lcore_id, cmp_info->name, SPPWK_TYPE_CLS_STR,
 		nof_rx, rx_ports, nof_tx, tx_ports);
 	if (unlikely(ret != SPP_RET_OK))
 		return SPP_RET_NG;
diff --git a/src/vf/spp_forward.c b/src/vf/spp_forward.c
index 7746d40..3d40951 100644
--- a/src/vf/spp_forward.c
+++ b/src/vf/spp_forward.c
@@ -182,50 +182,49 @@ spp_forward(int id)
 	return SPP_RET_OK;
 }
 
-/* Merge/Forward get component status */
+/* Get forwarder status */
 int
-spp_forward_get_component_status(
-		unsigned int lcore_id, int id,
+get_forwarder_status(unsigned int lcore_id, int id,
 		struct spp_iterate_core_params *params)
 {
 	int ret = SPP_RET_NG;
 	int cnt;
 	const char *component_type = NULL;
-	struct forward_info *info = &g_forward_info[id];
-	struct forward_path *path = &info->path[info->ref_index];
+	struct forward_info *fwd_info = &g_forward_info[id];
+	struct forward_path *fwd_path = &fwd_info->path[fwd_info->ref_index];
 	struct sppwk_port_idx rx_ports[RTE_MAX_ETHPORTS];
 	struct sppwk_port_idx tx_ports[RTE_MAX_ETHPORTS];
 
-	if (unlikely(path->wk_type == SPPWK_TYPE_NONE)) {
+	if (unlikely(fwd_path->wk_type == SPPWK_TYPE_NONE)) {
 		RTE_LOG(ERR, FORWARD,
-				"Component[%d] Not used. "
-				"(status)(core = %d, type = %d)\n",
-				id, lcore_id, path->wk_type);
+				"Forwarder is not used. "
+				"(id=%d, lcore=%d, type=%d).\n",
+				id, lcore_id, fwd_path->wk_type);
 		return SPP_RET_NG;
 	}
 
-	if (path->wk_type == SPPWK_TYPE_MRG)
+	if (fwd_path->wk_type == SPPWK_TYPE_MRG)
 		component_type = SPPWK_TYPE_MRG_STR;
 	else
 		component_type = SPPWK_TYPE_FWD_STR;
 
 	memset(rx_ports, 0x00, sizeof(rx_ports));
-	for (cnt = 0; cnt < path->num_rx; cnt++) {
-		rx_ports[cnt].iface_type = path->ports[cnt].rx.iface_type;
-		rx_ports[cnt].iface_no   = path->ports[cnt].rx.iface_no;
+	for (cnt = 0; cnt < fwd_path->num_rx; cnt++) {
+		rx_ports[cnt].iface_type = fwd_path->ports[cnt].rx.iface_type;
+		rx_ports[cnt].iface_no = fwd_path->ports[cnt].rx.iface_no;
 	}
 
 	memset(tx_ports, 0x00, sizeof(tx_ports));
-	for (cnt = 0; cnt < path->num_tx; cnt++) {
-		tx_ports[cnt].iface_type = path->ports[cnt].tx.iface_type;
-		tx_ports[cnt].iface_no   = path->ports[cnt].tx.iface_no;
+	for (cnt = 0; cnt < fwd_path->num_tx; cnt++) {
+		tx_ports[cnt].iface_type = fwd_path->ports[cnt].tx.iface_type;
+		tx_ports[cnt].iface_no = fwd_path->ports[cnt].tx.iface_no;
 	}
 
 	/* Set the information with the function specified by the command. */
 	ret = (*params->element_proc)(
 		params, lcore_id,
-		path->name, component_type,
-		path->num_rx, rx_ports, path->num_tx, tx_ports);
+		fwd_path->name, component_type,
+		fwd_path->num_rx, rx_ports, fwd_path->num_tx, tx_ports);
 	if (unlikely(ret != SPP_RET_OK))
 		return SPP_RET_NG;
 
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 11:25:04 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00UP00378Y40@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:25:55 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTL00Z0Q037MC00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:55 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00V4T036YD20@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:54 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id F30B87E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:54 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id F1D598E6052	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:54 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id E69368E6054	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:54 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 775AA8E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:54 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:54 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PsTZ013689;	Mon,
 24 Jun 2019 11:25:54 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2PsfO013688;	Mon, 24 Jun 2019 11:25:54 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2PsGc013685	for unknown; Mon,
 24 Jun 2019 11:25:54 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Prf7006168 for
 unknown; Mon, 24 Jun 2019 11:25:53 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PrWk006165; Mon,
 24 Jun 2019 11:25:53 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Pr2n016559;	Mon,
 24 Jun 2019 11:25:53 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O2PrHB016555	for unknown; Mon, 24 Jun 2019 11:25:53 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2PrBl006818 for
 unknown; Mon, 24 Jun 2019 11:25:53 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2ProO006811 for
 unknown; Mon, 24 Jun 2019 11:25:53 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2PktC004010	for unknown; Mon,
 24 Jun 2019 11:25:52 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 38AE41BF70;	Mon, 24 Jun 2019 04:25:46 +0200 (CEST)
Received: from mail-pf1-f196.google.com
 (mail-pf1-f196.google.com [209.85.210.196]) by dpdk.org (Postfix)
 with ESMTP id 19DAA1BF6D for <spp@dpdk.org>; Mon,
 24 Jun 2019 04:25:45 +0200 (CEST)
Received: by mail-pf1-f196.google.com with SMTP id i189so6583711pfg.10 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 19:25:45 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id a3sm9927461pje.3.2019.06.23.19.25.42
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 19:25:43 -0700 (PDT)
Date: Mon, 24 Jun 2019 11:25:04 +0900
From: yasufum.o@gmail.com
Subject: [spp 04371] [spp] [PATCH 11/11] shared/sec: refactor setup cls table
 stat in	JSON
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624022504.18752-12-yasufum.o@gmail.com>
In-reply-to: <20190624022504.18752-1-yasufum.o@gmail.com>
References: <20190624022504.18752-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04371
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=+cbyUcBSoFrseuZIc7cwHYWVHW8HsBTCMsM4qQDAsBw=;
 b=KAMm46Cqm8jQS2w23xmBk4BoS7mDmiBehpzz9g1YoS9ci8fb1pUoRhVqiOpMSsG/9U
 +oX6VVwDatRSj1TYmZt3kzJv2UuzTAbOFSzkMDgI08T/VbZhDjKAe5Vd/DXe6lOi8nHF
 oYxfWkjYGJRctpViOkWKfXFDm4cVgHLas5Zli03Sw789Txo5XZ84q7fg6RhCHbCxoBiU
 wZyhXRbHVWgaAyYTU+ugaY3d1GBadc45uI4YnSbk+ESFuGS9FYscponc6KM+kAJNQWuE
 01x530oZlMETeXYjmWgbyH+ppH66asnD67dQse4LcY06nRJcmrIjgXj0cggS1iuPY3Vs CdVQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=+cbyUcBSoFrseuZIc7cwHYWVHW8HsBTCMsM4qQDAsBw=;
 b=HpWBSlf97lvlREsK0agoqftKvVeg+Sa+hczJbeVxdPibu0NeVmh1La1qbyH5c6lbdI
 a81Wuhijv2etW8wB/MqFgyKB/aHcGDYIHFRCr21/LtsGGPfGbW0oHI8Ndc8VZ8WLnlm0
 PebzHVmj94CNJ6VSpUn+08yDVcxiSKMg8O4np/3tQttCncLfwA2FKghn1DYTqYwf7QmN
 1DezXCMcBktmYvNmopAoxswxNMHQNPB4cbNN2WRi0NbRTsAYn09NYhKUGckhuIuLsHwf
 e1MKV7+VC9mI+npLhs6YmQ14L/xI4Q8EK5SXOh1ZvqYll1/iYfhFS6Mf6vpATazJLoCg huqg==
X-Gm-Message-State: APjAAAVOoxq/8Pn+2+SO0RP0bDxbo5/qNZOapzCeztiVNi9dpydG56vV
 2Abd9itYNcsDgIntNRnjtBvYJn1v
X-Google-Smtp-Source:
 APXvYqyEwSiDkHvWzMS+/7Q9J/4lHAgn5/XsArQlcJO2Ir4gKZjiGb2EuOXvrEs04BaJcmHeBK4xPw==
X-Received: by 2002:a17:90a:30cf:: with SMTP id
 h73mr22275708pjb.42.1561343144123; Sun, 23 Jun 2019 19:25:44 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 282
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to refactor setting up a list of entries in classifier
table for `status` command. Names of function for setting up JSON are
revised, but still hard to understand the features.
append_classifier_table() for setting up the entries calls several
nested functions as in the following order.

  append_classifier_table()  // This function.
    -> add_classifier_table()  // Wrapper and doesn't almost nothing.
      -> add_classifier_table_val()  // Setup data and call iterator.
        -> iterate_adding_mac_entry()

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/cmd_parser.c      |  2 +-
 .../secondary/spp_worker_th/cmd_runner.c      | 25 ++++++--
 .../secondary/spp_worker_th/cmd_utils.h       |  2 +-
 src/shared/secondary/spp_worker_th/vf_deps.h  |  8 ++-
 src/vf/classifier_mac.c                       | 64 +++++++++++--------
 src/vf/classifier_mac.h                       |  2 +-
 6 files changed, 67 insertions(+), 36 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.c b/src/shared/secondary/spp_worker_th/cmd_parser.c
index 55fc1d2..13e7013 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.c
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.c
@@ -651,7 +651,7 @@ parse_mac_addr(void *output, const char *arg_val,
 	const char *str_val = arg_val;
 
 	/* If given value is the default, use dummy address instead. */
-	if (unlikely(strcmp(str_val, SPP_DEFAULT_CLASSIFIED_SPEC_STR) == 0))
+	if (unlikely(strcmp(str_val, SPPWK_TERM_DEFAULT) == 0))
 		str_val = SPP_DEFAULT_CLASSIFIED_DMY_ADDR_STR;
 
 	/* Check if the given value is valid. */
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 856e79e..bc3ae06 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -561,12 +561,12 @@ spp_iterate_core_info(struct spp_iterate_core_params *params)
 /* Iterate classifier_table to create response to status command */
 #ifdef SPP_VF_MODULE
 static int
-spp_iterate_classifier_table(
+add_classifier_table(
 		struct spp_iterate_classifier_table_params *params)
 {
 	int ret;
 
-	ret = spp_classifier_mac_iterate_table(params);
+	ret = add_classifier_table_val(params);
 	if (unlikely(ret != 0)) {
 		RTE_LOG(ERR, WK_CMD_RUNNER, "Cannot iterate classifier_mac_table.\n");
 		return SPP_RET_NG;
@@ -1219,7 +1219,10 @@ append_core_value(const char *name, char **output,
 	return ret;
 }
 
-/* append one element of classifier table for JSON format */
+/**
+ * Operator function called in iterator for getting each of entries of
+ * classifier table named as iterate_adding_mac_entry().
+ */
 #ifdef SPP_VF_MODULE
 static int
 append_classifier_element_value(
@@ -1276,10 +1279,18 @@ append_classifier_element_value(
 }
 #endif /* SPP_VF_MODULE */
 
-/* append a list of classifier table for JSON format */
+/**
+ * Append entries of classifier table in JSON. Before iterating the entries,
+ * this function calls several nested functions.
+ *   append_classifier_table()  // This function.
+ *     -> add_classifier_table()  // Wrapper and doesn't almost nothing.
+ *       -> add_classifier_table_val()  // Setup data and call iterator.
+ *         -> iterate_adding_mac_entry()
+ *
+ */
 #ifdef SPP_VF_MODULE
 static int
-append_classifier_table_value(const char *name, char **output,
+append_classifier_table(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
 	int ret = SPP_RET_NG;
@@ -1296,7 +1307,7 @@ append_classifier_table_value(const char *name, char **output,
 	itr_params.output = tmp_buff;
 	itr_params.element_proc = append_classifier_element_value;
 
-	ret = spp_iterate_classifier_table(&itr_params);
+	ret = add_classifier_table(&itr_params);
 	if (unlikely(ret != SPP_RET_OK)) {
 		spp_strbuf_free(itr_params.output);
 		return SPP_RET_NG;
@@ -1388,7 +1399,7 @@ struct cmd_response response_info_list[] = {
 	{ "master-lcore", append_master_lcore_value },
 	{ "core", append_core_value },
 #ifdef SPP_VF_MODULE
-	{ "classifier_table", append_classifier_table_value },
+	{ "classifier_table", append_classifier_table},
 #endif /* SPP_VF_MODULE */
 	{ "", NULL }
 };
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 1d6c332..b8ab10c 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -47,7 +47,7 @@
 #define SPP_CORE_STATUS_CHECK_MAX 5
 
 /** Character sting for default port of classifier */
-#define SPP_DEFAULT_CLASSIFIED_SPEC_STR     "default"
+#define SPPWK_TERM_DEFAULT "default"
 
 /** Value for default MAC address of classifier */
 #define SPP_DEFAULT_CLASSIFIED_DMY_ADDR     0x010000000000
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index fb34215..beafc64 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -75,7 +75,13 @@ void init_classifier_info(int component_id);
 
 void uninit_component_info(struct cls_comp_info *cmp_info);
 
-int spp_classifier_mac_iterate_table(
+/**
+ * Setup data of classifier table and call iterator function for getting
+ * each of entries.
+ *
+ * @params[in] params Object which has pointer of operator func and attrs.
+ */
+int add_classifier_table_val(
 		struct spp_iterate_classifier_table_params *params);
 
 /**
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 9023a69..8d677a9 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -224,6 +224,7 @@ log_classification(
 		log_classification(clsd_idx, pkt, cmp_info, clsd_data, \
 				__func__, __LINE__)
 
+/* Log DEBUG message for classified MAC and VLAN info. */
 static void
 log_entry(
 		long clsd_idx,
@@ -852,13 +853,17 @@ get_classifier_status(unsigned int lcore_id, int id,
 	return SPP_RET_OK;
 }
 
+/**
+ * For setting up a response for `status` command, iterate adding each of
+ * entries in MAC address table to the result message.
+ */
 static void
-mac_classification_iterate_table(
+iterate_adding_mac_entry(
 		struct spp_iterate_classifier_table_params *params,
 		uint16_t vid,
 		struct mac_classifier *mac_cls,
 		__rte_unused struct cls_comp_info *cmp_info,
-		struct cls_port_info *clsd_data)
+		struct cls_port_info *port_info)
 {
 	int ret;
 	const void *key;
@@ -873,18 +878,20 @@ mac_classification_iterate_table(
 		type = SPP_CLASSIFIER_TYPE_MAC;
 
 	if (mac_cls->default_cls_idx >= 0) {
-		port.iface_type = (clsd_data +
+		port.iface_type = (port_info +
 				mac_cls->default_cls_idx)->iface_type;
-		port.iface_no   = (clsd_data +
+		port.iface_no = (port_info +
 				mac_cls->default_cls_idx)->iface_no_global;
 
-		LOG_ENT((long)mac_cls->default_cls_idx,
-				vid,
-				SPP_DEFAULT_CLASSIFIED_SPEC_STR,
-				cmp_info, clsd_data);
-
-		(*params->element_proc)(params, type, vid,
-				SPP_DEFAULT_CLASSIFIED_SPEC_STR, &port);
+		/* Logging DEBUG message. */
+		LOG_ENT((long)mac_cls->default_cls_idx, vid,
+				SPPWK_TERM_DEFAULT, cmp_info, port_info);
+		/**
+		 * Append "default" entry. `element_proc` is a funciton
+		 * pointer to append_classifier_element_value().
+		 */
+		(*params->element_proc)(params, type, vid, SPPWK_TERM_DEFAULT,
+				&port);
 	}
 
 	next = 0;
@@ -897,25 +904,32 @@ mac_classification_iterate_table(
 		ether_format_addr(mac_addr_str, sizeof(mac_addr_str),
 				(const struct ether_addr *)key);
 
-		port.iface_type = (clsd_data + (long)data)->iface_type;
-		port.iface_no   = (clsd_data + (long)data)->iface_no_global;
+		port.iface_type = (port_info + (long)data)->iface_type;
+		port.iface_no = (port_info + (long)data)->iface_no_global;
 
-		LOG_ENT((long)data, vid, mac_addr_str, cmp_info, clsd_data);
+		LOG_ENT((long)data, vid, mac_addr_str, cmp_info, port_info);
 
+		/**
+		 * Append each entry of MAC address. `element_proc` is a
+		 * funciton pointer to append_classifier_element_value().
+		 */
 		(*params->element_proc)(params, type, vid, mac_addr_str,
 				&port);
 	}
 }
 
-/* classifier(mac address) iterate classifier table. */
+/**
+ * Setup data of classifier table and call iterator function for getting
+ * each of entries.
+ */
 int
-spp_classifier_mac_iterate_table(
+add_classifier_table_val(
 		struct spp_iterate_classifier_table_params *params)
 {
-	int i, n;
+	int i, vlan_id;
 	struct management_info *mng_info;
 	struct cls_comp_info *cmp_info;
-	struct cls_port_info *clsd_data;
+	struct cls_port_info *port_info;
 
 	for (i = 0; i < RTE_MAX_LCORE; i++) {
 		mng_info = g_mng_infos + i;
@@ -923,18 +937,18 @@ spp_classifier_mac_iterate_table(
 			continue;
 
 		cmp_info = mng_info->cmp_infos + mng_info->ref_index;
-		clsd_data = cmp_info->tx_ports_i;
+		port_info = cmp_info->tx_ports_i;
 
 		RTE_LOG(DEBUG, SPP_CLASSIFIER_MAC,
-			"Core[%u] Start iterate classifier table.\n", i);
+			"Start iterate classifier table on lcore %u.\n", i);
 
-		for (n = 0; n < NOF_VLAN; ++n) {
-			if (cmp_info->mac_clfs[n] == NULL)
+		for (vlan_id = 0; vlan_id < NOF_VLAN; ++vlan_id) {
+			if (cmp_info->mac_clfs[vlan_id] == NULL)
 				continue;
 
-			mac_classification_iterate_table(params, (uint16_t) n,
-					cmp_info->mac_clfs[n], cmp_info,
-					clsd_data);
+			iterate_adding_mac_entry(params, (uint16_t) vlan_id,
+					cmp_info->mac_clfs[vlan_id], cmp_info,
+					port_info);
 		}
 	}
 
diff --git a/src/vf/classifier_mac.h b/src/vf/classifier_mac.h
index d3c5ab6..21433e6 100644
--- a/src/vf/classifier_mac.h
+++ b/src/vf/classifier_mac.h
@@ -56,7 +56,7 @@ int spp_classifier_mac_do(int id);
  * @retval SPP_RET_OK succeeded.
  * @retval SPP_RET_NG failed.
  */
-int spp_classifier_mac_iterate_table(
+int add_classifier_table_val(
 		struct spp_iterate_classifier_table_params *params);
 
 #endif /* _CLASSIFIER_MAC_H_ */
-- 
2.17.1



From spp-request@dpdk.org Mon Jun 24 11:25:46 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00UP60378Y40@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 11:25:55 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTL00Z0S037N300@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:55 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00V5F037YD20@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 11:25:55 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id 84E3A7E603A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:55 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 8403D8E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:55 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 820DE8E605A	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:55 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 108BB8E6058	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 11:25:55 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 11:25:55 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Ps6P013696;	Mon,
 24 Jun 2019 11:25:54 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O2PsQb013695;	Mon, 24 Jun 2019 11:25:54 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O2Psuf013692	for unknown; Mon,
 24 Jun 2019 11:25:54 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Ps4p006834 for
 unknown; Mon, 24 Jun 2019 11:25:54 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O2Psnu006830 for
 unknown; Mon, 24 Jun 2019 11:25:54 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O2Plua004014	for unknown; Mon,
 24 Jun 2019 11:25:53 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 43A7C1BF72	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 24 Jun 2019 04:25:47 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 6
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 24 Jun 2019 04:25:46 +0200
Message-id: <mailman.23361.1561343146.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH 07/11] shared/sec: rename func free_mac_classification
      (yasufum.o@gmail.com)
   2. [PATCH 08/11] shared/sec: refactor updating classifier info
      (yasufum.o@gmail.com)
   3. [PATCH 09/11] shared/sec: refactor updating forwarder
      (yasufum.o@gmail.com)
   4. [PATCH 10/11] shared/sec: refactor getting classifier status
      (yasufum.o@gmail.com)
   5. [PATCH 11/11] shared/sec: refactor setup cls table stat in
      JSON (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon, 24 Jun 2019 11:25:00 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 07/11] shared/sec: rename func
	free_mac_classification
Message-ID: <20190624022504.18752-8-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Rename free_mac_classification() to free_mac_classifier() for releasing
resources of classifier.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/shared/secondary/spp_worker_th/vf_deps.h | 14 ++++++--------
 src/vf/classifier_mac.c                      |  8 +++-----
 2 files changed, 9 insertions(+), 13 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 79e2abb..9b59b3d 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -42,17 +42,15 @@ struct cls_comp_info {
 	struct cls_port_info tx_ports_i[RTE_MAX_ETHPORTS];  /* TX info. */
 };
 
-/* free mac classification instance. */
+/* Release instance of mac classifier. */
 static inline void
-free_mac_classification(struct mac_classifier *mac_cls)
+free_mac_classifier(struct mac_classifier *mac_clf)
 {
-	if (mac_cls == NULL)
+	if (mac_clf == NULL)
 		return;
-
-	if (mac_cls->cls_tbl != NULL)
-		rte_hash_free(mac_cls->cls_tbl);
-
-	rte_free(mac_cls);
+	if (mac_clf->cls_tbl != NULL)
+		rte_hash_free(mac_clf->cls_tbl);
+	rte_free(mac_clf);
 }
 
 /**
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 4213372..232ed19 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -437,14 +437,12 @@ init_component_info(struct cls_comp_info *cmp_info,
 
 /* uninitialize classifier information. */
 void
-uninit_component_info(struct cls_comp_info *cmp_info)
+uninit_component_info(struct cls_comp_info *comp_info)
 {
 	int i;
-
 	for (i = 0; i < NOF_VLAN; ++i)
-		free_mac_classification(cmp_info->mac_clfs[i]);
-
-	memset(cmp_info, 0, sizeof(struct cls_comp_info));
+		free_mac_classifier(comp_info->mac_clfs[i]);
+	memset(comp_info, 0, sizeof(struct cls_comp_info));
 }
 
 /* transmit packet to one destination. */
-- 
2.17.1



------------------------------

Message: 2
Date: Mon, 24 Jun 2019 11:25:01 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 08/11] shared/sec: refactor updating classifier
	info
Message-ID: <20190624022504.18752-9-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Rename spp_classifier_mac_update() to update_classifier(), and revise
names of vars and log messages in the function for refactoring.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/cmd_utils.c       |  2 +-
 src/shared/secondary/spp_worker_th/vf_deps.h  |  2 +-
 src/vf/classifier_mac.c                       | 23 ++++++++++---------
 3 files changed, 14 insertions(+), 13 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index ae6be1a..d5faa35 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -891,7 +891,7 @@ update_comp_info(void)
 
 #ifdef SPP_VF_MODULE
 		if (comp_info->wk_type == SPPWK_TYPE_CLS)
-			ret = spp_classifier_mac_update(comp_info);
+			ret = update_classifier(comp_info);
 		else
 			ret = spp_forward_update(comp_info);
 #endif /* SPP_VF_MODULE */
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 9b59b3d..8d3cd81 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -60,7 +60,7 @@ free_mac_classifier(struct mac_classifier *mac_clf)
  * @retval SPP_RET_OK If succeeded.
  * @retval SPP_RET_NG If failed.
  */
-int spp_classifier_mac_update(struct sppwk_comp_info *comp_info);
+int update_classifier(struct sppwk_comp_info *comp_info);
 
 /**
  * Update forwarder info.
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 232ed19..f6074e4 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -695,26 +695,27 @@ spp_classifier_mac_init(void)
 
 /* classifier(mac address) update component info. */
 int
-spp_classifier_mac_update(struct sppwk_comp_info *wk_comp_info)
+update_classifier(struct sppwk_comp_info *wk_comp_info)
 {
-	int ret = SPP_RET_NG;
-	int id = wk_comp_info->comp_id;
-	struct management_info *mng_info = g_mng_infos + id;
-	struct cls_comp_info *cmp_info = NULL;
+	int ret;
+	int wk_id = wk_comp_info->comp_id;
+	struct management_info *mng_info = g_mng_infos + wk_id;
+	struct cls_comp_info *cls_info = NULL;
 
 	RTE_LOG(INFO, SPP_CLASSIFIER_MAC,
-			"Component[%u] Start update component.\n", id);
+			"Start updating classifier, id=%u.\n", wk_id);
 
-	cmp_info = mng_info->cmp_infos + mng_info->upd_index;
+	/* TODO(yasufum) rename `infos`. */
+	cls_info = mng_info->cmp_infos + mng_info->upd_index;
 
 	/* initialize update side classifier information */
-	ret = init_component_info(cmp_info, wk_comp_info);
+	ret = init_component_info(cls_info, wk_comp_info);
 	if (unlikely(ret != SPP_RET_OK)) {
 		RTE_LOG(ERR, SPP_CLASSIFIER_MAC,
-				"Cannot update classifier mac. ret=%d\n", ret);
+				"Cannot update classifier, ret=%d.\n", ret);
 		return ret;
 	}
-	memcpy(cmp_info->name, wk_comp_info->name, STR_LEN_NAME);
+	memcpy(cls_info->name, wk_comp_info->name, STR_LEN_NAME);
 
 	/* change index of reference side */
 	mng_info->upd_index = mng_info->ref_index;
@@ -729,7 +730,7 @@ spp_classifier_mac_update(struct sppwk_comp_info *wk_comp_info)
 	uninit_component_info(mng_info->cmp_infos + mng_info->upd_index);
 
 	RTE_LOG(INFO, SPP_CLASSIFIER_MAC,
-			"Component[%u] Complete update component.\n", id);
+			"Done update classifier, id=%u.\n", wk_id);
 
 	return SPP_RET_OK;
 }
-- 
2.17.1



------------------------------

Message: 3
Date: Mon, 24 Jun 2019 11:25:02 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 09/11] shared/sec: refactor updating forwarder
Message-ID: <20190624022504.18752-10-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Rename spp_forward_update() to update_forwarder(), and revise
vars and log messages for refactoring.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/cmd_utils.c       |  2 +-
 src/shared/secondary/spp_worker_th/vf_deps.h  |  6 +-
 src/vf/spp_forward.c                          | 70 +++++++++----------
 3 files changed, 39 insertions(+), 39 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index d5faa35..709c3da 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -893,7 +893,7 @@ update_comp_info(void)
 		if (comp_info->wk_type == SPPWK_TYPE_CLS)
 			ret = update_classifier(comp_info);
 		else
-			ret = spp_forward_update(comp_info);
+			ret = update_forwarder(comp_info);
 #endif /* SPP_VF_MODULE */
 
 #ifdef SPP_MIRROR_MODULE
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 8d3cd81..3ae4fc9 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -54,13 +54,13 @@ free_mac_classifier(struct mac_classifier *mac_clf)
 }
 
 /**
- * classifier(mac address) update component info.
+ * Update classifier info.
  *
  * @param comp_info Pointer to internal data of classifier.
  * @retval SPP_RET_OK If succeeded.
  * @retval SPP_RET_NG If failed.
  */
-int update_classifier(struct sppwk_comp_info *comp_info);
+int update_classifier(struct sppwk_comp_info *wk_comp_info);
 
 /**
  * Update forwarder info.
@@ -69,7 +69,7 @@ int update_classifier(struct sppwk_comp_info *comp_info);
  * @retval SPP_RET_OK If succeeded.
  * @retval SPP_RET_NG If failed.
  */
-int spp_forward_update(struct sppwk_comp_info *component);
+int update_forwarder(struct sppwk_comp_info *wk_comp_info);
 
 void init_classifier_info(int component_id);
 
diff --git a/src/vf/spp_forward.c b/src/vf/spp_forward.c
index 909f084..7746d40 100644
--- a/src/vf/spp_forward.c
+++ b/src/vf/spp_forward.c
@@ -51,64 +51,64 @@ spp_forward_init(void)
 
 /* Update forward info */
 int
-spp_forward_update(struct sppwk_comp_info *component)
+update_forwarder(struct sppwk_comp_info *comp_info)
 {
 	int cnt = 0;
-	int nof_rx = component->nof_rx;
-	int nof_tx = component->nof_tx;
+	int nof_rx = comp_info->nof_rx;
+	int nof_tx = comp_info->nof_tx;
 	int max = (nof_rx > nof_tx)?nof_rx*nof_tx:nof_tx;
-	struct forward_info *info = &g_forward_info[component->comp_id];
-	struct forward_path *path = &info->path[info->upd_index];
-
-	/* Forward component allows only one receiving port. */
-	if ((component->wk_type == SPPWK_TYPE_FWD) &&
+	struct forward_info *fwd_info = &g_forward_info[comp_info->comp_id];
+	/* TODO(yasufum) rename `path` of struct forward_path. */
+	struct forward_path *fwd_path = &fwd_info->path[fwd_info->upd_index];
+
+	/**
+	 * Check num of RX and TX ports because forwarder has just a set of
+	 * RX and TX.
+	 */
+	if ((comp_info->wk_type == SPPWK_TYPE_FWD) &&
 			unlikely(nof_rx > 1)) {
 		RTE_LOG(ERR, FORWARD,
-			"Component[%d] Setting error. (type = %d, rx = %d)\n",
-			component->comp_id, component->wk_type, nof_rx);
+			"Invalid forwarder type or num of RX ports "
+			"(id=%d, type=%d, nof_rx=%d).\n",
+			comp_info->comp_id, comp_info->wk_type, nof_rx);
 		return SPP_RET_NG;
 	}
-
-	/* Component allows only one transmit port. */
 	if (unlikely(nof_tx != 0) && unlikely(nof_tx != 1)) {
 		RTE_LOG(ERR, FORWARD,
-			"Component[%d] Setting error. (type = %d, tx = %d)\n",
-			component->comp_id, component->wk_type, nof_tx);
+			"Invalid forwarder type or num of TX ports "
+			"(id=%d, type=%d, nof_tx=%d).\n",
+			comp_info->comp_id, comp_info->wk_type, nof_tx);
 		return SPP_RET_NG;
 	}
 
-	memset(path, 0x00, sizeof(struct forward_path));
+	memset(fwd_path, 0x00, sizeof(struct forward_path));
 
 	RTE_LOG(INFO, FORWARD,
-			"Component[%d] Start update component. "
-			"(name = %s, type = %d)\n",
-			component->comp_id,
-			component->name,
-			component->wk_type);
-
-	memcpy(&path->name, component->name, STR_LEN_NAME);
-	path->wk_type = component->wk_type;
-	path->num_rx = component->nof_rx;
-	path->num_tx = component->nof_tx;
+			"Start updating forwarder (id=%d, name=%s, type=%d)\n",
+			comp_info->comp_id, comp_info->name,
+			comp_info->wk_type);
+
+	memcpy(&fwd_path->name, comp_info->name, STR_LEN_NAME);
+	fwd_path->wk_type = comp_info->wk_type;
+	fwd_path->num_rx = comp_info->nof_rx;
+	fwd_path->num_tx = comp_info->nof_tx;
 	for (cnt = 0; cnt < nof_rx; cnt++)
-		memcpy(&path->ports[cnt].rx, component->rx_ports[cnt],
+		memcpy(&fwd_path->ports[cnt].rx, comp_info->rx_ports[cnt],
 				sizeof(struct sppwk_port_info));
 
-	/* Transmit port is set according with larger nof_rx / nof_tx. */
+	/* TX port is set according with larger nof_rx / nof_tx. */
 	for (cnt = 0; cnt < max; cnt++)
-		memcpy(&path->ports[cnt].tx, component->tx_ports[0],
+		memcpy(&fwd_path->ports[cnt].tx, comp_info->tx_ports[0],
 				sizeof(struct sppwk_port_info));
 
-	info->upd_index = info->ref_index;
-	while (likely(info->ref_index == info->upd_index))
+	fwd_info->upd_index = fwd_info->ref_index;
+	while (likely(fwd_info->ref_index == fwd_info->upd_index))
 		rte_delay_us_block(SPP_CHANGE_UPDATE_INTERVAL);
 
 	RTE_LOG(INFO, FORWARD,
-			"Component[%d] Complete update component. "
-			"(name = %s, type = %d)\n",
-			component->comp_id,
-			component->name,
-			component->wk_type);
+			"Done update forwarder. (id=%d, name=%s, type=%d)\n",
+			comp_info->comp_id, comp_info->name,
+			comp_info->wk_type);
 
 	return SPP_RET_OK;
 }
-- 
2.17.1



------------------------------

Message: 4
Date: Mon, 24 Jun 2019 11:25:03 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 10/11] shared/sec: refactor getting classifier
	status
Message-ID: <20190624022504.18752-11-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to rename spp_classifier_get_component_status() to
get_classifier_status() to simplify, and revise vars and log messages
for refactoring.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/cmd_runner.c      | 12 +++----
 src/shared/secondary/spp_worker_th/vf_deps.h  |  8 ++---
 src/vf/classifier_mac.c                       | 22 ++++++------
 src/vf/spp_forward.c                          | 35 +++++++++----------
 4 files changed, 36 insertions(+), 41 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index a768575..856e79e 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -532,15 +532,11 @@ spp_iterate_core_info(struct spp_iterate_core_params *params)
 			comp_info = (comp_info_base + core->id[cnt]);
 #ifdef SPP_VF_MODULE
 			if (comp_info->wk_type == SPPWK_TYPE_CLS) {
-				ret = spp_classifier_get_component_status(
-						lcore_id,
-						core->id[cnt],
-						params);
+				ret = get_classifier_status(lcore_id,
+						core->id[cnt], params);
 			} else {
-				ret = spp_forward_get_component_status(
-						lcore_id,
-						core->id[cnt],
-						params);
+				ret = get_forwarder_status(lcore_id,
+						core->id[cnt], params);
 			}
 #endif /* SPP_VF_MODULE */
 #ifdef SPP_MIRROR_MODULE
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index 3ae4fc9..fb34215 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -79,7 +79,7 @@ int spp_classifier_mac_iterate_table(
 		struct spp_iterate_classifier_table_params *params);
 
 /**
- * classifier get component status.
+ * Get classifier status.
  *
  * @param[in] lcore_id Lcore ID for classifier.
  * @param[in] id Unique component ID.
@@ -87,11 +87,11 @@ int spp_classifier_mac_iterate_table(
  * @retval SPP_RET_OK If succeeded.
  * @retval SPP_RET_NG If failed.
  */
-int spp_classifier_get_component_status(unsigned int lcore_id, int id,
+int get_classifier_status(unsigned int lcore_id, int id,
 		struct spp_iterate_core_params *params);
 
 /**
- * Merge/Forward get component status
+ * Get forwarder status.
  *
  * @param lcore_id Lcore ID for forwarder and merger.
  * @param id Unique component ID.
@@ -99,7 +99,7 @@ int spp_classifier_get_component_status(unsigned int lcore_id, int id,
  * @retval SPP_RET_OK If succeeded.
  * @retval SPP_RET_NG If failed.
  */
-int spp_forward_get_component_status(unsigned int lcore_id, int id,
+int get_forwarder_status(unsigned int lcore_id, int id,
 		struct spp_iterate_core_params *params);
 
 #endif  /* _SPPWK_TH_VF_DEPS_H_ */
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index f6074e4..9023a69 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -803,29 +803,29 @@ spp_classifier_mac_do(int id)
 
 /* classifier iterate component information */
 int
-spp_classifier_get_component_status(
-		unsigned int lcore_id, int id,
+get_classifier_status(unsigned int lcore_id, int id,
 		struct spp_iterate_core_params *params)
 {
 	int ret = SPP_RET_NG;
-	int i, nof_tx, nof_rx = 0;  /* Num of RX and TX ports. */
+	int i;
+	int nof_tx, nof_rx = 0;  /* Num of RX and TX ports. */
 	struct management_info *mng_info;
 	struct cls_comp_info *cmp_info;
-	struct cls_port_info *clsd_data;
+	struct cls_port_info *port_info;
 	struct sppwk_port_idx rx_ports[RTE_MAX_ETHPORTS];
 	struct sppwk_port_idx tx_ports[RTE_MAX_ETHPORTS];
 
 	mng_info = g_mng_infos + id;
 	if (!is_used_mng_info(mng_info)) {
 		RTE_LOG(ERR, SPP_CLASSIFIER_MAC,
-				"Component[%d] Not used. "
-				"(status)(core = %d, type = %d)\n",
+				"Classifier is not used "
+				"(comp_id=%d, lcore_id=%d, type=%d).\n",
 				id, lcore_id, SPPWK_TYPE_CLS);
 		return SPP_RET_NG;
 	}
 
 	cmp_info = mng_info->cmp_infos + mng_info->ref_index;
-	clsd_data = cmp_info->tx_ports_i;
+	port_info = cmp_info->tx_ports_i;
 
 	memset(rx_ports, 0x00, sizeof(rx_ports));
 	if (cmp_info->rx_port_i.iface_type != UNDEF) {
@@ -837,14 +837,14 @@ spp_classifier_get_component_status(
 	memset(tx_ports, 0x00, sizeof(tx_ports));
 	nof_tx = cmp_info->nof_tx_ports;
 	for (i = 0; i < nof_tx; i++) {
-		tx_ports[i].iface_type = clsd_data[i].iface_type;
-		tx_ports[i].iface_no   = clsd_data[i].iface_no_global;
+		tx_ports[i].iface_type = port_info[i].iface_type;
+		tx_ports[i].iface_no = port_info[i].iface_no_global;
 	}
 
 	/* Set the information with the function specified by the command. */
+	/* TODO(yasufum) rename `element_proc` */
 	ret = (*params->element_proc)(
-		params, lcore_id,
-		cmp_info->name, SPPWK_TYPE_CLS_STR,
+		params, lcore_id, cmp_info->name, SPPWK_TYPE_CLS_STR,
 		nof_rx, rx_ports, nof_tx, tx_ports);
 	if (unlikely(ret != SPP_RET_OK))
 		return SPP_RET_NG;
diff --git a/src/vf/spp_forward.c b/src/vf/spp_forward.c
index 7746d40..3d40951 100644
--- a/src/vf/spp_forward.c
+++ b/src/vf/spp_forward.c
@@ -182,50 +182,49 @@ spp_forward(int id)
 	return SPP_RET_OK;
 }
 
-/* Merge/Forward get component status */
+/* Get forwarder status */
 int
-spp_forward_get_component_status(
-		unsigned int lcore_id, int id,
+get_forwarder_status(unsigned int lcore_id, int id,
 		struct spp_iterate_core_params *params)
 {
 	int ret = SPP_RET_NG;
 	int cnt;
 	const char *component_type = NULL;
-	struct forward_info *info = &g_forward_info[id];
-	struct forward_path *path = &info->path[info->ref_index];
+	struct forward_info *fwd_info = &g_forward_info[id];
+	struct forward_path *fwd_path = &fwd_info->path[fwd_info->ref_index];
 	struct sppwk_port_idx rx_ports[RTE_MAX_ETHPORTS];
 	struct sppwk_port_idx tx_ports[RTE_MAX_ETHPORTS];
 
-	if (unlikely(path->wk_type == SPPWK_TYPE_NONE)) {
+	if (unlikely(fwd_path->wk_type == SPPWK_TYPE_NONE)) {
 		RTE_LOG(ERR, FORWARD,
-				"Component[%d] Not used. "
-				"(status)(core = %d, type = %d)\n",
-				id, lcore_id, path->wk_type);
+				"Forwarder is not used. "
+				"(id=%d, lcore=%d, type=%d).\n",
+				id, lcore_id, fwd_path->wk_type);
 		return SPP_RET_NG;
 	}
 
-	if (path->wk_type == SPPWK_TYPE_MRG)
+	if (fwd_path->wk_type == SPPWK_TYPE_MRG)
 		component_type = SPPWK_TYPE_MRG_STR;
 	else
 		component_type = SPPWK_TYPE_FWD_STR;
 
 	memset(rx_ports, 0x00, sizeof(rx_ports));
-	for (cnt = 0; cnt < path->num_rx; cnt++) {
-		rx_ports[cnt].iface_type = path->ports[cnt].rx.iface_type;
-		rx_ports[cnt].iface_no   = path->ports[cnt].rx.iface_no;
+	for (cnt = 0; cnt < fwd_path->num_rx; cnt++) {
+		rx_ports[cnt].iface_type = fwd_path->ports[cnt].rx.iface_type;
+		rx_ports[cnt].iface_no = fwd_path->ports[cnt].rx.iface_no;
 	}
 
 	memset(tx_ports, 0x00, sizeof(tx_ports));
-	for (cnt = 0; cnt < path->num_tx; cnt++) {
-		tx_ports[cnt].iface_type = path->ports[cnt].tx.iface_type;
-		tx_ports[cnt].iface_no   = path->ports[cnt].tx.iface_no;
+	for (cnt = 0; cnt < fwd_path->num_tx; cnt++) {
+		tx_ports[cnt].iface_type = fwd_path->ports[cnt].tx.iface_type;
+		tx_ports[cnt].iface_no = fwd_path->ports[cnt].tx.iface_no;
 	}
 
 	/* Set the information with the function specified by the command. */
 	ret = (*params->element_proc)(
 		params, lcore_id,
-		path->name, component_type,
-		path->num_rx, rx_ports, path->num_tx, tx_ports);
+		fwd_path->name, component_type,
+		fwd_path->num_rx, rx_ports, fwd_path->num_tx, tx_ports);
 	if (unlikely(ret != SPP_RET_OK))
 		return SPP_RET_NG;
 
-- 
2.17.1



------------------------------

Message: 5
Date: Mon, 24 Jun 2019 11:25:04 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 11/11] shared/sec: refactor setup cls table stat
	in	JSON
Message-ID: <20190624022504.18752-12-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to refactor setting up a list of entries in classifier
table for `status` command. Names of function for setting up JSON are
revised, but still hard to understand the features.
append_classifier_table() for setting up the entries calls several
nested functions as in the following order.

  append_classifier_table()  // This function.
    -> add_classifier_table()  // Wrapper and doesn't almost nothing.
      -> add_classifier_table_val()  // Setup data and call iterator.
        -> iterate_adding_mac_entry()

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/cmd_parser.c      |  2 +-
 .../secondary/spp_worker_th/cmd_runner.c      | 25 ++++++--
 .../secondary/spp_worker_th/cmd_utils.h       |  2 +-
 src/shared/secondary/spp_worker_th/vf_deps.h  |  8 ++-
 src/vf/classifier_mac.c                       | 64 +++++++++++--------
 src/vf/classifier_mac.h                       |  2 +-
 6 files changed, 67 insertions(+), 36 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.c b/src/shared/secondary/spp_worker_th/cmd_parser.c
index 55fc1d2..13e7013 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.c
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.c
@@ -651,7 +651,7 @@ parse_mac_addr(void *output, const char *arg_val,
 	const char *str_val = arg_val;
 
 	/* If given value is the default, use dummy address instead. */
-	if (unlikely(strcmp(str_val, SPP_DEFAULT_CLASSIFIED_SPEC_STR) == 0))
+	if (unlikely(strcmp(str_val, SPPWK_TERM_DEFAULT) == 0))
 		str_val = SPP_DEFAULT_CLASSIFIED_DMY_ADDR_STR;
 
 	/* Check if the given value is valid. */
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 856e79e..bc3ae06 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -561,12 +561,12 @@ spp_iterate_core_info(struct spp_iterate_core_params *params)
 /* Iterate classifier_table to create response to status command */
 #ifdef SPP_VF_MODULE
 static int
-spp_iterate_classifier_table(
+add_classifier_table(
 		struct spp_iterate_classifier_table_params *params)
 {
 	int ret;
 
-	ret = spp_classifier_mac_iterate_table(params);
+	ret = add_classifier_table_val(params);
 	if (unlikely(ret != 0)) {
 		RTE_LOG(ERR, WK_CMD_RUNNER, "Cannot iterate classifier_mac_table.\n");
 		return SPP_RET_NG;
@@ -1219,7 +1219,10 @@ append_core_value(const char *name, char **output,
 	return ret;
 }
 
-/* append one element of classifier table for JSON format */
+/**
+ * Operator function called in iterator for getting each of entries of
+ * classifier table named as iterate_adding_mac_entry().
+ */
 #ifdef SPP_VF_MODULE
 static int
 append_classifier_element_value(
@@ -1276,10 +1279,18 @@ append_classifier_element_value(
 }
 #endif /* SPP_VF_MODULE */
 
-/* append a list of classifier table for JSON format */
+/**
+ * Append entries of classifier table in JSON. Before iterating the entries,
+ * this function calls several nested functions.
+ *   append_classifier_table()  // This function.
+ *     -> add_classifier_table()  // Wrapper and doesn't almost nothing.
+ *       -> add_classifier_table_val()  // Setup data and call iterator.
+ *         -> iterate_adding_mac_entry()
+ *
+ */
 #ifdef SPP_VF_MODULE
 static int
-append_classifier_table_value(const char *name, char **output,
+append_classifier_table(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
 	int ret = SPP_RET_NG;
@@ -1296,7 +1307,7 @@ append_classifier_table_value(const char *name, char **output,
 	itr_params.output = tmp_buff;
 	itr_params.element_proc = append_classifier_element_value;
 
-	ret = spp_iterate_classifier_table(&itr_params);
+	ret = add_classifier_table(&itr_params);
 	if (unlikely(ret != SPP_RET_OK)) {
 		spp_strbuf_free(itr_params.output);
 		return SPP_RET_NG;
@@ -1388,7 +1399,7 @@ struct cmd_response response_info_list[] = {
 	{ "master-lcore", append_master_lcore_value },
 	{ "core", append_core_value },
 #ifdef SPP_VF_MODULE
-	{ "classifier_table", append_classifier_table_value },
+	{ "classifier_table", append_classifier_table},
 #endif /* SPP_VF_MODULE */
 	{ "", NULL }
 };
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 1d6c332..b8ab10c 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -47,7 +47,7 @@
 #define SPP_CORE_STATUS_CHECK_MAX 5
 
 /** Character sting for default port of classifier */
-#define SPP_DEFAULT_CLASSIFIED_SPEC_STR     "default"
+#define SPPWK_TERM_DEFAULT "default"
 
 /** Value for default MAC address of classifier */
 #define SPP_DEFAULT_CLASSIFIED_DMY_ADDR     0x010000000000
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index fb34215..beafc64 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -75,7 +75,13 @@ void init_classifier_info(int component_id);
 
 void uninit_component_info(struct cls_comp_info *cmp_info);
 
-int spp_classifier_mac_iterate_table(
+/**
+ * Setup data of classifier table and call iterator function for getting
+ * each of entries.
+ *
+ * @params[in] params Object which has pointer of operator func and attrs.
+ */
+int add_classifier_table_val(
 		struct spp_iterate_classifier_table_params *params);
 
 /**
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 9023a69..8d677a9 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -224,6 +224,7 @@ log_classification(
 		log_classification(clsd_idx, pkt, cmp_info, clsd_data, \
 				__func__, __LINE__)
 
+/* Log DEBUG message for classified MAC and VLAN info. */
 static void
 log_entry(
 		long clsd_idx,
@@ -852,13 +853,17 @@ get_classifier_status(unsigned int lcore_id, int id,
 	return SPP_RET_OK;
 }
 
+/**
+ * For setting up a response for `status` command, iterate adding each of
+ * entries in MAC address table to the result message.
+ */
 static void
-mac_classification_iterate_table(
+iterate_adding_mac_entry(
 		struct spp_iterate_classifier_table_params *params,
 		uint16_t vid,
 		struct mac_classifier *mac_cls,
 		__rte_unused struct cls_comp_info *cmp_info,
-		struct cls_port_info *clsd_data)
+		struct cls_port_info *port_info)
 {
 	int ret;
 	const void *key;
@@ -873,18 +878,20 @@ mac_classification_iterate_table(
 		type = SPP_CLASSIFIER_TYPE_MAC;
 
 	if (mac_cls->default_cls_idx >= 0) {
-		port.iface_type = (clsd_data +
+		port.iface_type = (port_info +
 				mac_cls->default_cls_idx)->iface_type;
-		port.iface_no   = (clsd_data +
+		port.iface_no = (port_info +
 				mac_cls->default_cls_idx)->iface_no_global;
 
-		LOG_ENT((long)mac_cls->default_cls_idx,
-				vid,
-				SPP_DEFAULT_CLASSIFIED_SPEC_STR,
-				cmp_info, clsd_data);
-
-		(*params->element_proc)(params, type, vid,
-				SPP_DEFAULT_CLASSIFIED_SPEC_STR, &port);
+		/* Logging DEBUG message. */
+		LOG_ENT((long)mac_cls->default_cls_idx, vid,
+				SPPWK_TERM_DEFAULT, cmp_info, port_info);
+		/**
+		 * Append "default" entry. `element_proc` is a funciton
+		 * pointer to append_classifier_element_value().
+		 */
+		(*params->element_proc)(params, type, vid, SPPWK_TERM_DEFAULT,
+				&port);
 	}
 
 	next = 0;
@@ -897,25 +904,32 @@ mac_classification_iterate_table(
 		ether_format_addr(mac_addr_str, sizeof(mac_addr_str),
 				(const struct ether_addr *)key);
 
-		port.iface_type = (clsd_data + (long)data)->iface_type;
-		port.iface_no   = (clsd_data + (long)data)->iface_no_global;
+		port.iface_type = (port_info + (long)data)->iface_type;
+		port.iface_no = (port_info + (long)data)->iface_no_global;
 
-		LOG_ENT((long)data, vid, mac_addr_str, cmp_info, clsd_data);
+		LOG_ENT((long)data, vid, mac_addr_str, cmp_info, port_info);
 
+		/**
+		 * Append each entry of MAC address. `element_proc` is a
+		 * funciton pointer to append_classifier_element_value().
+		 */
 		(*params->element_proc)(params, type, vid, mac_addr_str,
 				&port);
 	}
 }
 
-/* classifier(mac address) iterate classifier table. */
+/**
+ * Setup data of classifier table and call iterator function for getting
+ * each of entries.
+ */
 int
-spp_classifier_mac_iterate_table(
+add_classifier_table_val(
 		struct spp_iterate_classifier_table_params *params)
 {
-	int i, n;
+	int i, vlan_id;
 	struct management_info *mng_info;
 	struct cls_comp_info *cmp_info;
-	struct cls_port_info *clsd_data;
+	struct cls_port_info *port_info;
 
 	for (i = 0; i < RTE_MAX_LCORE; i++) {
 		mng_info = g_mng_infos + i;
@@ -923,18 +937,18 @@ spp_classifier_mac_iterate_table(
 			continue;
 
 		cmp_info = mng_info->cmp_infos + mng_info->ref_index;
-		clsd_data = cmp_info->tx_ports_i;
+		port_info = cmp_info->tx_ports_i;
 
 		RTE_LOG(DEBUG, SPP_CLASSIFIER_MAC,
-			"Core[%u] Start iterate classifier table.\n", i);
+			"Start iterate classifier table on lcore %u.\n", i);
 
-		for (n = 0; n < NOF_VLAN; ++n) {
-			if (cmp_info->mac_clfs[n] == NULL)
+		for (vlan_id = 0; vlan_id < NOF_VLAN; ++vlan_id) {
+			if (cmp_info->mac_clfs[vlan_id] == NULL)
 				continue;
 
-			mac_classification_iterate_table(params, (uint16_t) n,
-					cmp_info->mac_clfs[n], cmp_info,
-					clsd_data);
+			iterate_adding_mac_entry(params, (uint16_t) vlan_id,
+					cmp_info->mac_clfs[vlan_id], cmp_info,
+					port_info);
 		}
 	}
 
diff --git a/src/vf/classifier_mac.h b/src/vf/classifier_mac.h
index d3c5ab6..21433e6 100644
--- a/src/vf/classifier_mac.h
+++ b/src/vf/classifier_mac.h
@@ -56,7 +56,7 @@ int spp_classifier_mac_do(int id);
  * @retval SPP_RET_OK succeeded.
  * @retval SPP_RET_NG failed.
  */
-int spp_classifier_mac_iterate_table(
+int add_classifier_table_val(
 		struct spp_iterate_classifier_table_params *params);
 
 #endif /* _CLASSIFIER_MAC_H_ */
-- 
2.17.1



End of spp Digest, Vol 31, Issue 6
**********************************


From yasufum.o@gmail.com Mon Jun 24 13:36:00 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd106.ddreams.local
 (zssg-mailmd106.ddreams.local [10.160.123.101])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL00D1N64ZSMD0@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 13:36:35 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd106.ddreams.local by
 zssg-mailmd106.ddreams.local (dDREAMS) id <0PTL0151G64ZP900@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:36:35 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd106.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00FX064Z5AE0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:36:35 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id C5E857E6038	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:35 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id C47098E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:35 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id C343F8E605A	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:36:35 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id E45EE8E6058	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:34 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:36:34 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4aYGg008067;	Mon,
 24 Jun 2019 13:36:34 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O4aYuT008066;	Mon, 24 Jun 2019 13:36:34 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O4aYFX008063	for unknown; Mon,
 24 Jun 2019 13:36:34 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4aYCK016456 for
 unknown; Mon, 24 Jun 2019 13:36:34 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4aYbk016453; Mon,
 24 Jun 2019 13:36:34 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4aYsO030475;	Mon,
 24 Jun 2019 13:36:34 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O4aX2V030471	for unknown; Mon, 24 Jun 2019 13:36:33 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4aXbS013277 for
 unknown; Mon, 24 Jun 2019 13:36:33 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4aXcr013273 for
 unknown; Mon, 24 Jun 2019 13:36:33 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O4aQV7027478	for unknown; Mon,
 24 Jun 2019 13:36:32 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id D4C1E1BF55;	Mon, 24 Jun 2019 06:36:25 +0200 (CEST)
Received: from mail-pl1-f173.google.com
 (mail-pl1-f173.google.com [209.85.214.173]) by dpdk.org (Postfix)
 with ESMTP id 3851B1BF2C for <spp@dpdk.org>; Mon,
 24 Jun 2019 06:36:24 +0200 (CEST)
Received: by mail-pl1-f173.google.com with SMTP id c14so6150972plo.0 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 21:36:24 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id c10sm9005178pjq.14.2019.06.23.21.36.21
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 21:36:22 -0700 (PDT)
Date: Mon, 24 Jun 2019 13:36:00 +0900
From: yasufum.o@gmail.com
Subject: [spp 04372] [spp] [PATCH 00/13] Move JSON utils from libs for running
 cmds
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624043613.19271-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04372
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=MZZgitWzwyaWtHFjvxDmJqgiS0H81WxO/Gpxn7kHVWU=;
 b=SrxtLfUfEGQvxGoF3DOsaTb1UxMlO5f14lG4vki2NqSEjQOcJw1bH9IiUOixh2m77H
 R28Qtkf+kyfNa7uFIL6OQ1mJLCnE01/fT3WUQkVkwTyMksVDC+exCzuRi4CWTzU8cn9o
 ISrQSfpRtLfwUnXnG0vySBpacz6kndMK6Mqwhnq2X/JZCjvtLF+0iPlWp2wEwxgEOok4
 nL2zfyvJZekRLeLnEWKzI0YE81UPqVHSsXuc5uzMNCPkzlOmhBpS8F7wXT6JYZ5ig1wx
 fQVsOD5M7RLHCdlb7fwgdu7xvg4gkXda6dfukFr3r/r9HFZeunIcC4FqKKxyuGHc9mCK NEvA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=MZZgitWzwyaWtHFjvxDmJqgiS0H81WxO/Gpxn7kHVWU=;
 b=sJ0KG6fxBGtmDm+J/mkXNWzcbgHERJG+4agqVuNMjuk4wkv0JyuoBsJYeTqn09W0UF
 rkw9yCGiaMy+GfGqLFoKaqLsH6fQAEdZb1MMyoMXZuk+prGN0HmX+Qka+6fVMlwEmPT3
 g8Hf+IgYTgYQuiM3qG2v8AQvfhWDQZal2Lp3ATp6kilRTM9kOfn8Ea8MgxWndM5sWjPu
 mPO9phdYak+9Ktm1iekSJHOfCZZ6RsjIKWUQ7L8f9EgQdCdbIKAQAQIBYT58B6S4FJJL
 Rm3sxbI+1+nlelM+JzGSHu+9byIeDD21YmKyQaAP6dulerwT/4+iOvdmVC6Qz3jasL2I Yj+A==
X-Gm-Message-State: APjAAAWN4UloisCo5rJjam44A4sfOTvMxzyzQoAVQCJ+Wgj0cB2Qz9mu
 eOzxZd0CamScUA3rKO+AMwD3MYch
X-Google-Smtp-Source:
 APXvYqyAI9WGGr8nFKAgCKYyoM0GMyv3tslObcdvo1N8zXIVmaMOGDNMg75q9Fbcq8XigDMqskCG9Q==
X-Received: by 2002:a17:902:2a69:: with SMTP id
 i96mr136536305plb.108.1561350983332; Sun, 23 Jun 2019 21:36:23 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 59
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

There are many JSON utils in shared lib for running commands, and
hard to maintain because several features are defined in a huge file.
This series of patches is to separate JSON utils from other functions
and fix complex dependencies among them.

Yasufumi Ogawa (13):
  shared/sec: rename ops for setup cmd response
  shared/sec: rename functions for spp_mirror
  shared/sec: move principle JSON formatter funcs
  shared/sec: change order of args of JSON fmtters
  shared/sec: move JSON formatter to shard/secondary
  shared/sec: revise including headers
  shared/sec: move JSON formatters from cmd_runner
  shared/sec: move rest of JSON formatters
  shared/sec: move lcore funcs in response_info_list
  shared/sec: move ope cli-id in response_info_list
  shared/sec: move rest of ops in response_info_list
  shared/sec: remove local funcs from header
  shared/sec: refactor comments for JSON formatter

 src/mirror/Makefile                           |  11 +-
 src/mirror/spp_mirror.c                       |  75 +-
 src/mirror/spp_mirror.h                       |  26 -
 src/pcap/Makefile                             |   3 +-
 src/pcap/cmd_runner.c                         |   2 +-
 src/shared/secondary/json_helper.c            | 136 +++
 src/shared/secondary/json_helper.h            | 101 ++
 src/shared/secondary/return_codes.h           |  13 +
 .../secondary/spp_worker_th/cmd_parser.c      |   1 +
 .../spp_worker_th/cmd_res_formatter.c         | 831 +++++++++++++++
 .../spp_worker_th/cmd_res_formatter.h         |  83 ++
 .../secondary/spp_worker_th/cmd_runner.c      | 952 +-----------------
 .../secondary/spp_worker_th/cmd_utils.c       |   6 +-
 .../secondary/spp_worker_th/cmd_utils.h       |   8 +-
 .../secondary/spp_worker_th/conn_spp_ctl.c    |   3 +-
 .../secondary/spp_worker_th/mirror_deps.h     |  33 +-
 src/shared/secondary/spp_worker_th/spp_port.c |   1 +
 src/shared/secondary/spp_worker_th/vf_deps.h  |   2 +-
 .../{spp_worker_th => }/string_buffer.c       |   0
 .../{spp_worker_th => }/string_buffer.h       |   2 +
 src/vf/Makefile                               |   7 +-
 src/vf/classifier_mac.c                       |   6 +-
 src/vf/spp_forward.c                          |   5 +-
 src/vf/spp_vf.c                               |   3 +-
 24 files changed, 1260 insertions(+), 1050 deletions(-)
 delete mode 100644 src/mirror/spp_mirror.h
 create mode 100644 src/shared/secondary/json_helper.c
 create mode 100644 src/shared/secondary/json_helper.h
 create mode 100644 src/shared/secondary/return_codes.h
 create mode 100644 src/shared/secondary/spp_worker_th/cmd_res_formatter.c
 create mode 100644 src/shared/secondary/spp_worker_th/cmd_res_formatter.h
 rename src/shared/secondary/{spp_worker_th => }/string_buffer.c (100%)
 rename src/shared/secondary/{spp_worker_th => }/string_buffer.h (98%)

-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 13:36:01 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd105.ddreams.local
 (zssg-mailmd105.ddreams.local [10.160.123.100])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL00D37656SMD0@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 13:36:42 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd105.ddreams.local by
 zssg-mailmd105.ddreams.local (dDREAMS) id <0PTL00958656HR00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:36:42 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd105.ddreams.local
 (dDREAMS) with ESMTP id <0PTL01AIG655CE70@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:36:41 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id DD61D7E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:41 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id DC0898E6058	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:41 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id D12AD8E6042	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:36:41 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 3784E8E6042	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:41 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:36:41 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4afhh008132;	Mon,
 24 Jun 2019 13:36:41 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O4afNT008131;	Mon, 24 Jun 2019 13:36:41 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O4aeiC008128	for unknown; Mon,
 24 Jun 2019 13:36:40 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4ae2e016509 for
 unknown; Mon, 24 Jun 2019 13:36:40 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4ae7Z016506; Mon,
 24 Jun 2019 13:36:40 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4aeo4030505;	Mon,
 24 Jun 2019 13:36:40 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O4aeSe030501	for unknown; Mon, 24 Jun 2019 13:36:40 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4aej5013343 for
 unknown; Mon, 24 Jun 2019 13:36:40 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4aerx013337 for
 unknown; Mon, 24 Jun 2019 13:36:40 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O4aXD9027503	for unknown; Mon,
 24 Jun 2019 13:36:39 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id E9CB81BF58;	Mon, 24 Jun 2019 06:36:32 +0200 (CEST)
Received: from mail-pg1-f195.google.com
 (mail-pg1-f195.google.com [209.85.215.195]) by dpdk.org (Postfix)
 with ESMTP id 0F0B01BF56 for <spp@dpdk.org>; Mon,
 24 Jun 2019 06:36:31 +0200 (CEST)
Received: by mail-pg1-f195.google.com with SMTP id s27so6415164pgl.2 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 21:36:30 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id c10sm9005178pjq.14.2019.06.23.21.36.28
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 21:36:29 -0700 (PDT)
Date: Mon, 24 Jun 2019 13:36:01 +0900
From: yasufum.o@gmail.com
Subject: [spp 04373] [spp] [PATCH 01/13] shared/sec: rename ops for setup cmd
 response
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624043613.19271-2-yasufum.o@gmail.com>
In-reply-to: <20190624043613.19271-1-yasufum.o@gmail.com>
References: <20190624043613.19271-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04373
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=3HcySy6jXpE662WBPHj/HQiQ8pv2wRqUDQhQDqQX6cM=;
 b=IUR/17qfAKKRAL3JYuH7W+O8hyb1f/TCbl7/c4f7Emrwurhta7IF142WK7+wM/lLSp
 idVbKvqEoXHuwqxDUO1tSeThHlh9qFwvBSvu13T+1jbD0aDTm4Gbxg1eqE0e8+89YTIN
 7QtNJKyhpydYOzQO2KUu5lBMtmMf+FgrxxFAcIoIrpAuSgUUEucglrNLssAIN1B43DsM
 hTkThmgjlk7zE8S4W6is3go8uKPr9/Wsd5jXFQgscvD6TafrVTcZLPZPuQ36WLbuQSZO
 YVKrGkJcJKhfm8wS2pEoWN+ySVHJ0j8KOewvY6ebuOHKWOZGVKO0Orl4YFT5I1ZlCIZY 0fsA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=3HcySy6jXpE662WBPHj/HQiQ8pv2wRqUDQhQDqQX6cM=;
 b=g2VZ2/ietTdTTplAip3gaeOShJzF5Knm9Fzc7pJV1wHGFPPL+wLgyfOzW9PyLoyyoe
 a9zOCG5F2BTcIoXRJoSL5jM/npJYYwHEBRwcEGtF0zOtZawnR2NidaI/5uXCMC998ZDD
 NGIa4K5uhmErKIU7YZAA+BXp2MVJf3vtorp0Df2nbjb5HKLUOvXV/2vKoNJSLrKNn38L
 RVEGYyWuzN14PP4NXyoveA/+fQzHh6ceMciogt+5lPHmvro/4j5IC2uj1kFuvtQSD1Bl
 XODCHfBnhXiNzKHOdmcNpDEcn/pKuKWJEHG2VvabmJ5eroHagl7tugL1c/n1daqPwIfg ZReA==
X-Gm-Message-State: APjAAAWFEGJlD+ocTTvevW3JOycsh8xMXr5z7t1cdRy3F/IbenEQnuUW
 T9BUC7wO/DYYBGz5Ry+nNYrAk0oU
X-Google-Smtp-Source:
 APXvYqz4L+nNXe4a9S8xJD8m2BHNK96UxXcktnojyxyG1ijRmSQ54711ze8VkVAHSErVDxoWIfkWsw==
X-Received: by 2002:a17:90a:cd03:: with SMTP id
 d3mr21509331pju.127.1561350990146; Sun, 23 Jun 2019 21:36:30 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 195
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

For refactoring, rename operation functions in `response_info_list`
of struct cmd_response. It is for assembling a JSON response message
and starts with `append_`. However, There are many functions start
with `append_` other than these operation functions and it is so
confusing. This update is to rename the prefix to `add_`, and revise
comments and vars.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/cmd_runner.c      | 71 ++++++++++---------
 1 file changed, 38 insertions(+), 33 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index bc3ae06..f686209 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -561,7 +561,7 @@ spp_iterate_core_info(struct spp_iterate_core_params *params)
 /* Iterate classifier_table to create response to status command */
 #ifdef SPP_VF_MODULE
 static int
-add_classifier_table(
+_add_classifier_table(
 		struct spp_iterate_classifier_table_params *params)
 {
 	int ret;
@@ -903,9 +903,9 @@ append_error_details_value(const char *name, char **output, void *tmp)
 	return ret;
 }
 
-/* append a client id for JSON format */
+/* Add entry of client ID to a response in JSON. */
 static int
-append_client_id_value(const char *name, char **output,
+add_client_id(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
 	return append_json_int_value(name, output, sppwk_get_client_id());
@@ -947,9 +947,9 @@ append_process_type_value(const char *name, char **output,
 			SPPWK_PROC_TYPE_LIST[sppwk_get_proc_type()]);
 }
 
-/* append a list of interface numbers for JSON format */
+/* Add entry of port to a response in JSON such as "phy:0". */
 static int
-append_interface_value(const char *name, char **output,
+add_interface(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
 	int ret = SPP_RET_NG;
@@ -1115,7 +1115,7 @@ append_port_array(const char *name, char **output, const int num,
 }
 
 /**
- * TODO(yasufum) add usages called from `append_core_value` or refactor
+ * TODO(yasufum) add usages called from `add_core` or refactor
  * confusing function names.
  */
 /* append one element of core information for JSON format */
@@ -1179,9 +1179,9 @@ append_core_element_value(
 	return ret;
 }
 
-/* append master lcore in JSON format */
+/* Add entry of master lcore to a response in JSON. */
 static int
-append_master_lcore_value(const char *name, char **output,
+add_master_lcore(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
 	int ret = SPP_RET_NG;
@@ -1189,9 +1189,9 @@ append_master_lcore_value(const char *name, char **output,
 	return ret;
 }
 
-/* append a list of core information for JSON format */
+/* Add entry of core info of worker to a response in JSON such as "core:0". */
 static int
-append_core_value(const char *name, char **output,
+add_core(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
 	int ret = SPP_RET_NG;
@@ -1280,17 +1280,16 @@ append_classifier_element_value(
 #endif /* SPP_VF_MODULE */
 
 /**
- * Append entries of classifier table in JSON. Before iterating the entries,
+ * Add entries of classifier table in JSON. Before iterating the entries,
  * this function calls several nested functions.
- *   append_classifier_table()  // This function.
- *     -> add_classifier_table()  // Wrapper and doesn't almost nothing.
+ *   add_classifier_table()  // This function.
+ *     -> _add_classifier_table()  // Wrapper and doesn't almost nothing.
  *       -> add_classifier_table_val()  // Setup data and call iterator.
  *         -> iterate_adding_mac_entry()
- *
  */
 #ifdef SPP_VF_MODULE
 static int
-append_classifier_table(const char *name, char **output,
+add_classifier_table(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
 	int ret = SPP_RET_NG;
@@ -1307,7 +1306,7 @@ append_classifier_table(const char *name, char **output,
 	itr_params.output = tmp_buff;
 	itr_params.element_proc = append_classifier_element_value;
 
-	ret = add_classifier_table(&itr_params);
+	ret = _add_classifier_table(&itr_params);
 	if (unlikely(ret != SPP_RET_OK)) {
 		spp_strbuf_free(itr_params.output);
 		return SPP_RET_NG;
@@ -1386,20 +1385,26 @@ struct cmd_response response_result_list[] = {
 };
 
 /**
- * TODO(yasufum) Add desc why it is needed and how to be used. At least, func
- * name is not appropriate because not for reponse, but name of funcs returns
- * response.
+ * List of combination of tag and operator function. It is used to assemble
+ * a result of command in JSON like as following.
+ *
+ *     {
+ *         "client-id": 1,
+ *         "ports": ["phy:0", "phy:1", "vhost:0", "ring:0"],
+ *         "components": [
+ *             {
+ *                 "core": 2,
+ *                 ...
  */
-/* command response status information string list */
 struct cmd_response response_info_list[] = {
-	{ "client-id", append_client_id_value },
-	{ "phy", append_interface_value },
-	{ "vhost", append_interface_value },
-	{ "ring", append_interface_value },
-	{ "master-lcore", append_master_lcore_value },
-	{ "core", append_core_value },
+	{ "client-id", add_client_id },
+	{ "phy", add_interface },
+	{ "vhost", add_interface },
+	{ "ring", add_interface },
+	{ "master-lcore", add_master_lcore},
+	{ "core", add_core},
 #ifdef SPP_VF_MODULE
-	{ "classifier_table", append_classifier_table},
+	{ "classifier_table", add_classifier_table},
 #endif /* SPP_VF_MODULE */
 	{ "", NULL }
 };
@@ -1541,9 +1546,9 @@ send_decode_error_response(int *sock,
 	spp_strbuf_free(msg);
 }
 
-/* send response for command execution result */
+/* Send the result of command to spp-ctl. */
 static void
-send_command_result_response(int *sock,
+send_result_spp_ctl(int *sock,
 		const struct sppwk_cmd_req *request,
 		struct cmd_result *cmd_results)
 {
@@ -1569,7 +1574,7 @@ send_command_result_response(int *sock,
 
 	/* append client id information value */
 	if (request->is_requested_client_id) {
-		ret = append_client_id_value("client_id", &tmp_buff, NULL);
+		ret = add_client_id("client_id", &tmp_buff, NULL);
 		if (unlikely(ret < SPP_RET_OK)) {
 			spp_strbuf_free(tmp_buff);
 			RTE_LOG(ERR, WK_CMD_RUNNER, "Failed to make "
@@ -1675,14 +1680,14 @@ exec_cmds(int *sock, const char *req_str, size_t req_str_len)
 	/* Exec exit command. */
 	if (cmd_req.is_requested_exit) {
 		set_cmd_result(&cmd_results[0], CMD_SUCCESS, "");
-		send_command_result_response(sock, &cmd_req, cmd_results);
+		send_result_spp_ctl(sock, &cmd_req, cmd_results);
 		RTE_LOG(INFO, WK_CMD_RUNNER,
 				"Process is terminated with exit cmd.\n");
 		return SPP_RET_NG;
 	}
 
-	/* send response */
-	send_command_result_response(sock, &cmd_req, cmd_results);
+	/* Send response to spp-ctl. */
+	send_result_spp_ctl(sock, &cmd_req, cmd_results);
 
 	RTE_LOG(DEBUG, WK_CMD_RUNNER, "End command request processing.\n");
 
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 13:36:02 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd105.ddreams.local
 (zssg-mailmd105.ddreams.local [10.160.123.100])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL00D4365ASMD0@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 13:36:46 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd105.ddreams.local by
 zssg-mailmd105.ddreams.local (dDREAMS) id <0PTL0091K659XI00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:36:45 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd105.ddreams.local
 (dDREAMS) with ESMTP id <0PTL01ALL659CE70@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:36:45 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id DF64D7E6038	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:45 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id DE4B78E6068	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:45 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id DCE0B8E606C	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:36:45 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 5D0728E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:45 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:36:45 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4ajlx008159;	Mon,
 24 Jun 2019 13:36:45 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O4ajHV008158;	Mon, 24 Jun 2019 13:36:45 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O4aiPH008155	for unknown; Mon,
 24 Jun 2019 13:36:45 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4aiNG016545 for
 unknown; Mon, 24 Jun 2019 13:36:44 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4aiSP016542; Mon,
 24 Jun 2019 13:36:44 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4aiPD030519;	Mon,
 24 Jun 2019 13:36:44 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O4aiT7030515	for unknown; Mon, 24 Jun 2019 13:36:44 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4aiJI013372 for
 unknown; Mon, 24 Jun 2019 13:36:44 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4aikI013365 for
 unknown; Mon, 24 Jun 2019 13:36:44 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O4abO8027529	for unknown; Mon,
 24 Jun 2019 13:36:43 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 1780E1BF59;	Mon, 24 Jun 2019 06:36:37 +0200 (CEST)
Received: from mail-pg1-f195.google.com
 (mail-pg1-f195.google.com [209.85.215.195]) by dpdk.org (Postfix)
 with ESMTP id E09241BF2C for <spp@dpdk.org>; Mon,
 24 Jun 2019 06:36:34 +0200 (CEST)
Received: by mail-pg1-f195.google.com with SMTP id f25so6393879pgv.10 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 21:36:34 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id c10sm9005178pjq.14.2019.06.23.21.36.31
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 21:36:32 -0700 (PDT)
Date: Mon, 24 Jun 2019 13:36:02 +0900
From: yasufum.o@gmail.com
Subject: [spp 04374] [spp] [PATCH 02/13] shared/sec: rename functions for
 spp_mirror
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624043613.19271-3-yasufum.o@gmail.com>
In-reply-to: <20190624043613.19271-1-yasufum.o@gmail.com>
References: <20190624043613.19271-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04374
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=EmnGmhmGNvg2Zlyf+hbl+r4Ku3CS2DSe5+pK2fsyHXg=;
 b=f0jsJLHmYoMYTs2R7AEyCZoclRTPyNMRZHWopw5OkPMF4iy7bThhozOwzmNERUvZWs
 865EikMfNuaaE9wJnj5N/AUDNV41Ny0GcY/RYJCSihmKTkxZvgdtjZVeSX34CQFeaxgm
 /msluTBB8iJokxcwcyM3dMkPWnP3Cl2mMfRq77cWcteeczgGkosHMDCZlFHpT0Hxtg9N
 HXAdFKiVCMXqRiUUkHxvkNeGZbCFD3AYqrUMGEzfXEYIx2I5FFq/k+4sew2Iv1qf4WDg
 gTvh69KpOA5qW3rMT/ilt3iNA1qckIjgr930GGcE3KcLpJoTsUbs8GSKnU+EjgT9f4W0 0K/Q==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=EmnGmhmGNvg2Zlyf+hbl+r4Ku3CS2DSe5+pK2fsyHXg=;
 b=CAJNP6+ObWU2FHPH2h8/352wdINk+85HNMr/WI5nLHeixpLKFmjHBO7+gJtpvK93ZA
 iZhc65Iw0nPX9oSpQ/RccU2F7kZ+lHUHPAluSGjkkY7CluUybGCexzcKdC/hbZGtFyyl
 HhhA6vbuNK/bR3UWQFYL10MyvbeLkvrpP3eZshLahNrHrtfKR/8ZGk7GwjfI2twOFbzX
 b9nv62BTWhtrkEVCwu+LDrOfVVRVu3FYBwggdaP7DsanycQSISGUXH9pLxPGXkds9Ldl
 Wu3gWzHNQ7Evsb/kei9gA/WKHMtHpIG9qskjpJBLK/k99lyOVtBQMfyo2uOivwUhypDn mlmQ==
X-Gm-Message-State: APjAAAWmjOCPOP0OBm+OCg3fZL2Bi8TwecCJHY6loF9etuCm8OhMHT1V
 GYoEVeY6bLVDlxbvjZc3Q7WmGkDD
X-Google-Smtp-Source:
 APXvYqyFtOOQuSEn6AlQfGCyor/tOZBZetOnt1ATAb0ecXXgKaRtjkBH5itubzBDZQVTjHlW48WBqw==
X-Received: by 2002:a63:4f5b:: with SMTP id p27mr30432791pgl.273.1561350993117;
 Sun, 23 Jun 2019 21:36:33 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 238
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Rename spp_mirror_get_component_status() to get_mirror_status(), and
spp_mirror_update() to update_mirror(). This update also revises
comments for the functions.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/spp_mirror.c                       | 72 ++++++++-----------
 .../secondary/spp_worker_th/cmd_runner.c      |  6 +-
 .../secondary/spp_worker_th/cmd_utils.c       |  2 +-
 .../secondary/spp_worker_th/mirror_deps.h     | 33 ++++-----
 src/shared/secondary/spp_worker_th/vf_deps.h  |  2 +-
 5 files changed, 47 insertions(+), 68 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index f62ae7e..c2ec09d 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -277,50 +277,45 @@ mirror_proc_init(void)
 
 /* Update mirror info */
 int
-spp_mirror_update(struct sppwk_comp_info *component)
+update_mirror(struct sppwk_comp_info *wk_comp)
 {
 	int cnt = 0;
-	int num_rx = component->nof_rx;
-	int num_tx = component->nof_tx;
-	struct mirror_info *info = &g_mirror_info[component->comp_id];
+	int nof_rx = wk_comp->nof_rx;
+	int nof_tx = wk_comp->nof_tx;
+	struct mirror_info *info = &g_mirror_info[wk_comp->comp_id];
 	struct mirror_path *path = &info->path[info->upd_index];
 
-	/* mirror component allows only one receiving port. */
-	if (unlikely(num_rx > 1)) {
+	/* Check mirror has just one RX and two TX port. */
+	if (unlikely(nof_rx > 1)) {
 		RTE_LOG(ERR, MIRROR,
-			"Component[%d] Setting error. (type = %d, rx = %d)\n",
-			component->comp_id, component->wk_type, num_rx);
+			"Invalid num of RX (id=%d, type=%d, nof_rx=%d)\n",
+			wk_comp->comp_id, wk_comp->wk_type, nof_rx);
 		return SPP_RET_NG;
 	}
-
-	/* Component allows only tewo transmit port. */
-	if (unlikely(num_tx > 2)) {
+	if (unlikely(nof_tx > 2)) {
 		RTE_LOG(ERR, MIRROR,
-			"Component[%d] Setting error. (type = %d, tx = %d)\n",
-			component->comp_id, component->wk_type, num_tx);
+			"Invalid num of TX (id=%d, type=%d, nof_tx=%d)\n",
+			wk_comp->comp_id, wk_comp->wk_type, nof_tx);
 		return SPP_RET_NG;
 	}
 
 	memset(path, 0x00, sizeof(struct mirror_path));
 
 	RTE_LOG(INFO, MIRROR,
-			"Component[%d] Start update component. "
-			"(name = %s, type = %d)\n",
-			component->comp_id,
-			component->name,
-			component->wk_type);
-
-	memcpy(&path->name, component->name, STR_LEN_NAME);
-	path->wk_type = component->wk_type;
-	path->nof_rx = component->nof_rx;
-	path->nof_tx = component->nof_tx;
-	for (cnt = 0; cnt < num_rx; cnt++)
-		memcpy(&path->ports[cnt].rx, component->rx_ports[cnt],
+			"Start updating mirror (id=%d, name=%s, type=%d)\n",
+			wk_comp->comp_id, wk_comp->name, wk_comp->wk_type);
+
+	memcpy(&path->name, wk_comp->name, STR_LEN_NAME);
+	path->wk_type = wk_comp->wk_type;
+	path->nof_rx = wk_comp->nof_rx;
+	path->nof_tx = wk_comp->nof_tx;
+	for (cnt = 0; cnt < nof_rx; cnt++)
+		memcpy(&path->ports[cnt].rx, wk_comp->rx_ports[cnt],
 				sizeof(struct sppwk_port_info));
 
-	/* Transmit port is set according with larger num_rx / num_tx. */
-	for (cnt = 0; cnt < num_tx; cnt++)
-		memcpy(&path->ports[cnt].tx, component->tx_ports[cnt],
+	/* Transmit port is set according with larger nof_rx / nof_tx. */
+	for (cnt = 0; cnt < nof_tx; cnt++)
+		memcpy(&path->ports[cnt].tx, wk_comp->tx_ports[cnt],
 				sizeof(struct sppwk_port_info));
 
 	info->upd_index = info->ref_index;
@@ -328,10 +323,8 @@ spp_mirror_update(struct sppwk_comp_info *component)
 		rte_delay_us_block(SPP_CHANGE_UPDATE_INTERVAL);
 
 	RTE_LOG(INFO, MIRROR,
-			"Component[%d] Complete update component. "
-			"(name = %s, type = %d)\n",
-			component->comp_id, component->name,
-			component->wk_type);
+			"Done update mirror (id=%d, name=%s, type=%d)\n",
+			wk_comp->comp_id, wk_comp->name, wk_comp->wk_type);
 
 	return SPP_RET_OK;
 }
@@ -465,8 +458,7 @@ mirror_proc(int id)
 
 /* Mirror get component status */
 int
-spp_mirror_get_component_status(
-		unsigned int lcore_id, int id,
+get_mirror_status(unsigned int lcore_id, int id,
 		struct spp_iterate_core_params *params)
 {
 	int ret = SPP_RET_NG;
@@ -479,9 +471,8 @@ spp_mirror_get_component_status(
 
 	if (unlikely(path->wk_type == SPPWK_TYPE_NONE)) {
 		RTE_LOG(ERR, MIRROR,
-				"Component[%d] Not used. "
-				"(status)(core = %d, type = %d)\n",
-				id, lcore_id, path->wk_type);
+			"Mirror is not used. (id=%d, lcore=%d, type=%d)\n",
+			id, lcore_id, path->wk_type);
 		return SPP_RET_NG;
 	}
 
@@ -500,10 +491,9 @@ spp_mirror_get_component_status(
 	}
 
 	/* Set the information with the function specified by the command. */
-	ret = (*params->element_proc)(
-		params, lcore_id,
-		path->name, component_type,
-		path->nof_rx, rx_ports, path->nof_tx, tx_ports);
+	ret = (*params->element_proc)(params, lcore_id, path->name,
+			component_type, path->nof_rx, rx_ports, path->nof_tx,
+			tx_ports);
 	if (unlikely(ret != 0))
 		return SPP_RET_NG;
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index f686209..4c4abd8 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -540,10 +540,8 @@ spp_iterate_core_info(struct spp_iterate_core_params *params)
 			}
 #endif /* SPP_VF_MODULE */
 #ifdef SPP_MIRROR_MODULE
-			ret = spp_mirror_get_component_status(
-						lcore_id,
-						core->id[cnt],
-						params);
+			ret = get_mirror_status(lcore_id, core->id[cnt],
+					params);
 #endif /* SPP_MIRROR_MODULE */
 			if (unlikely(ret != 0)) {
 				RTE_LOG(ERR, WK_CMD_RUNNER, "Cannot iterate core "
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 709c3da..79dd2e7 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -897,7 +897,7 @@ update_comp_info(void)
 #endif /* SPP_VF_MODULE */
 
 #ifdef SPP_MIRROR_MODULE
-		ret = spp_mirror_update(comp_info);
+		ret = update_mirror(comp_info);
 #endif /* SPP_MIRROR_MODULE */
 
 		if (unlikely(ret < 0)) {
diff --git a/src/shared/secondary/spp_worker_th/mirror_deps.h b/src/shared/secondary/spp_worker_th/mirror_deps.h
index 83edc1f..bfa715d 100644
--- a/src/shared/secondary/spp_worker_th/mirror_deps.h
+++ b/src/shared/secondary/spp_worker_th/mirror_deps.h
@@ -8,33 +8,24 @@
 #include "cmd_utils.h"
 
 /**
- * Update Mirror info
+ * Update mirror info.
  *
- * @param component
- *  The pointer to struct sppwk_comp_info.@n
- *  The data for updating the internal data of mirror.
- *
- * @retval SPP_RET_OK succeeded.
- * @retval SPP_RET_NG failed.
+ * @param wk_comp_info Pointer to internal data of mirror.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
-int spp_mirror_update(struct sppwk_comp_info *component);
+int update_mirror(struct sppwk_comp_info *wk_comp_info);
 
 /**
- * Mirror get component status
- *
- * @param lcore_id
- *  The logical core ID for forwarder and merger.
- * @param id
- *  The unique component ID.
- * @param params
- *  The pointer to struct spp_iterate_core_params.@n
- *  Detailed data of mirror status.
+ * Get mirror status.
  *
- * @retval SPP_RET_OK succeeded.
- * @retval SPP_RET_NG failed.
+ * @param lcore_id Lcore ID for forwarder and merger.
+ * @param id Unique component ID.
+ * @param params Pointer to detailed data of mirror status.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
-int spp_mirror_get_component_status(
-		unsigned int lcore_id, int id,
+int get_mirror_status(unsigned int lcore_id, int id,
 		struct spp_iterate_core_params *params);
 
 #endif  /* __SPP_WORKER_TH_MIRROR_DEPS_H__ */
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index beafc64..73e0f9a 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -56,7 +56,7 @@ free_mac_classifier(struct mac_classifier *mac_clf)
 /**
  * Update classifier info.
  *
- * @param comp_info Pointer to internal data of classifier.
+ * @param wk_comp_info Pointer to internal data of classifier.
  * @retval SPP_RET_OK If succeeded.
  * @retval SPP_RET_NG If failed.
  */
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 13:36:03 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd103.ddreams.local
 (zssg-mailmd103.ddreams.local [10.160.123.98]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00D4U65BSMD0@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 13:36:47 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd103.ddreams.local by
 zssg-mailmd103.ddreams.local (dDREAMS) id <0PTL00U3O65BDF00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:36:47 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd103.ddreams.local
 (dDREAMS) with ESMTP id <0PTL007I465BWVC0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:36:47 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id 5A0757E6038	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:47 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 5911C8E6058	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:47 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 577938E6054	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:36:47 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 9A1818E6058	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:46 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:36:46 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4akmh008173;	Mon,
 24 Jun 2019 13:36:46 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O4akxY008172;	Mon, 24 Jun 2019 13:36:46 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O4akfL008169	for unknown; Mon,
 24 Jun 2019 13:36:46 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4ajdX016570 for
 unknown; Mon, 24 Jun 2019 13:36:46 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4ajEK016567; Mon,
 24 Jun 2019 13:36:45 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4ajRs030526;	Mon,
 24 Jun 2019 13:36:45 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O4ajR6030522	for unknown; Mon, 24 Jun 2019 13:36:45 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4aj4f013395 for
 unknown; Mon, 24 Jun 2019 13:36:45 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4ajOe013389 for
 unknown; Mon, 24 Jun 2019 13:36:45 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O4acRQ027539	for unknown; Mon,
 24 Jun 2019 13:36:44 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 253331BF5C;	Mon, 24 Jun 2019 06:36:38 +0200 (CEST)
Received: from mail-pf1-f195.google.com
 (mail-pf1-f195.google.com [209.85.210.195]) by dpdk.org (Postfix)
 with ESMTP id 33A281BF5A for <spp@dpdk.org>; Mon,
 24 Jun 2019 06:36:37 +0200 (CEST)
Received: by mail-pf1-f195.google.com with SMTP id 81so6734862pfy.13 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 21:36:37 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id c10sm9005178pjq.14.2019.06.23.21.36.34
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 21:36:35 -0700 (PDT)
Date: Mon, 24 Jun 2019 13:36:03 +0900
From: yasufum.o@gmail.com
Subject: [spp 04375] [spp] [PATCH 03/13] shared/sec: move principle JSON
 formatter funcs
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624043613.19271-4-yasufum.o@gmail.com>
In-reply-to: <20190624043613.19271-1-yasufum.o@gmail.com>
References: <20190624043613.19271-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04375
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=IPlX4YB1lBue3M0ymqS6nbT+j2u9sjXHAZ5U9RAIoaI=;
 b=ZcO5u1hZdhNn34hp0f5K5LDJ70YOdIKUyzcIAa62YCVyd7B09IRo941cyALPn1t89g
 m8OXLhrVXou04WfuOznx+EzC0F7ifyDNcOIlI0KClJEqhKyEZm3UDMnrfVepoDxkew0w
 zTUkddE2izXx8yw+Qu0KViCiShHcm9No/nqWKETYz9VUisD8DE0L2pU50FU79AZ2C36x
 2y3xWdXBBz5bz+9/7cH+AIBovDkU6g6jtbXWf22eIw2D511ODnJLVliF5f36m93t1g07
 oYM7CqHQOroNsRhYq9a3eBTltrurP/QvnSGkGC2SHaz3PbqM64Ox5pKe5pxFme1S7S41 jwmQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=IPlX4YB1lBue3M0ymqS6nbT+j2u9sjXHAZ5U9RAIoaI=;
 b=qOUM8FUiJ6jqGRaABYRXg2Zm9SHULKKEmki0k2a6oKqLBGLDyPpx6aFh8s9zwkte4e
 X0Xrgh3UTqWaV277OBkwj4d2/jt/GlQg6sdYseAa0tZz6i8AqBZ/4gfUI8pXlUYEwUQ2
 Qsg32g8gAFdFSdKuYq/BoT9sAZvdclJiJU/+ONE+oO6NUZWLr1GSyMSrHzpehQCLqSNN
 q5zyghfybqeY4Bb0IzaLov7HuffhU6fO6RVRpCpNcJptyhL+srXhyReCA2Vp5Me07zh0
 EvgEAPx70ZzHaOKkd6AX3+mNcUMqkUG8HSZkieJspHKwRczEjlCbnf087uMCi+UKsvnK 7EpQ==
X-Gm-Message-State: APjAAAWzaFN9UF+exFfDwPvJHz0ha8G3ihm03YZPYuy7cR2KlfQGXujG
 cQe93jcmGEdOHSrrDTEYjGUQy7VQ
X-Google-Smtp-Source:
 APXvYqw2+J0z3MpCOOHUW5rl3UdTeg7A3g9UsOzzvisKDsdlArxo5t35IEGNF9yN0xiXp7Uo5vKrvg==
X-Received: by 2002:a63:3442:: with SMTP id b63mr7385084pga.13.1561350996093;
 Sun, 23 Jun 2019 21:36:36 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 390
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move JSON formatter functions start with `append_json`
which have principle features, such as appending int, uint or so, to
separate other formatters have prefix `append_` but not principle
features. Added files are `json_helper.c` and json_helper.h` for the
moved functions.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/Makefile                           |   1 +
 .../secondary/spp_worker_th/cmd_runner.c      | 127 +-----------------
 .../secondary/spp_worker_th/json_helper.c     | 125 +++++++++++++++++
 .../secondary/spp_worker_th/json_helper.h     |  38 ++++++
 .../secondary/spp_worker_th/string_buffer.h   |   2 +
 src/vf/Makefile                               |   1 +
 6 files changed, 168 insertions(+), 126 deletions(-)
 create mode 100644 src/shared/secondary/spp_worker_th/json_helper.c
 create mode 100644 src/shared/secondary/spp_worker_th/json_helper.h

diff --git a/src/mirror/Makefile b/src/mirror/Makefile
index 3e31cfa..6b6b9b9 100644
--- a/src/mirror/Makefile
+++ b/src/mirror/Makefile
@@ -22,6 +22,7 @@ SRCS-y += $(SPP_WKT_DIR)/spp_port.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_runner.c
+SRCS-y += $(SPP_WKT_DIR)/json_helper.c
 SRCS-y += $(SPP_WKT_DIR)/string_buffer.c
 SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 4c4abd8..423774b 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -13,6 +13,7 @@
 #include "spp_port.h"
 #include "string_buffer.h"
 
+#include "json_helper.h"
 #include "conn_spp_ctl.h"
 #include "cmd_parser.h"
 #include "cmd_runner.h"
@@ -21,17 +22,9 @@
 
 /* request message initial size */
 #define CMD_ERR_MSG_LEN 128
-#define CMD_TAG_APPEND_SIZE 16
 #define CMD_REQ_BUF_INIT_SIZE 2048
 #define CMD_RES_BUF_INIT_SIZE 2048
 
-/* TODO(yasufum) confirm why using "" for the alternative of comma? */
-#define JSON_APPEND_COMMA(flg)    ((flg)?", ":"")
-#define JSON_APPEND_VALUE(format) "%s\"%s\": "format
-#define JSON_APPEND_ARRAY         "%s\"%s\": [ %s ]"
-#define JSON_APPEND_BLOCK         "%s\"%s\": { %s }"
-#define JSON_APPEND_BLOCK_NONAME  "%s%s{ %s }"
-
 enum cmd_res_code {
 	CMD_SUCCESS = 0,
 	CMD_FAILED,
@@ -597,124 +590,6 @@ sppwk_get_ethdev_port_id(enum port_type iface_type, int iface_no)
 	}
 }
 
-/* append a comma for JSON format */
-static int
-append_json_comma(char **output)
-{
-	*output = spp_strbuf_append(*output, ", ", strlen(", "));
-	if (unlikely(*output == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				"JSON's comma failed to add.\n");
-		return SPP_RET_NG;
-	}
-
-	return SPP_RET_OK;
-}
-
-/* append data of unsigned integral type for JSON format */
-static int
-append_json_uint_value(const char *name, char **output, unsigned int value)
-{
-	int len = strlen(*output);
-	/* extend the buffer */
-	*output = spp_strbuf_append(*output, "",
-			strlen(name) + CMD_TAG_APPEND_SIZE*2);
-	if (unlikely(*output == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				"JSON's numeric format failed to add. "
-				"(name = %s, uint = %u)\n", name, value);
-		return SPP_RET_NG;
-	}
-
-	sprintf(&(*output)[len], JSON_APPEND_VALUE("%u"),
-			JSON_APPEND_COMMA(len), name, value);
-	return SPP_RET_OK;
-}
-
-/* append data of integral type for JSON format */
-static int
-append_json_int_value(const char *name, char **output, int value)
-{
-	int len = strlen(*output);
-	/* extend the buffer */
-	*output = spp_strbuf_append(*output, "",
-			strlen(name) + CMD_TAG_APPEND_SIZE*2);
-	if (unlikely(*output == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				"JSON's numeric format failed to add. "
-				"(name = %s, int = %d)\n", name, value);
-		return SPP_RET_NG;
-	}
-
-	sprintf(&(*output)[len], JSON_APPEND_VALUE("%d"),
-			JSON_APPEND_COMMA(len), name, value);
-	return SPP_RET_OK;
-}
-
-/* append data of string type for JSON format */
-static int
-append_json_str_value(const char *name, char **output, const char *str)
-{
-	int len = strlen(*output);
-	/* extend the buffer */
-	*output = spp_strbuf_append(*output, "",
-			strlen(name) + strlen(str) + CMD_TAG_APPEND_SIZE);
-	if (unlikely(*output == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				"JSON's string format failed to add. "
-				"(name = %s, str = %s)\n", name, str);
-		return SPP_RET_NG;
-	}
-
-	sprintf(&(*output)[len], JSON_APPEND_VALUE("\"%s\""),
-			JSON_APPEND_COMMA(len), name, str);
-	return SPP_RET_OK;
-}
-
-/* append brackets of the array for JSON format */
-static int
-append_json_array_brackets(const char *name, char **output, const char *str)
-{
-	int len = strlen(*output);
-	/* extend the buffer */
-	*output = spp_strbuf_append(*output, "",
-			strlen(name) + strlen(str) + CMD_TAG_APPEND_SIZE);
-	if (unlikely(*output == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				"JSON's square bracket failed to add. "
-				"(name = %s, str = %s)\n", name, str);
-		return SPP_RET_NG;
-	}
-
-	sprintf(&(*output)[len], JSON_APPEND_ARRAY,
-			JSON_APPEND_COMMA(len), name, str);
-	return SPP_RET_OK;
-}
-
-/* append brackets of the blocks for JSON format */
-static int
-append_json_block_brackets(const char *name, char **output, const char *str)
-{
-	int len = strlen(*output);
-	/* extend the buffer */
-	*output = spp_strbuf_append(*output, "",
-			strlen(name) + strlen(str) + CMD_TAG_APPEND_SIZE);
-	if (unlikely(*output == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				"JSON's curly bracket failed to add. "
-				"(name = %s, str = %s)\n", name, str);
-		return SPP_RET_NG;
-	}
-
-	if (name[0] == '\0')
-		sprintf(&(*output)[len], JSON_APPEND_BLOCK_NONAME,
-				JSON_APPEND_COMMA(len), name, str);
-	else
-		sprintf(&(*output)[len], JSON_APPEND_BLOCK,
-				JSON_APPEND_COMMA(len), name, str);
-	return SPP_RET_OK;
-}
-
 /* Execute one command. */
 static int
 exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
diff --git a/src/shared/secondary/spp_worker_th/json_helper.c b/src/shared/secondary/spp_worker_th/json_helper.c
new file mode 100644
index 0000000..4c1baa3
--- /dev/null
+++ b/src/shared/secondary/spp_worker_th/json_helper.c
@@ -0,0 +1,125 @@
+/* SPDX-License-Identifier: BSD-3-Clause
+ * Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
+ */
+
+#include "string_buffer.h"
+#include "json_helper.h"
+
+#define RTE_LOGTYPE_WK_JSON_HELPER RTE_LOGTYPE_USER1
+
+int
+append_json_comma(char **output)
+{
+	*output = spp_strbuf_append(*output, ", ", strlen(", "));
+	if (unlikely(*output == NULL)) {
+		RTE_LOG(ERR, WK_JSON_HELPER,
+				"JSON's comma failed to add.\n");
+		return SPP_RET_NG;
+	}
+
+	return SPP_RET_OK;
+}
+
+/* append data of unsigned integral type for JSON format */
+int
+append_json_uint_value(const char *name, char **output, unsigned int value)
+{
+	int len = strlen(*output);
+	/* extend the buffer */
+	*output = spp_strbuf_append(*output, "",
+			strlen(name) + CMD_TAG_APPEND_SIZE*2);
+	if (unlikely(*output == NULL)) {
+		RTE_LOG(ERR, WK_JSON_HELPER,
+				"JSON's numeric format failed to add. "
+				"(name = %s, uint = %u)\n", name, value);
+		return SPP_RET_NG;
+	}
+
+	sprintf(&(*output)[len], JSON_APPEND_VALUE("%u"),
+			JSON_APPEND_COMMA(len), name, value);
+	return SPP_RET_OK;
+}
+
+/* append data of integral type for JSON format */
+int
+append_json_int_value(const char *name, char **output, int value)
+{
+	int len = strlen(*output);
+	/* extend the buffer */
+	*output = spp_strbuf_append(*output, "",
+			strlen(name) + CMD_TAG_APPEND_SIZE*2);
+	if (unlikely(*output == NULL)) {
+		RTE_LOG(ERR, WK_JSON_HELPER,
+				"JSON's numeric format failed to add. "
+				"(name = %s, int = %d)\n", name, value);
+		return SPP_RET_NG;
+	}
+
+	sprintf(&(*output)[len], JSON_APPEND_VALUE("%d"),
+			JSON_APPEND_COMMA(len), name, value);
+	return SPP_RET_OK;
+}
+
+/* append data of string type for JSON format */
+int
+append_json_str_value(const char *name, char **output, const char *str)
+{
+	int len = strlen(*output);
+	/* extend the buffer */
+	*output = spp_strbuf_append(*output, "",
+			strlen(name) + strlen(str) + CMD_TAG_APPEND_SIZE);
+	if (unlikely(*output == NULL)) {
+		RTE_LOG(ERR, WK_JSON_HELPER,
+				"JSON's string format failed to add. "
+				"(name = %s, str = %s)\n", name, str);
+		return SPP_RET_NG;
+	}
+
+	sprintf(&(*output)[len], JSON_APPEND_VALUE("\"%s\""),
+			JSON_APPEND_COMMA(len), name, str);
+	return SPP_RET_OK;
+}
+
+/* append brackets of the array for JSON format */
+int
+append_json_array_brackets(const char *name, char **output, const char *str)
+{
+	int len = strlen(*output);
+	/* extend the buffer */
+	*output = spp_strbuf_append(*output, "",
+			strlen(name) + strlen(str) + CMD_TAG_APPEND_SIZE);
+	if (unlikely(*output == NULL)) {
+		RTE_LOG(ERR, WK_JSON_HELPER,
+				"JSON's square bracket failed to add. "
+				"(name = %s, str = %s)\n", name, str);
+		return SPP_RET_NG;
+	}
+
+	sprintf(&(*output)[len], JSON_APPEND_ARRAY,
+			JSON_APPEND_COMMA(len), name, str);
+	return SPP_RET_OK;
+}
+
+/* append brackets of the blocks for JSON format */
+int
+append_json_block_brackets(const char *name, char **output, const char *str)
+{
+	int len = strlen(*output);
+	/* extend the buffer */
+	*output = spp_strbuf_append(*output, "",
+			strlen(name) + strlen(str) + CMD_TAG_APPEND_SIZE);
+	if (unlikely(*output == NULL)) {
+		RTE_LOG(ERR, WK_JSON_HELPER,
+				"JSON's curly bracket failed to add. "
+				"(name = %s, str = %s)\n", name, str);
+		return SPP_RET_NG;
+	}
+
+	if (name[0] == '\0')
+		sprintf(&(*output)[len], JSON_APPEND_BLOCK_NONAME,
+				JSON_APPEND_COMMA(len), name, str);
+	else
+		sprintf(&(*output)[len], JSON_APPEND_BLOCK,
+				JSON_APPEND_COMMA(len), name, str);
+	return SPP_RET_OK;
+}
diff --git a/src/shared/secondary/spp_worker_th/json_helper.h b/src/shared/secondary/spp_worker_th/json_helper.h
new file mode 100644
index 0000000..f286404
--- /dev/null
+++ b/src/shared/secondary/spp_worker_th/json_helper.h
@@ -0,0 +1,38 @@
+/* SPDX-License-Identifier: BSD-3-Clause
+ * Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
+ */
+
+#ifndef _SPPWK_JSON_HELPER_H_
+#define _SPPWK_JSON_HELPER_H_
+
+#include "cmd_utils.h"
+
+#define CMD_TAG_APPEND_SIZE 16
+
+#define JSON_APPEND_COMMA(flg)    ((flg)?", ":"")
+
+#define JSON_APPEND_VALUE(format) "%s\"%s\": "format
+
+#define JSON_APPEND_ARRAY         "%s\"%s\": [ %s ]"
+
+#define JSON_APPEND_BLOCK_NONAME  "%s%s{ %s }"
+#define JSON_APPEND_BLOCK         "%s\"%s\": { %s }"
+
+int append_json_comma(char **output);
+
+int append_json_uint_value(const char *name, char **output,
+		unsigned int value);
+
+int append_json_int_value(const char *name, char **output,
+		int value);
+
+int append_json_str_value(const char *name, char **output,
+		const char *str);
+
+int append_json_array_brackets(const char *name, char **output,
+		const char *str);
+
+int append_json_block_brackets(const char *name, char **output,
+		const char *str);
+
+#endif
diff --git a/src/shared/secondary/spp_worker_th/string_buffer.h b/src/shared/secondary/spp_worker_th/string_buffer.h
index 34ee6cb..951f0ae 100644
--- a/src/shared/secondary/spp_worker_th/string_buffer.h
+++ b/src/shared/secondary/spp_worker_th/string_buffer.h
@@ -5,6 +5,8 @@
 #ifndef _STRING_BUFFER_H_
 #define _STRING_BUFFER_H_
 
+#include <stdlib.h>
+
 /**
  * @file
  * SPP String buffer management
diff --git a/src/vf/Makefile b/src/vf/Makefile
index faf72ee..ca8d2b3 100644
--- a/src/vf/Makefile
+++ b/src/vf/Makefile
@@ -22,6 +22,7 @@ SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_runner.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_utils.c
+SRCS-y += $(SPP_WKT_DIR)/json_helper.c
 SRCS-y += ../shared/common.c
 SRCS-y += ../shared/secondary/utils.c ../shared/secondary/add_port.c
 
-- 
2.17.1



From spp-request@dpdk.org Mon Jun 24 13:36:38 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00D5065CSMD0@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 13:36:48 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTL0040O65C0A00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:36:48 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00VLV65C8YC0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:36:48 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id 6B05C7E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:48 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 68FC98E605C	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:48 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 5DC1E8E606F	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:36:48 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 7301D8E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:47 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:36:47 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4alVP008181;	Mon,
 24 Jun 2019 13:36:47 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O4algG008180;	Mon, 24 Jun 2019 13:36:47 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O4alwn008177	for unknown; Mon,
 24 Jun 2019 13:36:47 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4akEY013414 for
 unknown; Mon, 24 Jun 2019 13:36:46 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4akLD013408 for
 unknown; Mon, 24 Jun 2019 13:36:46 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O4adKU027541	for unknown; Mon,
 24 Jun 2019 13:36:45 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 2CDB21BF5E	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 24 Jun 2019 06:36:39 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 7
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 24 Jun 2019 06:36:38 +0200
Message-id: <mailman.23376.1561350998.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH 00/13] Move JSON utils from libs for running cmds
      (yasufum.o@gmail.com)
   2. [PATCH 01/13] shared/sec: rename ops for setup cmd response
      (yasufum.o@gmail.com)
   3. [PATCH 02/13] shared/sec: rename functions for spp_mirror
      (yasufum.o@gmail.com)
   4. [PATCH 03/13] shared/sec: move principle JSON formatter funcs
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon, 24 Jun 2019 13:36:00 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 00/13] Move JSON utils from libs for running
	cmds
Message-ID: <20190624043613.19271-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

There are many JSON utils in shared lib for running commands, and
hard to maintain because several features are defined in a huge file.
This series of patches is to separate JSON utils from other functions
and fix complex dependencies among them.

Yasufumi Ogawa (13):
  shared/sec: rename ops for setup cmd response
  shared/sec: rename functions for spp_mirror
  shared/sec: move principle JSON formatter funcs
  shared/sec: change order of args of JSON fmtters
  shared/sec: move JSON formatter to shard/secondary
  shared/sec: revise including headers
  shared/sec: move JSON formatters from cmd_runner
  shared/sec: move rest of JSON formatters
  shared/sec: move lcore funcs in response_info_list
  shared/sec: move ope cli-id in response_info_list
  shared/sec: move rest of ops in response_info_list
  shared/sec: remove local funcs from header
  shared/sec: refactor comments for JSON formatter

 src/mirror/Makefile                           |  11 +-
 src/mirror/spp_mirror.c                       |  75 +-
 src/mirror/spp_mirror.h                       |  26 -
 src/pcap/Makefile                             |   3 +-
 src/pcap/cmd_runner.c                         |   2 +-
 src/shared/secondary/json_helper.c            | 136 +++
 src/shared/secondary/json_helper.h            | 101 ++
 src/shared/secondary/return_codes.h           |  13 +
 .../secondary/spp_worker_th/cmd_parser.c      |   1 +
 .../spp_worker_th/cmd_res_formatter.c         | 831 +++++++++++++++
 .../spp_worker_th/cmd_res_formatter.h         |  83 ++
 .../secondary/spp_worker_th/cmd_runner.c      | 952 +-----------------
 .../secondary/spp_worker_th/cmd_utils.c       |   6 +-
 .../secondary/spp_worker_th/cmd_utils.h       |   8 +-
 .../secondary/spp_worker_th/conn_spp_ctl.c    |   3 +-
 .../secondary/spp_worker_th/mirror_deps.h     |  33 +-
 src/shared/secondary/spp_worker_th/spp_port.c |   1 +
 src/shared/secondary/spp_worker_th/vf_deps.h  |   2 +-
 .../{spp_worker_th => }/string_buffer.c       |   0
 .../{spp_worker_th => }/string_buffer.h       |   2 +
 src/vf/Makefile                               |   7 +-
 src/vf/classifier_mac.c                       |   6 +-
 src/vf/spp_forward.c                          |   5 +-
 src/vf/spp_vf.c                               |   3 +-
 24 files changed, 1260 insertions(+), 1050 deletions(-)
 delete mode 100644 src/mirror/spp_mirror.h
 create mode 100644 src/shared/secondary/json_helper.c
 create mode 100644 src/shared/secondary/json_helper.h
 create mode 100644 src/shared/secondary/return_codes.h
 create mode 100644 src/shared/secondary/spp_worker_th/cmd_res_formatter.c
 create mode 100644 src/shared/secondary/spp_worker_th/cmd_res_formatter.h
 rename src/shared/secondary/{spp_worker_th => }/string_buffer.c (100%)
 rename src/shared/secondary/{spp_worker_th => }/string_buffer.h (98%)

-- 
2.17.1



------------------------------

Message: 2
Date: Mon, 24 Jun 2019 13:36:01 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 01/13] shared/sec: rename ops for setup cmd
	response
Message-ID: <20190624043613.19271-2-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

For refactoring, rename operation functions in `response_info_list`
of struct cmd_response. It is for assembling a JSON response message
and starts with `append_`. However, There are many functions start
with `append_` other than these operation functions and it is so
confusing. This update is to rename the prefix to `add_`, and revise
comments and vars.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/cmd_runner.c      | 71 ++++++++++---------
 1 file changed, 38 insertions(+), 33 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index bc3ae06..f686209 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -561,7 +561,7 @@ spp_iterate_core_info(struct spp_iterate_core_params *params)
 /* Iterate classifier_table to create response to status command */
 #ifdef SPP_VF_MODULE
 static int
-add_classifier_table(
+_add_classifier_table(
 		struct spp_iterate_classifier_table_params *params)
 {
 	int ret;
@@ -903,9 +903,9 @@ append_error_details_value(const char *name, char **output, void *tmp)
 	return ret;
 }
 
-/* append a client id for JSON format */
+/* Add entry of client ID to a response in JSON. */
 static int
-append_client_id_value(const char *name, char **output,
+add_client_id(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
 	return append_json_int_value(name, output, sppwk_get_client_id());
@@ -947,9 +947,9 @@ append_process_type_value(const char *name, char **output,
 			SPPWK_PROC_TYPE_LIST[sppwk_get_proc_type()]);
 }
 
-/* append a list of interface numbers for JSON format */
+/* Add entry of port to a response in JSON such as "phy:0". */
 static int
-append_interface_value(const char *name, char **output,
+add_interface(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
 	int ret = SPP_RET_NG;
@@ -1115,7 +1115,7 @@ append_port_array(const char *name, char **output, const int num,
 }
 
 /**
- * TODO(yasufum) add usages called from `append_core_value` or refactor
+ * TODO(yasufum) add usages called from `add_core` or refactor
  * confusing function names.
  */
 /* append one element of core information for JSON format */
@@ -1179,9 +1179,9 @@ append_core_element_value(
 	return ret;
 }
 
-/* append master lcore in JSON format */
+/* Add entry of master lcore to a response in JSON. */
 static int
-append_master_lcore_value(const char *name, char **output,
+add_master_lcore(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
 	int ret = SPP_RET_NG;
@@ -1189,9 +1189,9 @@ append_master_lcore_value(const char *name, char **output,
 	return ret;
 }
 
-/* append a list of core information for JSON format */
+/* Add entry of core info of worker to a response in JSON such as "core:0". */
 static int
-append_core_value(const char *name, char **output,
+add_core(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
 	int ret = SPP_RET_NG;
@@ -1280,17 +1280,16 @@ append_classifier_element_value(
 #endif /* SPP_VF_MODULE */
 
 /**
- * Append entries of classifier table in JSON. Before iterating the entries,
+ * Add entries of classifier table in JSON. Before iterating the entries,
  * this function calls several nested functions.
- *   append_classifier_table()  // This function.
- *     -> add_classifier_table()  // Wrapper and doesn't almost nothing.
+ *   add_classifier_table()  // This function.
+ *     -> _add_classifier_table()  // Wrapper and doesn't almost nothing.
  *       -> add_classifier_table_val()  // Setup data and call iterator.
  *         -> iterate_adding_mac_entry()
- *
  */
 #ifdef SPP_VF_MODULE
 static int
-append_classifier_table(const char *name, char **output,
+add_classifier_table(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
 	int ret = SPP_RET_NG;
@@ -1307,7 +1306,7 @@ append_classifier_table(const char *name, char **output,
 	itr_params.output = tmp_buff;
 	itr_params.element_proc = append_classifier_element_value;
 
-	ret = add_classifier_table(&itr_params);
+	ret = _add_classifier_table(&itr_params);
 	if (unlikely(ret != SPP_RET_OK)) {
 		spp_strbuf_free(itr_params.output);
 		return SPP_RET_NG;
@@ -1386,20 +1385,26 @@ struct cmd_response response_result_list[] = {
 };
 
 /**
- * TODO(yasufum) Add desc why it is needed and how to be used. At least, func
- * name is not appropriate because not for reponse, but name of funcs returns
- * response.
+ * List of combination of tag and operator function. It is used to assemble
+ * a result of command in JSON like as following.
+ *
+ *     {
+ *         "client-id": 1,
+ *         "ports": ["phy:0", "phy:1", "vhost:0", "ring:0"],
+ *         "components": [
+ *             {
+ *                 "core": 2,
+ *                 ...
  */
-/* command response status information string list */
 struct cmd_response response_info_list[] = {
-	{ "client-id", append_client_id_value },
-	{ "phy", append_interface_value },
-	{ "vhost", append_interface_value },
-	{ "ring", append_interface_value },
-	{ "master-lcore", append_master_lcore_value },
-	{ "core", append_core_value },
+	{ "client-id", add_client_id },
+	{ "phy", add_interface },
+	{ "vhost", add_interface },
+	{ "ring", add_interface },
+	{ "master-lcore", add_master_lcore},
+	{ "core", add_core},
 #ifdef SPP_VF_MODULE
-	{ "classifier_table", append_classifier_table},
+	{ "classifier_table", add_classifier_table},
 #endif /* SPP_VF_MODULE */
 	{ "", NULL }
 };
@@ -1541,9 +1546,9 @@ send_decode_error_response(int *sock,
 	spp_strbuf_free(msg);
 }
 
-/* send response for command execution result */
+/* Send the result of command to spp-ctl. */
 static void
-send_command_result_response(int *sock,
+send_result_spp_ctl(int *sock,
 		const struct sppwk_cmd_req *request,
 		struct cmd_result *cmd_results)
 {
@@ -1569,7 +1574,7 @@ send_command_result_response(int *sock,
 
 	/* append client id information value */
 	if (request->is_requested_client_id) {
-		ret = append_client_id_value("client_id", &tmp_buff, NULL);
+		ret = add_client_id("client_id", &tmp_buff, NULL);
 		if (unlikely(ret < SPP_RET_OK)) {
 			spp_strbuf_free(tmp_buff);
 			RTE_LOG(ERR, WK_CMD_RUNNER, "Failed to make "
@@ -1675,14 +1680,14 @@ exec_cmds(int *sock, const char *req_str, size_t req_str_len)
 	/* Exec exit command. */
 	if (cmd_req.is_requested_exit) {
 		set_cmd_result(&cmd_results[0], CMD_SUCCESS, "");
-		send_command_result_response(sock, &cmd_req, cmd_results);
+		send_result_spp_ctl(sock, &cmd_req, cmd_results);
 		RTE_LOG(INFO, WK_CMD_RUNNER,
 				"Process is terminated with exit cmd.\n");
 		return SPP_RET_NG;
 	}
 
-	/* send response */
-	send_command_result_response(sock, &cmd_req, cmd_results);
+	/* Send response to spp-ctl. */
+	send_result_spp_ctl(sock, &cmd_req, cmd_results);
 
 	RTE_LOG(DEBUG, WK_CMD_RUNNER, "End command request processing.\n");
 
-- 
2.17.1



------------------------------

Message: 3
Date: Mon, 24 Jun 2019 13:36:02 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 02/13] shared/sec: rename functions for
	spp_mirror
Message-ID: <20190624043613.19271-3-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Rename spp_mirror_get_component_status() to get_mirror_status(), and
spp_mirror_update() to update_mirror(). This update also revises
comments for the functions.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/spp_mirror.c                       | 72 ++++++++-----------
 .../secondary/spp_worker_th/cmd_runner.c      |  6 +-
 .../secondary/spp_worker_th/cmd_utils.c       |  2 +-
 .../secondary/spp_worker_th/mirror_deps.h     | 33 ++++-----
 src/shared/secondary/spp_worker_th/vf_deps.h  |  2 +-
 5 files changed, 47 insertions(+), 68 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index f62ae7e..c2ec09d 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -277,50 +277,45 @@ mirror_proc_init(void)
 
 /* Update mirror info */
 int
-spp_mirror_update(struct sppwk_comp_info *component)
+update_mirror(struct sppwk_comp_info *wk_comp)
 {
 	int cnt = 0;
-	int num_rx = component->nof_rx;
-	int num_tx = component->nof_tx;
-	struct mirror_info *info = &g_mirror_info[component->comp_id];
+	int nof_rx = wk_comp->nof_rx;
+	int nof_tx = wk_comp->nof_tx;
+	struct mirror_info *info = &g_mirror_info[wk_comp->comp_id];
 	struct mirror_path *path = &info->path[info->upd_index];
 
-	/* mirror component allows only one receiving port. */
-	if (unlikely(num_rx > 1)) {
+	/* Check mirror has just one RX and two TX port. */
+	if (unlikely(nof_rx > 1)) {
 		RTE_LOG(ERR, MIRROR,
-			"Component[%d] Setting error. (type = %d, rx = %d)\n",
-			component->comp_id, component->wk_type, num_rx);
+			"Invalid num of RX (id=%d, type=%d, nof_rx=%d)\n",
+			wk_comp->comp_id, wk_comp->wk_type, nof_rx);
 		return SPP_RET_NG;
 	}
-
-	/* Component allows only tewo transmit port. */
-	if (unlikely(num_tx > 2)) {
+	if (unlikely(nof_tx > 2)) {
 		RTE_LOG(ERR, MIRROR,
-			"Component[%d] Setting error. (type = %d, tx = %d)\n",
-			component->comp_id, component->wk_type, num_tx);
+			"Invalid num of TX (id=%d, type=%d, nof_tx=%d)\n",
+			wk_comp->comp_id, wk_comp->wk_type, nof_tx);
 		return SPP_RET_NG;
 	}
 
 	memset(path, 0x00, sizeof(struct mirror_path));
 
 	RTE_LOG(INFO, MIRROR,
-			"Component[%d] Start update component. "
-			"(name = %s, type = %d)\n",
-			component->comp_id,
-			component->name,
-			component->wk_type);
-
-	memcpy(&path->name, component->name, STR_LEN_NAME);
-	path->wk_type = component->wk_type;
-	path->nof_rx = component->nof_rx;
-	path->nof_tx = component->nof_tx;
-	for (cnt = 0; cnt < num_rx; cnt++)
-		memcpy(&path->ports[cnt].rx, component->rx_ports[cnt],
+			"Start updating mirror (id=%d, name=%s, type=%d)\n",
+			wk_comp->comp_id, wk_comp->name, wk_comp->wk_type);
+
+	memcpy(&path->name, wk_comp->name, STR_LEN_NAME);
+	path->wk_type = wk_comp->wk_type;
+	path->nof_rx = wk_comp->nof_rx;
+	path->nof_tx = wk_comp->nof_tx;
+	for (cnt = 0; cnt < nof_rx; cnt++)
+		memcpy(&path->ports[cnt].rx, wk_comp->rx_ports[cnt],
 				sizeof(struct sppwk_port_info));
 
-	/* Transmit port is set according with larger num_rx / num_tx. */
-	for (cnt = 0; cnt < num_tx; cnt++)
-		memcpy(&path->ports[cnt].tx, component->tx_ports[cnt],
+	/* Transmit port is set according with larger nof_rx / nof_tx. */
+	for (cnt = 0; cnt < nof_tx; cnt++)
+		memcpy(&path->ports[cnt].tx, wk_comp->tx_ports[cnt],
 				sizeof(struct sppwk_port_info));
 
 	info->upd_index = info->ref_index;
@@ -328,10 +323,8 @@ spp_mirror_update(struct sppwk_comp_info *component)
 		rte_delay_us_block(SPP_CHANGE_UPDATE_INTERVAL);
 
 	RTE_LOG(INFO, MIRROR,
-			"Component[%d] Complete update component. "
-			"(name = %s, type = %d)\n",
-			component->comp_id, component->name,
-			component->wk_type);
+			"Done update mirror (id=%d, name=%s, type=%d)\n",
+			wk_comp->comp_id, wk_comp->name, wk_comp->wk_type);
 
 	return SPP_RET_OK;
 }
@@ -465,8 +458,7 @@ mirror_proc(int id)
 
 /* Mirror get component status */
 int
-spp_mirror_get_component_status(
-		unsigned int lcore_id, int id,
+get_mirror_status(unsigned int lcore_id, int id,
 		struct spp_iterate_core_params *params)
 {
 	int ret = SPP_RET_NG;
@@ -479,9 +471,8 @@ spp_mirror_get_component_status(
 
 	if (unlikely(path->wk_type == SPPWK_TYPE_NONE)) {
 		RTE_LOG(ERR, MIRROR,
-				"Component[%d] Not used. "
-				"(status)(core = %d, type = %d)\n",
-				id, lcore_id, path->wk_type);
+			"Mirror is not used. (id=%d, lcore=%d, type=%d)\n",
+			id, lcore_id, path->wk_type);
 		return SPP_RET_NG;
 	}
 
@@ -500,10 +491,9 @@ spp_mirror_get_component_status(
 	}
 
 	/* Set the information with the function specified by the command. */
-	ret = (*params->element_proc)(
-		params, lcore_id,
-		path->name, component_type,
-		path->nof_rx, rx_ports, path->nof_tx, tx_ports);
+	ret = (*params->element_proc)(params, lcore_id, path->name,
+			component_type, path->nof_rx, rx_ports, path->nof_tx,
+			tx_ports);
 	if (unlikely(ret != 0))
 		return SPP_RET_NG;
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index f686209..4c4abd8 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -540,10 +540,8 @@ spp_iterate_core_info(struct spp_iterate_core_params *params)
 			}
 #endif /* SPP_VF_MODULE */
 #ifdef SPP_MIRROR_MODULE
-			ret = spp_mirror_get_component_status(
-						lcore_id,
-						core->id[cnt],
-						params);
+			ret = get_mirror_status(lcore_id, core->id[cnt],
+					params);
 #endif /* SPP_MIRROR_MODULE */
 			if (unlikely(ret != 0)) {
 				RTE_LOG(ERR, WK_CMD_RUNNER, "Cannot iterate core "
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 709c3da..79dd2e7 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -897,7 +897,7 @@ update_comp_info(void)
 #endif /* SPP_VF_MODULE */
 
 #ifdef SPP_MIRROR_MODULE
-		ret = spp_mirror_update(comp_info);
+		ret = update_mirror(comp_info);
 #endif /* SPP_MIRROR_MODULE */
 
 		if (unlikely(ret < 0)) {
diff --git a/src/shared/secondary/spp_worker_th/mirror_deps.h b/src/shared/secondary/spp_worker_th/mirror_deps.h
index 83edc1f..bfa715d 100644
--- a/src/shared/secondary/spp_worker_th/mirror_deps.h
+++ b/src/shared/secondary/spp_worker_th/mirror_deps.h
@@ -8,33 +8,24 @@
 #include "cmd_utils.h"
 
 /**
- * Update Mirror info
+ * Update mirror info.
  *
- * @param component
- *  The pointer to struct sppwk_comp_info.@n
- *  The data for updating the internal data of mirror.
- *
- * @retval SPP_RET_OK succeeded.
- * @retval SPP_RET_NG failed.
+ * @param wk_comp_info Pointer to internal data of mirror.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
-int spp_mirror_update(struct sppwk_comp_info *component);
+int update_mirror(struct sppwk_comp_info *wk_comp_info);
 
 /**
- * Mirror get component status
- *
- * @param lcore_id
- *  The logical core ID for forwarder and merger.
- * @param id
- *  The unique component ID.
- * @param params
- *  The pointer to struct spp_iterate_core_params.@n
- *  Detailed data of mirror status.
+ * Get mirror status.
  *
- * @retval SPP_RET_OK succeeded.
- * @retval SPP_RET_NG failed.
+ * @param lcore_id Lcore ID for forwarder and merger.
+ * @param id Unique component ID.
+ * @param params Pointer to detailed data of mirror status.
+ * @retval SPP_RET_OK If succeeded.
+ * @retval SPP_RET_NG If failed.
  */
-int spp_mirror_get_component_status(
-		unsigned int lcore_id, int id,
+int get_mirror_status(unsigned int lcore_id, int id,
 		struct spp_iterate_core_params *params);
 
 #endif  /* __SPP_WORKER_TH_MIRROR_DEPS_H__ */
diff --git a/src/shared/secondary/spp_worker_th/vf_deps.h b/src/shared/secondary/spp_worker_th/vf_deps.h
index beafc64..73e0f9a 100644
--- a/src/shared/secondary/spp_worker_th/vf_deps.h
+++ b/src/shared/secondary/spp_worker_th/vf_deps.h
@@ -56,7 +56,7 @@ free_mac_classifier(struct mac_classifier *mac_clf)
 /**
  * Update classifier info.
  *
- * @param comp_info Pointer to internal data of classifier.
+ * @param wk_comp_info Pointer to internal data of classifier.
  * @retval SPP_RET_OK If succeeded.
  * @retval SPP_RET_NG If failed.
  */
-- 
2.17.1



------------------------------

Message: 4
Date: Mon, 24 Jun 2019 13:36:03 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 03/13] shared/sec: move principle JSON formatter
	funcs
Message-ID: <20190624043613.19271-4-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move JSON formatter functions start with `append_json`
which have principle features, such as appending int, uint or so, to
separate other formatters have prefix `append_` but not principle
features. Added files are `json_helper.c` and json_helper.h` for the
moved functions.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/Makefile                           |   1 +
 .../secondary/spp_worker_th/cmd_runner.c      | 127 +-----------------
 .../secondary/spp_worker_th/json_helper.c     | 125 +++++++++++++++++
 .../secondary/spp_worker_th/json_helper.h     |  38 ++++++
 .../secondary/spp_worker_th/string_buffer.h   |   2 +
 src/vf/Makefile                               |   1 +
 6 files changed, 168 insertions(+), 126 deletions(-)
 create mode 100644 src/shared/secondary/spp_worker_th/json_helper.c
 create mode 100644 src/shared/secondary/spp_worker_th/json_helper.h

diff --git a/src/mirror/Makefile b/src/mirror/Makefile
index 3e31cfa..6b6b9b9 100644
--- a/src/mirror/Makefile
+++ b/src/mirror/Makefile
@@ -22,6 +22,7 @@ SRCS-y += $(SPP_WKT_DIR)/spp_port.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_runner.c
+SRCS-y += $(SPP_WKT_DIR)/json_helper.c
 SRCS-y += $(SPP_WKT_DIR)/string_buffer.c
 SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 4c4abd8..423774b 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -13,6 +13,7 @@
 #include "spp_port.h"
 #include "string_buffer.h"
 
+#include "json_helper.h"
 #include "conn_spp_ctl.h"
 #include "cmd_parser.h"
 #include "cmd_runner.h"
@@ -21,17 +22,9 @@
 
 /* request message initial size */
 #define CMD_ERR_MSG_LEN 128
-#define CMD_TAG_APPEND_SIZE 16
 #define CMD_REQ_BUF_INIT_SIZE 2048
 #define CMD_RES_BUF_INIT_SIZE 2048
 
-/* TODO(yasufum) confirm why using "" for the alternative of comma? */
-#define JSON_APPEND_COMMA(flg)    ((flg)?", ":"")
-#define JSON_APPEND_VALUE(format) "%s\"%s\": "format
-#define JSON_APPEND_ARRAY         "%s\"%s\": [ %s ]"
-#define JSON_APPEND_BLOCK         "%s\"%s\": { %s }"
-#define JSON_APPEND_BLOCK_NONAME  "%s%s{ %s }"
-
 enum cmd_res_code {
 	CMD_SUCCESS = 0,
 	CMD_FAILED,
@@ -597,124 +590,6 @@ sppwk_get_ethdev_port_id(enum port_type iface_type, int iface_no)
 	}
 }
 
-/* append a comma for JSON format */
-static int
-append_json_comma(char **output)
-{
-	*output = spp_strbuf_append(*output, ", ", strlen(", "));
-	if (unlikely(*output == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				"JSON's comma failed to add.\n");
-		return SPP_RET_NG;
-	}
-
-	return SPP_RET_OK;
-}
-
-/* append data of unsigned integral type for JSON format */
-static int
-append_json_uint_value(const char *name, char **output, unsigned int value)
-{
-	int len = strlen(*output);
-	/* extend the buffer */
-	*output = spp_strbuf_append(*output, "",
-			strlen(name) + CMD_TAG_APPEND_SIZE*2);
-	if (unlikely(*output == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				"JSON's numeric format failed to add. "
-				"(name = %s, uint = %u)\n", name, value);
-		return SPP_RET_NG;
-	}
-
-	sprintf(&(*output)[len], JSON_APPEND_VALUE("%u"),
-			JSON_APPEND_COMMA(len), name, value);
-	return SPP_RET_OK;
-}
-
-/* append data of integral type for JSON format */
-static int
-append_json_int_value(const char *name, char **output, int value)
-{
-	int len = strlen(*output);
-	/* extend the buffer */
-	*output = spp_strbuf_append(*output, "",
-			strlen(name) + CMD_TAG_APPEND_SIZE*2);
-	if (unlikely(*output == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				"JSON's numeric format failed to add. "
-				"(name = %s, int = %d)\n", name, value);
-		return SPP_RET_NG;
-	}
-
-	sprintf(&(*output)[len], JSON_APPEND_VALUE("%d"),
-			JSON_APPEND_COMMA(len), name, value);
-	return SPP_RET_OK;
-}
-
-/* append data of string type for JSON format */
-static int
-append_json_str_value(const char *name, char **output, const char *str)
-{
-	int len = strlen(*output);
-	/* extend the buffer */
-	*output = spp_strbuf_append(*output, "",
-			strlen(name) + strlen(str) + CMD_TAG_APPEND_SIZE);
-	if (unlikely(*output == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				"JSON's string format failed to add. "
-				"(name = %s, str = %s)\n", name, str);
-		return SPP_RET_NG;
-	}
-
-	sprintf(&(*output)[len], JSON_APPEND_VALUE("\"%s\""),
-			JSON_APPEND_COMMA(len), name, str);
-	return SPP_RET_OK;
-}
-
-/* append brackets of the array for JSON format */
-static int
-append_json_array_brackets(const char *name, char **output, const char *str)
-{
-	int len = strlen(*output);
-	/* extend the buffer */
-	*output = spp_strbuf_append(*output, "",
-			strlen(name) + strlen(str) + CMD_TAG_APPEND_SIZE);
-	if (unlikely(*output == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				"JSON's square bracket failed to add. "
-				"(name = %s, str = %s)\n", name, str);
-		return SPP_RET_NG;
-	}
-
-	sprintf(&(*output)[len], JSON_APPEND_ARRAY,
-			JSON_APPEND_COMMA(len), name, str);
-	return SPP_RET_OK;
-}
-
-/* append brackets of the blocks for JSON format */
-static int
-append_json_block_brackets(const char *name, char **output, const char *str)
-{
-	int len = strlen(*output);
-	/* extend the buffer */
-	*output = spp_strbuf_append(*output, "",
-			strlen(name) + strlen(str) + CMD_TAG_APPEND_SIZE);
-	if (unlikely(*output == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				"JSON's curly bracket failed to add. "
-				"(name = %s, str = %s)\n", name, str);
-		return SPP_RET_NG;
-	}
-
-	if (name[0] == '\0')
-		sprintf(&(*output)[len], JSON_APPEND_BLOCK_NONAME,
-				JSON_APPEND_COMMA(len), name, str);
-	else
-		sprintf(&(*output)[len], JSON_APPEND_BLOCK,
-				JSON_APPEND_COMMA(len), name, str);
-	return SPP_RET_OK;
-}
-
 /* Execute one command. */
 static int
 exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
diff --git a/src/shared/secondary/spp_worker_th/json_helper.c b/src/shared/secondary/spp_worker_th/json_helper.c
new file mode 100644
index 0000000..4c1baa3
--- /dev/null
+++ b/src/shared/secondary/spp_worker_th/json_helper.c
@@ -0,0 +1,125 @@
+/* SPDX-License-Identifier: BSD-3-Clause
+ * Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
+ */
+
+#include "string_buffer.h"
+#include "json_helper.h"
+
+#define RTE_LOGTYPE_WK_JSON_HELPER RTE_LOGTYPE_USER1
+
+int
+append_json_comma(char **output)
+{
+	*output = spp_strbuf_append(*output, ", ", strlen(", "));
+	if (unlikely(*output == NULL)) {
+		RTE_LOG(ERR, WK_JSON_HELPER,
+				"JSON's comma failed to add.\n");
+		return SPP_RET_NG;
+	}
+
+	return SPP_RET_OK;
+}
+
+/* append data of unsigned integral type for JSON format */
+int
+append_json_uint_value(const char *name, char **output, unsigned int value)
+{
+	int len = strlen(*output);
+	/* extend the buffer */
+	*output = spp_strbuf_append(*output, "",
+			strlen(name) + CMD_TAG_APPEND_SIZE*2);
+	if (unlikely(*output == NULL)) {
+		RTE_LOG(ERR, WK_JSON_HELPER,
+				"JSON's numeric format failed to add. "
+				"(name = %s, uint = %u)\n", name, value);
+		return SPP_RET_NG;
+	}
+
+	sprintf(&(*output)[len], JSON_APPEND_VALUE("%u"),
+			JSON_APPEND_COMMA(len), name, value);
+	return SPP_RET_OK;
+}
+
+/* append data of integral type for JSON format */
+int
+append_json_int_value(const char *name, char **output, int value)
+{
+	int len = strlen(*output);
+	/* extend the buffer */
+	*output = spp_strbuf_append(*output, "",
+			strlen(name) + CMD_TAG_APPEND_SIZE*2);
+	if (unlikely(*output == NULL)) {
+		RTE_LOG(ERR, WK_JSON_HELPER,
+				"JSON's numeric format failed to add. "
+				"(name = %s, int = %d)\n", name, value);
+		return SPP_RET_NG;
+	}
+
+	sprintf(&(*output)[len], JSON_APPEND_VALUE("%d"),
+			JSON_APPEND_COMMA(len), name, value);
+	return SPP_RET_OK;
+}
+
+/* append data of string type for JSON format */
+int
+append_json_str_value(const char *name, char **output, const char *str)
+{
+	int len = strlen(*output);
+	/* extend the buffer */
+	*output = spp_strbuf_append(*output, "",
+			strlen(name) + strlen(str) + CMD_TAG_APPEND_SIZE);
+	if (unlikely(*output == NULL)) {
+		RTE_LOG(ERR, WK_JSON_HELPER,
+				"JSON's string format failed to add. "
+				"(name = %s, str = %s)\n", name, str);
+		return SPP_RET_NG;
+	}
+
+	sprintf(&(*output)[len], JSON_APPEND_VALUE("\"%s\""),
+			JSON_APPEND_COMMA(len), name, str);
+	return SPP_RET_OK;
+}
+
+/* append brackets of the array for JSON format */
+int
+append_json_array_brackets(const char *name, char **output, const char *str)
+{
+	int len = strlen(*output);
+	/* extend the buffer */
+	*output = spp_strbuf_append(*output, "",
+			strlen(name) + strlen(str) + CMD_TAG_APPEND_SIZE);
+	if (unlikely(*output == NULL)) {
+		RTE_LOG(ERR, WK_JSON_HELPER,
+				"JSON's square bracket failed to add. "
+				"(name = %s, str = %s)\n", name, str);
+		return SPP_RET_NG;
+	}
+
+	sprintf(&(*output)[len], JSON_APPEND_ARRAY,
+			JSON_APPEND_COMMA(len), name, str);
+	return SPP_RET_OK;
+}
+
+/* append brackets of the blocks for JSON format */
+int
+append_json_block_brackets(const char *name, char **output, const char *str)
+{
+	int len = strlen(*output);
+	/* extend the buffer */
+	*output = spp_strbuf_append(*output, "",
+			strlen(name) + strlen(str) + CMD_TAG_APPEND_SIZE);
+	if (unlikely(*output == NULL)) {
+		RTE_LOG(ERR, WK_JSON_HELPER,
+				"JSON's curly bracket failed to add. "
+				"(name = %s, str = %s)\n", name, str);
+		return SPP_RET_NG;
+	}
+
+	if (name[0] == '\0')
+		sprintf(&(*output)[len], JSON_APPEND_BLOCK_NONAME,
+				JSON_APPEND_COMMA(len), name, str);
+	else
+		sprintf(&(*output)[len], JSON_APPEND_BLOCK,
+				JSON_APPEND_COMMA(len), name, str);
+	return SPP_RET_OK;
+}
diff --git a/src/shared/secondary/spp_worker_th/json_helper.h b/src/shared/secondary/spp_worker_th/json_helper.h
new file mode 100644
index 0000000..f286404
--- /dev/null
+++ b/src/shared/secondary/spp_worker_th/json_helper.h
@@ -0,0 +1,38 @@
+/* SPDX-License-Identifier: BSD-3-Clause
+ * Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
+ */
+
+#ifndef _SPPWK_JSON_HELPER_H_
+#define _SPPWK_JSON_HELPER_H_
+
+#include "cmd_utils.h"
+
+#define CMD_TAG_APPEND_SIZE 16
+
+#define JSON_APPEND_COMMA(flg)    ((flg)?", ":"")
+
+#define JSON_APPEND_VALUE(format) "%s\"%s\": "format
+
+#define JSON_APPEND_ARRAY         "%s\"%s\": [ %s ]"
+
+#define JSON_APPEND_BLOCK_NONAME  "%s%s{ %s }"
+#define JSON_APPEND_BLOCK         "%s\"%s\": { %s }"
+
+int append_json_comma(char **output);
+
+int append_json_uint_value(const char *name, char **output,
+		unsigned int value);
+
+int append_json_int_value(const char *name, char **output,
+		int value);
+
+int append_json_str_value(const char *name, char **output,
+		const char *str);
+
+int append_json_array_brackets(const char *name, char **output,
+		const char *str);
+
+int append_json_block_brackets(const char *name, char **output,
+		const char *str);
+
+#endif
diff --git a/src/shared/secondary/spp_worker_th/string_buffer.h b/src/shared/secondary/spp_worker_th/string_buffer.h
index 34ee6cb..951f0ae 100644
--- a/src/shared/secondary/spp_worker_th/string_buffer.h
+++ b/src/shared/secondary/spp_worker_th/string_buffer.h
@@ -5,6 +5,8 @@
 #ifndef _STRING_BUFFER_H_
 #define _STRING_BUFFER_H_
 
+#include <stdlib.h>
+
 /**
  * @file
  * SPP String buffer management
diff --git a/src/vf/Makefile b/src/vf/Makefile
index faf72ee..ca8d2b3 100644
--- a/src/vf/Makefile
+++ b/src/vf/Makefile
@@ -22,6 +22,7 @@ SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_runner.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_utils.c
+SRCS-y += $(SPP_WKT_DIR)/json_helper.c
 SRCS-y += ../shared/common.c
 SRCS-y += ../shared/secondary/utils.c ../shared/secondary/add_port.c
 
-- 
2.17.1



End of spp Digest, Vol 31, Issue 7
**********************************


From yasufum.o@gmail.com Mon Jun 24 13:36:04 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00D5M65ESMD0@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 13:36:50 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTL0041465E0N00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:36:50 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00VN465E8YC0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:36:50 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id 53B6A7E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:50 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 529E68E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:50 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 4787A8E6042	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:36:50 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id D19CE8E6042	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:49 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:36:49 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4ancP008191;	Mon,
 24 Jun 2019 13:36:49 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O4angN008190;	Mon, 24 Jun 2019 13:36:49 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O4an1O008187	for unknown; Mon,
 24 Jun 2019 13:36:49 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4anSe016585 for
 unknown; Mon, 24 Jun 2019 13:36:49 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4anhN016582; Mon,
 24 Jun 2019 13:36:49 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4amDM030533;	Mon,
 24 Jun 2019 13:36:48 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O4amSj030529	for unknown; Mon, 24 Jun 2019 13:36:48 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4amm3013431 for
 unknown; Mon, 24 Jun 2019 13:36:48 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4amjw013426 for
 unknown; Mon, 24 Jun 2019 13:36:48 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O4afBJ027555	for unknown; Mon,
 24 Jun 2019 13:36:47 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 3C9531BF58;	Mon, 24 Jun 2019 06:36:41 +0200 (CEST)
Received: from mail-pl1-f195.google.com
 (mail-pl1-f195.google.com [209.85.214.195]) by dpdk.org (Postfix)
 with ESMTP id 066291BF2C for <spp@dpdk.org>; Mon,
 24 Jun 2019 06:36:40 +0200 (CEST)
Received: by mail-pl1-f195.google.com with SMTP id k8so6160232plt.3 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 21:36:39 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id c10sm9005178pjq.14.2019.06.23.21.36.37
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 21:36:38 -0700 (PDT)
Date: Mon, 24 Jun 2019 13:36:04 +0900
From: yasufum.o@gmail.com
Subject: [spp 04376] [spp] [PATCH 04/13] shared/sec: change order of args of
 JSON fmtters
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624043613.19271-5-yasufum.o@gmail.com>
In-reply-to: <20190624043613.19271-1-yasufum.o@gmail.com>
References: <20190624043613.19271-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04376
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=qWob4jr1+bIlYT4TYZU3fUW3oZccNl7YfxDzU3hXRwI=;
 b=Cu7TOABOkXW7NBcG5o6x1fjenOlrevWm+mOs+lndwSqGb1oDju0D+gpEmkXtsIe9K+
 E5xYENXCIUXKTHKqta8qRZk+OA+C+3Ar508tORbzV30FaeEudUcwnYNYFtCV9TopsFOp
 IAnuL0EhozxXeKSeZUT66ohbBCEGpCMwY4hG1QZxAPr/n4Y3oTDUeIhQU23bnDWQBVEU
 j9c/GgIWPrDihmc7gWSHxvW97hcB6TN7l8aWPCDFftP+/5SmoLqaVi+TLUMG8YRYmhlA
 VQHC4y0OhOdZSJgds3PpjeMgu1Q0rJekW60du39+1iAtI/PuBWY+BfcoKh9NOPFrOdoe yAZw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=qWob4jr1+bIlYT4TYZU3fUW3oZccNl7YfxDzU3hXRwI=;
 b=PjzZW34pkruQ3dVXBrc5CuMZ54sAP4JMPzJGs96/UFNlCJu8lUemj4G8Koh5qO4I0B
 elofUDlj3nKh7t93fZFlPWMkDhw6K38Fz8LtCcV7ctkx0mFpt+1qAaUJEpiVoKAED3qQ
 gJrylnokU+WDXQNtcqjiDIQLQVa7GADXG9IKmsMguMRIRx7tJK0qFDujrUy5hTDfR6eP
 wMEvFrqp/8h9JlBe3LpzkV+VLYdYFxbm9vNugXTAtOjo4wTOlSqjGerY8qeyVOnByPoO
 StJzCu+n5Ha4mx/ZSBA7uxddTA9l66grRGxnlHF7YpX6I9CL0UOC6gKofKwi1zUvNyiL bJ0A==
X-Gm-Message-State: APjAAAXBr+WB2X9FPb40Fe+bXyNgadjNeRlKIdcUI6SslVDcQruYCtKM
 SHTpwBbrvX8vGyaAEHPtzQa1+i3c
X-Google-Smtp-Source:
 APXvYqw5UfW224LF8p0BgTwGFzL505gJAz+5MGhC4DdO+Rh4b8LjMzNrlneXB5mH7i4kBRlfYen7Sg==
X-Received: by 2002:a17:902:42e2:: with SMTP id
 h89mr61108345pld.77.1561350998970; Sun, 23 Jun 2019 21:36:38 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 528
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Formatter functions defined in `json_helper.h` takes three args, a pair
of name and value of JSON and a string buffer as a placeholder. But the
order of args `func(name, buf, value)` is not well. This update is to
move `buf` at first as similar to other C functions such as sprintf().

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/cmd_runner.c      | 61 +++++++------
 .../secondary/spp_worker_th/json_helper.c     | 61 +++++++------
 .../secondary/spp_worker_th/json_helper.h     | 85 ++++++++++++++++---
 3 files changed, 138 insertions(+), 69 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 423774b..e41fd85 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -21,6 +21,7 @@
 #define RTE_LOGTYPE_WK_CMD_RUNNER RTE_LOGTYPE_USER1
 
 /* request message initial size */
+#define CMD_TAG_APPEND_SIZE 16
 #define CMD_ERR_MSG_LEN 128
 #define CMD_REQ_BUF_INIT_SIZE 2048
 #define CMD_RES_BUF_INIT_SIZE 2048
@@ -741,7 +742,7 @@ static int
 append_result_value(const char *name, char **output, void *tmp)
 {
 	const struct cmd_result *result = tmp;
-	return append_json_str_value(name, output, result->result);
+	return append_json_str_value(output, name, result->result);
 }
 
 /* append error details for JSON format */
@@ -764,14 +765,13 @@ append_error_details_value(const char *name, char **output, void *tmp)
 		return SPP_RET_NG;
 	}
 
-	ret = append_json_str_value("message", &tmp_buff,
-			result->err_msg);
+	ret = append_json_str_value(&tmp_buff, "message", result->err_msg);
 	if (unlikely(ret < 0)) {
 		spp_strbuf_free(tmp_buff);
 		return SPP_RET_NG;
 	}
 
-	ret = append_json_block_brackets(name, output, tmp_buff);
+	ret = append_json_block_brackets(output, name, tmp_buff);
 	spp_strbuf_free(tmp_buff);
 	return ret;
 }
@@ -781,7 +781,7 @@ static int
 add_client_id(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
-	return append_json_int_value(name, output, sppwk_get_client_id());
+	return append_json_int_value(output, name, sppwk_get_client_id());
 }
 
 /* append a list of interface numbers */
@@ -816,7 +816,7 @@ static int
 append_process_type_value(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
-	return append_json_str_value(name, output,
+	return append_json_str_value(output, name,
 			SPPWK_PROC_TYPE_LIST[sppwk_get_proc_type()]);
 }
 
@@ -849,7 +849,7 @@ add_interface(const char *name, char **output,
 		return SPP_RET_NG;
 	}
 
-	ret = append_json_array_brackets(name, output, tmp_buff);
+	ret = append_json_array_brackets(output, name, tmp_buff);
 	spp_strbuf_free(tmp_buff);
 	return ret;
 }
@@ -859,16 +859,16 @@ static int
 append_vlan_value(char **output, const int ope, const int vid, const int pcp)
 {
 	int ret = SPP_RET_OK;
-	ret = append_json_str_value("operation", output,
+	ret = append_json_str_value(output, "operation",
 			PORT_ABILITY_STAT_LIST[ope]);
 	if (unlikely(ret < SPP_RET_OK))
 		return SPP_RET_NG;
 
-	ret = append_json_int_value("id", output, vid);
+	ret = append_json_int_value(output, "id", vid);
 	if (unlikely(ret < 0))
 		return SPP_RET_NG;
 
-	ret = append_json_int_value("pcp", output, pcp);
+	ret = append_json_int_value(output, "pcp", pcp);
 	if (unlikely(ret < 0))
 		return SPP_RET_NG;
 
@@ -922,7 +922,7 @@ append_vlan_block(const char *name, char **output,
 			return SPP_RET_NG;
 	}
 
-	ret = append_json_block_brackets(name, output, tmp_buff);
+	ret = append_json_block_brackets(output, name, tmp_buff);
 	spp_strbuf_free(tmp_buff);
 	return ret;
 }
@@ -943,7 +943,7 @@ append_port_block(char **output, const struct sppwk_port_idx *port,
 	}
 
 	spp_format_port_string(port_str, port->iface_type, port->iface_no);
-	ret = append_json_str_value("port", &tmp_buff, port_str);
+	ret = append_json_str_value(&tmp_buff, "port", port_str);
 	if (unlikely(ret < SPP_RET_OK))
 		return SPP_RET_NG;
 
@@ -954,7 +954,7 @@ append_port_block(char **output, const struct sppwk_port_idx *port,
 	if (unlikely(ret < SPP_RET_OK))
 		return SPP_RET_NG;
 
-	ret = append_json_block_brackets("", output, tmp_buff);
+	ret = append_json_block_brackets(output, "", tmp_buff);
 	spp_strbuf_free(tmp_buff);
 	return ret;
 }
@@ -982,7 +982,7 @@ append_port_array(const char *name, char **output, const int num,
 			return SPP_RET_NG;
 	}
 
-	ret = append_json_array_brackets(name, output, tmp_buff);
+	ret = append_json_array_brackets(output, name, tmp_buff);
 	spp_strbuf_free(tmp_buff);
 	return ret;
 }
@@ -1020,17 +1020,17 @@ append_core_element_value(
 	 * TODO(yasufum) change ambiguous "core" to more specific one such as
 	 * "worker-lcores" or "slave-lcores".
 	 */
-	ret = append_json_uint_value("core", &tmp_buff, lcore_id);
+	ret = append_json_uint_value(&tmp_buff, "core", lcore_id);
 	if (unlikely(ret < SPP_RET_OK))
 		return ret;
 
 	if (unuse_flg) {
-		ret = append_json_str_value("name", &tmp_buff, name);
+		ret = append_json_str_value(&tmp_buff, "name", name);
 		if (unlikely(ret < 0))
 			return ret;
 	}
 
-	ret = append_json_str_value("type", &tmp_buff, type);
+	ret = append_json_str_value(&tmp_buff, "type", type);
 	if (unlikely(ret < SPP_RET_OK))
 		return ret;
 
@@ -1046,7 +1046,7 @@ append_core_element_value(
 			return ret;
 	}
 
-	ret = append_json_block_brackets("", &buff, tmp_buff);
+	ret = append_json_block_brackets(&buff, "", tmp_buff);
 	spp_strbuf_free(tmp_buff);
 	params->output = buff;
 	return ret;
@@ -1058,7 +1058,7 @@ add_master_lcore(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
 	int ret = SPP_RET_NG;
-	ret = append_json_int_value(name, output, rte_get_master_lcore());
+	ret = append_json_int_value(output, name, rte_get_master_lcore());
 	return ret;
 }
 
@@ -1087,7 +1087,7 @@ add_core(const char *name, char **output,
 		return SPP_RET_NG;
 	}
 
-	ret = append_json_array_brackets(name, output, itr_params.output);
+	ret = append_json_array_brackets(output, name, itr_params.output);
 	spp_strbuf_free(itr_params.output);
 	return ret;
 }
@@ -1119,8 +1119,7 @@ append_classifier_element_value(
 
 	spp_format_port_string(port_str, port->iface_type, port->iface_no);
 
-	ret = append_json_str_value("type", &tmp_buff,
-			CLS_TYPE_A_LIST[type]);
+	ret = append_json_str_value(&tmp_buff, "type", CLS_TYPE_A_LIST[type]);
 	if (unlikely(ret < SPP_RET_OK))
 		return ret;
 
@@ -1137,15 +1136,15 @@ append_classifier_element_value(
 		break;
 	}
 
-	ret = append_json_str_value("value", &tmp_buff, value_str);
+	ret = append_json_str_value(&tmp_buff, "value", value_str);
 	if (unlikely(ret < 0))
 		return ret;
 
-	ret = append_json_str_value("port", &tmp_buff, port_str);
+	ret = append_json_str_value(&tmp_buff, "port", port_str);
 	if (unlikely(ret < SPP_RET_OK))
 		return ret;
 
-	ret = append_json_block_brackets("", &buff, tmp_buff);
+	ret = append_json_block_brackets(&buff, "", tmp_buff);
 	spp_strbuf_free(tmp_buff);
 	params->output = buff;
 	return ret;
@@ -1185,7 +1184,7 @@ add_classifier_table(const char *name, char **output,
 		return SPP_RET_NG;
 	}
 
-	ret = append_json_array_brackets(name, output, itr_params.output);
+	ret = append_json_array_brackets(output, name, itr_params.output);
 	spp_strbuf_free(itr_params.output);
 	return ret;
 }
@@ -1319,7 +1318,7 @@ append_command_results_value(const char *name, char **output,
 			return SPP_RET_NG;
 		}
 
-		ret = append_json_block_brackets("", &tmp_buff2, tmp_buff1);
+		ret = append_json_block_brackets(&tmp_buff2, "", tmp_buff1);
 		if (unlikely(ret < 0)) {
 			spp_strbuf_free(tmp_buff1);
 			spp_strbuf_free(tmp_buff2);
@@ -1328,7 +1327,7 @@ append_command_results_value(const char *name, char **output,
 
 	}
 
-	ret = append_json_array_brackets(name, output, tmp_buff2);
+	ret = append_json_array_brackets(output, name, tmp_buff2);
 	spp_strbuf_free(tmp_buff1);
 	spp_strbuf_free(tmp_buff2);
 	return ret;
@@ -1355,7 +1354,7 @@ append_info_value(const char *name, char **output)
 		return SPP_RET_NG;
 	}
 
-	ret = append_json_block_brackets(name, output, tmp_buff);
+	ret = append_json_block_brackets(output, name, tmp_buff);
 	spp_strbuf_free(tmp_buff);
 	return ret;
 }
@@ -1394,7 +1393,7 @@ send_decode_error_response(int *sock,
 				"(name = decode_error_response)\n");
 		return;
 	}
-	ret = append_json_block_brackets("", &msg, tmp_buff);
+	ret = append_json_block_brackets(&msg, "", tmp_buff);
 	spp_strbuf_free(tmp_buff);
 	if (unlikely(ret < SPP_RET_OK)) {
 		spp_strbuf_free(msg);
@@ -1477,7 +1476,7 @@ send_result_spp_ctl(int *sock,
 				"allocate error. (name = result_response)\n");
 		return;
 	}
-	ret = append_json_block_brackets("", &msg, tmp_buff);
+	ret = append_json_block_brackets(&msg, "", tmp_buff);
 	spp_strbuf_free(tmp_buff);
 	if (unlikely(ret < SPP_RET_OK)) {
 		spp_strbuf_free(msg);
diff --git a/src/shared/secondary/spp_worker_th/json_helper.c b/src/shared/secondary/spp_worker_th/json_helper.c
index 4c1baa3..20badb0 100644
--- a/src/shared/secondary/spp_worker_th/json_helper.c
+++ b/src/shared/secondary/spp_worker_th/json_helper.c
@@ -7,27 +7,27 @@
 
 #define RTE_LOGTYPE_WK_JSON_HELPER RTE_LOGTYPE_USER1
 
+/* Add a comma to given JSON string, or nothing if the end of the msg. */
 int
 append_json_comma(char **output)
 {
 	*output = spp_strbuf_append(*output, ", ", strlen(", "));
 	if (unlikely(*output == NULL)) {
-		RTE_LOG(ERR, WK_JSON_HELPER,
-				"JSON's comma failed to add.\n");
+		RTE_LOG(ERR, WK_JSON_HELPER, "Failed to add comma.\n");
 		return SPP_RET_NG;
 	}
 
 	return SPP_RET_OK;
 }
 
-/* append data of unsigned integral type for JSON format */
+/* Add a uint value to given JSON string. */
 int
-append_json_uint_value(const char *name, char **output, unsigned int value)
+append_json_uint_value(char **output, const char *name, unsigned int value)
 {
 	int len = strlen(*output);
-	/* extend the buffer */
+
 	*output = spp_strbuf_append(*output, "",
-			strlen(name) + CMD_TAG_APPEND_SIZE*2);
+			strlen(name) + JSON_APPEND_LEN*2);
 	if (unlikely(*output == NULL)) {
 		RTE_LOG(ERR, WK_JSON_HELPER,
 				"JSON's numeric format failed to add. "
@@ -40,14 +40,14 @@ append_json_uint_value(const char *name, char **output, unsigned int value)
 	return SPP_RET_OK;
 }
 
-/* append data of integral type for JSON format */
+/* Add an int value to given JSON string. */
 int
-append_json_int_value(const char *name, char **output, int value)
+append_json_int_value(char **output, const char *name, int value)
 {
 	int len = strlen(*output);
 	/* extend the buffer */
 	*output = spp_strbuf_append(*output, "",
-			strlen(name) + CMD_TAG_APPEND_SIZE*2);
+			strlen(name) + JSON_APPEND_LEN*2);
 	if (unlikely(*output == NULL)) {
 		RTE_LOG(ERR, WK_JSON_HELPER,
 				"JSON's numeric format failed to add. "
@@ -60,66 +60,77 @@ append_json_int_value(const char *name, char **output, int value)
 	return SPP_RET_OK;
 }
 
-/* append data of string type for JSON format */
+/* Add a string value to given JSON string. */
 int
-append_json_str_value(const char *name, char **output, const char *str)
+append_json_str_value(char **output, const char *name, const char *val)
 {
 	int len = strlen(*output);
 	/* extend the buffer */
 	*output = spp_strbuf_append(*output, "",
-			strlen(name) + strlen(str) + CMD_TAG_APPEND_SIZE);
+			strlen(name) + strlen(val) + JSON_APPEND_LEN);
 	if (unlikely(*output == NULL)) {
 		RTE_LOG(ERR, WK_JSON_HELPER,
 				"JSON's string format failed to add. "
-				"(name = %s, str = %s)\n", name, str);
+				"(name = %s, val= %s)\n", name, val);
 		return SPP_RET_NG;
 	}
 
 	sprintf(&(*output)[len], JSON_APPEND_VALUE("\"%s\""),
-			JSON_APPEND_COMMA(len), name, str);
+			JSON_APPEND_COMMA(len), name, val);
 	return SPP_RET_OK;
 }
 
-/* append brackets of the array for JSON format */
+/**
+ * Add an entry of array by surrounding given value with '[' and ']' to make
+ * it an array entry. The added entry `"key": [ val ]"` is defined as macro
+ * `JSON_APPEND_ARRAY`.
+ */
 int
-append_json_array_brackets(const char *name, char **output, const char *str)
+append_json_array_brackets(char **output, const char *name, const char *val)
 {
 	int len = strlen(*output);
 	/* extend the buffer */
 	*output = spp_strbuf_append(*output, "",
-			strlen(name) + strlen(str) + CMD_TAG_APPEND_SIZE);
+			strlen(name) + strlen(val) + JSON_APPEND_LEN);
 	if (unlikely(*output == NULL)) {
 		RTE_LOG(ERR, WK_JSON_HELPER,
 				"JSON's square bracket failed to add. "
-				"(name = %s, str = %s)\n", name, str);
+				"(name = %s, val= %s)\n", name, val);
 		return SPP_RET_NG;
 	}
 
 	sprintf(&(*output)[len], JSON_APPEND_ARRAY,
-			JSON_APPEND_COMMA(len), name, str);
+			JSON_APPEND_COMMA(len), name, val);
 	return SPP_RET_OK;
 }
 
-/* append brackets of the blocks for JSON format */
+/**
+ * Add an entry of hash by surrounding given value with '{' and '}' to make
+ * it a hash entry. The added entry `"key": { val }"` is defined as macro
+ * `JSON_APPEND_BLOCK`.
+ *
+ * This function is also used to make a block without key `{ val }` if given
+ * key is `""`.
+ */
 int
-append_json_block_brackets(const char *name, char **output, const char *str)
+append_json_block_brackets(char **output, const char *name, const char *val)
 {
 	int len = strlen(*output);
 	/* extend the buffer */
 	*output = spp_strbuf_append(*output, "",
-			strlen(name) + strlen(str) + CMD_TAG_APPEND_SIZE);
+			strlen(name) + strlen(val) + JSON_APPEND_LEN);
 	if (unlikely(*output == NULL)) {
 		RTE_LOG(ERR, WK_JSON_HELPER,
 				"JSON's curly bracket failed to add. "
-				"(name = %s, str = %s)\n", name, str);
+				"(name = %s, val= %s)\n", name, val);
 		return SPP_RET_NG;
 	}
 
 	if (name[0] == '\0')
 		sprintf(&(*output)[len], JSON_APPEND_BLOCK_NONAME,
-				JSON_APPEND_COMMA(len), name, str);
+				JSON_APPEND_COMMA(len), name, val);
 	else
 		sprintf(&(*output)[len], JSON_APPEND_BLOCK,
-				JSON_APPEND_COMMA(len), name, str);
+				JSON_APPEND_COMMA(len), name, val);
 	return SPP_RET_OK;
 }
diff --git a/src/shared/secondary/spp_worker_th/json_helper.h b/src/shared/secondary/spp_worker_th/json_helper.h
index f286404..0bfe0bf 100644
--- a/src/shared/secondary/spp_worker_th/json_helper.h
+++ b/src/shared/secondary/spp_worker_th/json_helper.h
@@ -7,32 +7,91 @@
 
 #include "cmd_utils.h"
 
-#define CMD_TAG_APPEND_SIZE 16
+/* TODO(yasufum) revise name considering the usage. */
+#define JSON_APPEND_LEN 16
 
+/* Add comma at the end of JSON statement, or do nothing. */
 #define JSON_APPEND_COMMA(flg)    ((flg)?", ":"")
 
+/**
+ * Defines of macro for JSON formatter. There are two ro three strings, the
+ * first one is placehodler for JSON msg, second one is key and third one is
+ * its value. Key and value are appended at the end of the placeholder.
+ */
 #define JSON_APPEND_VALUE(format) "%s\"%s\": "format
-
 #define JSON_APPEND_ARRAY         "%s\"%s\": [ %s ]"
-
 #define JSON_APPEND_BLOCK_NONAME  "%s%s{ %s }"
 #define JSON_APPEND_BLOCK         "%s\"%s\": { %s }"
 
+/**
+ * Add a comma to given JSON string, or nothing if the end of the statement.
+ *
+ * @param[in,out] output Placeholder of JSON msg.
+ */
 int append_json_comma(char **output);
 
-int append_json_uint_value(const char *name, char **output,
-		unsigned int value);
+/**
+ * Add a uint value to given JSON string.
+ *
+ * @param[in,out] output Placeholder of JSON msg.
+ * @param[in] name Name as a key.
+ * @param[in] val Uint value of the key.
+ * @retval SPP_RET_OK if succeeded.
+ * @retval SPP_RET_NG if failed.
+ */
+int append_json_uint_value(char **output, const char *name, unsigned int val);
 
-int append_json_int_value(const char *name, char **output,
-		int value);
+/**
+ * Add an int value to given JSON string.
+ *
+ * @param[in,out] output Placeholder of JSON msg.
+ * @param[in] name Name as a key.
+ * @param[in] val Int value of the key.
+ * @retval SPP_RET_OK if succeeded.
+ * @retval SPP_RET_NG if failed.
+ */
+int append_json_int_value(char **output, const char *name, int val);
 
-int append_json_str_value(const char *name, char **output,
-		const char *str);
+/**
+ * Add a string value to given JSON string.
+ *
+ * @param[in,out] output Placeholder of JSON msg.
+ * @param[in] name Name as a key.
+ * @param[in] val String value of the key.
+ * @retval SPP_RET_OK if succeeded.
+ * @retval SPP_RET_NG if failed.
+ */
+int append_json_str_value(char **output, const char *name, const char *val);
 
-int append_json_array_brackets(const char *name, char **output,
-		const char *str);
+/**
+ * Add an entry of array by surrounding given value with '[' and ']' to make
+ * it an array entry. The added entry `"key": [ val ]"` is defined as macro
+ * `JSON_APPEND_ARRAY`.
+ *
+ * @param[in,out] output Placeholder of JSON msg.
+ * @param[in] name Name as a key.
+ * @param[in] val String value of the key.
+ * @retval SPP_RET_OK if succeeded.
+ * @retval SPP_RET_NG if failed.
+ */
+int append_json_array_brackets(char **output, const char *name,
+		const char *val);
 
-int append_json_block_brackets(const char *name, char **output,
-		const char *str);
+/**
+ * Add an entry of hash by surrounding given value with '{' and '}' to make
+ * it a hash entry. The added entry `"key": { val }"` is defined as macro
+ * `JSON_APPEND_BLOCK`.
+ *
+ * This function is also used to make a block without key `{ val }` if given
+ * key is `""`.
+ *
+ * @param[in,out] output Placeholder of JSON msg.
+ * @param[in] name Name as a key.
+ * @param[in] val String value of the key.
+ * @retval SPP_RET_OK if succeeded.
+ * @retval SPP_RET_NG if failed.
+ */
+int append_json_block_brackets(char **output, const char *name,
+		const char *val);
 
 #endif
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 13:36:05 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00D6065GSMD0@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 13:36:52 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTL00M2W65G1U00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:36:52 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00AOQ65G8L60@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:36:52 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf105.ddreams.local (Postfix) with ESMTP id 4FA247E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:52 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 4B4AB8E605D	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:52 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 408D58E605A	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:36:52 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id A44998E6052	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:51 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf105.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:36:51 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4apY0008199;	Mon,
 24 Jun 2019 13:36:51 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O4ap5G008198;	Mon, 24 Jun 2019 13:36:51 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O4apSV008195	for unknown; Mon,
 24 Jun 2019 13:36:51 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4aoFD016594 for
 unknown; Mon, 24 Jun 2019 13:36:51 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4aovu016591; Mon,
 24 Jun 2019 13:36:50 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4ao0h030540;	Mon,
 24 Jun 2019 13:36:50 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O4aoXK030536	for unknown; Mon, 24 Jun 2019 13:36:50 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4aoon013459 for
 unknown; Mon, 24 Jun 2019 13:36:50 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4aoWY013453 for
 unknown; Mon, 24 Jun 2019 13:36:50 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O4ahfO027565	for unknown; Mon,
 24 Jun 2019 13:36:49 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 4C40A1BF60;	Mon, 24 Jun 2019 06:36:43 +0200 (CEST)
Received: from mail-pl1-f194.google.com
 (mail-pl1-f194.google.com [209.85.214.194]) by dpdk.org (Postfix)
 with ESMTP id 465541BF5F for <spp@dpdk.org>; Mon,
 24 Jun 2019 06:36:42 +0200 (CEST)
Received: by mail-pl1-f194.google.com with SMTP id g4so6131544plb.5 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 21:36:42 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id c10sm9005178pjq.14.2019.06.23.21.36.40
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 21:36:41 -0700 (PDT)
Date: Mon, 24 Jun 2019 13:36:05 +0900
From: yasufum.o@gmail.com
Subject: [spp 04377] [spp] [PATCH 05/13] shared/sec: move JSON formatter to
	shard/secondary
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624043613.19271-6-yasufum.o@gmail.com>
In-reply-to: <20190624043613.19271-1-yasufum.o@gmail.com>
References: <20190624043613.19271-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04377
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=U513fdLmes0ACugfFNVqn5S38qxg4OdE7HgK2d/P+QA=;
 b=gMQjwenyF7Gf27MiV56DBo1et0pN0Yg9Fh5Y6tM9dwh4AZrwZRCrEFgkxQU1DbHW6l
 Y7vomZHk5PwGSGpOdxIs5OvW9SbyK8QCnCLSCY6I5GYmt3liCt9XkLo/beP9KXIFGP9V
 u7B24fh1Cgacyzd1Bv8e91GF8vALW89RqrkOhlTZuGY3MLi0PGJXN4/EG/SNX2hPVeEY
 +XX+Z7fviQBjf9pcpyHQNelHjtospWvl7tqbqETh2CnKdy6C9Qfd2inrFsURGPqOGF9M
 R2k7PHoA4ppnk5xWFrxVXK0oo2ZhglaDwFhYPC/JQlCThXCf4qsngY+D5iDHCMHD1rJK /QMQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=U513fdLmes0ACugfFNVqn5S38qxg4OdE7HgK2d/P+QA=;
 b=BPgFZDiKw0JnWL0lRmB3xNwuufj4Ecm/MmpPsZ5oa3y9gZrZiOel7fEGejd1RgWXID
 wzGz0dd4JnXP4vvtpWK7uoo+AYcRusrYlPdg8VNEN8NTJsbntaJ3O1qdseGCltc1ZcwH
 f5qCnXoFy4bmarS9GNUiWfPAmzCMUdSR2+fhNJbvfOR7WlKibjlrSw/NyCkXu5y1xrAN
 HQTJ/G7DKCIk7ECRetTWW44FGd6Xv9WgN3YuYrklc9TCXzMfRC1OMtOf9DqCCk2xL4jW
 Dh5JHjrDA1zMx8qY7Vii02waPJSbmdz2Njyg65BYmY535iOHdayAObPGwjLayw2Nwcqj 10gg==
X-Gm-Message-State: APjAAAWT9aV/zhfebC6yl70lpFqv2As8ioy6a+18opEbACKqEvVkJ/tT
 LEARbaxPWfYGzGSEkAju0uuEm03h
X-Google-Smtp-Source:
 APXvYqx1OLx7iHzcTKNE85bdw3TOl5B9/cAZbtXWyDYHlT1nissya5SV8pxPUSxknhlc5kBKJJKZ5A==
X-Received: by 2002:a17:902:1e9:: with SMTP id
 b96mr99722793plb.277.1561351001394; Sun, 23 Jun 2019 21:36:41 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 230
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Principle JSON formatters, such as append_json_int_value(), can be used
from all of SPP secondary processes. This update is to move files
`json_helper.*` and `string_buffer.*` to the parent directory
`shared/secondary`. Definition of return codes of `SPP_RET_OK` and
`SPP_RET_NG` is also moved to the directory for the change.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/Makefile                                 |  7 ++++---
 src/pcap/Makefile                                   |  3 ++-
 src/pcap/cmd_runner.c                               |  2 +-
 .../secondary/{spp_worker_th => }/json_helper.c     |  0
 .../secondary/{spp_worker_th => }/json_helper.h     |  6 +++++-
 src/shared/secondary/return_codes.h                 | 13 +++++++++++++
 src/shared/secondary/spp_worker_th/cmd_runner.c     |  4 ++--
 src/shared/secondary/spp_worker_th/cmd_utils.h      |  6 +-----
 src/shared/secondary/spp_worker_th/conn_spp_ctl.c   |  2 +-
 .../secondary/{spp_worker_th => }/string_buffer.c   |  0
 .../secondary/{spp_worker_th => }/string_buffer.h   |  0
 src/vf/Makefile                                     |  7 ++++---
 12 files changed, 33 insertions(+), 17 deletions(-)
 rename src/shared/secondary/{spp_worker_th => }/json_helper.c (100%)
 rename src/shared/secondary/{spp_worker_th => }/json_helper.h (95%)
 create mode 100644 src/shared/secondary/return_codes.h
 rename src/shared/secondary/{spp_worker_th => }/string_buffer.c (100%)
 rename src/shared/secondary/{spp_worker_th => }/string_buffer.h (100%)

diff --git a/src/mirror/Makefile b/src/mirror/Makefile
index 6b6b9b9..b31e116 100644
--- a/src/mirror/Makefile
+++ b/src/mirror/Makefile
@@ -11,19 +11,20 @@ include $(RTE_SDK)/mk/rte.vars.mk
 # binary name
 APP = spp_mirror
 
+SPP_SEC_DIR = ../shared/secondary
 SPP_WKT_DIR = ../shared/secondary/spp_worker_th
 
 # all source are stored in SRCS-y
 SRCS-y := spp_mirror.c
 SRCS-y += ../shared/common.c
-SRCS-y += ../shared/secondary/utils.c ../shared/secondary/add_port.c
+SRCS-y += $(SPP_SEC_DIR)/utils.c $(SPP_SEC_DIR)/add_port.c
+SRCS-y += $(SPP_SEC_DIR)/json_helper.c
+SRCS-y += $(SPP_SEC_DIR)/string_buffer.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_utils.c
 SRCS-y += $(SPP_WKT_DIR)/spp_port.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_runner.c
-SRCS-y += $(SPP_WKT_DIR)/json_helper.c
-SRCS-y += $(SPP_WKT_DIR)/string_buffer.c
 SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
 
 CFLAGS += -DALLOW_EXPERIMENTAL_API
diff --git a/src/pcap/Makefile b/src/pcap/Makefile
index c3d5ae4..852d036 100644
--- a/src/pcap/Makefile
+++ b/src/pcap/Makefile
@@ -11,6 +11,7 @@ include $(RTE_SDK)/mk/rte.vars.mk
 # binary name
 APP = spp_pcap
 
+SPP_SEC_DIR = ../shared/secondary
 SPP_WKT_DIR = ../shared/secondary/spp_worker_th
 
 # all source are stored in SRCS-y
@@ -18,10 +19,10 @@ SRCS-y := spp_pcap.c
 SRCS-y += cmd_utils.c
 SRCS-y += cmd_runner.c cmd_parser.c
 SRCS-y += ../shared/common.c
+SRCS-y += $(SPP_SEC_DIR)/string_buffer.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/spp_port.c
 SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
-SRCS-y += $(SPP_WKT_DIR)/string_buffer.c
 
 CFLAGS += -DALLOW_EXPERIMENTAL_API
 CFLAGS += $(WERROR_FLAGS) -O3 -MMD
diff --git a/src/pcap/cmd_runner.c b/src/pcap/cmd_runner.c
index 8a1fb87..55f15bf 100644
--- a/src/pcap/cmd_runner.c
+++ b/src/pcap/cmd_runner.c
@@ -7,7 +7,7 @@
 
 #include <rte_log.h>
 
-#include "shared/secondary/spp_worker_th/string_buffer.h"
+#include "shared/secondary/string_buffer.h"
 #include "spp_pcap.h"
 #include "shared/secondary/spp_worker_th/conn_spp_ctl.h"
 #include "cmd_parser.h"
diff --git a/src/shared/secondary/spp_worker_th/json_helper.c b/src/shared/secondary/json_helper.c
similarity index 100%
rename from src/shared/secondary/spp_worker_th/json_helper.c
rename to src/shared/secondary/json_helper.c
diff --git a/src/shared/secondary/spp_worker_th/json_helper.h b/src/shared/secondary/json_helper.h
similarity index 95%
rename from src/shared/secondary/spp_worker_th/json_helper.h
rename to src/shared/secondary/json_helper.h
index 0bfe0bf..b004428 100644
--- a/src/shared/secondary/spp_worker_th/json_helper.h
+++ b/src/shared/secondary/json_helper.h
@@ -5,7 +5,11 @@
 #ifndef _SPPWK_JSON_HELPER_H_
 #define _SPPWK_JSON_HELPER_H_
 
-#include "cmd_utils.h"
+#include <string.h>
+#include <rte_branch_prediction.h>
+#include <rte_log.h>
+#include "return_codes.h"
+#include "string_buffer.h"
 
 /* TODO(yasufum) revise name considering the usage. */
 #define JSON_APPEND_LEN 16
diff --git a/src/shared/secondary/return_codes.h b/src/shared/secondary/return_codes.h
new file mode 100644
index 0000000..18b4711
--- /dev/null
+++ b/src/shared/secondary/return_codes.h
@@ -0,0 +1,13 @@
+/* SPDX-License-Identifier: BSD-3-Clause
+ * Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
+ */
+
+#ifndef _SPP_SEC_RETURN_CODES_H_
+#define _SPP_SEC_RETURN_CODES_H_
+
+enum spp_return_val {
+	SPP_RET_OK = 0,  /**< succeeded */
+	SPP_RET_NG = -1, /**< failed */
+};
+
+#endif
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index e41fd85..b1718fa 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -11,9 +11,9 @@
 #include "vf_deps.h"
 #include "mirror_deps.h"
 #include "spp_port.h"
-#include "string_buffer.h"
+#include "shared/secondary/string_buffer.h"
 
-#include "json_helper.h"
+#include "shared/secondary/json_helper.h"
 #include "conn_spp_ctl.h"
 #include "cmd_parser.h"
 #include "cmd_runner.h"
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index b8ab10c..3ee3142 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -12,6 +12,7 @@
  */
 
 #include <netinet/in.h>
+#include "shared/secondary/return_codes.h"
 #include "shared/common.h"
 
 /**
@@ -94,11 +95,6 @@ enum spp_classifier_type {
 	SPP_CLASSIFIER_TYPE_VLAN  /**< VLAN ID */
 };
 
-enum sppwk_return_val {
-	SPP_RET_OK = 0,  /**< succeeded */
-	SPP_RET_NG = -1, /**< failed */
-};
-
 /**
  * Port type (rx or tx) to indicate which direction packet goes
  * (e.g. receiving or transmitting)
diff --git a/src/shared/secondary/spp_worker_th/conn_spp_ctl.c b/src/shared/secondary/spp_worker_th/conn_spp_ctl.c
index 030da92..70e06f9 100644
--- a/src/shared/secondary/spp_worker_th/conn_spp_ctl.c
+++ b/src/shared/secondary/spp_worker_th/conn_spp_ctl.c
@@ -13,7 +13,7 @@
 #include <rte_branch_prediction.h>
 
 #include "shared/common.h"
-#include "string_buffer.h"
+#include "shared/secondary/string_buffer.h"
 #include "conn_spp_ctl.h"
 
 #define RTE_LOGTYPE_SPP_COMMAND_PROC RTE_LOGTYPE_USER1
diff --git a/src/shared/secondary/spp_worker_th/string_buffer.c b/src/shared/secondary/string_buffer.c
similarity index 100%
rename from src/shared/secondary/spp_worker_th/string_buffer.c
rename to src/shared/secondary/string_buffer.c
diff --git a/src/shared/secondary/spp_worker_th/string_buffer.h b/src/shared/secondary/string_buffer.h
similarity index 100%
rename from src/shared/secondary/spp_worker_th/string_buffer.h
rename to src/shared/secondary/string_buffer.h
diff --git a/src/vf/Makefile b/src/vf/Makefile
index ca8d2b3..3cbdb01 100644
--- a/src/vf/Makefile
+++ b/src/vf/Makefile
@@ -11,20 +11,21 @@ include $(RTE_SDK)/mk/rte.vars.mk
 # binary name
 APP = spp_vf
 
+SPP_SEC_DIR = ../shared/secondary
 SPP_WKT_DIR = ../shared/secondary/spp_worker_th
 
 # all source are stored in SRCS-y
 SRCS-y := spp_vf.c classifier_mac.c spp_forward.c
-SRCS-y += $(SPP_WKT_DIR)/string_buffer.c
+SRCS-y += $(SPP_SEC_DIR)/string_buffer.c
+SRCS-y += $(SPP_SEC_DIR)/json_helper.c
+SRCS-y += $(SPP_SEC_DIR)/utils.c $(SPP_SEC_DIR)/add_port.c
 SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
 SRCS-y += $(SPP_WKT_DIR)/spp_port.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_runner.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_utils.c
-SRCS-y += $(SPP_WKT_DIR)/json_helper.c
 SRCS-y += ../shared/common.c
-SRCS-y += ../shared/secondary/utils.c ../shared/secondary/add_port.c
 
 CFLAGS += -DALLOW_EXPERIMENTAL_API
 CFLAGS += $(WERROR_FLAGS) -O3 -MMD
-- 
2.17.1



From spp-request@dpdk.org Mon Jun 24 13:36:43 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd106.ddreams.local
 (zssg-mailmd106.ddreams.local [10.160.123.101])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTL00D6C65GSMD0@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 13:36:52 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd106.ddreams.local by
 zssg-mailmd106.ddreams.local (dDREAMS) id <0PTL0160665G9L00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:36:52 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd106.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00F8K65G5AF0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:36:52 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id 975E97E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:52 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 95DDD8E605C	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:52 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 8AD3C8E6058	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:36:52 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id E87AC8E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:51 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:36:51 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4apd6008206;	Mon,
 24 Jun 2019 13:36:51 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O4ap2q008205;	Mon, 24 Jun 2019 13:36:51 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O4apRf008202	for unknown; Mon,
 24 Jun 2019 13:36:51 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4ap6i013486 for
 unknown; Mon, 24 Jun 2019 13:36:51 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4apbo013483 for
 unknown; Mon, 24 Jun 2019 13:36:51 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O4aivD027575	for unknown; Mon,
 24 Jun 2019 13:36:50 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 598F71BF6C	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 24 Jun 2019 06:36:44 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 8
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 24 Jun 2019 06:36:43 +0200
Message-id: <mailman.23378.1561351003.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH 04/13] shared/sec: change order of args of JSON
      fmtters (yasufum.o@gmail.com)
   2. [PATCH 05/13] shared/sec: move JSON formatter to
      shard/secondary (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon, 24 Jun 2019 13:36:04 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 04/13] shared/sec: change order of args of JSON
	fmtters
Message-ID: <20190624043613.19271-5-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Formatter functions defined in `json_helper.h` takes three args, a pair
of name and value of JSON and a string buffer as a placeholder. But the
order of args `func(name, buf, value)` is not well. This update is to
move `buf` at first as similar to other C functions such as sprintf().

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/cmd_runner.c      | 61 +++++++------
 .../secondary/spp_worker_th/json_helper.c     | 61 +++++++------
 .../secondary/spp_worker_th/json_helper.h     | 85 ++++++++++++++++---
 3 files changed, 138 insertions(+), 69 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 423774b..e41fd85 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -21,6 +21,7 @@
 #define RTE_LOGTYPE_WK_CMD_RUNNER RTE_LOGTYPE_USER1
 
 /* request message initial size */
+#define CMD_TAG_APPEND_SIZE 16
 #define CMD_ERR_MSG_LEN 128
 #define CMD_REQ_BUF_INIT_SIZE 2048
 #define CMD_RES_BUF_INIT_SIZE 2048
@@ -741,7 +742,7 @@ static int
 append_result_value(const char *name, char **output, void *tmp)
 {
 	const struct cmd_result *result = tmp;
-	return append_json_str_value(name, output, result->result);
+	return append_json_str_value(output, name, result->result);
 }
 
 /* append error details for JSON format */
@@ -764,14 +765,13 @@ append_error_details_value(const char *name, char **output, void *tmp)
 		return SPP_RET_NG;
 	}
 
-	ret = append_json_str_value("message", &tmp_buff,
-			result->err_msg);
+	ret = append_json_str_value(&tmp_buff, "message", result->err_msg);
 	if (unlikely(ret < 0)) {
 		spp_strbuf_free(tmp_buff);
 		return SPP_RET_NG;
 	}
 
-	ret = append_json_block_brackets(name, output, tmp_buff);
+	ret = append_json_block_brackets(output, name, tmp_buff);
 	spp_strbuf_free(tmp_buff);
 	return ret;
 }
@@ -781,7 +781,7 @@ static int
 add_client_id(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
-	return append_json_int_value(name, output, sppwk_get_client_id());
+	return append_json_int_value(output, name, sppwk_get_client_id());
 }
 
 /* append a list of interface numbers */
@@ -816,7 +816,7 @@ static int
 append_process_type_value(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
-	return append_json_str_value(name, output,
+	return append_json_str_value(output, name,
 			SPPWK_PROC_TYPE_LIST[sppwk_get_proc_type()]);
 }
 
@@ -849,7 +849,7 @@ add_interface(const char *name, char **output,
 		return SPP_RET_NG;
 	}
 
-	ret = append_json_array_brackets(name, output, tmp_buff);
+	ret = append_json_array_brackets(output, name, tmp_buff);
 	spp_strbuf_free(tmp_buff);
 	return ret;
 }
@@ -859,16 +859,16 @@ static int
 append_vlan_value(char **output, const int ope, const int vid, const int pcp)
 {
 	int ret = SPP_RET_OK;
-	ret = append_json_str_value("operation", output,
+	ret = append_json_str_value(output, "operation",
 			PORT_ABILITY_STAT_LIST[ope]);
 	if (unlikely(ret < SPP_RET_OK))
 		return SPP_RET_NG;
 
-	ret = append_json_int_value("id", output, vid);
+	ret = append_json_int_value(output, "id", vid);
 	if (unlikely(ret < 0))
 		return SPP_RET_NG;
 
-	ret = append_json_int_value("pcp", output, pcp);
+	ret = append_json_int_value(output, "pcp", pcp);
 	if (unlikely(ret < 0))
 		return SPP_RET_NG;
 
@@ -922,7 +922,7 @@ append_vlan_block(const char *name, char **output,
 			return SPP_RET_NG;
 	}
 
-	ret = append_json_block_brackets(name, output, tmp_buff);
+	ret = append_json_block_brackets(output, name, tmp_buff);
 	spp_strbuf_free(tmp_buff);
 	return ret;
 }
@@ -943,7 +943,7 @@ append_port_block(char **output, const struct sppwk_port_idx *port,
 	}
 
 	spp_format_port_string(port_str, port->iface_type, port->iface_no);
-	ret = append_json_str_value("port", &tmp_buff, port_str);
+	ret = append_json_str_value(&tmp_buff, "port", port_str);
 	if (unlikely(ret < SPP_RET_OK))
 		return SPP_RET_NG;
 
@@ -954,7 +954,7 @@ append_port_block(char **output, const struct sppwk_port_idx *port,
 	if (unlikely(ret < SPP_RET_OK))
 		return SPP_RET_NG;
 
-	ret = append_json_block_brackets("", output, tmp_buff);
+	ret = append_json_block_brackets(output, "", tmp_buff);
 	spp_strbuf_free(tmp_buff);
 	return ret;
 }
@@ -982,7 +982,7 @@ append_port_array(const char *name, char **output, const int num,
 			return SPP_RET_NG;
 	}
 
-	ret = append_json_array_brackets(name, output, tmp_buff);
+	ret = append_json_array_brackets(output, name, tmp_buff);
 	spp_strbuf_free(tmp_buff);
 	return ret;
 }
@@ -1020,17 +1020,17 @@ append_core_element_value(
 	 * TODO(yasufum) change ambiguous "core" to more specific one such as
 	 * "worker-lcores" or "slave-lcores".
 	 */
-	ret = append_json_uint_value("core", &tmp_buff, lcore_id);
+	ret = append_json_uint_value(&tmp_buff, "core", lcore_id);
 	if (unlikely(ret < SPP_RET_OK))
 		return ret;
 
 	if (unuse_flg) {
-		ret = append_json_str_value("name", &tmp_buff, name);
+		ret = append_json_str_value(&tmp_buff, "name", name);
 		if (unlikely(ret < 0))
 			return ret;
 	}
 
-	ret = append_json_str_value("type", &tmp_buff, type);
+	ret = append_json_str_value(&tmp_buff, "type", type);
 	if (unlikely(ret < SPP_RET_OK))
 		return ret;
 
@@ -1046,7 +1046,7 @@ append_core_element_value(
 			return ret;
 	}
 
-	ret = append_json_block_brackets("", &buff, tmp_buff);
+	ret = append_json_block_brackets(&buff, "", tmp_buff);
 	spp_strbuf_free(tmp_buff);
 	params->output = buff;
 	return ret;
@@ -1058,7 +1058,7 @@ add_master_lcore(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
 	int ret = SPP_RET_NG;
-	ret = append_json_int_value(name, output, rte_get_master_lcore());
+	ret = append_json_int_value(output, name, rte_get_master_lcore());
 	return ret;
 }
 
@@ -1087,7 +1087,7 @@ add_core(const char *name, char **output,
 		return SPP_RET_NG;
 	}
 
-	ret = append_json_array_brackets(name, output, itr_params.output);
+	ret = append_json_array_brackets(output, name, itr_params.output);
 	spp_strbuf_free(itr_params.output);
 	return ret;
 }
@@ -1119,8 +1119,7 @@ append_classifier_element_value(
 
 	spp_format_port_string(port_str, port->iface_type, port->iface_no);
 
-	ret = append_json_str_value("type", &tmp_buff,
-			CLS_TYPE_A_LIST[type]);
+	ret = append_json_str_value(&tmp_buff, "type", CLS_TYPE_A_LIST[type]);
 	if (unlikely(ret < SPP_RET_OK))
 		return ret;
 
@@ -1137,15 +1136,15 @@ append_classifier_element_value(
 		break;
 	}
 
-	ret = append_json_str_value("value", &tmp_buff, value_str);
+	ret = append_json_str_value(&tmp_buff, "value", value_str);
 	if (unlikely(ret < 0))
 		return ret;
 
-	ret = append_json_str_value("port", &tmp_buff, port_str);
+	ret = append_json_str_value(&tmp_buff, "port", port_str);
 	if (unlikely(ret < SPP_RET_OK))
 		return ret;
 
-	ret = append_json_block_brackets("", &buff, tmp_buff);
+	ret = append_json_block_brackets(&buff, "", tmp_buff);
 	spp_strbuf_free(tmp_buff);
 	params->output = buff;
 	return ret;
@@ -1185,7 +1184,7 @@ add_classifier_table(const char *name, char **output,
 		return SPP_RET_NG;
 	}
 
-	ret = append_json_array_brackets(name, output, itr_params.output);
+	ret = append_json_array_brackets(output, name, itr_params.output);
 	spp_strbuf_free(itr_params.output);
 	return ret;
 }
@@ -1319,7 +1318,7 @@ append_command_results_value(const char *name, char **output,
 			return SPP_RET_NG;
 		}
 
-		ret = append_json_block_brackets("", &tmp_buff2, tmp_buff1);
+		ret = append_json_block_brackets(&tmp_buff2, "", tmp_buff1);
 		if (unlikely(ret < 0)) {
 			spp_strbuf_free(tmp_buff1);
 			spp_strbuf_free(tmp_buff2);
@@ -1328,7 +1327,7 @@ append_command_results_value(const char *name, char **output,
 
 	}
 
-	ret = append_json_array_brackets(name, output, tmp_buff2);
+	ret = append_json_array_brackets(output, name, tmp_buff2);
 	spp_strbuf_free(tmp_buff1);
 	spp_strbuf_free(tmp_buff2);
 	return ret;
@@ -1355,7 +1354,7 @@ append_info_value(const char *name, char **output)
 		return SPP_RET_NG;
 	}
 
-	ret = append_json_block_brackets(name, output, tmp_buff);
+	ret = append_json_block_brackets(output, name, tmp_buff);
 	spp_strbuf_free(tmp_buff);
 	return ret;
 }
@@ -1394,7 +1393,7 @@ send_decode_error_response(int *sock,
 				"(name = decode_error_response)\n");
 		return;
 	}
-	ret = append_json_block_brackets("", &msg, tmp_buff);
+	ret = append_json_block_brackets(&msg, "", tmp_buff);
 	spp_strbuf_free(tmp_buff);
 	if (unlikely(ret < SPP_RET_OK)) {
 		spp_strbuf_free(msg);
@@ -1477,7 +1476,7 @@ send_result_spp_ctl(int *sock,
 				"allocate error. (name = result_response)\n");
 		return;
 	}
-	ret = append_json_block_brackets("", &msg, tmp_buff);
+	ret = append_json_block_brackets(&msg, "", tmp_buff);
 	spp_strbuf_free(tmp_buff);
 	if (unlikely(ret < SPP_RET_OK)) {
 		spp_strbuf_free(msg);
diff --git a/src/shared/secondary/spp_worker_th/json_helper.c b/src/shared/secondary/spp_worker_th/json_helper.c
index 4c1baa3..20badb0 100644
--- a/src/shared/secondary/spp_worker_th/json_helper.c
+++ b/src/shared/secondary/spp_worker_th/json_helper.c
@@ -7,27 +7,27 @@
 
 #define RTE_LOGTYPE_WK_JSON_HELPER RTE_LOGTYPE_USER1
 
+/* Add a comma to given JSON string, or nothing if the end of the msg. */
 int
 append_json_comma(char **output)
 {
 	*output = spp_strbuf_append(*output, ", ", strlen(", "));
 	if (unlikely(*output == NULL)) {
-		RTE_LOG(ERR, WK_JSON_HELPER,
-				"JSON's comma failed to add.\n");
+		RTE_LOG(ERR, WK_JSON_HELPER, "Failed to add comma.\n");
 		return SPP_RET_NG;
 	}
 
 	return SPP_RET_OK;
 }
 
-/* append data of unsigned integral type for JSON format */
+/* Add a uint value to given JSON string. */
 int
-append_json_uint_value(const char *name, char **output, unsigned int value)
+append_json_uint_value(char **output, const char *name, unsigned int value)
 {
 	int len = strlen(*output);
-	/* extend the buffer */
+
 	*output = spp_strbuf_append(*output, "",
-			strlen(name) + CMD_TAG_APPEND_SIZE*2);
+			strlen(name) + JSON_APPEND_LEN*2);
 	if (unlikely(*output == NULL)) {
 		RTE_LOG(ERR, WK_JSON_HELPER,
 				"JSON's numeric format failed to add. "
@@ -40,14 +40,14 @@ append_json_uint_value(const char *name, char **output, unsigned int value)
 	return SPP_RET_OK;
 }
 
-/* append data of integral type for JSON format */
+/* Add an int value to given JSON string. */
 int
-append_json_int_value(const char *name, char **output, int value)
+append_json_int_value(char **output, const char *name, int value)
 {
 	int len = strlen(*output);
 	/* extend the buffer */
 	*output = spp_strbuf_append(*output, "",
-			strlen(name) + CMD_TAG_APPEND_SIZE*2);
+			strlen(name) + JSON_APPEND_LEN*2);
 	if (unlikely(*output == NULL)) {
 		RTE_LOG(ERR, WK_JSON_HELPER,
 				"JSON's numeric format failed to add. "
@@ -60,66 +60,77 @@ append_json_int_value(const char *name, char **output, int value)
 	return SPP_RET_OK;
 }
 
-/* append data of string type for JSON format */
+/* Add a string value to given JSON string. */
 int
-append_json_str_value(const char *name, char **output, const char *str)
+append_json_str_value(char **output, const char *name, const char *val)
 {
 	int len = strlen(*output);
 	/* extend the buffer */
 	*output = spp_strbuf_append(*output, "",
-			strlen(name) + strlen(str) + CMD_TAG_APPEND_SIZE);
+			strlen(name) + strlen(val) + JSON_APPEND_LEN);
 	if (unlikely(*output == NULL)) {
 		RTE_LOG(ERR, WK_JSON_HELPER,
 				"JSON's string format failed to add. "
-				"(name = %s, str = %s)\n", name, str);
+				"(name = %s, val= %s)\n", name, val);
 		return SPP_RET_NG;
 	}
 
 	sprintf(&(*output)[len], JSON_APPEND_VALUE("\"%s\""),
-			JSON_APPEND_COMMA(len), name, str);
+			JSON_APPEND_COMMA(len), name, val);
 	return SPP_RET_OK;
 }
 
-/* append brackets of the array for JSON format */
+/**
+ * Add an entry of array by surrounding given value with '[' and ']' to make
+ * it an array entry. The added entry `"key": [ val ]"` is defined as macro
+ * `JSON_APPEND_ARRAY`.
+ */
 int
-append_json_array_brackets(const char *name, char **output, const char *str)
+append_json_array_brackets(char **output, const char *name, const char *val)
 {
 	int len = strlen(*output);
 	/* extend the buffer */
 	*output = spp_strbuf_append(*output, "",
-			strlen(name) + strlen(str) + CMD_TAG_APPEND_SIZE);
+			strlen(name) + strlen(val) + JSON_APPEND_LEN);
 	if (unlikely(*output == NULL)) {
 		RTE_LOG(ERR, WK_JSON_HELPER,
 				"JSON's square bracket failed to add. "
-				"(name = %s, str = %s)\n", name, str);
+				"(name = %s, val= %s)\n", name, val);
 		return SPP_RET_NG;
 	}
 
 	sprintf(&(*output)[len], JSON_APPEND_ARRAY,
-			JSON_APPEND_COMMA(len), name, str);
+			JSON_APPEND_COMMA(len), name, val);
 	return SPP_RET_OK;
 }
 
-/* append brackets of the blocks for JSON format */
+/**
+ * Add an entry of hash by surrounding given value with '{' and '}' to make
+ * it a hash entry. The added entry `"key": { val }"` is defined as macro
+ * `JSON_APPEND_BLOCK`.
+ *
+ * This function is also used to make a block without key `{ val }` if given
+ * key is `""`.
+ */
 int
-append_json_block_brackets(const char *name, char **output, const char *str)
+append_json_block_brackets(char **output, const char *name, const char *val)
 {
 	int len = strlen(*output);
 	/* extend the buffer */
 	*output = spp_strbuf_append(*output, "",
-			strlen(name) + strlen(str) + CMD_TAG_APPEND_SIZE);
+			strlen(name) + strlen(val) + JSON_APPEND_LEN);
 	if (unlikely(*output == NULL)) {
 		RTE_LOG(ERR, WK_JSON_HELPER,
 				"JSON's curly bracket failed to add. "
-				"(name = %s, str = %s)\n", name, str);
+				"(name = %s, val= %s)\n", name, val);
 		return SPP_RET_NG;
 	}
 
 	if (name[0] == '\0')
 		sprintf(&(*output)[len], JSON_APPEND_BLOCK_NONAME,
-				JSON_APPEND_COMMA(len), name, str);
+				JSON_APPEND_COMMA(len), name, val);
 	else
 		sprintf(&(*output)[len], JSON_APPEND_BLOCK,
-				JSON_APPEND_COMMA(len), name, str);
+				JSON_APPEND_COMMA(len), name, val);
 	return SPP_RET_OK;
 }
diff --git a/src/shared/secondary/spp_worker_th/json_helper.h b/src/shared/secondary/spp_worker_th/json_helper.h
index f286404..0bfe0bf 100644
--- a/src/shared/secondary/spp_worker_th/json_helper.h
+++ b/src/shared/secondary/spp_worker_th/json_helper.h
@@ -7,32 +7,91 @@
 
 #include "cmd_utils.h"
 
-#define CMD_TAG_APPEND_SIZE 16
+/* TODO(yasufum) revise name considering the usage. */
+#define JSON_APPEND_LEN 16
 
+/* Add comma at the end of JSON statement, or do nothing. */
 #define JSON_APPEND_COMMA(flg)    ((flg)?", ":"")
 
+/**
+ * Defines of macro for JSON formatter. There are two ro three strings, the
+ * first one is placehodler for JSON msg, second one is key and third one is
+ * its value. Key and value are appended at the end of the placeholder.
+ */
 #define JSON_APPEND_VALUE(format) "%s\"%s\": "format
-
 #define JSON_APPEND_ARRAY         "%s\"%s\": [ %s ]"
-
 #define JSON_APPEND_BLOCK_NONAME  "%s%s{ %s }"
 #define JSON_APPEND_BLOCK         "%s\"%s\": { %s }"
 
+/**
+ * Add a comma to given JSON string, or nothing if the end of the statement.
+ *
+ * @param[in,out] output Placeholder of JSON msg.
+ */
 int append_json_comma(char **output);
 
-int append_json_uint_value(const char *name, char **output,
-		unsigned int value);
+/**
+ * Add a uint value to given JSON string.
+ *
+ * @param[in,out] output Placeholder of JSON msg.
+ * @param[in] name Name as a key.
+ * @param[in] val Uint value of the key.
+ * @retval SPP_RET_OK if succeeded.
+ * @retval SPP_RET_NG if failed.
+ */
+int append_json_uint_value(char **output, const char *name, unsigned int val);
 
-int append_json_int_value(const char *name, char **output,
-		int value);
+/**
+ * Add an int value to given JSON string.
+ *
+ * @param[in,out] output Placeholder of JSON msg.
+ * @param[in] name Name as a key.
+ * @param[in] val Int value of the key.
+ * @retval SPP_RET_OK if succeeded.
+ * @retval SPP_RET_NG if failed.
+ */
+int append_json_int_value(char **output, const char *name, int val);
 
-int append_json_str_value(const char *name, char **output,
-		const char *str);
+/**
+ * Add a string value to given JSON string.
+ *
+ * @param[in,out] output Placeholder of JSON msg.
+ * @param[in] name Name as a key.
+ * @param[in] val String value of the key.
+ * @retval SPP_RET_OK if succeeded.
+ * @retval SPP_RET_NG if failed.
+ */
+int append_json_str_value(char **output, const char *name, const char *val);
 
-int append_json_array_brackets(const char *name, char **output,
-		const char *str);
+/**
+ * Add an entry of array by surrounding given value with '[' and ']' to make
+ * it an array entry. The added entry `"key": [ val ]"` is defined as macro
+ * `JSON_APPEND_ARRAY`.
+ *
+ * @param[in,out] output Placeholder of JSON msg.
+ * @param[in] name Name as a key.
+ * @param[in] val String value of the key.
+ * @retval SPP_RET_OK if succeeded.
+ * @retval SPP_RET_NG if failed.
+ */
+int append_json_array_brackets(char **output, const char *name,
+		const char *val);
 
-int append_json_block_brackets(const char *name, char **output,
-		const char *str);
+/**
+ * Add an entry of hash by surrounding given value with '{' and '}' to make
+ * it a hash entry. The added entry `"key": { val }"` is defined as macro
+ * `JSON_APPEND_BLOCK`.
+ *
+ * This function is also used to make a block without key `{ val }` if given
+ * key is `""`.
+ *
+ * @param[in,out] output Placeholder of JSON msg.
+ * @param[in] name Name as a key.
+ * @param[in] val String value of the key.
+ * @retval SPP_RET_OK if succeeded.
+ * @retval SPP_RET_NG if failed.
+ */
+int append_json_block_brackets(char **output, const char *name,
+		const char *val);
 
 #endif
-- 
2.17.1



------------------------------

Message: 2
Date: Mon, 24 Jun 2019 13:36:05 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 05/13] shared/sec: move JSON formatter to
	shard/secondary
Message-ID: <20190624043613.19271-6-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Principle JSON formatters, such as append_json_int_value(), can be used
from all of SPP secondary processes. This update is to move files
`json_helper.*` and `string_buffer.*` to the parent directory
`shared/secondary`. Definition of return codes of `SPP_RET_OK` and
`SPP_RET_NG` is also moved to the directory for the change.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/Makefile                                 |  7 ++++---
 src/pcap/Makefile                                   |  3 ++-
 src/pcap/cmd_runner.c                               |  2 +-
 .../secondary/{spp_worker_th => }/json_helper.c     |  0
 .../secondary/{spp_worker_th => }/json_helper.h     |  6 +++++-
 src/shared/secondary/return_codes.h                 | 13 +++++++++++++
 src/shared/secondary/spp_worker_th/cmd_runner.c     |  4 ++--
 src/shared/secondary/spp_worker_th/cmd_utils.h      |  6 +-----
 src/shared/secondary/spp_worker_th/conn_spp_ctl.c   |  2 +-
 .../secondary/{spp_worker_th => }/string_buffer.c   |  0
 .../secondary/{spp_worker_th => }/string_buffer.h   |  0
 src/vf/Makefile                                     |  7 ++++---
 12 files changed, 33 insertions(+), 17 deletions(-)
 rename src/shared/secondary/{spp_worker_th => }/json_helper.c (100%)
 rename src/shared/secondary/{spp_worker_th => }/json_helper.h (95%)
 create mode 100644 src/shared/secondary/return_codes.h
 rename src/shared/secondary/{spp_worker_th => }/string_buffer.c (100%)
 rename src/shared/secondary/{spp_worker_th => }/string_buffer.h (100%)

diff --git a/src/mirror/Makefile b/src/mirror/Makefile
index 6b6b9b9..b31e116 100644
--- a/src/mirror/Makefile
+++ b/src/mirror/Makefile
@@ -11,19 +11,20 @@ include $(RTE_SDK)/mk/rte.vars.mk
 # binary name
 APP = spp_mirror
 
+SPP_SEC_DIR = ../shared/secondary
 SPP_WKT_DIR = ../shared/secondary/spp_worker_th
 
 # all source are stored in SRCS-y
 SRCS-y := spp_mirror.c
 SRCS-y += ../shared/common.c
-SRCS-y += ../shared/secondary/utils.c ../shared/secondary/add_port.c
+SRCS-y += $(SPP_SEC_DIR)/utils.c $(SPP_SEC_DIR)/add_port.c
+SRCS-y += $(SPP_SEC_DIR)/json_helper.c
+SRCS-y += $(SPP_SEC_DIR)/string_buffer.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_utils.c
 SRCS-y += $(SPP_WKT_DIR)/spp_port.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_runner.c
-SRCS-y += $(SPP_WKT_DIR)/json_helper.c
-SRCS-y += $(SPP_WKT_DIR)/string_buffer.c
 SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
 
 CFLAGS += -DALLOW_EXPERIMENTAL_API
diff --git a/src/pcap/Makefile b/src/pcap/Makefile
index c3d5ae4..852d036 100644
--- a/src/pcap/Makefile
+++ b/src/pcap/Makefile
@@ -11,6 +11,7 @@ include $(RTE_SDK)/mk/rte.vars.mk
 # binary name
 APP = spp_pcap
 
+SPP_SEC_DIR = ../shared/secondary
 SPP_WKT_DIR = ../shared/secondary/spp_worker_th
 
 # all source are stored in SRCS-y
@@ -18,10 +19,10 @@ SRCS-y := spp_pcap.c
 SRCS-y += cmd_utils.c
 SRCS-y += cmd_runner.c cmd_parser.c
 SRCS-y += ../shared/common.c
+SRCS-y += $(SPP_SEC_DIR)/string_buffer.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/spp_port.c
 SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
-SRCS-y += $(SPP_WKT_DIR)/string_buffer.c
 
 CFLAGS += -DALLOW_EXPERIMENTAL_API
 CFLAGS += $(WERROR_FLAGS) -O3 -MMD
diff --git a/src/pcap/cmd_runner.c b/src/pcap/cmd_runner.c
index 8a1fb87..55f15bf 100644
--- a/src/pcap/cmd_runner.c
+++ b/src/pcap/cmd_runner.c
@@ -7,7 +7,7 @@
 
 #include <rte_log.h>
 
-#include "shared/secondary/spp_worker_th/string_buffer.h"
+#include "shared/secondary/string_buffer.h"
 #include "spp_pcap.h"
 #include "shared/secondary/spp_worker_th/conn_spp_ctl.h"
 #include "cmd_parser.h"
diff --git a/src/shared/secondary/spp_worker_th/json_helper.c b/src/shared/secondary/json_helper.c
similarity index 100%
rename from src/shared/secondary/spp_worker_th/json_helper.c
rename to src/shared/secondary/json_helper.c
diff --git a/src/shared/secondary/spp_worker_th/json_helper.h b/src/shared/secondary/json_helper.h
similarity index 95%
rename from src/shared/secondary/spp_worker_th/json_helper.h
rename to src/shared/secondary/json_helper.h
index 0bfe0bf..b004428 100644
--- a/src/shared/secondary/spp_worker_th/json_helper.h
+++ b/src/shared/secondary/json_helper.h
@@ -5,7 +5,11 @@
 #ifndef _SPPWK_JSON_HELPER_H_
 #define _SPPWK_JSON_HELPER_H_
 
-#include "cmd_utils.h"
+#include <string.h>
+#include <rte_branch_prediction.h>
+#include <rte_log.h>
+#include "return_codes.h"
+#include "string_buffer.h"
 
 /* TODO(yasufum) revise name considering the usage. */
 #define JSON_APPEND_LEN 16
diff --git a/src/shared/secondary/return_codes.h b/src/shared/secondary/return_codes.h
new file mode 100644
index 0000000..18b4711
--- /dev/null
+++ b/src/shared/secondary/return_codes.h
@@ -0,0 +1,13 @@
+/* SPDX-License-Identifier: BSD-3-Clause
+ * Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
+ */
+
+#ifndef _SPP_SEC_RETURN_CODES_H_
+#define _SPP_SEC_RETURN_CODES_H_
+
+enum spp_return_val {
+	SPP_RET_OK = 0,  /**< succeeded */
+	SPP_RET_NG = -1, /**< failed */
+};
+
+#endif
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index e41fd85..b1718fa 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -11,9 +11,9 @@
 #include "vf_deps.h"
 #include "mirror_deps.h"
 #include "spp_port.h"
-#include "string_buffer.h"
+#include "shared/secondary/string_buffer.h"
 
-#include "json_helper.h"
+#include "shared/secondary/json_helper.h"
 #include "conn_spp_ctl.h"
 #include "cmd_parser.h"
 #include "cmd_runner.h"
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index b8ab10c..3ee3142 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -12,6 +12,7 @@
  */
 
 #include <netinet/in.h>
+#include "shared/secondary/return_codes.h"
 #include "shared/common.h"
 
 /**
@@ -94,11 +95,6 @@ enum spp_classifier_type {
 	SPP_CLASSIFIER_TYPE_VLAN  /**< VLAN ID */
 };
 
-enum sppwk_return_val {
-	SPP_RET_OK = 0,  /**< succeeded */
-	SPP_RET_NG = -1, /**< failed */
-};
-
 /**
  * Port type (rx or tx) to indicate which direction packet goes
  * (e.g. receiving or transmitting)
diff --git a/src/shared/secondary/spp_worker_th/conn_spp_ctl.c b/src/shared/secondary/spp_worker_th/conn_spp_ctl.c
index 030da92..70e06f9 100644
--- a/src/shared/secondary/spp_worker_th/conn_spp_ctl.c
+++ b/src/shared/secondary/spp_worker_th/conn_spp_ctl.c
@@ -13,7 +13,7 @@
 #include <rte_branch_prediction.h>
 
 #include "shared/common.h"
-#include "string_buffer.h"
+#include "shared/secondary/string_buffer.h"
 #include "conn_spp_ctl.h"
 
 #define RTE_LOGTYPE_SPP_COMMAND_PROC RTE_LOGTYPE_USER1
diff --git a/src/shared/secondary/spp_worker_th/string_buffer.c b/src/shared/secondary/string_buffer.c
similarity index 100%
rename from src/shared/secondary/spp_worker_th/string_buffer.c
rename to src/shared/secondary/string_buffer.c
diff --git a/src/shared/secondary/spp_worker_th/string_buffer.h b/src/shared/secondary/string_buffer.h
similarity index 100%
rename from src/shared/secondary/spp_worker_th/string_buffer.h
rename to src/shared/secondary/string_buffer.h
diff --git a/src/vf/Makefile b/src/vf/Makefile
index ca8d2b3..3cbdb01 100644
--- a/src/vf/Makefile
+++ b/src/vf/Makefile
@@ -11,20 +11,21 @@ include $(RTE_SDK)/mk/rte.vars.mk
 # binary name
 APP = spp_vf
 
+SPP_SEC_DIR = ../shared/secondary
 SPP_WKT_DIR = ../shared/secondary/spp_worker_th
 
 # all source are stored in SRCS-y
 SRCS-y := spp_vf.c classifier_mac.c spp_forward.c
-SRCS-y += $(SPP_WKT_DIR)/string_buffer.c
+SRCS-y += $(SPP_SEC_DIR)/string_buffer.c
+SRCS-y += $(SPP_SEC_DIR)/json_helper.c
+SRCS-y += $(SPP_SEC_DIR)/utils.c $(SPP_SEC_DIR)/add_port.c
 SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
 SRCS-y += $(SPP_WKT_DIR)/spp_port.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_runner.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_utils.c
-SRCS-y += $(SPP_WKT_DIR)/json_helper.c
 SRCS-y += ../shared/common.c
-SRCS-y += ../shared/secondary/utils.c ../shared/secondary/add_port.c
 
 CFLAGS += -DALLOW_EXPERIMENTAL_API
 CFLAGS += $(WERROR_FLAGS) -O3 -MMD
-- 
2.17.1



End of spp Digest, Vol 31, Issue 8
**********************************


From yasufum.o@gmail.com Mon Jun 24 13:36:07 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00D6S65HSMD0@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 13:36:53 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTL0041Y65H1300@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:36:53 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00VPT65H8YC0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:36:53 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id D02907E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:53 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id CE8668E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:53 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id C37838E6058	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:36:53 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 3D8A88E605C	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:52 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:36:52 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4aqN2008220;	Mon,
 24 Jun 2019 13:36:52 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O4aqCT008219;	Mon, 24 Jun 2019 13:36:52 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O4ap1D008208	for unknown; Mon,
 24 Jun 2019 13:36:51 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4apat016606 for
 unknown; Mon, 24 Jun 2019 13:36:51 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4apmZ016603; Mon,
 24 Jun 2019 13:36:51 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4apKH030547;	Mon,
 24 Jun 2019 13:36:51 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O4aps7030543	for unknown; Mon, 24 Jun 2019 13:36:51 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4apLd013472 for
 unknown; Mon, 24 Jun 2019 13:36:51 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4ao6L013464 for
 unknown; Mon, 24 Jun 2019 13:36:50 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O4afOx027551	for unknown; Mon,
 24 Jun 2019 13:36:50 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 73F9C1BF57;	Mon, 24 Jun 2019 06:36:49 +0200 (CEST)
Received: from mail-pg1-f174.google.com
 (mail-pg1-f174.google.com [209.85.215.174]) by dpdk.org (Postfix)
 with ESMTP id D89181BF2C for <spp@dpdk.org>; Mon,
 24 Jun 2019 06:36:47 +0200 (CEST)
Received: by mail-pg1-f174.google.com with SMTP id f25so6394146pgv.10 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 21:36:47 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id c10sm9005178pjq.14.2019.06.23.21.36.45
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 21:36:46 -0700 (PDT)
Date: Mon, 24 Jun 2019 13:36:07 +0900
From: yasufum.o@gmail.com
Subject: [spp 04378] [spp] [PATCH 07/13] shared/sec: move JSON formatters from
 cmd_runner
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624043613.19271-8-yasufum.o@gmail.com>
In-reply-to: <20190624043613.19271-1-yasufum.o@gmail.com>
References: <20190624043613.19271-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04378
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=LJYCJj+PqnYXXj6nfwLr1MqXmyYaSodZVHES1fPf6pM=;
 b=tTy+APi+xt0nyGNASlzoLNap9CnTkRgN4sKug6MjqkNjELx5r4P+st0/3D+KLPGMNw
 OQpBaSno+jiPMxzA4+J/msfw9MF0PQMH4lMDwyUAfBxrfLlMpsp0zmGNUzmLYc7BiBmH
 kuPrOLbzpSDQxSQG+nfN85nHbc3Shzka4Sft5XzCGbFQS/suB18nxi08JvxHtdQ90KJ2
 JW5awm6/RkJnwebhp53YDXRDbFnhFl/mrqJ6SjpnpVvQ0ck2RE2kothM5pGevXWfBZEf
 7VOYlLiuIIe6SqDHkrWFCn7jsNO4g8wg9irO8mbgRo7fXe5A8XdbTvhFbZHD0RdEP8jT qMfw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=LJYCJj+PqnYXXj6nfwLr1MqXmyYaSodZVHES1fPf6pM=;
 b=VHCs2cAlDkWgyqMqt8DfCWmVEzWOKbj3ght4RuJrGpcRKoSZ212X/dhj/plZxsTpJA
 VIVbSM4s3tGIO2s2uF3mwFyAT6ec6Qg9H6lJDxnuY4wb0qyS5FwXTFWtG/FYHWNY84uL
 JoPfGG9ysWloQxPnD+XH5UjFZL/krYfxrZ6Aj4gv0QMviy2xYIj78p4e/QIiUUn73kJR
 W6R1PS6rZJ9fjQuTLEw0bmJ4dgGCDmD5pZRW9hDhASozQvVM3dX47eImHjNzA+kU3OUO
 AsG5M/EKsLq6CIFmHRWeBVJkUBhchgI1ee75DJeB+zG4rXeKQ/kkRCrtdBaFwsOFY/n1 bu5Q==
X-Gm-Message-State: APjAAAXJAXzOOIvIZLqOBnylw6XjjFYrkPi5qfyFhqexNwI6FeQgqdhE
 Mtz6Tok6RYvsiwj3FzUwkwKHUJQ9
X-Google-Smtp-Source:
 APXvYqw8LCF88uZdKO8TatnHzDz9s9ZnHn2F3ZtQfGxPD7uJYc7/C83DTwpNysJisRBWh/WwCMGLTQ==
X-Received: by 2002:a65:5347:: with SMTP id w7mr30713629pgr.375.1561351006816;
 Sun, 23 Jun 2019 21:36:46 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 467
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

JSON formatter functions for making a command result are defined in
`cmd_runner.c`, but better to move another file because this file is too
large and functions are not for running command.

This update is to move following functions to `cmd_res_formatter.c` and
its header. The rest of functions are moved in the next patch.

* append_result_value()
* append_error_details_value()
* is_port_flushed()
* append_interface_array()
* append_process_type_value()
* sppwk_get_proc_type()
* append_vlan_value()

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/Makefile                           |   1 +
 .../spp_worker_th/cmd_res_formatter.c         | 147 +++++++++++++++++
 .../spp_worker_th/cmd_res_formatter.h         |  38 +++++
 .../secondary/spp_worker_th/cmd_runner.c      | 150 +-----------------
 src/vf/Makefile                               |   1 +
 5 files changed, 189 insertions(+), 148 deletions(-)
 create mode 100644 src/shared/secondary/spp_worker_th/cmd_res_formatter.c
 create mode 100644 src/shared/secondary/spp_worker_th/cmd_res_formatter.h

diff --git a/src/mirror/Makefile b/src/mirror/Makefile
index fc18d1e..7e666f5 100644
--- a/src/mirror/Makefile
+++ b/src/mirror/Makefile
@@ -26,6 +26,7 @@ SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_runner.c
 SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
+SRCS-y += $(SPP_WKT_DIR)/cmd_res_formatter.c
 
 CFLAGS += -DALLOW_EXPERIMENTAL_API
 CFLAGS += $(WERROR_FLAGS) -O3 -MMD
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
new file mode 100644
index 0000000..f66f97f
--- /dev/null
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -0,0 +1,147 @@
+/* SPDX-License-Identifier: BSD-3-Clause
+ * Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
+ */
+
+#include "cmd_res_formatter.h"
+#include "cmd_utils.h"
+#include "shared/secondary/json_helper.h"
+
+#define RTE_LOGTYPE_WK_CMD_RES_FMT RTE_LOGTYPE_USER1
+
+/**
+ * List of worker process type. The order of items should be same as the order
+ * of enum `secondary_type` in cmd_utils.h.
+ */
+/* TODO(yasufum) rename `secondary_type` to `sppwk_proc_type`. */
+const char *SPPWK_PROC_TYPE_LIST[] = {
+	"none",
+	"vf",
+	"mirror",
+	"",  /* termination */
+};
+
+/**
+ * List of port abilities. The order of items should be same as the order of
+ * enum `spp_port_ability_type` in spp_vf.h.
+ */
+const char *PORT_ABILITY_STAT_LIST[] = {
+	"none",
+	"add",
+	"del",
+	"",  /* termination */
+};
+
+/* append a command result for JSON format */
+int
+append_result_value(const char *name, char **output, void *tmp)
+{
+	const struct cmd_result *result = tmp;
+	return append_json_str_value(output, name, result->result);
+}
+
+/* append error details for JSON format */
+int
+append_error_details_value(const char *name, char **output, void *tmp)
+{
+	int ret = SPP_RET_NG;
+	const struct cmd_result *result = tmp;
+	char *tmp_buff;
+	/* string is empty, except for errors */
+	if (result->err_msg[0] == '\0')
+		return SPP_RET_OK;
+
+	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = %s)\n",
+				name);
+		return SPP_RET_NG;
+	}
+
+	ret = append_json_str_value(&tmp_buff, "message", result->err_msg);
+	if (unlikely(ret < 0)) {
+		spp_strbuf_free(tmp_buff);
+		return SPP_RET_NG;
+	}
+
+	ret = append_json_block_brackets(output, name, tmp_buff);
+	spp_strbuf_free(tmp_buff);
+	return ret;
+}
+
+/* Check if port is already flushed. */
+int
+is_port_flushed(enum port_type iface_type, int iface_no)
+{
+	struct sppwk_port_info *port = get_sppwk_port(iface_type, iface_no);
+	return port->ethdev_port_id >= 0;
+}
+
+/* append a list of interface numbers */
+int
+append_interface_array(char **output, const enum port_type type)
+{
+	int i, port_cnt = 0;
+	char tmp_str[CMD_TAG_APPEND_SIZE];
+
+	for (i = 0; i < RTE_MAX_ETHPORTS; i++) {
+		if (!is_port_flushed(type, i))
+			continue;
+
+		sprintf(tmp_str, "%s%d", JSON_APPEND_COMMA(port_cnt), i);
+
+		*output = spp_strbuf_append(*output, tmp_str, strlen(tmp_str));
+		if (unlikely(*output == NULL)) {
+			RTE_LOG(ERR, WK_CMD_RES_FMT,
+					"Interface number failed to add. "
+					"(type = %d)\n", type);
+			return SPP_RET_NG;
+		}
+
+		port_cnt++;
+	}
+
+	return SPP_RET_OK;
+}
+
+/* TODO(yasufum) move to another file for util funcs. */
+/* Get proc type from global command params. */
+int
+sppwk_get_proc_type(void)
+{
+	struct startup_param *params;
+	sppwk_get_mng_data(&params, NULL, NULL, NULL, NULL, NULL, NULL);
+	return params->secondary_type;
+}
+
+/* append a secondary process type for JSON format */
+int
+append_process_type_value(const char *name, char **output,
+		void *tmp __attribute__ ((unused)))
+{
+	return append_json_str_value(output, name,
+			SPPWK_PROC_TYPE_LIST[sppwk_get_proc_type()]);
+}
+
+/* append a value of vlan for JSON format */
+int
+append_vlan_value(char **output, const int ope, const int vid, const int pcp)
+{
+	int ret = SPP_RET_OK;
+	ret = append_json_str_value(output, "operation",
+			PORT_ABILITY_STAT_LIST[ope]);
+	if (unlikely(ret < SPP_RET_OK))
+		return SPP_RET_NG;
+
+	ret = append_json_int_value(output, "id", vid);
+	if (unlikely(ret < 0))
+		return SPP_RET_NG;
+
+	ret = append_json_int_value(output, "pcp", pcp);
+	if (unlikely(ret < 0))
+		return SPP_RET_NG;
+
+	return SPP_RET_OK;
+}
+
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
new file mode 100644
index 0000000..c2da2ee
--- /dev/null
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
@@ -0,0 +1,38 @@
+/* SPDX-License-Identifier: BSD-3-Clause
+ * Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
+ */
+
+#ifndef _SPPWK_CMD_RES_FORMATTER_H_
+#define _SPPWK_CMD_RES_FORMATTER_H_
+
+#include "shared/common.h"
+
+#define CMD_RES_LEN  32  /* Size of message including null char. */
+#define CMD_ERR_MSG_LEN 128
+
+#define CMD_RES_BUF_INIT_SIZE 2048
+#define CMD_TAG_APPEND_SIZE 16
+
+struct cmd_result {
+	int code;  /* Response code. */
+	char result[CMD_RES_LEN];  /* Response msg in short. */
+	char err_msg[CMD_ERR_MSG_LEN];  /* Used only if cmd is failed. */
+};
+
+int append_result_value(const char *name, char **output, void *tmp);
+
+int append_error_details_value(const char *name, char **output, void *tmp);
+
+int is_port_flushed(enum port_type iface_type, int iface_no);
+
+int append_interface_array(char **output, const enum port_type type);
+
+int append_process_type_value(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+
+int sppwk_get_proc_type(void);
+
+int append_vlan_value(char **output, const int ope, const int vid,
+		const int pcp);
+
+#endif
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index b1718fa..7145045 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -8,23 +8,20 @@
 #include <rte_log.h>
 #include <rte_branch_prediction.h>
 
+#include "cmd_runner.h"
 #include "vf_deps.h"
 #include "mirror_deps.h"
 #include "spp_port.h"
 #include "shared/secondary/string_buffer.h"
-
 #include "shared/secondary/json_helper.h"
+#include "cmd_res_formatter.h"
 #include "conn_spp_ctl.h"
 #include "cmd_parser.h"
-#include "cmd_runner.h"
 
 #define RTE_LOGTYPE_WK_CMD_RUNNER RTE_LOGTYPE_USER1
 
 /* request message initial size */
-#define CMD_TAG_APPEND_SIZE 16
-#define CMD_ERR_MSG_LEN 128
 #define CMD_REQ_BUF_INIT_SIZE 2048
-#define CMD_RES_BUF_INIT_SIZE 2048
 
 enum cmd_res_code {
 	CMD_SUCCESS = 0,
@@ -32,12 +29,6 @@ enum cmd_res_code {
 	CMD_INVALID,
 };
 
-struct cmd_result {
-	int code;  /* Response code. */
-	char result[SPPWK_NAME_BUFSZ];  /* Response msg in short. */
-	char err_msg[CMD_ERR_MSG_LEN];  /* Used only if cmd is failed. */
-};
-
 /**
  * Contains command response nad operator func for. It is used as an array of
  * this struct.
@@ -48,29 +39,6 @@ struct cmd_response {
 	int (*func)(const char *name, char **output, void *tmp);
 };
 
-/**
- * List of worker process type. The order of items should be same as the order
- * of enum `secondary_type` in cmd_utils.h.
- */
-/* TODO(yasufum) rename `secondary_type` to `sppwk_proc_type`. */
-const char *SPPWK_PROC_TYPE_LIST[] = {
-	"none",
-	"vf",
-	"mirror",
-	"",  /* termination */
-};
-
-/**
- * List of port abilities. The order of items should be same as the order of
- * enum `spp_port_ability_type` in spp_vf.h.
- */
-const char *PORT_ABILITY_STAT_LIST[] = {
-	"none",
-	"add",
-	"del",
-	"",  /* termination */
-};
-
 /**
  * List of classifier type. The order of items should be same as the order of
  * enum `spp_classifier_type` defined in cmd_utils.h.
@@ -93,24 +61,6 @@ sppwk_get_client_id(void)
 	return params->client_id;
 }
 
-/* TODO(yasufum) move to another file for util funcs. */
-/* Get proc type from global command params. */
-static int
-sppwk_get_proc_type(void)
-{
-	struct startup_param *params;
-	sppwk_get_mng_data(&params, NULL, NULL, NULL, NULL, NULL, NULL);
-	return params->secondary_type;
-}
-
-/* Check if port is already flushed. */
-static int
-is_port_flushed(enum port_type iface_type, int iface_no)
-{
-	struct sppwk_port_info *port = get_sppwk_port(iface_type, iface_no);
-	return port->ethdev_port_id >= 0;
-}
-
 /* Update classifier table with given action, add or del. */
 static int
 update_cls_table(enum sppwk_action wk_action,
@@ -737,45 +687,6 @@ prepare_parse_err_msg(struct cmd_result *results,
 	}
 }
 
-/* append a command result for JSON format */
-static int
-append_result_value(const char *name, char **output, void *tmp)
-{
-	const struct cmd_result *result = tmp;
-	return append_json_str_value(output, name, result->result);
-}
-
-/* append error details for JSON format */
-static int
-append_error_details_value(const char *name, char **output, void *tmp)
-{
-	int ret = SPP_RET_NG;
-	const struct cmd_result *result = tmp;
-	char *tmp_buff;
-	/* string is empty, except for errors */
-	if (result->err_msg[0] == '\0')
-		return SPP_RET_OK;
-
-	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s)\n",
-				name);
-		return SPP_RET_NG;
-	}
-
-	ret = append_json_str_value(&tmp_buff, "message", result->err_msg);
-	if (unlikely(ret < 0)) {
-		spp_strbuf_free(tmp_buff);
-		return SPP_RET_NG;
-	}
-
-	ret = append_json_block_brackets(output, name, tmp_buff);
-	spp_strbuf_free(tmp_buff);
-	return ret;
-}
-
 /* Add entry of client ID to a response in JSON. */
 static int
 add_client_id(const char *name, char **output,
@@ -784,42 +695,6 @@ add_client_id(const char *name, char **output,
 	return append_json_int_value(output, name, sppwk_get_client_id());
 }
 
-/* append a list of interface numbers */
-static int
-append_interface_array(char **output, const enum port_type type)
-{
-	int i, port_cnt = 0;
-	char tmp_str[CMD_TAG_APPEND_SIZE];
-
-	for (i = 0; i < RTE_MAX_ETHPORTS; i++) {
-		if (!is_port_flushed(type, i))
-			continue;
-
-		sprintf(tmp_str, "%s%d", JSON_APPEND_COMMA(port_cnt), i);
-
-		*output = spp_strbuf_append(*output, tmp_str, strlen(tmp_str));
-		if (unlikely(*output == NULL)) {
-			RTE_LOG(ERR, WK_CMD_RUNNER,
-					"Interface number failed to add. "
-					"(type = %d)\n", type);
-			return SPP_RET_NG;
-		}
-
-		port_cnt++;
-	}
-
-	return SPP_RET_OK;
-}
-
-/* append a secondary process type for JSON format */
-static int
-append_process_type_value(const char *name, char **output,
-		void *tmp __attribute__ ((unused)))
-{
-	return append_json_str_value(output, name,
-			SPPWK_PROC_TYPE_LIST[sppwk_get_proc_type()]);
-}
-
 /* Add entry of port to a response in JSON such as "phy:0". */
 static int
 add_interface(const char *name, char **output,
@@ -854,27 +729,6 @@ add_interface(const char *name, char **output,
 	return ret;
 }
 
-/* append a value of vlan for JSON format */
-static int
-append_vlan_value(char **output, const int ope, const int vid, const int pcp)
-{
-	int ret = SPP_RET_OK;
-	ret = append_json_str_value(output, "operation",
-			PORT_ABILITY_STAT_LIST[ope]);
-	if (unlikely(ret < SPP_RET_OK))
-		return SPP_RET_NG;
-
-	ret = append_json_int_value(output, "id", vid);
-	if (unlikely(ret < 0))
-		return SPP_RET_NG;
-
-	ret = append_json_int_value(output, "pcp", pcp);
-	if (unlikely(ret < 0))
-		return SPP_RET_NG;
-
-	return SPP_RET_OK;
-}
-
 /* append a block of vlan for JSON format */
 static int
 append_vlan_block(const char *name, char **output,
diff --git a/src/vf/Makefile b/src/vf/Makefile
index 3cbdb01..dd5a100 100644
--- a/src/vf/Makefile
+++ b/src/vf/Makefile
@@ -25,6 +25,7 @@ SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_runner.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_utils.c
+SRCS-y += $(SPP_WKT_DIR)/cmd_res_formatter.c
 SRCS-y += ../shared/common.c
 
 CFLAGS += -DALLOW_EXPERIMENTAL_API
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 13:36:08 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00D7G65JSMD0@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 13:36:55 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTL0042A65J1300@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:36:55 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00VQH65J8YC0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:36:55 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id 48A157E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:55 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 45F7B8E6060	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:55 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 3A3738E6062	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:36:55 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 8C2E08E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:54 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:36:54 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4aspc008232;	Mon,
 24 Jun 2019 13:36:54 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O4asjk008231;	Mon, 24 Jun 2019 13:36:54 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O4aslb008225	for unknown; Mon,
 24 Jun 2019 13:36:54 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4arI2016625 for
 unknown; Mon, 24 Jun 2019 13:36:53 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4arAP016618; Mon,
 24 Jun 2019 13:36:53 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4ar6P030557;	Mon,
 24 Jun 2019 13:36:53 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O4ara4030550	for unknown; Mon, 24 Jun 2019 13:36:53 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4arkO013503 for
 unknown; Mon, 24 Jun 2019 13:36:53 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4araj013497 for
 unknown; Mon, 24 Jun 2019 13:36:53 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O4ahfQ027565	for unknown; Mon,
 24 Jun 2019 13:36:52 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 83AAC1BF5B;	Mon, 24 Jun 2019 06:36:51 +0200 (CEST)
Received: from mail-pf1-f194.google.com
 (mail-pf1-f194.google.com [209.85.210.194]) by dpdk.org (Postfix)
 with ESMTP id 9429E1BF2C for <spp@dpdk.org>; Mon,
 24 Jun 2019 06:36:50 +0200 (CEST)
Received: by mail-pf1-f194.google.com with SMTP id r7so6769314pfl.3 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 21:36:50 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id c10sm9005178pjq.14.2019.06.23.21.36.48
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 21:36:49 -0700 (PDT)
Date: Mon, 24 Jun 2019 13:36:08 +0900
From: yasufum.o@gmail.com
Subject: [spp 04379] [spp] [PATCH 08/13] shared/sec: move rest of JSON
 formatters
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624043613.19271-9-yasufum.o@gmail.com>
In-reply-to: <20190624043613.19271-1-yasufum.o@gmail.com>
References: <20190624043613.19271-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04379
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=yWBqtZEz26jOSiFKfgxHoLMT73kVR7F5OGG12TzcBwI=;
 b=VVHM2MjsJjCrdvMtExYYrufKFS7KUAo/Id8+0ffT0fgHpRZIqo2LzGLOIlrmaJw60W
 RA07tX0SYuJ8o0kJ1367VLXtLJn8xG/0gnKdzMGaGI5WfUHa+EVN8B0tG/KkIRlXgG3X
 ZiUwQNf+NyQ9veMsdgqg2aBe7cKSy7jT1RqzgIv/aHQX/prsumuvKAUMjKSyb7DCCiZa
 O5nH9WTYdR9Nfl3GAQ5Pa27C8IQpihXAb510ClWpSP/UylSGuqUnpINSvLD1jYpIpJOF
 S/gEiKb3kfubNZyE8T1/2AaGFSRTFMf0t5MQAxRF29Ng+tekD2zb5qRZ4EkGIUeboEAE b3HA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=yWBqtZEz26jOSiFKfgxHoLMT73kVR7F5OGG12TzcBwI=;
 b=RUsqBqXazQfcXkOZnZySyPfmK++9G/CSc7IiexDBvSbjrhc+oWbAV6W73IqJDDiWiv
 rI4gQn20ODvWjMMd+E4WK1GpH8n0JdzXuMODTMgJPVgLm8bHbWlHsXnqKd9SRF55Cgaw
 P0pzEGd80J7FdwPPfTlawpgl4TMtB/tQGGBkDlg0s+wilI8hNOemeD4388L7DAsV1Uvv
 9KLzrD3zkHHvkQqXVcI8nzj5oixqcutBhw/lJesC4NArUcu9MqgauG7QEmesHMvrh/7m
 orHFo5+XjMX51gKi+WUlD3Yp8mEHTb+LdgnlHE3UCUuQKIUHujQ5EkyPTErFotw02Ox4 LJzw==
X-Gm-Message-State: APjAAAXXL2gw6qvBAo3pdunOvSlBH1URbr7zMV6K0uCYsCB301AIZdHa
 N/x5iBhHtNFJW6M4N+5fHIPZTkkg
X-Google-Smtp-Source:
 APXvYqyEjWsxMzWcdeQQKsH4wum8r+NK2/UMbDLBUpHjAA6J2B0cYny5SEGn6U3+kQ+YPp3mdtYS0Q==
X-Received: by 2002:a17:90a:23ce:: with SMTP id
 g72mr22495092pje.77.1561351009405; Sun, 23 Jun 2019 21:36:49 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 976
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move the rest of JSON formatters defined in
`cmd_runner.c`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../spp_worker_th/cmd_res_formatter.c         | 396 ++++++++++++++++-
 .../spp_worker_th/cmd_res_formatter.h         |  45 +-
 .../secondary/spp_worker_th/cmd_runner.c      | 399 ------------------
 3 files changed, 433 insertions(+), 407 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index f66f97f..b94cb29 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -31,6 +31,25 @@ const char *PORT_ABILITY_STAT_LIST[] = {
 	"",  /* termination */
 };
 
+/**
+ * List of classifier type. The order of items should be same as the order of
+ * enum `spp_classifier_type` defined in cmd_utils.h.
+ */
+/* TODO(yasufum) fix similar var in cmd_parser.c */
+const char *CLS_TYPE_A_LIST[] = {
+	"none",
+	"mac",
+	"vlan",
+	"",  /* termination */
+};
+
+/* command response result string list */
+struct cmd_response response_result_list[] = {
+	{ "result", append_result_value },
+	{ "error_details", append_error_details_value },
+	{ "", NULL }
+};
+
 /* append a command result for JSON format */
 int
 append_result_value(const char *name, char **output, void *tmp)
@@ -71,7 +90,7 @@ append_error_details_value(const char *name, char **output, void *tmp)
 }
 
 /* Check if port is already flushed. */
-int
+static int
 is_port_flushed(enum port_type iface_type, int iface_no)
 {
 	struct sppwk_port_info *port = get_sppwk_port(iface_type, iface_no);
@@ -107,8 +126,8 @@ append_interface_array(char **output, const enum port_type type)
 
 /* TODO(yasufum) move to another file for util funcs. */
 /* Get proc type from global command params. */
-int
-sppwk_get_proc_type(void)
+static int
+get_wk_type(void)
 {
 	struct startup_param *params;
 	sppwk_get_mng_data(&params, NULL, NULL, NULL, NULL, NULL, NULL);
@@ -121,7 +140,7 @@ append_process_type_value(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
 	return append_json_str_value(output, name,
-			SPPWK_PROC_TYPE_LIST[sppwk_get_proc_type()]);
+			SPPWK_PROC_TYPE_LIST[get_wk_type()]);
 }
 
 /* append a value of vlan for JSON format */
@@ -145,3 +164,372 @@ append_vlan_value(char **output, const int ope, const int vid, const int pcp)
 	return SPP_RET_OK;
 }
 
+/* append a block of vlan for JSON format */
+int
+append_vlan_block(const char *name, char **output,
+		const int port_id, const enum spp_port_rxtx rxtx)
+{
+	int ret = SPP_RET_NG;
+	int i = 0;
+	struct spp_port_ability *info = NULL;
+	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = %s)\n",
+				name);
+		return SPP_RET_NG;
+	}
+
+	spp_port_ability_get_info(port_id, rxtx, &info);
+	for (i = 0; i < SPP_PORT_ABILITY_MAX; i++) {
+		switch (info[i].ops) {
+		case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
+		case SPPWK_PORT_ABL_OPS_DEL_VLANTAG:
+			ret = append_vlan_value(&tmp_buff, info[i].ops,
+					info[i].data.vlantag.vid,
+					info[i].data.vlantag.pcp);
+			if (unlikely(ret < SPP_RET_OK))
+				return SPP_RET_NG;
+
+			/*
+			 * Change counter to "maximum+1" for exit the loop.
+			 * An if statement after loop termination is false
+			 * by "maximum+1 ".
+			 */
+			i = SPP_PORT_ABILITY_MAX + 1;
+			break;
+		default:
+			/* not used */
+			break;
+		}
+	}
+	if (i == SPP_PORT_ABILITY_MAX) {
+		ret = append_vlan_value(&tmp_buff, SPPWK_PORT_ABL_OPS_NONE,
+				0, 0);
+		if (unlikely(ret < SPP_RET_OK))
+			return SPP_RET_NG;
+	}
+
+	ret = append_json_block_brackets(output, name, tmp_buff);
+	spp_strbuf_free(tmp_buff);
+	return ret;
+}
+
+/**
+ * Get consistent port ID of rte ethdev from resource UID such as `phy:0`.
+ * It returns a port ID, or error code if it's failed to.
+ */
+static int
+get_ethdev_port_id(enum port_type iface_type, int iface_no)
+{
+	struct iface_info *iface_info = NULL;
+
+	sppwk_get_mng_data(NULL, &iface_info,
+				NULL, NULL, NULL, NULL, NULL);
+	switch (iface_type) {
+	case PHY:
+		return iface_info->nic[iface_no].ethdev_port_id;
+	case RING:
+		return iface_info->ring[iface_no].ethdev_port_id;
+	case VHOST:
+		return iface_info->vhost[iface_no].ethdev_port_id;
+	default:
+		return SPP_RET_NG;
+	}
+}
+
+/* append a block of port numbers for JSON format */
+int
+append_port_block(char **output, const struct sppwk_port_idx *port,
+		const enum spp_port_rxtx rxtx)
+{
+	int ret = SPP_RET_NG;
+	char port_str[CMD_TAG_APPEND_SIZE];
+	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = port_block)\n");
+		return SPP_RET_NG;
+	}
+
+	spp_format_port_string(port_str, port->iface_type, port->iface_no);
+	ret = append_json_str_value(&tmp_buff, "port", port_str);
+	if (unlikely(ret < SPP_RET_OK))
+		return SPP_RET_NG;
+
+	ret = append_vlan_block("vlan", &tmp_buff,
+			get_ethdev_port_id(
+				port->iface_type, port->iface_no),
+			rxtx);
+	if (unlikely(ret < SPP_RET_OK))
+		return SPP_RET_NG;
+
+	ret = append_json_block_brackets(output, "", tmp_buff);
+	spp_strbuf_free(tmp_buff);
+	return ret;
+}
+
+/* append a list of port numbers for JSON format */
+int
+append_port_array(const char *name, char **output, const int num,
+		const struct sppwk_port_idx *ports,
+		const enum spp_port_rxtx rxtx)
+{
+	int ret = SPP_RET_NG;
+	int i = 0;
+	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = %s)\n",
+				name);
+		return SPP_RET_NG;
+	}
+
+	for (i = 0; i < num; i++) {
+		ret = append_port_block(&tmp_buff, &ports[i], rxtx);
+		if (unlikely(ret < SPP_RET_OK))
+			return SPP_RET_NG;
+	}
+
+	ret = append_json_array_brackets(output, name, tmp_buff);
+	spp_strbuf_free(tmp_buff);
+	return ret;
+}
+
+/**
+ * TODO(yasufum) add usages called from `add_core` or refactor
+ * confusing function names.
+ */
+/* append one element of core information for JSON format */
+int
+append_core_element_value(
+		struct spp_iterate_core_params *params,
+		const unsigned int lcore_id,
+		const char *name, const char *type,
+		const int num_rx, const struct sppwk_port_idx *rx_ports,
+		const int num_tx, const struct sppwk_port_idx *tx_ports)
+{
+	int ret = SPP_RET_NG;
+	int unuse_flg = 0;
+	char *buff, *tmp_buff;
+	buff = params->output;
+	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		/* TODO(yasufum) refactor no meaning err msg */
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				"allocate error. (name = %s)\n",
+				name);
+		return ret;
+	}
+
+	/* there is unnecessary data when "unuse" by type */
+	unuse_flg = strcmp(type, SPPWK_TYPE_NONE_STR);
+
+	/**
+	 * TODO(yasufum) change ambiguous "core" to more specific one such as
+	 * "worker-lcores" or "slave-lcores".
+	 */
+	ret = append_json_uint_value(&tmp_buff, "core", lcore_id);
+	if (unlikely(ret < SPP_RET_OK))
+		return ret;
+
+	if (unuse_flg) {
+		ret = append_json_str_value(&tmp_buff, "name", name);
+		if (unlikely(ret < 0))
+			return ret;
+	}
+
+	ret = append_json_str_value(&tmp_buff, "type", type);
+	if (unlikely(ret < SPP_RET_OK))
+		return ret;
+
+	if (unuse_flg) {
+		ret = append_port_array("rx_port", &tmp_buff,
+				num_rx, rx_ports, SPP_PORT_RXTX_RX);
+		if (unlikely(ret < 0))
+			return ret;
+
+		ret = append_port_array("tx_port", &tmp_buff,
+				num_tx, tx_ports, SPP_PORT_RXTX_TX);
+		if (unlikely(ret < SPP_RET_OK))
+			return ret;
+	}
+
+	ret = append_json_block_brackets(&buff, "", tmp_buff);
+	spp_strbuf_free(tmp_buff);
+	params->output = buff;
+	return ret;
+}
+
+#ifdef SPP_VF_MODULE
+/**
+ * Operator function called in iterator for getting each of entries of
+ * classifier table named as iterate_adding_mac_entry().
+ */
+int
+append_classifier_element_value(
+		struct spp_iterate_classifier_table_params *params,
+		enum spp_classifier_type type,
+		int vid, const char *mac,
+		const struct sppwk_port_idx *port)
+{
+	int ret = SPP_RET_NG;
+	char *buff, *tmp_buff;
+	char port_str[CMD_TAG_APPEND_SIZE];
+	char value_str[STR_LEN_SHORT];
+	buff = params->output;
+	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = classifier_table)\n");
+		return ret;
+	}
+
+	spp_format_port_string(port_str, port->iface_type, port->iface_no);
+
+	ret = append_json_str_value(&tmp_buff, "type", CLS_TYPE_A_LIST[type]);
+	if (unlikely(ret < SPP_RET_OK))
+		return ret;
+
+	memset(value_str, 0x00, STR_LEN_SHORT);
+	switch (type) {
+	case SPP_CLASSIFIER_TYPE_MAC:
+		sprintf(value_str, "%s", mac);
+		break;
+	case SPP_CLASSIFIER_TYPE_VLAN:
+		sprintf(value_str, "%d/%s", vid, mac);
+		break;
+	default:
+		/* not used */
+		break;
+	}
+
+	ret = append_json_str_value(&tmp_buff, "value", value_str);
+	if (unlikely(ret < 0))
+		return ret;
+
+	ret = append_json_str_value(&tmp_buff, "port", port_str);
+	if (unlikely(ret < SPP_RET_OK))
+		return ret;
+
+	ret = append_json_block_brackets(&buff, "", tmp_buff);
+	spp_strbuf_free(tmp_buff);
+	params->output = buff;
+	return ret;
+}
+#endif /* SPP_VF_MODULE */
+
+/* append string of command response list for JSON format */
+int
+append_response_list_value(char **output, struct cmd_response *responses,
+		void *tmp)
+{
+	int ret = SPP_RET_NG;
+	int i;
+	char *tmp_buff;
+	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = response_list)\n");
+		return SPP_RET_NG;
+	}
+
+	for (i = 0; responses[i].tag_name[0] != '\0'; i++) {
+		tmp_buff[0] = '\0';
+		ret = responses[i].func(responses[i].tag_name, &tmp_buff, tmp);
+		if (unlikely(ret < SPP_RET_OK)) {
+			spp_strbuf_free(tmp_buff);
+			RTE_LOG(ERR, WK_CMD_RES_FMT,
+					"Failed to get reply string. "
+					"(tag = %s)\n", responses[i].tag_name);
+			return SPP_RET_NG;
+		}
+
+		if (tmp_buff[0] == '\0')
+			continue;
+
+		if ((*output)[0] != '\0') {
+			ret = append_json_comma(output);
+			if (unlikely(ret < SPP_RET_OK)) {
+				spp_strbuf_free(tmp_buff);
+				RTE_LOG(ERR, WK_CMD_RES_FMT,
+						"Failed to add commas. "
+						"(tag = %s)\n",
+						responses[i].tag_name);
+				return SPP_RET_NG;
+			}
+		}
+
+		*output = spp_strbuf_append(*output, tmp_buff,
+				strlen(tmp_buff));
+		if (unlikely(*output == NULL)) {
+			spp_strbuf_free(tmp_buff);
+			RTE_LOG(ERR, WK_CMD_RES_FMT,
+					"Failed to add reply string. "
+					"(tag = %s)\n",
+					responses[i].tag_name);
+			return SPP_RET_NG;
+		}
+	}
+
+	spp_strbuf_free(tmp_buff);
+	return SPP_RET_OK;
+}
+
+/* append a list of command results for JSON format. */
+int
+append_command_results_value(const char *name, char **output,
+		int num, struct cmd_result *results)
+{
+	int ret = SPP_RET_NG;
+	int i;
+	char *tmp_buff1, *tmp_buff2;
+	tmp_buff1 = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff1 == NULL)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = %s, buff=1)\n",
+				name);
+		return SPP_RET_NG;
+	}
+
+	tmp_buff2 = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff2 == NULL)) {
+		spp_strbuf_free(tmp_buff1);
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = %s, buff=2)\n",
+				name);
+		return SPP_RET_NG;
+	}
+
+	for (i = 0; i < num; i++) {
+		tmp_buff1[0] = '\0';
+		ret = append_response_list_value(&tmp_buff1,
+				response_result_list, &results[i]);
+		if (unlikely(ret < 0)) {
+			spp_strbuf_free(tmp_buff1);
+			spp_strbuf_free(tmp_buff2);
+			return SPP_RET_NG;
+		}
+
+		ret = append_json_block_brackets(&tmp_buff2, "", tmp_buff1);
+		if (unlikely(ret < 0)) {
+			spp_strbuf_free(tmp_buff1);
+			spp_strbuf_free(tmp_buff2);
+			return SPP_RET_NG;
+		}
+
+	}
+
+	ret = append_json_array_brackets(output, name, tmp_buff2);
+	spp_strbuf_free(tmp_buff1);
+	spp_strbuf_free(tmp_buff2);
+	return ret;
+}
+
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
index c2da2ee..f3e9879 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
@@ -5,9 +5,12 @@
 #ifndef _SPPWK_CMD_RES_FORMATTER_H_
 #define _SPPWK_CMD_RES_FORMATTER_H_
 
+#include "cmd_utils.h"
+#include "spp_port.h"
 #include "shared/common.h"
 
 #define CMD_RES_LEN  32  /* Size of message including null char. */
+#define CMD_RES_TAG_LEN  32
 #define CMD_ERR_MSG_LEN 128
 
 #define CMD_RES_BUF_INIT_SIZE 2048
@@ -19,20 +22,54 @@ struct cmd_result {
 	char err_msg[CMD_ERR_MSG_LEN];  /* Used only if cmd is failed. */
 };
 
+/**
+ * Contains command response and operator func for. It is used as an array of
+ * this struct.
+ */
+/* TODO(yasufum) add comment describes the purpose of this struct is used. */
+struct cmd_response {
+	char tag_name[CMD_RES_TAG_LEN];
+	int (*func)(const char *name, char **output, void *tmp);
+};
+
 int append_result_value(const char *name, char **output, void *tmp);
 
 int append_error_details_value(const char *name, char **output, void *tmp);
 
-int is_port_flushed(enum port_type iface_type, int iface_no);
-
 int append_interface_array(char **output, const enum port_type type);
 
 int append_process_type_value(const char *name, char **output,
 		void *tmp __attribute__ ((unused)));
 
-int sppwk_get_proc_type(void);
-
 int append_vlan_value(char **output, const int ope, const int vid,
 		const int pcp);
 
+int append_vlan_block(const char *name, char **output,
+		const int port_id, const enum spp_port_rxtx rxtx);
+
+int append_port_block(char **output, const struct sppwk_port_idx *port,
+		const enum spp_port_rxtx rxtx);
+
+int append_port_array(const char *name, char **output, const int num,
+		const struct sppwk_port_idx *ports,
+		const enum spp_port_rxtx rxtx);
+
+int append_core_element_value(struct spp_iterate_core_params *params,
+		const unsigned int lcore_id,
+		const char *name, const char *type,
+		const int num_rx, const struct sppwk_port_idx *rx_ports,
+		const int num_tx, const struct sppwk_port_idx *tx_ports);
+
+int append_classifier_element_value(
+		struct spp_iterate_classifier_table_params *params,
+		enum spp_classifier_type type,
+		int vid, const char *mac,
+		const struct sppwk_port_idx *port);
+
+int append_response_list_value(char **output, struct cmd_response *responses,
+		void *tmp);
+
+int append_command_results_value(const char *name, char **output,
+		int num, struct cmd_result *results);
+
 #endif
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 7145045..5644aec 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -29,28 +29,6 @@ enum cmd_res_code {
 	CMD_INVALID,
 };
 
-/**
- * Contains command response nad operator func for. It is used as an array of
- * this struct.
- */
-/* TODO(yasufum) add comment describes the purpose of this struct is used. */
-struct cmd_response {
-	char tag_name[SPPWK_NAME_BUFSZ];
-	int (*func)(const char *name, char **output, void *tmp);
-};
-
-/**
- * List of classifier type. The order of items should be same as the order of
- * enum `spp_classifier_type` defined in cmd_utils.h.
- */
-/* TODO(yasufum) fix similar var in cmd_parser.c */
-const char *CLS_TYPE_A_LIST[] = {
-	"none",
-	"mac",
-	"vlan",
-	"",  /* termination */
-};
-
 /* TODO(yasufum) move to another file for util funcs. */
 /* Get client ID from global command params. */
 static int
@@ -518,29 +496,6 @@ _add_classifier_table(
 }
 #endif /* SPP_VF_MODULE */
 
-/**
- * Get consistent port ID of rte ethdev from resource UID such as `phy:0`.
- * It returns a port ID, or error code if it's failed to.
- */
-static int
-sppwk_get_ethdev_port_id(enum port_type iface_type, int iface_no)
-{
-	struct iface_info *iface_info = NULL;
-
-	sppwk_get_mng_data(NULL, &iface_info,
-				NULL, NULL, NULL, NULL, NULL);
-	switch (iface_type) {
-	case PHY:
-		return iface_info->nic[iface_no].ethdev_port_id;
-	case RING:
-		return iface_info->ring[iface_no].ethdev_port_id;
-	case VHOST:
-		return iface_info->vhost[iface_no].ethdev_port_id;
-	default:
-		return SPP_RET_NG;
-	}
-}
-
 /* Execute one command. */
 static int
 exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
@@ -729,183 +684,6 @@ add_interface(const char *name, char **output,
 	return ret;
 }
 
-/* append a block of vlan for JSON format */
-static int
-append_vlan_block(const char *name, char **output,
-		const int port_id, const enum spp_port_rxtx rxtx)
-{
-	int ret = SPP_RET_NG;
-	int i = 0;
-	struct spp_port_ability *info = NULL;
-	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s)\n",
-				name);
-		return SPP_RET_NG;
-	}
-
-	spp_port_ability_get_info(port_id, rxtx, &info);
-	for (i = 0; i < SPP_PORT_ABILITY_MAX; i++) {
-		switch (info[i].ops) {
-		case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
-		case SPPWK_PORT_ABL_OPS_DEL_VLANTAG:
-			ret = append_vlan_value(&tmp_buff, info[i].ops,
-					info[i].data.vlantag.vid,
-					info[i].data.vlantag.pcp);
-			if (unlikely(ret < SPP_RET_OK))
-				return SPP_RET_NG;
-
-			/*
-			 * Change counter to "maximum+1" for exit the loop.
-			 * An if statement after loop termination is false
-			 * by "maximum+1 ".
-			 */
-			i = SPP_PORT_ABILITY_MAX + 1;
-			break;
-		default:
-			/* not used */
-			break;
-		}
-	}
-	if (i == SPP_PORT_ABILITY_MAX) {
-		ret = append_vlan_value(&tmp_buff, SPPWK_PORT_ABL_OPS_NONE,
-				0, 0);
-		if (unlikely(ret < SPP_RET_OK))
-			return SPP_RET_NG;
-	}
-
-	ret = append_json_block_brackets(output, name, tmp_buff);
-	spp_strbuf_free(tmp_buff);
-	return ret;
-}
-
-/* append a block of port numbers for JSON format */
-static int
-append_port_block(char **output, const struct sppwk_port_idx *port,
-		const enum spp_port_rxtx rxtx)
-{
-	int ret = SPP_RET_NG;
-	char port_str[CMD_TAG_APPEND_SIZE];
-	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = port_block)\n");
-		return SPP_RET_NG;
-	}
-
-	spp_format_port_string(port_str, port->iface_type, port->iface_no);
-	ret = append_json_str_value(&tmp_buff, "port", port_str);
-	if (unlikely(ret < SPP_RET_OK))
-		return SPP_RET_NG;
-
-	ret = append_vlan_block("vlan", &tmp_buff,
-			sppwk_get_ethdev_port_id(
-				port->iface_type, port->iface_no),
-			rxtx);
-	if (unlikely(ret < SPP_RET_OK))
-		return SPP_RET_NG;
-
-	ret = append_json_block_brackets(output, "", tmp_buff);
-	spp_strbuf_free(tmp_buff);
-	return ret;
-}
-
-/* append a list of port numbers for JSON format */
-static int
-append_port_array(const char *name, char **output, const int num,
-		const struct sppwk_port_idx *ports,
-		const enum spp_port_rxtx rxtx)
-{
-	int ret = SPP_RET_NG;
-	int i = 0;
-	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s)\n",
-				name);
-		return SPP_RET_NG;
-	}
-
-	for (i = 0; i < num; i++) {
-		ret = append_port_block(&tmp_buff, &ports[i], rxtx);
-		if (unlikely(ret < SPP_RET_OK))
-			return SPP_RET_NG;
-	}
-
-	ret = append_json_array_brackets(output, name, tmp_buff);
-	spp_strbuf_free(tmp_buff);
-	return ret;
-}
-
-/**
- * TODO(yasufum) add usages called from `add_core` or refactor
- * confusing function names.
- */
-/* append one element of core information for JSON format */
-static int
-append_core_element_value(
-		struct spp_iterate_core_params *params,
-		const unsigned int lcore_id,
-		const char *name, const char *type,
-		const int num_rx, const struct sppwk_port_idx *rx_ports,
-		const int num_tx, const struct sppwk_port_idx *tx_ports)
-{
-	int ret = SPP_RET_NG;
-	int unuse_flg = 0;
-	char *buff, *tmp_buff;
-	buff = params->output;
-	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		/* TODO(yasufum) refactor no meaning err msg */
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				"allocate error. (name = %s)\n",
-				name);
-		return ret;
-	}
-
-	/* there is unnecessary data when "unuse" by type */
-	unuse_flg = strcmp(type, SPPWK_TYPE_NONE_STR);
-
-	/**
-	 * TODO(yasufum) change ambiguous "core" to more specific one such as
-	 * "worker-lcores" or "slave-lcores".
-	 */
-	ret = append_json_uint_value(&tmp_buff, "core", lcore_id);
-	if (unlikely(ret < SPP_RET_OK))
-		return ret;
-
-	if (unuse_flg) {
-		ret = append_json_str_value(&tmp_buff, "name", name);
-		if (unlikely(ret < 0))
-			return ret;
-	}
-
-	ret = append_json_str_value(&tmp_buff, "type", type);
-	if (unlikely(ret < SPP_RET_OK))
-		return ret;
-
-	if (unuse_flg) {
-		ret = append_port_array("rx_port", &tmp_buff,
-				num_rx, rx_ports, SPP_PORT_RXTX_RX);
-		if (unlikely(ret < 0))
-			return ret;
-
-		ret = append_port_array("tx_port", &tmp_buff,
-				num_tx, tx_ports, SPP_PORT_RXTX_TX);
-		if (unlikely(ret < SPP_RET_OK))
-			return ret;
-	}
-
-	ret = append_json_block_brackets(&buff, "", tmp_buff);
-	spp_strbuf_free(tmp_buff);
-	params->output = buff;
-	return ret;
-}
-
 /* Add entry of master lcore to a response in JSON. */
 static int
 add_master_lcore(const char *name, char **output,
@@ -946,65 +724,7 @@ add_core(const char *name, char **output,
 	return ret;
 }
 
-/**
- * Operator function called in iterator for getting each of entries of
- * classifier table named as iterate_adding_mac_entry().
- */
 #ifdef SPP_VF_MODULE
-static int
-append_classifier_element_value(
-		struct spp_iterate_classifier_table_params *params,
-		enum spp_classifier_type type,
-		int vid, const char *mac,
-		const struct sppwk_port_idx *port)
-{
-	int ret = SPP_RET_NG;
-	char *buff, *tmp_buff;
-	char port_str[CMD_TAG_APPEND_SIZE];
-	char value_str[STR_LEN_SHORT];
-	buff = params->output;
-	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = classifier_table)\n");
-		return ret;
-	}
-
-	spp_format_port_string(port_str, port->iface_type, port->iface_no);
-
-	ret = append_json_str_value(&tmp_buff, "type", CLS_TYPE_A_LIST[type]);
-	if (unlikely(ret < SPP_RET_OK))
-		return ret;
-
-	memset(value_str, 0x00, STR_LEN_SHORT);
-	switch (type) {
-	case SPP_CLASSIFIER_TYPE_MAC:
-		sprintf(value_str, "%s", mac);
-		break;
-	case SPP_CLASSIFIER_TYPE_VLAN:
-		sprintf(value_str, "%d/%s", vid, mac);
-		break;
-	default:
-		/* not used */
-		break;
-	}
-
-	ret = append_json_str_value(&tmp_buff, "value", value_str);
-	if (unlikely(ret < 0))
-		return ret;
-
-	ret = append_json_str_value(&tmp_buff, "port", port_str);
-	if (unlikely(ret < SPP_RET_OK))
-		return ret;
-
-	ret = append_json_block_brackets(&buff, "", tmp_buff);
-	spp_strbuf_free(tmp_buff);
-	params->output = buff;
-	return ret;
-}
-#endif /* SPP_VF_MODULE */
-
 /**
  * Add entries of classifier table in JSON. Before iterating the entries,
  * this function calls several nested functions.
@@ -1013,7 +733,6 @@ append_classifier_element_value(
  *       -> add_classifier_table_val()  // Setup data and call iterator.
  *         -> iterate_adding_mac_entry()
  */
-#ifdef SPP_VF_MODULE
 static int
 add_classifier_table(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
@@ -1044,72 +763,6 @@ add_classifier_table(const char *name, char **output,
 }
 #endif /* SPP_VF_MODULE */
 
-/* append string of command response list for JSON format */
-static int
-append_response_list_value(char **output,
-		struct cmd_response *responses,
-		void *tmp)
-{
-	int ret = SPP_RET_NG;
-	int i;
-	char *tmp_buff;
-	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = response_list)\n");
-		return SPP_RET_NG;
-	}
-
-	for (i = 0; responses[i].tag_name[0] != '\0'; i++) {
-		tmp_buff[0] = '\0';
-		ret = responses[i].func(responses[i].tag_name, &tmp_buff, tmp);
-		if (unlikely(ret < SPP_RET_OK)) {
-			spp_strbuf_free(tmp_buff);
-			RTE_LOG(ERR, WK_CMD_RUNNER,
-					"Failed to get reply string. "
-					"(tag = %s)\n", responses[i].tag_name);
-			return SPP_RET_NG;
-		}
-
-		if (tmp_buff[0] == '\0')
-			continue;
-
-		if ((*output)[0] != '\0') {
-			ret = append_json_comma(output);
-			if (unlikely(ret < SPP_RET_OK)) {
-				spp_strbuf_free(tmp_buff);
-				RTE_LOG(ERR, WK_CMD_RUNNER,
-						"Failed to add commas. "
-						"(tag = %s)\n",
-						responses[i].tag_name);
-				return SPP_RET_NG;
-			}
-		}
-
-		*output = spp_strbuf_append(*output, tmp_buff,
-				strlen(tmp_buff));
-		if (unlikely(*output == NULL)) {
-			spp_strbuf_free(tmp_buff);
-			RTE_LOG(ERR, WK_CMD_RUNNER,
-					"Failed to add reply string. "
-					"(tag = %s)\n",
-					responses[i].tag_name);
-			return SPP_RET_NG;
-		}
-	}
-
-	spp_strbuf_free(tmp_buff);
-	return SPP_RET_OK;
-}
-
-/* command response result string list */
-struct cmd_response response_result_list[] = {
-	{ "result", append_result_value },
-	{ "error_details", append_error_details_value },
-	{ "", NULL }
-};
-
 /**
  * List of combination of tag and operator function. It is used to assemble
  * a result of command in JSON like as following.
@@ -1135,58 +788,6 @@ struct cmd_response response_info_list[] = {
 	{ "", NULL }
 };
 
-/* append a list of command results for JSON format. */
-static int
-append_command_results_value(const char *name, char **output,
-		int num, struct cmd_result *results)
-{
-	int ret = SPP_RET_NG;
-	int i;
-	char *tmp_buff1, *tmp_buff2;
-	tmp_buff1 = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff1 == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s, buff=1)\n",
-				name);
-		return SPP_RET_NG;
-	}
-
-	tmp_buff2 = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff2 == NULL)) {
-		spp_strbuf_free(tmp_buff1);
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s, buff=2)\n",
-				name);
-		return SPP_RET_NG;
-	}
-
-	for (i = 0; i < num; i++) {
-		tmp_buff1[0] = '\0';
-		ret = append_response_list_value(&tmp_buff1,
-				response_result_list, &results[i]);
-		if (unlikely(ret < 0)) {
-			spp_strbuf_free(tmp_buff1);
-			spp_strbuf_free(tmp_buff2);
-			return SPP_RET_NG;
-		}
-
-		ret = append_json_block_brackets(&tmp_buff2, "", tmp_buff1);
-		if (unlikely(ret < 0)) {
-			spp_strbuf_free(tmp_buff1);
-			spp_strbuf_free(tmp_buff2);
-			return SPP_RET_NG;
-		}
-
-	}
-
-	ret = append_json_array_brackets(output, name, tmp_buff2);
-	spp_strbuf_free(tmp_buff1);
-	spp_strbuf_free(tmp_buff2);
-	return ret;
-}
-
 /* append a list of status information for JSON format. */
 static int
 append_info_value(const char *name, char **output)
-- 
2.17.1



From spp-request@dpdk.org Mon Jun 24 13:36:51 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd103.ddreams.local
 (zssg-mailmd103.ddreams.local [10.160.123.98]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00D7S65KSMD0@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 13:36:56 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd103.ddreams.local by
 zssg-mailmd103.ddreams.local (dDREAMS) id <0PTL00U1865KUY00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:36:56 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd103.ddreams.local
 (dDREAMS) with ESMTP id <0PTL007MI65KWVC0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:36:56 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id 114437E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:56 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 0FD068E6061	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:56 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 0515E8E605A	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:36:56 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id D305E8E605E	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:54 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:36:54 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4asLD008243;	Mon,
 24 Jun 2019 13:36:54 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O4asHw008242;	Mon, 24 Jun 2019 13:36:54 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O4asvo008239	for unknown; Mon,
 24 Jun 2019 13:36:54 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4asDt013535 for
 unknown; Mon, 24 Jun 2019 13:36:54 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4aspA013530 for
 unknown; Mon, 24 Jun 2019 13:36:54 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O4af9u027552	for unknown; Mon,
 24 Jun 2019 13:36:53 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 8EF2B1BF5E	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 24 Jun 2019 06:36:52 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 9
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 24 Jun 2019 06:36:51 +0200
Message-id: <mailman.23380.1561351011.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH 06/13] shared/sec: revise including headers
      (yasufum.o@gmail.com)
   2. [PATCH 07/13] shared/sec: move JSON formatters from
      cmd_runner (yasufum.o@gmail.com)
   3. [PATCH 08/13] shared/sec: move rest of JSON formatters
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon, 24 Jun 2019 13:36:06 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 06/13] shared/sec: revise including headers
Message-ID: <20190624043613.19271-7-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Some of including headers in SPP secondary are roughly described in
header files, so dependency is not obvious in each of source code. This
update is to refactor this situation by revising where including header
files.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/Makefile                           |  4 +++
 src/mirror/spp_mirror.c                       |  3 ++-
 src/mirror/spp_mirror.h                       | 26 -------------------
 .../secondary/spp_worker_th/cmd_parser.c      |  1 +
 .../secondary/spp_worker_th/cmd_utils.c       |  4 ++-
 .../secondary/spp_worker_th/cmd_utils.h       |  4 +--
 .../secondary/spp_worker_th/conn_spp_ctl.c    |  1 +
 src/shared/secondary/spp_worker_th/spp_port.c |  1 +
 src/vf/classifier_mac.c                       |  6 +++--
 src/vf/spp_forward.c                          |  5 ++--
 src/vf/spp_vf.c                               |  3 ++-
 11 files changed, 23 insertions(+), 35 deletions(-)
 delete mode 100644 src/mirror/spp_mirror.h

diff --git a/src/mirror/Makefile b/src/mirror/Makefile
index b31e116..fc18d1e 100644
--- a/src/mirror/Makefile
+++ b/src/mirror/Makefile
@@ -32,6 +32,10 @@ CFLAGS += $(WERROR_FLAGS) -O3 -MMD
 CFLAGS += -I$(SRCDIR)/../
 CFLAGS += -DSPP_MIRROR_MODULE
 
+# There are two kinds of copy mode, deep copy and shallow copy. If this
+# `DSPP_MIRROR_SHALLOWCOPY` is commented out, spp_mirror runs as in
+# deep copy mode.
+# Default mode is shallow copy.
 CFLAGS += -DSPP_MIRROR_SHALLOWCOPY
 
 # Optional Settings
diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index c2ec09d..c00cad6 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -9,9 +9,10 @@
 #include <rte_common.h>
 #include <rte_cycles.h>
 
-#include "shared/secondary/spp_worker_th/mirror_deps.h"
 #include "shared/common.h"
+#include "shared/secondary/return_codes.h"
 #include "shared/secondary/utils.h"
+#include "shared/secondary/spp_worker_th/mirror_deps.h"
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
 #include "shared/secondary/spp_worker_th/cmd_utils.h"
diff --git a/src/mirror/spp_mirror.h b/src/mirror/spp_mirror.h
deleted file mode 100644
index 17fa522..0000000
--- a/src/mirror/spp_mirror.h
+++ /dev/null
@@ -1,26 +0,0 @@
-/* SPDX-License-Identifier: BSD-3-Clause
- * Copyright(c) 2018 Nippon Telegraph and Telephone Corporation
- */
-
-#ifndef __SPP_MIRROR_H__
-#define __SPP_MIRROR_H__
-
-#include "shared/secondary/spp_worker_th/spp_proc.h"
-
-/**
- * @file
- * SPP_MIRROR main
- *
- * Main function of spp_mirror.
- * This provides the function for initializing and starting the threads.
- *
- * There is two kinds of reproduction classification. I choose it by a
- * compilation switch.
- *  -DeepCopy
- *  -ShallowCopy
- *
- * Attention
- *  I do not do the deletion of the VLAN tag, the addition.
- */
-
-#endif /* __SPP_MIRROR_H__ */
diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.c b/src/shared/secondary/spp_worker_th/cmd_parser.c
index 13e7013..200e41b 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.c
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.c
@@ -10,6 +10,7 @@
 #include <rte_branch_prediction.h>
 
 #include "cmd_parser.h"
+#include "shared/secondary/return_codes.h"
 
 #define RTE_LOGTYPE_WK_CMD_PARSER RTE_LOGTYPE_USER1
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 79dd2e7..098c8c1 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -2,8 +2,8 @@
  * Copyright(c) 2018-2019 Nippon Telegraph and Telephone Corporation
  */
 
-#include <unistd.h>
 #include <string.h>
+#include <unistd.h>
 
 #include <rte_eth_ring.h>
 #include <rte_eth_vhost.h>
@@ -13,12 +13,14 @@
 
 #include "vf_deps.h"
 #include "mirror_deps.h"
+#include "shared/secondary/return_codes.h"
 #include "cmd_utils.h"
 #include "spp_port.h"
 
 #include "shared/secondary/add_port.h"
 #include "shared/secondary/utils.h"
 
+
 /* TODO(yasufum) change log label after filename is revised. */
 #define RTE_LOGTYPE_APP RTE_LOGTYPE_USER1
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 3ee3142..f9d7015 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -5,14 +5,14 @@
 #ifndef _SPPWK_CMD_UTILS_H_
 #define _SPPWK_CMD_UTILS_H_
 
+#include <netinet/in.h>
+
 /**
  * @file cmd_utils.h
  *
  * Command utility functions for SPP worker thread.
  */
 
-#include <netinet/in.h>
-#include "shared/secondary/return_codes.h"
 #include "shared/common.h"
 
 /**
diff --git a/src/shared/secondary/spp_worker_th/conn_spp_ctl.c b/src/shared/secondary/spp_worker_th/conn_spp_ctl.c
index 70e06f9..a67cd10 100644
--- a/src/shared/secondary/spp_worker_th/conn_spp_ctl.c
+++ b/src/shared/secondary/spp_worker_th/conn_spp_ctl.c
@@ -15,6 +15,7 @@
 #include "shared/common.h"
 #include "shared/secondary/string_buffer.h"
 #include "conn_spp_ctl.h"
+#include "shared/secondary/return_codes.h"
 
 #define RTE_LOGTYPE_SPP_COMMAND_PROC RTE_LOGTYPE_USER1
 
diff --git a/src/shared/secondary/spp_worker_th/spp_port.c b/src/shared/secondary/spp_worker_th/spp_port.c
index 7a8a088..3163274 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.c
+++ b/src/shared/secondary/spp_worker_th/spp_port.c
@@ -9,6 +9,7 @@
 #include <rte_net_crc.h>
 
 #include "spp_port.h"
+#include "shared/secondary/return_codes.h"
 #include "ringlatencystats.h"
 
 /* Port ability management information */
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 8d677a9..6d8e664 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -19,11 +19,13 @@
 #include <rte_per_lcore.h>
 #include <rte_eal.h>
 #include <rte_launch.h>
+#include <netinet/in.h>
 
+#include "classifier_mac.h"
+#include "spp_vf.h"
+#include "shared/secondary/return_codes.h"
 #include "shared/secondary/spp_worker_th/vf_deps.h"
 #include "shared/secondary/spp_worker_th/spp_port.h"
-#include "spp_vf.h"
-#include "classifier_mac.h"
 
 #define RTE_LOGTYPE_SPP_CLASSIFIER_MAC RTE_LOGTYPE_USER1
 
diff --git a/src/vf/spp_forward.c b/src/vf/spp_forward.c
index 3d40951..d381c92 100644
--- a/src/vf/spp_forward.c
+++ b/src/vf/spp_forward.c
@@ -4,10 +4,11 @@
 
 #include <rte_cycles.h>
 
+#include "spp_forward.h"
+#include "spp_vf.h"
+#include "shared/secondary/return_codes.h"
 #include "shared/secondary/spp_worker_th/vf_deps.h"
 #include "shared/secondary/spp_worker_th/spp_port.h"
-#include "spp_vf.h"
-#include "spp_forward.h"
 
 #define RTE_LOGTYPE_FORWARD RTE_LOGTYPE_USER1
 
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index 94da67a..e55e3f0 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -6,10 +6,11 @@
 #include <arpa/inet.h>
 #include <getopt.h>
 
-#include "shared/secondary/spp_worker_th/cmd_utils.h"
 #include "spp_vf.h"
+#include "shared/secondary/spp_worker_th/cmd_utils.h"
 #include "classifier_mac.h"
 #include "spp_forward.h"
+#include "shared/secondary/return_codes.h"
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
 #include "shared/secondary/spp_worker_th/spp_port.h"
-- 
2.17.1



------------------------------

Message: 2
Date: Mon, 24 Jun 2019 13:36:07 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 07/13] shared/sec: move JSON formatters from
	cmd_runner
Message-ID: <20190624043613.19271-8-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

JSON formatter functions for making a command result are defined in
`cmd_runner.c`, but better to move another file because this file is too
large and functions are not for running command.

This update is to move following functions to `cmd_res_formatter.c` and
its header. The rest of functions are moved in the next patch.

* append_result_value()
* append_error_details_value()
* is_port_flushed()
* append_interface_array()
* append_process_type_value()
* sppwk_get_proc_type()
* append_vlan_value()

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/Makefile                           |   1 +
 .../spp_worker_th/cmd_res_formatter.c         | 147 +++++++++++++++++
 .../spp_worker_th/cmd_res_formatter.h         |  38 +++++
 .../secondary/spp_worker_th/cmd_runner.c      | 150 +-----------------
 src/vf/Makefile                               |   1 +
 5 files changed, 189 insertions(+), 148 deletions(-)
 create mode 100644 src/shared/secondary/spp_worker_th/cmd_res_formatter.c
 create mode 100644 src/shared/secondary/spp_worker_th/cmd_res_formatter.h

diff --git a/src/mirror/Makefile b/src/mirror/Makefile
index fc18d1e..7e666f5 100644
--- a/src/mirror/Makefile
+++ b/src/mirror/Makefile
@@ -26,6 +26,7 @@ SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_runner.c
 SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
+SRCS-y += $(SPP_WKT_DIR)/cmd_res_formatter.c
 
 CFLAGS += -DALLOW_EXPERIMENTAL_API
 CFLAGS += $(WERROR_FLAGS) -O3 -MMD
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
new file mode 100644
index 0000000..f66f97f
--- /dev/null
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -0,0 +1,147 @@
+/* SPDX-License-Identifier: BSD-3-Clause
+ * Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
+ */
+
+#include "cmd_res_formatter.h"
+#include "cmd_utils.h"
+#include "shared/secondary/json_helper.h"
+
+#define RTE_LOGTYPE_WK_CMD_RES_FMT RTE_LOGTYPE_USER1
+
+/**
+ * List of worker process type. The order of items should be same as the order
+ * of enum `secondary_type` in cmd_utils.h.
+ */
+/* TODO(yasufum) rename `secondary_type` to `sppwk_proc_type`. */
+const char *SPPWK_PROC_TYPE_LIST[] = {
+	"none",
+	"vf",
+	"mirror",
+	"",  /* termination */
+};
+
+/**
+ * List of port abilities. The order of items should be same as the order of
+ * enum `spp_port_ability_type` in spp_vf.h.
+ */
+const char *PORT_ABILITY_STAT_LIST[] = {
+	"none",
+	"add",
+	"del",
+	"",  /* termination */
+};
+
+/* append a command result for JSON format */
+int
+append_result_value(const char *name, char **output, void *tmp)
+{
+	const struct cmd_result *result = tmp;
+	return append_json_str_value(output, name, result->result);
+}
+
+/* append error details for JSON format */
+int
+append_error_details_value(const char *name, char **output, void *tmp)
+{
+	int ret = SPP_RET_NG;
+	const struct cmd_result *result = tmp;
+	char *tmp_buff;
+	/* string is empty, except for errors */
+	if (result->err_msg[0] == '\0')
+		return SPP_RET_OK;
+
+	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = %s)\n",
+				name);
+		return SPP_RET_NG;
+	}
+
+	ret = append_json_str_value(&tmp_buff, "message", result->err_msg);
+	if (unlikely(ret < 0)) {
+		spp_strbuf_free(tmp_buff);
+		return SPP_RET_NG;
+	}
+
+	ret = append_json_block_brackets(output, name, tmp_buff);
+	spp_strbuf_free(tmp_buff);
+	return ret;
+}
+
+/* Check if port is already flushed. */
+int
+is_port_flushed(enum port_type iface_type, int iface_no)
+{
+	struct sppwk_port_info *port = get_sppwk_port(iface_type, iface_no);
+	return port->ethdev_port_id >= 0;
+}
+
+/* append a list of interface numbers */
+int
+append_interface_array(char **output, const enum port_type type)
+{
+	int i, port_cnt = 0;
+	char tmp_str[CMD_TAG_APPEND_SIZE];
+
+	for (i = 0; i < RTE_MAX_ETHPORTS; i++) {
+		if (!is_port_flushed(type, i))
+			continue;
+
+		sprintf(tmp_str, "%s%d", JSON_APPEND_COMMA(port_cnt), i);
+
+		*output = spp_strbuf_append(*output, tmp_str, strlen(tmp_str));
+		if (unlikely(*output == NULL)) {
+			RTE_LOG(ERR, WK_CMD_RES_FMT,
+					"Interface number failed to add. "
+					"(type = %d)\n", type);
+			return SPP_RET_NG;
+		}
+
+		port_cnt++;
+	}
+
+	return SPP_RET_OK;
+}
+
+/* TODO(yasufum) move to another file for util funcs. */
+/* Get proc type from global command params. */
+int
+sppwk_get_proc_type(void)
+{
+	struct startup_param *params;
+	sppwk_get_mng_data(&params, NULL, NULL, NULL, NULL, NULL, NULL);
+	return params->secondary_type;
+}
+
+/* append a secondary process type for JSON format */
+int
+append_process_type_value(const char *name, char **output,
+		void *tmp __attribute__ ((unused)))
+{
+	return append_json_str_value(output, name,
+			SPPWK_PROC_TYPE_LIST[sppwk_get_proc_type()]);
+}
+
+/* append a value of vlan for JSON format */
+int
+append_vlan_value(char **output, const int ope, const int vid, const int pcp)
+{
+	int ret = SPP_RET_OK;
+	ret = append_json_str_value(output, "operation",
+			PORT_ABILITY_STAT_LIST[ope]);
+	if (unlikely(ret < SPP_RET_OK))
+		return SPP_RET_NG;
+
+	ret = append_json_int_value(output, "id", vid);
+	if (unlikely(ret < 0))
+		return SPP_RET_NG;
+
+	ret = append_json_int_value(output, "pcp", pcp);
+	if (unlikely(ret < 0))
+		return SPP_RET_NG;
+
+	return SPP_RET_OK;
+}
+
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
new file mode 100644
index 0000000..c2da2ee
--- /dev/null
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
@@ -0,0 +1,38 @@
+/* SPDX-License-Identifier: BSD-3-Clause
+ * Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
+ */
+
+#ifndef _SPPWK_CMD_RES_FORMATTER_H_
+#define _SPPWK_CMD_RES_FORMATTER_H_
+
+#include "shared/common.h"
+
+#define CMD_RES_LEN  32  /* Size of message including null char. */
+#define CMD_ERR_MSG_LEN 128
+
+#define CMD_RES_BUF_INIT_SIZE 2048
+#define CMD_TAG_APPEND_SIZE 16
+
+struct cmd_result {
+	int code;  /* Response code. */
+	char result[CMD_RES_LEN];  /* Response msg in short. */
+	char err_msg[CMD_ERR_MSG_LEN];  /* Used only if cmd is failed. */
+};
+
+int append_result_value(const char *name, char **output, void *tmp);
+
+int append_error_details_value(const char *name, char **output, void *tmp);
+
+int is_port_flushed(enum port_type iface_type, int iface_no);
+
+int append_interface_array(char **output, const enum port_type type);
+
+int append_process_type_value(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+
+int sppwk_get_proc_type(void);
+
+int append_vlan_value(char **output, const int ope, const int vid,
+		const int pcp);
+
+#endif
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index b1718fa..7145045 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -8,23 +8,20 @@
 #include <rte_log.h>
 #include <rte_branch_prediction.h>
 
+#include "cmd_runner.h"
 #include "vf_deps.h"
 #include "mirror_deps.h"
 #include "spp_port.h"
 #include "shared/secondary/string_buffer.h"
-
 #include "shared/secondary/json_helper.h"
+#include "cmd_res_formatter.h"
 #include "conn_spp_ctl.h"
 #include "cmd_parser.h"
-#include "cmd_runner.h"
 
 #define RTE_LOGTYPE_WK_CMD_RUNNER RTE_LOGTYPE_USER1
 
 /* request message initial size */
-#define CMD_TAG_APPEND_SIZE 16
-#define CMD_ERR_MSG_LEN 128
 #define CMD_REQ_BUF_INIT_SIZE 2048
-#define CMD_RES_BUF_INIT_SIZE 2048
 
 enum cmd_res_code {
 	CMD_SUCCESS = 0,
@@ -32,12 +29,6 @@ enum cmd_res_code {
 	CMD_INVALID,
 };
 
-struct cmd_result {
-	int code;  /* Response code. */
-	char result[SPPWK_NAME_BUFSZ];  /* Response msg in short. */
-	char err_msg[CMD_ERR_MSG_LEN];  /* Used only if cmd is failed. */
-};
-
 /**
  * Contains command response nad operator func for. It is used as an array of
  * this struct.
@@ -48,29 +39,6 @@ struct cmd_response {
 	int (*func)(const char *name, char **output, void *tmp);
 };
 
-/**
- * List of worker process type. The order of items should be same as the order
- * of enum `secondary_type` in cmd_utils.h.
- */
-/* TODO(yasufum) rename `secondary_type` to `sppwk_proc_type`. */
-const char *SPPWK_PROC_TYPE_LIST[] = {
-	"none",
-	"vf",
-	"mirror",
-	"",  /* termination */
-};
-
-/**
- * List of port abilities. The order of items should be same as the order of
- * enum `spp_port_ability_type` in spp_vf.h.
- */
-const char *PORT_ABILITY_STAT_LIST[] = {
-	"none",
-	"add",
-	"del",
-	"",  /* termination */
-};
-
 /**
  * List of classifier type. The order of items should be same as the order of
  * enum `spp_classifier_type` defined in cmd_utils.h.
@@ -93,24 +61,6 @@ sppwk_get_client_id(void)
 	return params->client_id;
 }
 
-/* TODO(yasufum) move to another file for util funcs. */
-/* Get proc type from global command params. */
-static int
-sppwk_get_proc_type(void)
-{
-	struct startup_param *params;
-	sppwk_get_mng_data(&params, NULL, NULL, NULL, NULL, NULL, NULL);
-	return params->secondary_type;
-}
-
-/* Check if port is already flushed. */
-static int
-is_port_flushed(enum port_type iface_type, int iface_no)
-{
-	struct sppwk_port_info *port = get_sppwk_port(iface_type, iface_no);
-	return port->ethdev_port_id >= 0;
-}
-
 /* Update classifier table with given action, add or del. */
 static int
 update_cls_table(enum sppwk_action wk_action,
@@ -737,45 +687,6 @@ prepare_parse_err_msg(struct cmd_result *results,
 	}
 }
 
-/* append a command result for JSON format */
-static int
-append_result_value(const char *name, char **output, void *tmp)
-{
-	const struct cmd_result *result = tmp;
-	return append_json_str_value(output, name, result->result);
-}
-
-/* append error details for JSON format */
-static int
-append_error_details_value(const char *name, char **output, void *tmp)
-{
-	int ret = SPP_RET_NG;
-	const struct cmd_result *result = tmp;
-	char *tmp_buff;
-	/* string is empty, except for errors */
-	if (result->err_msg[0] == '\0')
-		return SPP_RET_OK;
-
-	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s)\n",
-				name);
-		return SPP_RET_NG;
-	}
-
-	ret = append_json_str_value(&tmp_buff, "message", result->err_msg);
-	if (unlikely(ret < 0)) {
-		spp_strbuf_free(tmp_buff);
-		return SPP_RET_NG;
-	}
-
-	ret = append_json_block_brackets(output, name, tmp_buff);
-	spp_strbuf_free(tmp_buff);
-	return ret;
-}
-
 /* Add entry of client ID to a response in JSON. */
 static int
 add_client_id(const char *name, char **output,
@@ -784,42 +695,6 @@ add_client_id(const char *name, char **output,
 	return append_json_int_value(output, name, sppwk_get_client_id());
 }
 
-/* append a list of interface numbers */
-static int
-append_interface_array(char **output, const enum port_type type)
-{
-	int i, port_cnt = 0;
-	char tmp_str[CMD_TAG_APPEND_SIZE];
-
-	for (i = 0; i < RTE_MAX_ETHPORTS; i++) {
-		if (!is_port_flushed(type, i))
-			continue;
-
-		sprintf(tmp_str, "%s%d", JSON_APPEND_COMMA(port_cnt), i);
-
-		*output = spp_strbuf_append(*output, tmp_str, strlen(tmp_str));
-		if (unlikely(*output == NULL)) {
-			RTE_LOG(ERR, WK_CMD_RUNNER,
-					"Interface number failed to add. "
-					"(type = %d)\n", type);
-			return SPP_RET_NG;
-		}
-
-		port_cnt++;
-	}
-
-	return SPP_RET_OK;
-}
-
-/* append a secondary process type for JSON format */
-static int
-append_process_type_value(const char *name, char **output,
-		void *tmp __attribute__ ((unused)))
-{
-	return append_json_str_value(output, name,
-			SPPWK_PROC_TYPE_LIST[sppwk_get_proc_type()]);
-}
-
 /* Add entry of port to a response in JSON such as "phy:0". */
 static int
 add_interface(const char *name, char **output,
@@ -854,27 +729,6 @@ add_interface(const char *name, char **output,
 	return ret;
 }
 
-/* append a value of vlan for JSON format */
-static int
-append_vlan_value(char **output, const int ope, const int vid, const int pcp)
-{
-	int ret = SPP_RET_OK;
-	ret = append_json_str_value(output, "operation",
-			PORT_ABILITY_STAT_LIST[ope]);
-	if (unlikely(ret < SPP_RET_OK))
-		return SPP_RET_NG;
-
-	ret = append_json_int_value(output, "id", vid);
-	if (unlikely(ret < 0))
-		return SPP_RET_NG;
-
-	ret = append_json_int_value(output, "pcp", pcp);
-	if (unlikely(ret < 0))
-		return SPP_RET_NG;
-
-	return SPP_RET_OK;
-}
-
 /* append a block of vlan for JSON format */
 static int
 append_vlan_block(const char *name, char **output,
diff --git a/src/vf/Makefile b/src/vf/Makefile
index 3cbdb01..dd5a100 100644
--- a/src/vf/Makefile
+++ b/src/vf/Makefile
@@ -25,6 +25,7 @@ SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_runner.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_utils.c
+SRCS-y += $(SPP_WKT_DIR)/cmd_res_formatter.c
 SRCS-y += ../shared/common.c
 
 CFLAGS += -DALLOW_EXPERIMENTAL_API
-- 
2.17.1



------------------------------

Message: 3
Date: Mon, 24 Jun 2019 13:36:08 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 08/13] shared/sec: move rest of JSON formatters
Message-ID: <20190624043613.19271-9-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move the rest of JSON formatters defined in
`cmd_runner.c`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../spp_worker_th/cmd_res_formatter.c         | 396 ++++++++++++++++-
 .../spp_worker_th/cmd_res_formatter.h         |  45 +-
 .../secondary/spp_worker_th/cmd_runner.c      | 399 ------------------
 3 files changed, 433 insertions(+), 407 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index f66f97f..b94cb29 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -31,6 +31,25 @@ const char *PORT_ABILITY_STAT_LIST[] = {
 	"",  /* termination */
 };
 
+/**
+ * List of classifier type. The order of items should be same as the order of
+ * enum `spp_classifier_type` defined in cmd_utils.h.
+ */
+/* TODO(yasufum) fix similar var in cmd_parser.c */
+const char *CLS_TYPE_A_LIST[] = {
+	"none",
+	"mac",
+	"vlan",
+	"",  /* termination */
+};
+
+/* command response result string list */
+struct cmd_response response_result_list[] = {
+	{ "result", append_result_value },
+	{ "error_details", append_error_details_value },
+	{ "", NULL }
+};
+
 /* append a command result for JSON format */
 int
 append_result_value(const char *name, char **output, void *tmp)
@@ -71,7 +90,7 @@ append_error_details_value(const char *name, char **output, void *tmp)
 }
 
 /* Check if port is already flushed. */
-int
+static int
 is_port_flushed(enum port_type iface_type, int iface_no)
 {
 	struct sppwk_port_info *port = get_sppwk_port(iface_type, iface_no);
@@ -107,8 +126,8 @@ append_interface_array(char **output, const enum port_type type)
 
 /* TODO(yasufum) move to another file for util funcs. */
 /* Get proc type from global command params. */
-int
-sppwk_get_proc_type(void)
+static int
+get_wk_type(void)
 {
 	struct startup_param *params;
 	sppwk_get_mng_data(&params, NULL, NULL, NULL, NULL, NULL, NULL);
@@ -121,7 +140,7 @@ append_process_type_value(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
 	return append_json_str_value(output, name,
-			SPPWK_PROC_TYPE_LIST[sppwk_get_proc_type()]);
+			SPPWK_PROC_TYPE_LIST[get_wk_type()]);
 }
 
 /* append a value of vlan for JSON format */
@@ -145,3 +164,372 @@ append_vlan_value(char **output, const int ope, const int vid, const int pcp)
 	return SPP_RET_OK;
 }
 
+/* append a block of vlan for JSON format */
+int
+append_vlan_block(const char *name, char **output,
+		const int port_id, const enum spp_port_rxtx rxtx)
+{
+	int ret = SPP_RET_NG;
+	int i = 0;
+	struct spp_port_ability *info = NULL;
+	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = %s)\n",
+				name);
+		return SPP_RET_NG;
+	}
+
+	spp_port_ability_get_info(port_id, rxtx, &info);
+	for (i = 0; i < SPP_PORT_ABILITY_MAX; i++) {
+		switch (info[i].ops) {
+		case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
+		case SPPWK_PORT_ABL_OPS_DEL_VLANTAG:
+			ret = append_vlan_value(&tmp_buff, info[i].ops,
+					info[i].data.vlantag.vid,
+					info[i].data.vlantag.pcp);
+			if (unlikely(ret < SPP_RET_OK))
+				return SPP_RET_NG;
+
+			/*
+			 * Change counter to "maximum+1" for exit the loop.
+			 * An if statement after loop termination is false
+			 * by "maximum+1 ".
+			 */
+			i = SPP_PORT_ABILITY_MAX + 1;
+			break;
+		default:
+			/* not used */
+			break;
+		}
+	}
+	if (i == SPP_PORT_ABILITY_MAX) {
+		ret = append_vlan_value(&tmp_buff, SPPWK_PORT_ABL_OPS_NONE,
+				0, 0);
+		if (unlikely(ret < SPP_RET_OK))
+			return SPP_RET_NG;
+	}
+
+	ret = append_json_block_brackets(output, name, tmp_buff);
+	spp_strbuf_free(tmp_buff);
+	return ret;
+}
+
+/**
+ * Get consistent port ID of rte ethdev from resource UID such as `phy:0`.
+ * It returns a port ID, or error code if it's failed to.
+ */
+static int
+get_ethdev_port_id(enum port_type iface_type, int iface_no)
+{
+	struct iface_info *iface_info = NULL;
+
+	sppwk_get_mng_data(NULL, &iface_info,
+				NULL, NULL, NULL, NULL, NULL);
+	switch (iface_type) {
+	case PHY:
+		return iface_info->nic[iface_no].ethdev_port_id;
+	case RING:
+		return iface_info->ring[iface_no].ethdev_port_id;
+	case VHOST:
+		return iface_info->vhost[iface_no].ethdev_port_id;
+	default:
+		return SPP_RET_NG;
+	}
+}
+
+/* append a block of port numbers for JSON format */
+int
+append_port_block(char **output, const struct sppwk_port_idx *port,
+		const enum spp_port_rxtx rxtx)
+{
+	int ret = SPP_RET_NG;
+	char port_str[CMD_TAG_APPEND_SIZE];
+	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = port_block)\n");
+		return SPP_RET_NG;
+	}
+
+	spp_format_port_string(port_str, port->iface_type, port->iface_no);
+	ret = append_json_str_value(&tmp_buff, "port", port_str);
+	if (unlikely(ret < SPP_RET_OK))
+		return SPP_RET_NG;
+
+	ret = append_vlan_block("vlan", &tmp_buff,
+			get_ethdev_port_id(
+				port->iface_type, port->iface_no),
+			rxtx);
+	if (unlikely(ret < SPP_RET_OK))
+		return SPP_RET_NG;
+
+	ret = append_json_block_brackets(output, "", tmp_buff);
+	spp_strbuf_free(tmp_buff);
+	return ret;
+}
+
+/* append a list of port numbers for JSON format */
+int
+append_port_array(const char *name, char **output, const int num,
+		const struct sppwk_port_idx *ports,
+		const enum spp_port_rxtx rxtx)
+{
+	int ret = SPP_RET_NG;
+	int i = 0;
+	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = %s)\n",
+				name);
+		return SPP_RET_NG;
+	}
+
+	for (i = 0; i < num; i++) {
+		ret = append_port_block(&tmp_buff, &ports[i], rxtx);
+		if (unlikely(ret < SPP_RET_OK))
+			return SPP_RET_NG;
+	}
+
+	ret = append_json_array_brackets(output, name, tmp_buff);
+	spp_strbuf_free(tmp_buff);
+	return ret;
+}
+
+/**
+ * TODO(yasufum) add usages called from `add_core` or refactor
+ * confusing function names.
+ */
+/* append one element of core information for JSON format */
+int
+append_core_element_value(
+		struct spp_iterate_core_params *params,
+		const unsigned int lcore_id,
+		const char *name, const char *type,
+		const int num_rx, const struct sppwk_port_idx *rx_ports,
+		const int num_tx, const struct sppwk_port_idx *tx_ports)
+{
+	int ret = SPP_RET_NG;
+	int unuse_flg = 0;
+	char *buff, *tmp_buff;
+	buff = params->output;
+	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		/* TODO(yasufum) refactor no meaning err msg */
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				"allocate error. (name = %s)\n",
+				name);
+		return ret;
+	}
+
+	/* there is unnecessary data when "unuse" by type */
+	unuse_flg = strcmp(type, SPPWK_TYPE_NONE_STR);
+
+	/**
+	 * TODO(yasufum) change ambiguous "core" to more specific one such as
+	 * "worker-lcores" or "slave-lcores".
+	 */
+	ret = append_json_uint_value(&tmp_buff, "core", lcore_id);
+	if (unlikely(ret < SPP_RET_OK))
+		return ret;
+
+	if (unuse_flg) {
+		ret = append_json_str_value(&tmp_buff, "name", name);
+		if (unlikely(ret < 0))
+			return ret;
+	}
+
+	ret = append_json_str_value(&tmp_buff, "type", type);
+	if (unlikely(ret < SPP_RET_OK))
+		return ret;
+
+	if (unuse_flg) {
+		ret = append_port_array("rx_port", &tmp_buff,
+				num_rx, rx_ports, SPP_PORT_RXTX_RX);
+		if (unlikely(ret < 0))
+			return ret;
+
+		ret = append_port_array("tx_port", &tmp_buff,
+				num_tx, tx_ports, SPP_PORT_RXTX_TX);
+		if (unlikely(ret < SPP_RET_OK))
+			return ret;
+	}
+
+	ret = append_json_block_brackets(&buff, "", tmp_buff);
+	spp_strbuf_free(tmp_buff);
+	params->output = buff;
+	return ret;
+}
+
+#ifdef SPP_VF_MODULE
+/**
+ * Operator function called in iterator for getting each of entries of
+ * classifier table named as iterate_adding_mac_entry().
+ */
+int
+append_classifier_element_value(
+		struct spp_iterate_classifier_table_params *params,
+		enum spp_classifier_type type,
+		int vid, const char *mac,
+		const struct sppwk_port_idx *port)
+{
+	int ret = SPP_RET_NG;
+	char *buff, *tmp_buff;
+	char port_str[CMD_TAG_APPEND_SIZE];
+	char value_str[STR_LEN_SHORT];
+	buff = params->output;
+	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = classifier_table)\n");
+		return ret;
+	}
+
+	spp_format_port_string(port_str, port->iface_type, port->iface_no);
+
+	ret = append_json_str_value(&tmp_buff, "type", CLS_TYPE_A_LIST[type]);
+	if (unlikely(ret < SPP_RET_OK))
+		return ret;
+
+	memset(value_str, 0x00, STR_LEN_SHORT);
+	switch (type) {
+	case SPP_CLASSIFIER_TYPE_MAC:
+		sprintf(value_str, "%s", mac);
+		break;
+	case SPP_CLASSIFIER_TYPE_VLAN:
+		sprintf(value_str, "%d/%s", vid, mac);
+		break;
+	default:
+		/* not used */
+		break;
+	}
+
+	ret = append_json_str_value(&tmp_buff, "value", value_str);
+	if (unlikely(ret < 0))
+		return ret;
+
+	ret = append_json_str_value(&tmp_buff, "port", port_str);
+	if (unlikely(ret < SPP_RET_OK))
+		return ret;
+
+	ret = append_json_block_brackets(&buff, "", tmp_buff);
+	spp_strbuf_free(tmp_buff);
+	params->output = buff;
+	return ret;
+}
+#endif /* SPP_VF_MODULE */
+
+/* append string of command response list for JSON format */
+int
+append_response_list_value(char **output, struct cmd_response *responses,
+		void *tmp)
+{
+	int ret = SPP_RET_NG;
+	int i;
+	char *tmp_buff;
+	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = response_list)\n");
+		return SPP_RET_NG;
+	}
+
+	for (i = 0; responses[i].tag_name[0] != '\0'; i++) {
+		tmp_buff[0] = '\0';
+		ret = responses[i].func(responses[i].tag_name, &tmp_buff, tmp);
+		if (unlikely(ret < SPP_RET_OK)) {
+			spp_strbuf_free(tmp_buff);
+			RTE_LOG(ERR, WK_CMD_RES_FMT,
+					"Failed to get reply string. "
+					"(tag = %s)\n", responses[i].tag_name);
+			return SPP_RET_NG;
+		}
+
+		if (tmp_buff[0] == '\0')
+			continue;
+
+		if ((*output)[0] != '\0') {
+			ret = append_json_comma(output);
+			if (unlikely(ret < SPP_RET_OK)) {
+				spp_strbuf_free(tmp_buff);
+				RTE_LOG(ERR, WK_CMD_RES_FMT,
+						"Failed to add commas. "
+						"(tag = %s)\n",
+						responses[i].tag_name);
+				return SPP_RET_NG;
+			}
+		}
+
+		*output = spp_strbuf_append(*output, tmp_buff,
+				strlen(tmp_buff));
+		if (unlikely(*output == NULL)) {
+			spp_strbuf_free(tmp_buff);
+			RTE_LOG(ERR, WK_CMD_RES_FMT,
+					"Failed to add reply string. "
+					"(tag = %s)\n",
+					responses[i].tag_name);
+			return SPP_RET_NG;
+		}
+	}
+
+	spp_strbuf_free(tmp_buff);
+	return SPP_RET_OK;
+}
+
+/* append a list of command results for JSON format. */
+int
+append_command_results_value(const char *name, char **output,
+		int num, struct cmd_result *results)
+{
+	int ret = SPP_RET_NG;
+	int i;
+	char *tmp_buff1, *tmp_buff2;
+	tmp_buff1 = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff1 == NULL)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = %s, buff=1)\n",
+				name);
+		return SPP_RET_NG;
+	}
+
+	tmp_buff2 = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff2 == NULL)) {
+		spp_strbuf_free(tmp_buff1);
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = %s, buff=2)\n",
+				name);
+		return SPP_RET_NG;
+	}
+
+	for (i = 0; i < num; i++) {
+		tmp_buff1[0] = '\0';
+		ret = append_response_list_value(&tmp_buff1,
+				response_result_list, &results[i]);
+		if (unlikely(ret < 0)) {
+			spp_strbuf_free(tmp_buff1);
+			spp_strbuf_free(tmp_buff2);
+			return SPP_RET_NG;
+		}
+
+		ret = append_json_block_brackets(&tmp_buff2, "", tmp_buff1);
+		if (unlikely(ret < 0)) {
+			spp_strbuf_free(tmp_buff1);
+			spp_strbuf_free(tmp_buff2);
+			return SPP_RET_NG;
+		}
+
+	}
+
+	ret = append_json_array_brackets(output, name, tmp_buff2);
+	spp_strbuf_free(tmp_buff1);
+	spp_strbuf_free(tmp_buff2);
+	return ret;
+}
+
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
index c2da2ee..f3e9879 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
@@ -5,9 +5,12 @@
 #ifndef _SPPWK_CMD_RES_FORMATTER_H_
 #define _SPPWK_CMD_RES_FORMATTER_H_
 
+#include "cmd_utils.h"
+#include "spp_port.h"
 #include "shared/common.h"
 
 #define CMD_RES_LEN  32  /* Size of message including null char. */
+#define CMD_RES_TAG_LEN  32
 #define CMD_ERR_MSG_LEN 128
 
 #define CMD_RES_BUF_INIT_SIZE 2048
@@ -19,20 +22,54 @@ struct cmd_result {
 	char err_msg[CMD_ERR_MSG_LEN];  /* Used only if cmd is failed. */
 };
 
+/**
+ * Contains command response and operator func for. It is used as an array of
+ * this struct.
+ */
+/* TODO(yasufum) add comment describes the purpose of this struct is used. */
+struct cmd_response {
+	char tag_name[CMD_RES_TAG_LEN];
+	int (*func)(const char *name, char **output, void *tmp);
+};
+
 int append_result_value(const char *name, char **output, void *tmp);
 
 int append_error_details_value(const char *name, char **output, void *tmp);
 
-int is_port_flushed(enum port_type iface_type, int iface_no);
-
 int append_interface_array(char **output, const enum port_type type);
 
 int append_process_type_value(const char *name, char **output,
 		void *tmp __attribute__ ((unused)));
 
-int sppwk_get_proc_type(void);
-
 int append_vlan_value(char **output, const int ope, const int vid,
 		const int pcp);
 
+int append_vlan_block(const char *name, char **output,
+		const int port_id, const enum spp_port_rxtx rxtx);
+
+int append_port_block(char **output, const struct sppwk_port_idx *port,
+		const enum spp_port_rxtx rxtx);
+
+int append_port_array(const char *name, char **output, const int num,
+		const struct sppwk_port_idx *ports,
+		const enum spp_port_rxtx rxtx);
+
+int append_core_element_value(struct spp_iterate_core_params *params,
+		const unsigned int lcore_id,
+		const char *name, const char *type,
+		const int num_rx, const struct sppwk_port_idx *rx_ports,
+		const int num_tx, const struct sppwk_port_idx *tx_ports);
+
+int append_classifier_element_value(
+		struct spp_iterate_classifier_table_params *params,
+		enum spp_classifier_type type,
+		int vid, const char *mac,
+		const struct sppwk_port_idx *port);
+
+int append_response_list_value(char **output, struct cmd_response *responses,
+		void *tmp);
+
+int append_command_results_value(const char *name, char **output,
+		int num, struct cmd_result *results);
+
 #endif
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 7145045..5644aec 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -29,28 +29,6 @@ enum cmd_res_code {
 	CMD_INVALID,
 };
 
-/**
- * Contains command response nad operator func for. It is used as an array of
- * this struct.
- */
-/* TODO(yasufum) add comment describes the purpose of this struct is used. */
-struct cmd_response {
-	char tag_name[SPPWK_NAME_BUFSZ];
-	int (*func)(const char *name, char **output, void *tmp);
-};
-
-/**
- * List of classifier type. The order of items should be same as the order of
- * enum `spp_classifier_type` defined in cmd_utils.h.
- */
-/* TODO(yasufum) fix similar var in cmd_parser.c */
-const char *CLS_TYPE_A_LIST[] = {
-	"none",
-	"mac",
-	"vlan",
-	"",  /* termination */
-};
-
 /* TODO(yasufum) move to another file for util funcs. */
 /* Get client ID from global command params. */
 static int
@@ -518,29 +496,6 @@ _add_classifier_table(
 }
 #endif /* SPP_VF_MODULE */
 
-/**
- * Get consistent port ID of rte ethdev from resource UID such as `phy:0`.
- * It returns a port ID, or error code if it's failed to.
- */
-static int
-sppwk_get_ethdev_port_id(enum port_type iface_type, int iface_no)
-{
-	struct iface_info *iface_info = NULL;
-
-	sppwk_get_mng_data(NULL, &iface_info,
-				NULL, NULL, NULL, NULL, NULL);
-	switch (iface_type) {
-	case PHY:
-		return iface_info->nic[iface_no].ethdev_port_id;
-	case RING:
-		return iface_info->ring[iface_no].ethdev_port_id;
-	case VHOST:
-		return iface_info->vhost[iface_no].ethdev_port_id;
-	default:
-		return SPP_RET_NG;
-	}
-}
-
 /* Execute one command. */
 static int
 exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
@@ -729,183 +684,6 @@ add_interface(const char *name, char **output,
 	return ret;
 }
 
-/* append a block of vlan for JSON format */
-static int
-append_vlan_block(const char *name, char **output,
-		const int port_id, const enum spp_port_rxtx rxtx)
-{
-	int ret = SPP_RET_NG;
-	int i = 0;
-	struct spp_port_ability *info = NULL;
-	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s)\n",
-				name);
-		return SPP_RET_NG;
-	}
-
-	spp_port_ability_get_info(port_id, rxtx, &info);
-	for (i = 0; i < SPP_PORT_ABILITY_MAX; i++) {
-		switch (info[i].ops) {
-		case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
-		case SPPWK_PORT_ABL_OPS_DEL_VLANTAG:
-			ret = append_vlan_value(&tmp_buff, info[i].ops,
-					info[i].data.vlantag.vid,
-					info[i].data.vlantag.pcp);
-			if (unlikely(ret < SPP_RET_OK))
-				return SPP_RET_NG;
-
-			/*
-			 * Change counter to "maximum+1" for exit the loop.
-			 * An if statement after loop termination is false
-			 * by "maximum+1 ".
-			 */
-			i = SPP_PORT_ABILITY_MAX + 1;
-			break;
-		default:
-			/* not used */
-			break;
-		}
-	}
-	if (i == SPP_PORT_ABILITY_MAX) {
-		ret = append_vlan_value(&tmp_buff, SPPWK_PORT_ABL_OPS_NONE,
-				0, 0);
-		if (unlikely(ret < SPP_RET_OK))
-			return SPP_RET_NG;
-	}
-
-	ret = append_json_block_brackets(output, name, tmp_buff);
-	spp_strbuf_free(tmp_buff);
-	return ret;
-}
-
-/* append a block of port numbers for JSON format */
-static int
-append_port_block(char **output, const struct sppwk_port_idx *port,
-		const enum spp_port_rxtx rxtx)
-{
-	int ret = SPP_RET_NG;
-	char port_str[CMD_TAG_APPEND_SIZE];
-	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = port_block)\n");
-		return SPP_RET_NG;
-	}
-
-	spp_format_port_string(port_str, port->iface_type, port->iface_no);
-	ret = append_json_str_value(&tmp_buff, "port", port_str);
-	if (unlikely(ret < SPP_RET_OK))
-		return SPP_RET_NG;
-
-	ret = append_vlan_block("vlan", &tmp_buff,
-			sppwk_get_ethdev_port_id(
-				port->iface_type, port->iface_no),
-			rxtx);
-	if (unlikely(ret < SPP_RET_OK))
-		return SPP_RET_NG;
-
-	ret = append_json_block_brackets(output, "", tmp_buff);
-	spp_strbuf_free(tmp_buff);
-	return ret;
-}
-
-/* append a list of port numbers for JSON format */
-static int
-append_port_array(const char *name, char **output, const int num,
-		const struct sppwk_port_idx *ports,
-		const enum spp_port_rxtx rxtx)
-{
-	int ret = SPP_RET_NG;
-	int i = 0;
-	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s)\n",
-				name);
-		return SPP_RET_NG;
-	}
-
-	for (i = 0; i < num; i++) {
-		ret = append_port_block(&tmp_buff, &ports[i], rxtx);
-		if (unlikely(ret < SPP_RET_OK))
-			return SPP_RET_NG;
-	}
-
-	ret = append_json_array_brackets(output, name, tmp_buff);
-	spp_strbuf_free(tmp_buff);
-	return ret;
-}
-
-/**
- * TODO(yasufum) add usages called from `add_core` or refactor
- * confusing function names.
- */
-/* append one element of core information for JSON format */
-static int
-append_core_element_value(
-		struct spp_iterate_core_params *params,
-		const unsigned int lcore_id,
-		const char *name, const char *type,
-		const int num_rx, const struct sppwk_port_idx *rx_ports,
-		const int num_tx, const struct sppwk_port_idx *tx_ports)
-{
-	int ret = SPP_RET_NG;
-	int unuse_flg = 0;
-	char *buff, *tmp_buff;
-	buff = params->output;
-	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		/* TODO(yasufum) refactor no meaning err msg */
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				"allocate error. (name = %s)\n",
-				name);
-		return ret;
-	}
-
-	/* there is unnecessary data when "unuse" by type */
-	unuse_flg = strcmp(type, SPPWK_TYPE_NONE_STR);
-
-	/**
-	 * TODO(yasufum) change ambiguous "core" to more specific one such as
-	 * "worker-lcores" or "slave-lcores".
-	 */
-	ret = append_json_uint_value(&tmp_buff, "core", lcore_id);
-	if (unlikely(ret < SPP_RET_OK))
-		return ret;
-
-	if (unuse_flg) {
-		ret = append_json_str_value(&tmp_buff, "name", name);
-		if (unlikely(ret < 0))
-			return ret;
-	}
-
-	ret = append_json_str_value(&tmp_buff, "type", type);
-	if (unlikely(ret < SPP_RET_OK))
-		return ret;
-
-	if (unuse_flg) {
-		ret = append_port_array("rx_port", &tmp_buff,
-				num_rx, rx_ports, SPP_PORT_RXTX_RX);
-		if (unlikely(ret < 0))
-			return ret;
-
-		ret = append_port_array("tx_port", &tmp_buff,
-				num_tx, tx_ports, SPP_PORT_RXTX_TX);
-		if (unlikely(ret < SPP_RET_OK))
-			return ret;
-	}
-
-	ret = append_json_block_brackets(&buff, "", tmp_buff);
-	spp_strbuf_free(tmp_buff);
-	params->output = buff;
-	return ret;
-}
-
 /* Add entry of master lcore to a response in JSON. */
 static int
 add_master_lcore(const char *name, char **output,
@@ -946,65 +724,7 @@ add_core(const char *name, char **output,
 	return ret;
 }
 
-/**
- * Operator function called in iterator for getting each of entries of
- * classifier table named as iterate_adding_mac_entry().
- */
 #ifdef SPP_VF_MODULE
-static int
-append_classifier_element_value(
-		struct spp_iterate_classifier_table_params *params,
-		enum spp_classifier_type type,
-		int vid, const char *mac,
-		const struct sppwk_port_idx *port)
-{
-	int ret = SPP_RET_NG;
-	char *buff, *tmp_buff;
-	char port_str[CMD_TAG_APPEND_SIZE];
-	char value_str[STR_LEN_SHORT];
-	buff = params->output;
-	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = classifier_table)\n");
-		return ret;
-	}
-
-	spp_format_port_string(port_str, port->iface_type, port->iface_no);
-
-	ret = append_json_str_value(&tmp_buff, "type", CLS_TYPE_A_LIST[type]);
-	if (unlikely(ret < SPP_RET_OK))
-		return ret;
-
-	memset(value_str, 0x00, STR_LEN_SHORT);
-	switch (type) {
-	case SPP_CLASSIFIER_TYPE_MAC:
-		sprintf(value_str, "%s", mac);
-		break;
-	case SPP_CLASSIFIER_TYPE_VLAN:
-		sprintf(value_str, "%d/%s", vid, mac);
-		break;
-	default:
-		/* not used */
-		break;
-	}
-
-	ret = append_json_str_value(&tmp_buff, "value", value_str);
-	if (unlikely(ret < 0))
-		return ret;
-
-	ret = append_json_str_value(&tmp_buff, "port", port_str);
-	if (unlikely(ret < SPP_RET_OK))
-		return ret;
-
-	ret = append_json_block_brackets(&buff, "", tmp_buff);
-	spp_strbuf_free(tmp_buff);
-	params->output = buff;
-	return ret;
-}
-#endif /* SPP_VF_MODULE */
-
 /**
  * Add entries of classifier table in JSON. Before iterating the entries,
  * this function calls several nested functions.
@@ -1013,7 +733,6 @@ append_classifier_element_value(
  *       -> add_classifier_table_val()  // Setup data and call iterator.
  *         -> iterate_adding_mac_entry()
  */
-#ifdef SPP_VF_MODULE
 static int
 add_classifier_table(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
@@ -1044,72 +763,6 @@ add_classifier_table(const char *name, char **output,
 }
 #endif /* SPP_VF_MODULE */
 
-/* append string of command response list for JSON format */
-static int
-append_response_list_value(char **output,
-		struct cmd_response *responses,
-		void *tmp)
-{
-	int ret = SPP_RET_NG;
-	int i;
-	char *tmp_buff;
-	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = response_list)\n");
-		return SPP_RET_NG;
-	}
-
-	for (i = 0; responses[i].tag_name[0] != '\0'; i++) {
-		tmp_buff[0] = '\0';
-		ret = responses[i].func(responses[i].tag_name, &tmp_buff, tmp);
-		if (unlikely(ret < SPP_RET_OK)) {
-			spp_strbuf_free(tmp_buff);
-			RTE_LOG(ERR, WK_CMD_RUNNER,
-					"Failed to get reply string. "
-					"(tag = %s)\n", responses[i].tag_name);
-			return SPP_RET_NG;
-		}
-
-		if (tmp_buff[0] == '\0')
-			continue;
-
-		if ((*output)[0] != '\0') {
-			ret = append_json_comma(output);
-			if (unlikely(ret < SPP_RET_OK)) {
-				spp_strbuf_free(tmp_buff);
-				RTE_LOG(ERR, WK_CMD_RUNNER,
-						"Failed to add commas. "
-						"(tag = %s)\n",
-						responses[i].tag_name);
-				return SPP_RET_NG;
-			}
-		}
-
-		*output = spp_strbuf_append(*output, tmp_buff,
-				strlen(tmp_buff));
-		if (unlikely(*output == NULL)) {
-			spp_strbuf_free(tmp_buff);
-			RTE_LOG(ERR, WK_CMD_RUNNER,
-					"Failed to add reply string. "
-					"(tag = %s)\n",
-					responses[i].tag_name);
-			return SPP_RET_NG;
-		}
-	}
-
-	spp_strbuf_free(tmp_buff);
-	return SPP_RET_OK;
-}
-
-/* command response result string list */
-struct cmd_response response_result_list[] = {
-	{ "result", append_result_value },
-	{ "error_details", append_error_details_value },
-	{ "", NULL }
-};
-
 /**
  * List of combination of tag and operator function. It is used to assemble
  * a result of command in JSON like as following.
@@ -1135,58 +788,6 @@ struct cmd_response response_info_list[] = {
 	{ "", NULL }
 };
 
-/* append a list of command results for JSON format. */
-static int
-append_command_results_value(const char *name, char **output,
-		int num, struct cmd_result *results)
-{
-	int ret = SPP_RET_NG;
-	int i;
-	char *tmp_buff1, *tmp_buff2;
-	tmp_buff1 = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff1 == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s, buff=1)\n",
-				name);
-		return SPP_RET_NG;
-	}
-
-	tmp_buff2 = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff2 == NULL)) {
-		spp_strbuf_free(tmp_buff1);
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s, buff=2)\n",
-				name);
-		return SPP_RET_NG;
-	}
-
-	for (i = 0; i < num; i++) {
-		tmp_buff1[0] = '\0';
-		ret = append_response_list_value(&tmp_buff1,
-				response_result_list, &results[i]);
-		if (unlikely(ret < 0)) {
-			spp_strbuf_free(tmp_buff1);
-			spp_strbuf_free(tmp_buff2);
-			return SPP_RET_NG;
-		}
-
-		ret = append_json_block_brackets(&tmp_buff2, "", tmp_buff1);
-		if (unlikely(ret < 0)) {
-			spp_strbuf_free(tmp_buff1);
-			spp_strbuf_free(tmp_buff2);
-			return SPP_RET_NG;
-		}
-
-	}
-
-	ret = append_json_array_brackets(output, name, tmp_buff2);
-	spp_strbuf_free(tmp_buff1);
-	spp_strbuf_free(tmp_buff2);
-	return ret;
-}
-
 /* append a list of status information for JSON format. */
 static int
 append_info_value(const char *name, char **output)
-- 
2.17.1



End of spp Digest, Vol 31, Issue 9
**********************************


From yasufum.o@gmail.com Mon Jun 24 13:36:06 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00D7U65KSMD0@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 13:36:56 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTL00L4Q65KXE00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:36:56 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00AR365K8L60@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:36:56 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf101.ddreams.local (Postfix) with ESMTP id 17A717E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:56 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 16B6B8E605C	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:56 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 14EB58E6056	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:36:56 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 982BA8E6051	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:36:54 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf101.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:36:54 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4asPh008234;	Mon,
 24 Jun 2019 13:36:54 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O4asb8008233;	Mon, 24 Jun 2019 13:36:54 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O4asRk008228	for unknown; Mon,
 24 Jun 2019 13:36:54 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4arRA016629 for
 unknown; Mon, 24 Jun 2019 13:36:54 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4ar19016626; Mon,
 24 Jun 2019 13:36:53 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4arBK030561;	Mon,
 24 Jun 2019 13:36:53 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O4ar9s030554	for unknown; Mon, 24 Jun 2019 13:36:53 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4arU5013513 for
 unknown; Mon, 24 Jun 2019 13:36:53 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4arCt013504 for
 unknown; Mon, 24 Jun 2019 13:36:53 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O4akwN027589	for unknown; Mon,
 24 Jun 2019 13:36:52 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 662201BF5A;	Mon, 24 Jun 2019 06:36:46 +0200 (CEST)
Received: from mail-pg1-f195.google.com
 (mail-pg1-f195.google.com [209.85.215.195]) by dpdk.org (Postfix)
 with ESMTP id 436851BF59 for <spp@dpdk.org>; Mon,
 24 Jun 2019 06:36:45 +0200 (CEST)
Received: by mail-pg1-f195.google.com with SMTP id y72so6394826pgd.8 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 21:36:45 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id c10sm9005178pjq.14.2019.06.23.21.36.42
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 21:36:43 -0700 (PDT)
Date: Mon, 24 Jun 2019 13:36:06 +0900
From: yasufum.o@gmail.com
Subject: [spp 04380] [spp] [PATCH 06/13] shared/sec: revise including headers
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624043613.19271-7-yasufum.o@gmail.com>
In-reply-to: <20190624043613.19271-1-yasufum.o@gmail.com>
References: <20190624043613.19271-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04380
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=T9S987eIloycK5Dwz7pDRq+QloELeGBY+zuJZlIQbZk=;
 b=D+iNVM1aMEYfAnO11afjNuQsYgEOMdEINsv4KC33bcHBX+9Seq8mmlwQgUHeqRSHB8
 +YyktW/ynaRB3f/aVBWtiJUrue8ZHteBwnlWLncqnMihIByAKmTisI13SUiJ6RQ4r1Fa
 cRfywT8Z7JgtDxkGvDOa9DfNz8BItnI8Np2SQY34AXy8fdRbp2g8MLJkgWxbY9KbGrXJ
 U6DZU1iuYAAp0XqvpDAnEXudknwAphoUAWG2sRVOsrDe6zN+X21h9iNBhKgG9kLMJ4WT
 vgSIrCP2yFktpbKVUkCt1CBgE322KtIcwk0RM+cM9Bi56YDflLeY/yFAay+dFNco3Ee5 4mcA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=T9S987eIloycK5Dwz7pDRq+QloELeGBY+zuJZlIQbZk=;
 b=Dvz1xdeb2QMydkVYpfkwOge+YbYHHaJ1DRcIEGKNTdRYnZTPDHjwyGSNSQEOSSnL20
 7qhdB4pM5VRRT8qOm7jCfrXLfjCWtWba4XI1A8gzm2aA9PACZv2zGeKvrT7iJClajypV
 UzH3j14cxaH2maSMKy82E4nDFtKzB9vWU8Rrc2QlDSo/xeGMATcv2LA7KB33uL1wQOg+
 PY2rk+7D4d1pccLjkXeuGbFBYZsoOxbrisnzyuldlDXTbSeHFrdXwFBaAwm1aKwDHgaL
 4hmxaus3A5s26TiIaeXhbWP94Ihst/aIv3jlUou+Lipe1URvOwvN2xYfnfpocEK5jBZp I5Qw==
X-Gm-Message-State: APjAAAWGugpeZ2r5Aiq206plkmK258f0ROwu9vVluTO1BGJp3+dhb3bu
 b2pyUl/7o0vayk2D6quenJ8Qu+t5
X-Google-Smtp-Source:
 APXvYqwDWtq39PRyolsJin70pZraMUoO1uERzdx7viAUADKI1leL95hgLDqm2A5V0DEFkK837Cahyg==
X-Received: by 2002:a63:8f09:: with SMTP id n9mr30562459pgd.249.1561351004223;
 Sun, 23 Jun 2019 21:36:44 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 230
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Some of including headers in SPP secondary are roughly described in
header files, so dependency is not obvious in each of source code. This
update is to refactor this situation by revising where including header
files.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/Makefile                           |  4 +++
 src/mirror/spp_mirror.c                       |  3 ++-
 src/mirror/spp_mirror.h                       | 26 -------------------
 .../secondary/spp_worker_th/cmd_parser.c      |  1 +
 .../secondary/spp_worker_th/cmd_utils.c       |  4 ++-
 .../secondary/spp_worker_th/cmd_utils.h       |  4 +--
 .../secondary/spp_worker_th/conn_spp_ctl.c    |  1 +
 src/shared/secondary/spp_worker_th/spp_port.c |  1 +
 src/vf/classifier_mac.c                       |  6 +++--
 src/vf/spp_forward.c                          |  5 ++--
 src/vf/spp_vf.c                               |  3 ++-
 11 files changed, 23 insertions(+), 35 deletions(-)
 delete mode 100644 src/mirror/spp_mirror.h

diff --git a/src/mirror/Makefile b/src/mirror/Makefile
index b31e116..fc18d1e 100644
--- a/src/mirror/Makefile
+++ b/src/mirror/Makefile
@@ -32,6 +32,10 @@ CFLAGS += $(WERROR_FLAGS) -O3 -MMD
 CFLAGS += -I$(SRCDIR)/../
 CFLAGS += -DSPP_MIRROR_MODULE
 
+# There are two kinds of copy mode, deep copy and shallow copy. If this
+# `DSPP_MIRROR_SHALLOWCOPY` is commented out, spp_mirror runs as in
+# deep copy mode.
+# Default mode is shallow copy.
 CFLAGS += -DSPP_MIRROR_SHALLOWCOPY
 
 # Optional Settings
diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index c2ec09d..c00cad6 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -9,9 +9,10 @@
 #include <rte_common.h>
 #include <rte_cycles.h>
 
-#include "shared/secondary/spp_worker_th/mirror_deps.h"
 #include "shared/common.h"
+#include "shared/secondary/return_codes.h"
 #include "shared/secondary/utils.h"
+#include "shared/secondary/spp_worker_th/mirror_deps.h"
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
 #include "shared/secondary/spp_worker_th/cmd_utils.h"
diff --git a/src/mirror/spp_mirror.h b/src/mirror/spp_mirror.h
deleted file mode 100644
index 17fa522..0000000
--- a/src/mirror/spp_mirror.h
+++ /dev/null
@@ -1,26 +0,0 @@
-/* SPDX-License-Identifier: BSD-3-Clause
- * Copyright(c) 2018 Nippon Telegraph and Telephone Corporation
- */
-
-#ifndef __SPP_MIRROR_H__
-#define __SPP_MIRROR_H__
-
-#include "shared/secondary/spp_worker_th/spp_proc.h"
-
-/**
- * @file
- * SPP_MIRROR main
- *
- * Main function of spp_mirror.
- * This provides the function for initializing and starting the threads.
- *
- * There is two kinds of reproduction classification. I choose it by a
- * compilation switch.
- *  -DeepCopy
- *  -ShallowCopy
- *
- * Attention
- *  I do not do the deletion of the VLAN tag, the addition.
- */
-
-#endif /* __SPP_MIRROR_H__ */
diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.c b/src/shared/secondary/spp_worker_th/cmd_parser.c
index 13e7013..200e41b 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.c
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.c
@@ -10,6 +10,7 @@
 #include <rte_branch_prediction.h>
 
 #include "cmd_parser.h"
+#include "shared/secondary/return_codes.h"
 
 #define RTE_LOGTYPE_WK_CMD_PARSER RTE_LOGTYPE_USER1
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 79dd2e7..098c8c1 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -2,8 +2,8 @@
  * Copyright(c) 2018-2019 Nippon Telegraph and Telephone Corporation
  */
 
-#include <unistd.h>
 #include <string.h>
+#include <unistd.h>
 
 #include <rte_eth_ring.h>
 #include <rte_eth_vhost.h>
@@ -13,12 +13,14 @@
 
 #include "vf_deps.h"
 #include "mirror_deps.h"
+#include "shared/secondary/return_codes.h"
 #include "cmd_utils.h"
 #include "spp_port.h"
 
 #include "shared/secondary/add_port.h"
 #include "shared/secondary/utils.h"
 
+
 /* TODO(yasufum) change log label after filename is revised. */
 #define RTE_LOGTYPE_APP RTE_LOGTYPE_USER1
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 3ee3142..f9d7015 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -5,14 +5,14 @@
 #ifndef _SPPWK_CMD_UTILS_H_
 #define _SPPWK_CMD_UTILS_H_
 
+#include <netinet/in.h>
+
 /**
  * @file cmd_utils.h
  *
  * Command utility functions for SPP worker thread.
  */
 
-#include <netinet/in.h>
-#include "shared/secondary/return_codes.h"
 #include "shared/common.h"
 
 /**
diff --git a/src/shared/secondary/spp_worker_th/conn_spp_ctl.c b/src/shared/secondary/spp_worker_th/conn_spp_ctl.c
index 70e06f9..a67cd10 100644
--- a/src/shared/secondary/spp_worker_th/conn_spp_ctl.c
+++ b/src/shared/secondary/spp_worker_th/conn_spp_ctl.c
@@ -15,6 +15,7 @@
 #include "shared/common.h"
 #include "shared/secondary/string_buffer.h"
 #include "conn_spp_ctl.h"
+#include "shared/secondary/return_codes.h"
 
 #define RTE_LOGTYPE_SPP_COMMAND_PROC RTE_LOGTYPE_USER1
 
diff --git a/src/shared/secondary/spp_worker_th/spp_port.c b/src/shared/secondary/spp_worker_th/spp_port.c
index 7a8a088..3163274 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.c
+++ b/src/shared/secondary/spp_worker_th/spp_port.c
@@ -9,6 +9,7 @@
 #include <rte_net_crc.h>
 
 #include "spp_port.h"
+#include "shared/secondary/return_codes.h"
 #include "ringlatencystats.h"
 
 /* Port ability management information */
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 8d677a9..6d8e664 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -19,11 +19,13 @@
 #include <rte_per_lcore.h>
 #include <rte_eal.h>
 #include <rte_launch.h>
+#include <netinet/in.h>
 
+#include "classifier_mac.h"
+#include "spp_vf.h"
+#include "shared/secondary/return_codes.h"
 #include "shared/secondary/spp_worker_th/vf_deps.h"
 #include "shared/secondary/spp_worker_th/spp_port.h"
-#include "spp_vf.h"
-#include "classifier_mac.h"
 
 #define RTE_LOGTYPE_SPP_CLASSIFIER_MAC RTE_LOGTYPE_USER1
 
diff --git a/src/vf/spp_forward.c b/src/vf/spp_forward.c
index 3d40951..d381c92 100644
--- a/src/vf/spp_forward.c
+++ b/src/vf/spp_forward.c
@@ -4,10 +4,11 @@
 
 #include <rte_cycles.h>
 
+#include "spp_forward.h"
+#include "spp_vf.h"
+#include "shared/secondary/return_codes.h"
 #include "shared/secondary/spp_worker_th/vf_deps.h"
 #include "shared/secondary/spp_worker_th/spp_port.h"
-#include "spp_vf.h"
-#include "spp_forward.h"
 
 #define RTE_LOGTYPE_FORWARD RTE_LOGTYPE_USER1
 
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index 94da67a..e55e3f0 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -6,10 +6,11 @@
 #include <arpa/inet.h>
 #include <getopt.h>
 
-#include "shared/secondary/spp_worker_th/cmd_utils.h"
 #include "spp_vf.h"
+#include "shared/secondary/spp_worker_th/cmd_utils.h"
 #include "classifier_mac.h"
 #include "spp_forward.h"
+#include "shared/secondary/return_codes.h"
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
 #include "shared/secondary/spp_worker_th/spp_port.h"
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 13:36:09 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd101.ddreams.local
 (zssg-mailmd101.ddreams.local [10.160.123.96]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DA865SSMD0@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 13:37:04 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd101.ddreams.local by
 zssg-mailmd101.ddreams.local (dDREAMS) id <0PTL00Z0265STJ00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:37:04 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd101.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00KEZ65SA380@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:37:04 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id 405217E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:37:04 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 3E5568E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:37:04 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 2F5208E6052	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:37:04 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id D77338E6052	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:37:02 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:37:02 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b20Y008286;	Mon,
 24 Jun 2019 13:37:02 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O4b2Vc008285;	Mon, 24 Jun 2019 13:37:02 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O4b2oa008280	for unknown; Mon,
 24 Jun 2019 13:37:02 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b2cX016657 for
 unknown; Mon, 24 Jun 2019 13:37:02 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b2CJ016654; Mon,
 24 Jun 2019 13:37:02 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b2Sc030575;	Mon,
 24 Jun 2019 13:37:02 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O4b1Iu030571	for unknown; Mon, 24 Jun 2019 13:37:01 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b1ks013601 for
 unknown; Mon, 24 Jun 2019 13:37:01 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b1HT013597 for
 unknown; Mon, 24 Jun 2019 13:37:01 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O4ataa027648	for unknown; Mon,
 24 Jun 2019 13:37:00 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 9C5D21BF57;	Mon, 24 Jun 2019 06:36:54 +0200 (CEST)
Received: from mail-pl1-f194.google.com
 (mail-pl1-f194.google.com [209.85.214.194]) by dpdk.org (Postfix)
 with ESMTP id E10C01BF5D for <spp@dpdk.org>; Mon,
 24 Jun 2019 06:36:52 +0200 (CEST)
Received: by mail-pl1-f194.google.com with SMTP id p1so6162440plo.2 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 21:36:52 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id c10sm9005178pjq.14.2019.06.23.21.36.50
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 21:36:51 -0700 (PDT)
Date: Mon, 24 Jun 2019 13:36:09 +0900
From: yasufum.o@gmail.com
Subject: [spp 04381] [spp] [PATCH 09/13] shared/sec: move lcore funcs in
	response_info_list
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624043613.19271-10-yasufum.o@gmail.com>
In-reply-to: <20190624043613.19271-1-yasufum.o@gmail.com>
References: <20190624043613.19271-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04381
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=3kCALQLYcpnbh2suAjCHS5GKel31+5XxabKrDESIEK4=;
 b=pXdB2bgIb1MHiS3sc3LPozh/qck4Vz5PaTF0oxTTYq8hF9qVIM9X3Xo7iqF31Kf/6s
 jYq34Pw0IOGG6oox7DVuz774FtA8QKoJ99g0L9jCR3nTQQcByqRi67ECayZaavqW4Zup
 WpFpyZgc7FjoOH7aNM+qRbVKLYp+hNpuu1t41Y132zHRsWZEA/5IXeVweiyKaLuV5cKG
 En028C/YmZptf33XXr0GnsTtgAKlV6W06HWtKHQZPFXcz1txomc6LkgPMCaR0eNib+mz
 7gkgFSNDe+WhWizjVllnkB7Bzmu6RDzuKPNy3gkN64Pvg9ewSQsyY+0/ZfKoBmaiDDGz icQg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=3kCALQLYcpnbh2suAjCHS5GKel31+5XxabKrDESIEK4=;
 b=BrngZf1vfQNfeHC+mPH2QKwXhTZ6aqbz4IM9vi4EOoFp25FpUarMjISyU0664S6drm
 OZoFHvGsM/kV14AhF2lGB72j8ATTwbhCMs0bu5Kp/O38upu2ljts9AI5bw7cnB/fd8q7
 dvv2O5PQj2ibdwmapukX95PQcpXM4/IyBkiohIXZgG1ZZPTyoslR1JDB/udYR5wy7NSC
 ycJhRf/ZtxBAIrYIp4ZGG6FN7KesQb6K5TmN22BE+S9mdmWVTR6Lx95dtQYl+ZjTDmBK
 z6xSgIvv7E5CCBR+p/A4t5e0IfpyorxZIC4HS5MSp2+jBoZzU6EZ/Hdu8ZovGA7Qol4o hSWw==
X-Gm-Message-State: APjAAAXw+GOU2ijowOjsZe4EGX4+dbDNCpazfS3Rfa391sfEhZwv/ndU
 EvSKgY0mupZha/qgGoOrAXxRb1Lj
X-Google-Smtp-Source:
 APXvYqwW2RV6aOTal1uDbfHIU3Z/z3OXiOKFv6iLYP+mq5uwXBI58MSQnitaUMkSDSbUWqhoYmucfQ==
X-Received: by 2002:a17:902:968c:: with SMTP id
 n12mr53003267plp.59.1561351012038; Sun, 23 Jun 2019 21:36:52 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 283
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move operation functions for making command response
which is defined in `cmd_runner.c` to `cmd_res_formatter.c`. Operation
functions are defined as following, and this update moves
`add_master_lcore` and `add_core`. The rest of operation functions are
moved in next patches.

    struct cmd_response response_info_list[] = {
            { "client-id", add_client_id },
            { "phy", add_interface },
            { "vhost", add_interface },
            { "ring", add_interface },
            { "master-lcore", add_master_lcore},
            { "core", add_core},
    #ifdef SPP_VF_MODULE
            { "classifier_table", add_classifier_table},
    #endif /* SPP_VF_MODULE */
            { "", NULL }
    };

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../spp_worker_th/cmd_res_formatter.c         | 104 ++++++++++++++++++
 .../spp_worker_th/cmd_res_formatter.h         |   6 +
 .../secondary/spp_worker_th/cmd_runner.c      | 100 -----------------
 3 files changed, 110 insertions(+), 100 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index b94cb29..d838a18 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -4,6 +4,8 @@
 
 #include "cmd_res_formatter.h"
 #include "cmd_utils.h"
+#include "vf_deps.h"
+#include "mirror_deps.h"
 #include "shared/secondary/json_helper.h"
 
 #define RTE_LOGTYPE_WK_CMD_RES_FMT RTE_LOGTYPE_USER1
@@ -533,3 +535,105 @@ append_command_results_value(const char *name, char **output,
 	return ret;
 }
 
+/* Iterate core information to create response to status command */
+static int
+spp_iterate_core_info(struct spp_iterate_core_params *params)
+{
+	int ret;
+	int lcore_id, cnt;
+	struct core_info *core = NULL;
+	struct sppwk_comp_info *comp_info_base = NULL;
+	struct sppwk_comp_info *comp_info = NULL;
+
+	RTE_LCORE_FOREACH_SLAVE(lcore_id) {
+		if (spp_get_core_status(lcore_id) == SPP_CORE_UNUSE)
+			continue;
+
+		core = get_core_info(lcore_id);
+		if (core->num == 0) {
+			ret = (*params->element_proc)(
+				params, lcore_id,
+				"", SPPWK_TYPE_NONE_STR,
+				0, NULL, 0, NULL);
+			if (unlikely(ret != 0)) {
+				RTE_LOG(ERR, WK_CMD_RES_FMT,
+						"Cannot iterate core "
+						"information. "
+						"(core = %d, type = %d)\n",
+						lcore_id, SPPWK_TYPE_NONE);
+				return SPP_RET_NG;
+			}
+			continue;
+		}
+
+		for (cnt = 0; cnt < core->num; cnt++) {
+			sppwk_get_mng_data(NULL, NULL, &comp_info_base,
+							NULL, NULL, NULL, NULL);
+			comp_info = (comp_info_base + core->id[cnt]);
+#ifdef SPP_VF_MODULE
+			if (comp_info->wk_type == SPPWK_TYPE_CLS) {
+				ret = get_classifier_status(lcore_id,
+						core->id[cnt], params);
+			} else {
+				ret = get_forwarder_status(lcore_id,
+						core->id[cnt], params);
+			}
+#endif /* SPP_VF_MODULE */
+#ifdef SPP_MIRROR_MODULE
+			ret = get_mirror_status(lcore_id, core->id[cnt],
+					params);
+#endif /* SPP_MIRROR_MODULE */
+			if (unlikely(ret != 0)) {
+				RTE_LOG(ERR, WK_CMD_RES_FMT,
+						"Cannot iterate core "
+						"information. "
+						"(core = %d, type = %d)\n",
+						lcore_id, comp_info->wk_type);
+				return SPP_RET_NG;
+			}
+		}
+	}
+
+	return SPP_RET_OK;
+}
+
+/* Add entry of master lcore to a response in JSON. */
+int
+add_master_lcore(const char *name, char **output,
+		void *tmp __attribute__ ((unused)))
+{
+	int ret = SPP_RET_NG;
+	ret = append_json_int_value(output, name, rte_get_master_lcore());
+	return ret;
+}
+
+/* Add entry of core info of worker to a response in JSON such as "core:0". */
+int
+add_core(const char *name, char **output,
+		void *tmp __attribute__ ((unused)))
+{
+	int ret = SPP_RET_NG;
+	struct spp_iterate_core_params itr_params;
+	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = %s)\n",
+				name);
+		return SPP_RET_NG;
+	}
+
+	itr_params.output = tmp_buff;
+	itr_params.element_proc = append_core_element_value;
+
+	ret = spp_iterate_core_info(&itr_params);
+	if (unlikely(ret != SPP_RET_OK)) {
+		spp_strbuf_free(itr_params.output);
+		return SPP_RET_NG;
+	}
+
+	ret = append_json_array_brackets(output, name, itr_params.output);
+	spp_strbuf_free(itr_params.output);
+	return ret;
+}
+
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
index f3e9879..9c77763 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
@@ -72,4 +72,10 @@ int append_response_list_value(char **output, struct cmd_response *responses,
 int append_command_results_value(const char *name, char **output,
 		int num, struct cmd_result *results);
 
+int add_master_lcore(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+
+int add_core(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+
 #endif
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 5644aec..a6894fc 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -418,66 +418,6 @@ flush_cmd(void)
 	return ret;
 }
 
-/* Iterate core information to create response to status command */
-static int
-spp_iterate_core_info(struct spp_iterate_core_params *params)
-{
-	int ret;
-	int lcore_id, cnt;
-	struct core_info *core = NULL;
-	struct sppwk_comp_info *comp_info_base = NULL;
-	struct sppwk_comp_info *comp_info = NULL;
-
-	RTE_LCORE_FOREACH_SLAVE(lcore_id) {
-		if (spp_get_core_status(lcore_id) == SPP_CORE_UNUSE)
-			continue;
-
-		core = get_core_info(lcore_id);
-		if (core->num == 0) {
-			ret = (*params->element_proc)(
-				params, lcore_id,
-				"", SPPWK_TYPE_NONE_STR,
-				0, NULL, 0, NULL);
-			if (unlikely(ret != 0)) {
-				RTE_LOG(ERR, WK_CMD_RUNNER, "Cannot iterate core "
-						"information. "
-						"(core = %d, type = %d)\n",
-						lcore_id, SPPWK_TYPE_NONE);
-				return SPP_RET_NG;
-			}
-			continue;
-		}
-
-		for (cnt = 0; cnt < core->num; cnt++) {
-			sppwk_get_mng_data(NULL, NULL, &comp_info_base,
-							NULL, NULL, NULL, NULL);
-			comp_info = (comp_info_base + core->id[cnt]);
-#ifdef SPP_VF_MODULE
-			if (comp_info->wk_type == SPPWK_TYPE_CLS) {
-				ret = get_classifier_status(lcore_id,
-						core->id[cnt], params);
-			} else {
-				ret = get_forwarder_status(lcore_id,
-						core->id[cnt], params);
-			}
-#endif /* SPP_VF_MODULE */
-#ifdef SPP_MIRROR_MODULE
-			ret = get_mirror_status(lcore_id, core->id[cnt],
-					params);
-#endif /* SPP_MIRROR_MODULE */
-			if (unlikely(ret != 0)) {
-				RTE_LOG(ERR, WK_CMD_RUNNER, "Cannot iterate core "
-						"information. "
-						"(core = %d, type = %d)\n",
-						lcore_id, comp_info->wk_type);
-				return SPP_RET_NG;
-			}
-		}
-	}
-
-	return SPP_RET_OK;
-}
-
 /* Iterate classifier_table to create response to status command */
 #ifdef SPP_VF_MODULE
 static int
@@ -684,46 +624,6 @@ add_interface(const char *name, char **output,
 	return ret;
 }
 
-/* Add entry of master lcore to a response in JSON. */
-static int
-add_master_lcore(const char *name, char **output,
-		void *tmp __attribute__ ((unused)))
-{
-	int ret = SPP_RET_NG;
-	ret = append_json_int_value(output, name, rte_get_master_lcore());
-	return ret;
-}
-
-/* Add entry of core info of worker to a response in JSON such as "core:0". */
-static int
-add_core(const char *name, char **output,
-		void *tmp __attribute__ ((unused)))
-{
-	int ret = SPP_RET_NG;
-	struct spp_iterate_core_params itr_params;
-	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s)\n",
-				name);
-		return SPP_RET_NG;
-	}
-
-	itr_params.output = tmp_buff;
-	itr_params.element_proc = append_core_element_value;
-
-	ret = spp_iterate_core_info(&itr_params);
-	if (unlikely(ret != SPP_RET_OK)) {
-		spp_strbuf_free(itr_params.output);
-		return SPP_RET_NG;
-	}
-
-	ret = append_json_array_brackets(output, name, itr_params.output);
-	spp_strbuf_free(itr_params.output);
-	return ret;
-}
-
 #ifdef SPP_VF_MODULE
 /**
  * Add entries of classifier table in JSON. Before iterating the entries,
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 13:36:10 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd101.ddreams.local
 (zssg-mailmd101.ddreams.local [10.160.123.96]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DAQ65USMD0@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 13:37:06 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd101.ddreams.local by
 zssg-mailmd101.ddreams.local (dDREAMS) id <0PTL00Z0E65UTJ00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:37:06 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd101.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00KFY65UA380@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:37:06 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf106.ddreams.local (Postfix) with ESMTP id 66C527E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:37:06 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 6368B8E605F	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:37:06 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 56ACA8E6042	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:37:06 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id E2E7C8E6057	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:37:04 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf106.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:37:04 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b4E0008314;	Mon,
 24 Jun 2019 13:37:04 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O4b4VZ008313;	Mon, 24 Jun 2019 13:37:04 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O4b4j1008310	for unknown; Mon,
 24 Jun 2019 13:37:04 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b4Rh016668 for
 unknown; Mon, 24 Jun 2019 13:37:04 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b4Ml016665; Mon,
 24 Jun 2019 13:37:04 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b4xC030582;	Mon,
 24 Jun 2019 13:37:04 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O4b3X5030578	for unknown; Mon, 24 Jun 2019 13:37:03 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b3oj013649 for
 unknown; Mon, 24 Jun 2019 13:37:03 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b3hV013642 for
 unknown; Mon, 24 Jun 2019 13:37:03 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O4avDN027668	for unknown; Mon,
 24 Jun 2019 13:37:02 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id AC9431BF5A;	Mon, 24 Jun 2019 06:36:56 +0200 (CEST)
Received: from mail-pg1-f195.google.com
 (mail-pg1-f195.google.com [209.85.215.195]) by dpdk.org (Postfix)
 with ESMTP id 4CE311BF2C for <spp@dpdk.org>; Mon,
 24 Jun 2019 06:36:55 +0200 (CEST)
Received: by mail-pg1-f195.google.com with SMTP id s27so6415629pgl.2 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 21:36:55 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id c10sm9005178pjq.14.2019.06.23.21.36.53
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 21:36:54 -0700 (PDT)
Date: Mon, 24 Jun 2019 13:36:10 +0900
From: yasufum.o@gmail.com
Subject: [spp 04382] [spp] [PATCH 10/13] shared/sec: move ope cli-id in
	response_info_list
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624043613.19271-11-yasufum.o@gmail.com>
In-reply-to: <20190624043613.19271-1-yasufum.o@gmail.com>
References: <20190624043613.19271-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04382
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=VGJNAWTkSfVsUKkc1g4mQumERqpnwm3FOeSnJwFbkdU=;
 b=JB5hnjDIVCm5ZSKTC0IPlmQjD5P7IIe7hBi0qCPLs/LjQvf5kspRd3KubsypAmqVDi
 o/oDtvn8wUvOPbDvtClTSZwTEH2BOOrHD1r9POA2Zps3rDVY3h58UjBCK20hMX5RIkYi
 wklrCdNN9ObJFCJCFLW2w/5vHOfr1zcv9tVXxNLqMwz3/Yka5+/FK9mdw8+IoNGjlLOc
 39/+f3YwlKy6Grb9DvBxeDzOtyD7pB41tvr67Wx5a7nD+g0a0z0EF1K92VUv2p7ILCGL
 WYEiWzoOqdGURIuHgJbUNwOTCE0GkqItzd6UNHczbxEJQJVEaIFfqSllEeIOXhdOd08p bNnQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=VGJNAWTkSfVsUKkc1g4mQumERqpnwm3FOeSnJwFbkdU=;
 b=pVTdOAaGZChiTGdSXIkTg4YEuujj6j+CJhsLro+0tpsyyJ5rj2mqglO+H0vnbIapMJ
 uLC3GvRfwNn2hZQRqWnghigsAFI/XnE16JC3AqyjfrwBCrNW9+8ioD5CMN5MaP5327dp
 V/25OS03/fzzBTtaZXAckdDfSBXeZZn3bLR1Vxkoli3SIoITWVFlmYxALYaeIQ1xor/q
 hXf97Lyw6sA7vZwDYgYH1GYKJCrHwKZAFwIcAUPkvDXBRRZw5B/hoh3BphfAnppaDMow
 6tXi9Sp0ShppwNwjpyqok2nDXpc1jM/uWOMIps5MZTUQOEY6cD1sWdX4bj0TmO80Os3i /B5w==
X-Gm-Message-State: APjAAAXshUeNnqaK82Fb0P3UyOHlvshPgqSNnhTQzIFdNvgDK6pN3AZz
 ZgYbZhRpaGnFW+483pIHd/pnAPUF
X-Google-Smtp-Source:
 APXvYqy0B9ihML5A/Pn7NQYLV7JGD0z56Wv9+OpSPYUMJW2mTy25KiEaQWqx071TK6EU19jKOfc4fA==
X-Received: by 2002:a17:90a:bf08:: with SMTP id
 c8mr22353410pjs.75.1561351014431; Sun, 23 Jun 2019 21:36:54 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 176
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move operation functions `add_client_id` and
`add_interface` which is defined in `cmd_runner.c` to
`cmd_res_formatter.c`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../spp_worker_th/cmd_res_formatter.c         | 57 +++++++++++++++++++
 .../spp_worker_th/cmd_res_formatter.h         | 11 ++++
 .../secondary/spp_worker_th/cmd_runner.c      | 52 -----------------
 3 files changed, 68 insertions(+), 52 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index d838a18..3476580 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -597,6 +597,63 @@ spp_iterate_core_info(struct spp_iterate_core_params *params)
 	return SPP_RET_OK;
 }
 
+/* TODO(yasufum) move to another file for util funcs. */
+/* Get client ID from global command params. */
+static int
+wk_get_client_id(void)
+{
+	struct startup_param *params;
+	sppwk_get_mng_data(&params, NULL, NULL, NULL, NULL, NULL, NULL);
+	return params->client_id;
+}
+
+/**
+ * Operator functions start with prefix `add_` defined in `response_info_list`
+ * of struct `cmd_response` which are for making each of parts of command
+ * response.
+ */
+/* Add entry of client ID to a response in JSON. */
+int
+add_client_id(const char *name, char **output,
+		void *tmp __attribute__ ((unused)))
+{
+	return append_json_int_value(output, name, wk_get_client_id());
+}
+
+/* Add entry of port to a response in JSON such as "phy:0". */
+int
+add_interface(const char *name, char **output,
+		void *tmp __attribute__ ((unused)))
+{
+	int ret = SPP_RET_NG;
+	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = %s)\n",
+				name);
+		return SPP_RET_NG;
+	}
+
+	if (strcmp(name, SPP_IFTYPE_NIC_STR) == 0)
+		ret = append_interface_array(&tmp_buff, PHY);
+
+	else if (strcmp(name, SPP_IFTYPE_VHOST_STR) == 0)
+		ret = append_interface_array(&tmp_buff, VHOST);
+
+	else if (strcmp(name, SPP_IFTYPE_RING_STR) == 0)
+		ret = append_interface_array(&tmp_buff, RING);
+
+	if (unlikely(ret < SPP_RET_OK)) {
+		spp_strbuf_free(tmp_buff);
+		return SPP_RET_NG;
+	}
+
+	ret = append_json_array_brackets(output, name, tmp_buff);
+	spp_strbuf_free(tmp_buff);
+	return ret;
+}
+
 /* Add entry of master lcore to a response in JSON. */
 int
 add_master_lcore(const char *name, char **output,
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
index 9c77763..bc0109c 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
@@ -72,6 +72,17 @@ int append_response_list_value(char **output, struct cmd_response *responses,
 int append_command_results_value(const char *name, char **output,
 		int num, struct cmd_result *results);
 
+/**
+ * Operator functions start with prefix `add_` defined in `response_info_list`
+ * of struct `cmd_response` which are for making each of parts of command
+ * response.
+ */
+int add_client_id(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+
+int add_interface(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+
 int add_master_lcore(const char *name, char **output,
 		void *tmp __attribute__ ((unused)));
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index a6894fc..007d62e 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -29,16 +29,6 @@ enum cmd_res_code {
 	CMD_INVALID,
 };
 
-/* TODO(yasufum) move to another file for util funcs. */
-/* Get client ID from global command params. */
-static int
-sppwk_get_client_id(void)
-{
-	struct startup_param *params;
-	sppwk_get_mng_data(&params, NULL, NULL, NULL, NULL, NULL, NULL);
-	return params->client_id;
-}
-
 /* Update classifier table with given action, add or del. */
 static int
 update_cls_table(enum sppwk_action wk_action,
@@ -582,48 +572,6 @@ prepare_parse_err_msg(struct cmd_result *results,
 	}
 }
 
-/* Add entry of client ID to a response in JSON. */
-static int
-add_client_id(const char *name, char **output,
-		void *tmp __attribute__ ((unused)))
-{
-	return append_json_int_value(output, name, sppwk_get_client_id());
-}
-
-/* Add entry of port to a response in JSON such as "phy:0". */
-static int
-add_interface(const char *name, char **output,
-		void *tmp __attribute__ ((unused)))
-{
-	int ret = SPP_RET_NG;
-	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s)\n",
-				name);
-		return SPP_RET_NG;
-	}
-
-	if (strcmp(name, SPP_IFTYPE_NIC_STR) == 0)
-		ret = append_interface_array(&tmp_buff, PHY);
-
-	else if (strcmp(name, SPP_IFTYPE_VHOST_STR) == 0)
-		ret = append_interface_array(&tmp_buff, VHOST);
-
-	else if (strcmp(name, SPP_IFTYPE_RING_STR) == 0)
-		ret = append_interface_array(&tmp_buff, RING);
-
-	if (unlikely(ret < SPP_RET_OK)) {
-		spp_strbuf_free(tmp_buff);
-		return SPP_RET_NG;
-	}
-
-	ret = append_json_array_brackets(output, name, tmp_buff);
-	spp_strbuf_free(tmp_buff);
-	return ret;
-}
-
 #ifdef SPP_VF_MODULE
 /**
  * Add entries of classifier table in JSON. Before iterating the entries,
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 13:36:11 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd101.ddreams.local
 (zssg-mailmd101.ddreams.local [10.160.123.96]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DBI65XSMD0@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 13:37:09 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd101.ddreams.local by
 zssg-mailmd101.ddreams.local (dDREAMS) id <0PTL00Z1E65XTJ00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:37:09 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd101.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00KI265XA380@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:37:09 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf106.ddreams.local (Postfix) with ESMTP id C1A587E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:37:09 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id BD03C8E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:37:09 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id B085C8E6061	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:37:09 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 92F238E6057	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:37:08 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf106.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:37:08 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b8Gf008321;	Mon,
 24 Jun 2019 13:37:08 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O4b8GL008320;	Mon, 24 Jun 2019 13:37:08 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O4b8iC008317	for unknown; Mon,
 24 Jun 2019 13:37:08 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b75P016708 for
 unknown; Mon, 24 Jun 2019 13:37:08 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b71m016705; Mon,
 24 Jun 2019 13:37:07 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b7tb030591;	Mon,
 24 Jun 2019 13:37:07 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O4b7FV030587	for unknown; Mon, 24 Jun 2019 13:37:07 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b7LX013674 for
 unknown; Mon, 24 Jun 2019 13:37:07 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b7ch013671 for
 unknown; Mon, 24 Jun 2019 13:37:07 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O4ax8g027688	for unknown; Mon,
 24 Jun 2019 13:37:05 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id B9EEE1BF5E;	Mon, 24 Jun 2019 06:36:58 +0200 (CEST)
Received: from mail-pf1-f195.google.com
 (mail-pf1-f195.google.com [209.85.210.195]) by dpdk.org (Postfix)
 with ESMTP id C9F641BF5B for <spp@dpdk.org>; Mon,
 24 Jun 2019 06:36:57 +0200 (CEST)
Received: by mail-pf1-f195.google.com with SMTP id j2so6759152pfe.6 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 21:36:57 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id c10sm9005178pjq.14.2019.06.23.21.36.55
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 21:36:56 -0700 (PDT)
Date: Mon, 24 Jun 2019 13:36:11 +0900
From: yasufum.o@gmail.com
Subject: [spp 04383] [spp] [PATCH 11/13] shared/sec: move rest of ops in
	response_info_list
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624043613.19271-12-yasufum.o@gmail.com>
In-reply-to: <20190624043613.19271-1-yasufum.o@gmail.com>
References: <20190624043613.19271-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04383
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=p9ZUeGs5xPGDe3VlVhrfYjz1sa++WnCV+3dlqad3mdM=;
 b=KwQig75hUuijeh1y7Y/sSUyvNoJqMB3cqBvanmTxhmtbGMMnd8UEH+Ffi0V3y5JhOs
 4BNTFQCdIt2ZtIhPG2BBlw92PYx1ZFGkrTKjyP5t8y9P7RiJiktHUTbaMsVVskO1BDbs
 zMdEuuLYc7QK9ZbtCkxSwBChzXFObf4E7NTsZtle3gyneRJ4UzEaQ69uYbFALFqwyoVL
 IFg98QebdABcBQHMl9BhcM5TG4hNDJvjCsImVd3cdxQ5LTq2PoLb5Q39Y/T7rz2Gls1B
 fZjcdn+rxbr9QND53d1rC9B3BSCtAOmVJx0LGNlLlK8G3onNTW3Im9RHJn7ia82cLocV whFg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=p9ZUeGs5xPGDe3VlVhrfYjz1sa++WnCV+3dlqad3mdM=;
 b=e/0oBLhFRw8Fwx36YH3gzx69Yj1utNwudIdvb1Rbx3k2jCFoVTHUK++P5mD9h/KIHn
 +RCBaHZIWvzOLT2N7y4fXO1ZVzztzot8jO8OQUzcVIYFWltjaktEzqc/d0TCHC05+YyH
 p9Ta8uEhyqRH7arrti6EcylD8WgH6b/YpIGlAeY5oJSpIxvu41Cyndj76ogO31gptTey
 jE1cjh6XI16BwGbcmyd2ZHQQ/yHOUBeJT4PjLfndv8gRZTtJzalxOFQJZMkfGhcIjV5q
 BaQMzqm5ElFbrKwbTr/ehfq6Xi/k33zGVKEOJnjQE/DVAOYD4Pp6oZT/Qe9bSPNuzwU7 tFYg==
X-Gm-Message-State: APjAAAUJHnMB21vQy57ywgZFPAj6iGjV7XtLP8Npm9RRC6rYANG9tppa
 t8xsFhNbXGkP4YnHNmMTq6PFyABv
X-Google-Smtp-Source:
 APXvYqwqf8FDgCQzSCzTFplxOsbhL6Ufk16ji3xf9dgGTwWeMHv/V7TOGsP1FpPcw/aH4IWCIfivAA==
X-Received: by 2002:a63:cc4e:: with SMTP id q14mr10137468pgi.84.1561351016843;
 Sun, 23 Jun 2019 21:36:56 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 290
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move the rest of operation functions for making
command response which is defined in `cmd_runner.c` to
`cmd_res_formatter.c`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../spp_worker_th/cmd_res_formatter.c         | 106 +++++++++++++++++
 .../spp_worker_th/cmd_res_formatter.h         |   4 +
 .../secondary/spp_worker_th/cmd_runner.c      | 108 ------------------
 3 files changed, 110 insertions(+), 108 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index 3476580..ab08fcd 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -52,6 +52,31 @@ struct cmd_response response_result_list[] = {
 	{ "", NULL }
 };
 
+/**
+ * List of combination of tag and operator function. It is used to assemble
+ * a result of command in JSON like as following.
+ *
+ *     {
+ *         "client-id": 1,
+ *         "ports": ["phy:0", "phy:1", "vhost:0", "ring:0"],
+ *         "components": [
+ *             {
+ *                 "core": 2,
+ *                 ...
+ */
+struct cmd_response response_info_list[] = {
+	{ "client-id", add_client_id },
+	{ "phy", add_interface },
+	{ "vhost", add_interface },
+	{ "ring", add_interface },
+	{ "master-lcore", add_master_lcore},
+	{ "core", add_core},
+#ifdef SPP_VF_MODULE
+	{ "classifier_table", add_classifier_table},
+#endif /* SPP_VF_MODULE */
+	{ "", NULL }
+};
+
 /* append a command result for JSON format */
 int
 append_result_value(const char *name, char **output, void *tmp)
@@ -535,6 +560,32 @@ append_command_results_value(const char *name, char **output,
 	return ret;
 }
 
+/* append a list of status information for JSON format. */
+int
+append_info_value(const char *name, char **output)
+{
+	int ret = SPP_RET_NG;
+	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = %s)\n",
+				name);
+		return SPP_RET_NG;
+	}
+
+	ret = append_response_list_value(&tmp_buff,
+			response_info_list, NULL);
+	if (unlikely(ret < SPP_RET_OK)) {
+		spp_strbuf_free(tmp_buff);
+		return SPP_RET_NG;
+	}
+
+	ret = append_json_block_brackets(output, name, tmp_buff);
+	spp_strbuf_free(tmp_buff);
+	return ret;
+}
+
 /* Iterate core information to create response to status command */
 static int
 spp_iterate_core_info(struct spp_iterate_core_params *params)
@@ -694,3 +745,58 @@ add_core(const char *name, char **output,
 	return ret;
 }
 
+#ifdef SPP_VF_MODULE
+/* Iterate classifier_table to create response to status command */
+static int
+_add_classifier_table(
+		struct spp_iterate_classifier_table_params *params)
+{
+	int ret;
+
+	ret = add_classifier_table_val(params);
+	if (unlikely(ret != 0)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				"Cannot iterate classifier_mac_table.\n");
+		return SPP_RET_NG;
+	}
+
+	return SPP_RET_OK;
+}
+
+/**
+ * Add entries of classifier table in JSON. Before iterating the entries,
+ * this function calls several nested functions.
+ *   add_classifier_table()  // This function.
+ *     -> _add_classifier_table()  // Wrapper and doesn't almost nothing.
+ *       -> add_classifier_table_val()  // Setup data and call iterator.
+ *         -> iterate_adding_mac_entry()
+ */
+int
+add_classifier_table(const char *name, char **output,
+		void *tmp __attribute__ ((unused)))
+{
+	int ret = SPP_RET_NG;
+	struct spp_iterate_classifier_table_params itr_params;
+	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = %s)\n",
+				name);
+		return SPP_RET_NG;
+	}
+
+	itr_params.output = tmp_buff;
+	itr_params.element_proc = append_classifier_element_value;
+
+	ret = _add_classifier_table(&itr_params);
+	if (unlikely(ret != SPP_RET_OK)) {
+		spp_strbuf_free(itr_params.output);
+		return SPP_RET_NG;
+	}
+
+	ret = append_json_array_brackets(output, name, itr_params.output);
+	spp_strbuf_free(itr_params.output);
+	return ret;
+}
+#endif /* SPP_VF_MODULE */
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
index bc0109c..d9481e3 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
@@ -72,6 +72,8 @@ int append_response_list_value(char **output, struct cmd_response *responses,
 int append_command_results_value(const char *name, char **output,
 		int num, struct cmd_result *results);
 
+int append_info_value(const char *name, char **output);
+
 /**
  * Operator functions start with prefix `add_` defined in `response_info_list`
  * of struct `cmd_response` which are for making each of parts of command
@@ -89,4 +91,6 @@ int add_master_lcore(const char *name, char **output,
 int add_core(const char *name, char **output,
 		void *tmp __attribute__ ((unused)));
 
+int add_classifier_table(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
 #endif
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 007d62e..7c4c91c 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -408,24 +408,6 @@ flush_cmd(void)
 	return ret;
 }
 
-/* Iterate classifier_table to create response to status command */
-#ifdef SPP_VF_MODULE
-static int
-_add_classifier_table(
-		struct spp_iterate_classifier_table_params *params)
-{
-	int ret;
-
-	ret = add_classifier_table_val(params);
-	if (unlikely(ret != 0)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER, "Cannot iterate classifier_mac_table.\n");
-		return SPP_RET_NG;
-	}
-
-	return SPP_RET_OK;
-}
-#endif /* SPP_VF_MODULE */
-
 /* Execute one command. */
 static int
 exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
@@ -572,96 +554,6 @@ prepare_parse_err_msg(struct cmd_result *results,
 	}
 }
 
-#ifdef SPP_VF_MODULE
-/**
- * Add entries of classifier table in JSON. Before iterating the entries,
- * this function calls several nested functions.
- *   add_classifier_table()  // This function.
- *     -> _add_classifier_table()  // Wrapper and doesn't almost nothing.
- *       -> add_classifier_table_val()  // Setup data and call iterator.
- *         -> iterate_adding_mac_entry()
- */
-static int
-add_classifier_table(const char *name, char **output,
-		void *tmp __attribute__ ((unused)))
-{
-	int ret = SPP_RET_NG;
-	struct spp_iterate_classifier_table_params itr_params;
-	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s)\n",
-				name);
-		return SPP_RET_NG;
-	}
-
-	itr_params.output = tmp_buff;
-	itr_params.element_proc = append_classifier_element_value;
-
-	ret = _add_classifier_table(&itr_params);
-	if (unlikely(ret != SPP_RET_OK)) {
-		spp_strbuf_free(itr_params.output);
-		return SPP_RET_NG;
-	}
-
-	ret = append_json_array_brackets(output, name, itr_params.output);
-	spp_strbuf_free(itr_params.output);
-	return ret;
-}
-#endif /* SPP_VF_MODULE */
-
-/**
- * List of combination of tag and operator function. It is used to assemble
- * a result of command in JSON like as following.
- *
- *     {
- *         "client-id": 1,
- *         "ports": ["phy:0", "phy:1", "vhost:0", "ring:0"],
- *         "components": [
- *             {
- *                 "core": 2,
- *                 ...
- */
-struct cmd_response response_info_list[] = {
-	{ "client-id", add_client_id },
-	{ "phy", add_interface },
-	{ "vhost", add_interface },
-	{ "ring", add_interface },
-	{ "master-lcore", add_master_lcore},
-	{ "core", add_core},
-#ifdef SPP_VF_MODULE
-	{ "classifier_table", add_classifier_table},
-#endif /* SPP_VF_MODULE */
-	{ "", NULL }
-};
-
-/* append a list of status information for JSON format. */
-static int
-append_info_value(const char *name, char **output)
-{
-	int ret = SPP_RET_NG;
-	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s)\n",
-				name);
-		return SPP_RET_NG;
-	}
-
-	ret = append_response_list_value(&tmp_buff,
-			response_info_list, NULL);
-	if (unlikely(ret < SPP_RET_OK)) {
-		spp_strbuf_free(tmp_buff);
-		return SPP_RET_NG;
-	}
-
-	ret = append_json_block_brackets(output, name, tmp_buff);
-	spp_strbuf_free(tmp_buff);
-	return ret;
-}
-
 /* send response for decode error */
 static void
 send_decode_error_response(int *sock,
-- 
2.17.1



From yasufum.o@gmail.com Mon Jun 24 13:36:12 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd101.ddreams.local
 (zssg-mailmd101.ddreams.local [10.160.123.96]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DBO65YSMD0@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 13:37:10 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd101.ddreams.local by
 zssg-mailmd101.ddreams.local (dDREAMS) id <0PTL00Z1M65YTJ00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:37:10 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd101.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00KIO65YA380@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:37:10 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf106.ddreams.local (Postfix) with ESMTP id CC0377E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:37:10 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id CAE4D8E6057	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:37:10 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id BFB908E6066	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:37:10 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 4E8308E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:37:10 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf106.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:37:10 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4bA5u008335;	Mon,
 24 Jun 2019 13:37:10 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O4bAjA008334;	Mon, 24 Jun 2019 13:37:10 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O4b9PZ008329	for unknown; Mon,
 24 Jun 2019 13:37:09 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b9da016718 for
 unknown; Mon, 24 Jun 2019 13:37:09 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b9Ma016715; Mon,
 24 Jun 2019 13:37:09 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b932030600;	Mon,
 24 Jun 2019 13:37:09 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O4b922030596	for unknown; Mon, 24 Jun 2019 13:37:09 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b9CM013694 for
 unknown; Mon, 24 Jun 2019 13:37:09 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b9FS013687 for
 unknown; Mon, 24 Jun 2019 13:37:09 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O4b2Tv027712	for unknown; Mon,
 24 Jun 2019 13:37:08 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id DFF1D1BF56;	Mon, 24 Jun 2019 06:37:01 +0200 (CEST)
Received: from mail-pg1-f196.google.com
 (mail-pg1-f196.google.com [209.85.215.196]) by dpdk.org (Postfix)
 with ESMTP id 34C931BF60 for <spp@dpdk.org>; Mon,
 24 Jun 2019 06:37:00 +0200 (CEST)
Received: by mail-pg1-f196.google.com with SMTP id z75so3795212pgz.5 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 21:37:00 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id c10sm9005178pjq.14.2019.06.23.21.36.58
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 21:36:59 -0700 (PDT)
Date: Mon, 24 Jun 2019 13:36:12 +0900
From: yasufum.o@gmail.com
Subject: [spp 04384] [spp] [PATCH 12/13] shared/sec: remove local funcs from
 header
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624043613.19271-13-yasufum.o@gmail.com>
In-reply-to: <20190624043613.19271-1-yasufum.o@gmail.com>
References: <20190624043613.19271-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04384
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=Cq9casTzz1rcFk6wRc3EK2mvT13LVvqwAID52zxYXhQ=;
 b=oymatwHNa5RybesXYVU4M6pOTn+YmVeFFS9pDqX3/4gxEFt6maVJqrHH9ge4jjgRzq
 8Bf9HB4jcyWx0gbcYo2jKDY57NXaNzvoD04Nu5GLWEM4pdTAjEsc0jDY0bWOB2KqaIFc
 0zvqzenIdhNhNyQUfRo6dhAozMPV/v2UxfTeaGpPCMO+F7dXFUKzoXOyvPbi8v8rkCUb
 Bl0GipVS5UPNz3WAglGzpusbpuXohPLF5nKsaIa2MhJf6fA763lf2SNyJ7v6eWxoUShh
 ObD56fw/HW2wCpueZf8ijEvSuc9EQ5qSATTFe0dXTZFrKB1dMzGaDkXT6irz9znp8Hhe F4Ew==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=Cq9casTzz1rcFk6wRc3EK2mvT13LVvqwAID52zxYXhQ=;
 b=YfyUAkIbO0ZF40CcAKcY6BGcp+S1QyElWkjSgJqs6FExCzfnxYqsDDGD2M9luTHYIm
 n8rCuZvpXCi1tso1Av5tDICURyp3UF5QPnfrkszIip2zeYQCnT1UbKupk2hZWKjRssEw
 cXw7pWQ/IgxyH6EXENTjG4ZKL+rg7ENLFhrqDKauToCUMqNec5uAGOdiu3KYSg7Mc7Zm
 KD6AqAl3lY2KtJttVzTAKn09Khp9fi+HP3NiWwoeiDbm6HMfW3ECIQArdg25T33m1aOe
 vbeyUb7WQFZ1xr2nWt9g+1Og1fN5LyeWS5ISeKClnHossnnjsQ+7a6pvA1K1f3Vw/HWk 3Igw==
X-Gm-Message-State: APjAAAXQRqCceTgQ0/Tuk6INzcb1N63nhe3yqIDv4muDRA3PZFqVHm25
 rWjQPRhcGQl0gynRDiGo0FZSO56K
X-Google-Smtp-Source:
 APXvYqzNXW/t3Uwcvi8gNBcA7LSnO+9A5tVbxx29VWr03MWfYkp4apbdMPVu9CN8GXgty5DhWJydPg==
X-Received: by 2002:a17:90a:a09:: with SMTP id
 o9mr22364694pjo.95.1561351019349; Sun, 23 Jun 2019 21:36:59 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 113
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Some of functions start with `add_` defined in `cmd_res_formatter.h` are
not used from outside. This update is to remove these functions from
header file without add_client_id() and add_classifier_table().

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../spp_worker_th/cmd_res_formatter.c         | 21 ++++++++++++++-----
 .../spp_worker_th/cmd_res_formatter.h         | 13 ------------
 2 files changed, 16 insertions(+), 18 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index ab08fcd..24b5608 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -10,6 +10,17 @@
 
 #define RTE_LOGTYPE_WK_CMD_RES_FMT RTE_LOGTYPE_USER1
 
+/* Proto type declaration for a list of operator functions. */
+static int append_result_value(const char *name, char **output, void *tmp);
+static int append_error_details_value(const char *name, char **output,
+		void *tmp);
+static int add_interface(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+static int add_master_lcore(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+static int add_core(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+
 /**
  * List of worker process type. The order of items should be same as the order
  * of enum `secondary_type` in cmd_utils.h.
@@ -78,7 +89,7 @@ struct cmd_response response_info_list[] = {
 };
 
 /* append a command result for JSON format */
-int
+static int
 append_result_value(const char *name, char **output, void *tmp)
 {
 	const struct cmd_result *result = tmp;
@@ -86,7 +97,7 @@ append_result_value(const char *name, char **output, void *tmp)
 }
 
 /* append error details for JSON format */
-int
+static int
 append_error_details_value(const char *name, char **output, void *tmp)
 {
 	int ret = SPP_RET_NG;
@@ -672,7 +683,7 @@ add_client_id(const char *name, char **output,
 }
 
 /* Add entry of port to a response in JSON such as "phy:0". */
-int
+static int
 add_interface(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
@@ -706,7 +717,7 @@ add_interface(const char *name, char **output,
 }
 
 /* Add entry of master lcore to a response in JSON. */
-int
+static int
 add_master_lcore(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
@@ -716,7 +727,7 @@ add_master_lcore(const char *name, char **output,
 }
 
 /* Add entry of core info of worker to a response in JSON such as "core:0". */
-int
+static int
 add_core(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
 {
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
index d9481e3..cf5f81b 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
@@ -32,10 +32,6 @@ struct cmd_response {
 	int (*func)(const char *name, char **output, void *tmp);
 };
 
-int append_result_value(const char *name, char **output, void *tmp);
-
-int append_error_details_value(const char *name, char **output, void *tmp);
-
 int append_interface_array(char **output, const enum port_type type);
 
 int append_process_type_value(const char *name, char **output,
@@ -82,15 +78,6 @@ int append_info_value(const char *name, char **output);
 int add_client_id(const char *name, char **output,
 		void *tmp __attribute__ ((unused)));
 
-int add_interface(const char *name, char **output,
-		void *tmp __attribute__ ((unused)));
-
-int add_master_lcore(const char *name, char **output,
-		void *tmp __attribute__ ((unused)));
-
-int add_core(const char *name, char **output,
-		void *tmp __attribute__ ((unused)));
-
 int add_classifier_table(const char *name, char **output,
 		void *tmp __attribute__ ((unused)));
 #endif
-- 
2.17.1



From spp-request@dpdk.org Mon Jun 24 13:36:58 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd101.ddreams.local
 (zssg-mailmd101.ddreams.local [10.160.123.96]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DBU65ZSMD0@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 13:37:11 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd101.ddreams.local by
 zssg-mailmd101.ddreams.local (dDREAMS) id <0PTL00Z1Y65ZTJ00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:37:11 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd101.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00KJ465ZA380@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:37:11 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf101.ddreams.local (Postfix) with ESMTP id 820397E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:37:11 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 7EA238E6058	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:37:11 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 737618E6054	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:37:11 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 0729F8E6051	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:37:10 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf101.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:37:09 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b91X008328;	Mon,
 24 Jun 2019 13:37:09 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O4b924008327;	Mon, 24 Jun 2019 13:37:09 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O4b916008324	for unknown; Mon,
 24 Jun 2019 13:37:09 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b92g013703 for
 unknown; Mon, 24 Jun 2019 13:37:09 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b9Mq013700 for
 unknown; Mon, 24 Jun 2019 13:37:09 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O4b00h027691	for unknown; Mon,
 24 Jun 2019 13:37:06 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id C27CB1BF5F	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 24 Jun 2019 06:36:59 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 31, Issue 10
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 24 Jun 2019 06:36:58 +0200
Message-id: <mailman.23382.1561351018.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH 09/13] shared/sec: move lcore funcs in
      response_info_list (yasufum.o@gmail.com)
   2. [PATCH 10/13] shared/sec: move ope cli-id in
      response_info_list (yasufum.o@gmail.com)
   3. [PATCH 11/13] shared/sec: move rest of ops in
      response_info_list (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon, 24 Jun 2019 13:36:09 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 09/13] shared/sec: move lcore funcs in
	response_info_list
Message-ID: <20190624043613.19271-10-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move operation functions for making command response
which is defined in `cmd_runner.c` to `cmd_res_formatter.c`. Operation
functions are defined as following, and this update moves
`add_master_lcore` and `add_core`. The rest of operation functions are
moved in next patches.

    struct cmd_response response_info_list[] = {
            { "client-id", add_client_id },
            { "phy", add_interface },
            { "vhost", add_interface },
            { "ring", add_interface },
            { "master-lcore", add_master_lcore},
            { "core", add_core},
    #ifdef SPP_VF_MODULE
            { "classifier_table", add_classifier_table},
    #endif /* SPP_VF_MODULE */
            { "", NULL }
    };

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../spp_worker_th/cmd_res_formatter.c         | 104 ++++++++++++++++++
 .../spp_worker_th/cmd_res_formatter.h         |   6 +
 .../secondary/spp_worker_th/cmd_runner.c      | 100 -----------------
 3 files changed, 110 insertions(+), 100 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index b94cb29..d838a18 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -4,6 +4,8 @@
 
 #include "cmd_res_formatter.h"
 #include "cmd_utils.h"
+#include "vf_deps.h"
+#include "mirror_deps.h"
 #include "shared/secondary/json_helper.h"
 
 #define RTE_LOGTYPE_WK_CMD_RES_FMT RTE_LOGTYPE_USER1
@@ -533,3 +535,105 @@ append_command_results_value(const char *name, char **output,
 	return ret;
 }
 
+/* Iterate core information to create response to status command */
+static int
+spp_iterate_core_info(struct spp_iterate_core_params *params)
+{
+	int ret;
+	int lcore_id, cnt;
+	struct core_info *core = NULL;
+	struct sppwk_comp_info *comp_info_base = NULL;
+	struct sppwk_comp_info *comp_info = NULL;
+
+	RTE_LCORE_FOREACH_SLAVE(lcore_id) {
+		if (spp_get_core_status(lcore_id) == SPP_CORE_UNUSE)
+			continue;
+
+		core = get_core_info(lcore_id);
+		if (core->num == 0) {
+			ret = (*params->element_proc)(
+				params, lcore_id,
+				"", SPPWK_TYPE_NONE_STR,
+				0, NULL, 0, NULL);
+			if (unlikely(ret != 0)) {
+				RTE_LOG(ERR, WK_CMD_RES_FMT,
+						"Cannot iterate core "
+						"information. "
+						"(core = %d, type = %d)\n",
+						lcore_id, SPPWK_TYPE_NONE);
+				return SPP_RET_NG;
+			}
+			continue;
+		}
+
+		for (cnt = 0; cnt < core->num; cnt++) {
+			sppwk_get_mng_data(NULL, NULL, &comp_info_base,
+							NULL, NULL, NULL, NULL);
+			comp_info = (comp_info_base + core->id[cnt]);
+#ifdef SPP_VF_MODULE
+			if (comp_info->wk_type == SPPWK_TYPE_CLS) {
+				ret = get_classifier_status(lcore_id,
+						core->id[cnt], params);
+			} else {
+				ret = get_forwarder_status(lcore_id,
+						core->id[cnt], params);
+			}
+#endif /* SPP_VF_MODULE */
+#ifdef SPP_MIRROR_MODULE
+			ret = get_mirror_status(lcore_id, core->id[cnt],
+					params);
+#endif /* SPP_MIRROR_MODULE */
+			if (unlikely(ret != 0)) {
+				RTE_LOG(ERR, WK_CMD_RES_FMT,
+						"Cannot iterate core "
+						"information. "
+						"(core = %d, type = %d)\n",
+						lcore_id, comp_info->wk_type);
+				return SPP_RET_NG;
+			}
+		}
+	}
+
+	return SPP_RET_OK;
+}
+
+/* Add entry of master lcore to a response in JSON. */
+int
+add_master_lcore(const char *name, char **output,
+		void *tmp __attribute__ ((unused)))
+{
+	int ret = SPP_RET_NG;
+	ret = append_json_int_value(output, name, rte_get_master_lcore());
+	return ret;
+}
+
+/* Add entry of core info of worker to a response in JSON such as "core:0". */
+int
+add_core(const char *name, char **output,
+		void *tmp __attribute__ ((unused)))
+{
+	int ret = SPP_RET_NG;
+	struct spp_iterate_core_params itr_params;
+	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = %s)\n",
+				name);
+		return SPP_RET_NG;
+	}
+
+	itr_params.output = tmp_buff;
+	itr_params.element_proc = append_core_element_value;
+
+	ret = spp_iterate_core_info(&itr_params);
+	if (unlikely(ret != SPP_RET_OK)) {
+		spp_strbuf_free(itr_params.output);
+		return SPP_RET_NG;
+	}
+
+	ret = append_json_array_brackets(output, name, itr_params.output);
+	spp_strbuf_free(itr_params.output);
+	return ret;
+}
+
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
index f3e9879..9c77763 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
@@ -72,4 +72,10 @@ int append_response_list_value(char **output, struct cmd_response *responses,
 int append_command_results_value(const char *name, char **output,
 		int num, struct cmd_result *results);
 
+int add_master_lcore(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+
+int add_core(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+
 #endif
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 5644aec..a6894fc 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -418,66 +418,6 @@ flush_cmd(void)
 	return ret;
 }
 
-/* Iterate core information to create response to status command */
-static int
-spp_iterate_core_info(struct spp_iterate_core_params *params)
-{
-	int ret;
-	int lcore_id, cnt;
-	struct core_info *core = NULL;
-	struct sppwk_comp_info *comp_info_base = NULL;
-	struct sppwk_comp_info *comp_info = NULL;
-
-	RTE_LCORE_FOREACH_SLAVE(lcore_id) {
-		if (spp_get_core_status(lcore_id) == SPP_CORE_UNUSE)
-			continue;
-
-		core = get_core_info(lcore_id);
-		if (core->num == 0) {
-			ret = (*params->element_proc)(
-				params, lcore_id,
-				"", SPPWK_TYPE_NONE_STR,
-				0, NULL, 0, NULL);
-			if (unlikely(ret != 0)) {
-				RTE_LOG(ERR, WK_CMD_RUNNER, "Cannot iterate core "
-						"information. "
-						"(core = %d, type = %d)\n",
-						lcore_id, SPPWK_TYPE_NONE);
-				return SPP_RET_NG;
-			}
-			continue;
-		}
-
-		for (cnt = 0; cnt < core->num; cnt++) {
-			sppwk_get_mng_data(NULL, NULL, &comp_info_base,
-							NULL, NULL, NULL, NULL);
-			comp_info = (comp_info_base + core->id[cnt]);
-#ifdef SPP_VF_MODULE
-			if (comp_info->wk_type == SPPWK_TYPE_CLS) {
-				ret = get_classifier_status(lcore_id,
-						core->id[cnt], params);
-			} else {
-				ret = get_forwarder_status(lcore_id,
-						core->id[cnt], params);
-			}
-#endif /* SPP_VF_MODULE */
-#ifdef SPP_MIRROR_MODULE
-			ret = get_mirror_status(lcore_id, core->id[cnt],
-					params);
-#endif /* SPP_MIRROR_MODULE */
-			if (unlikely(ret != 0)) {
-				RTE_LOG(ERR, WK_CMD_RUNNER, "Cannot iterate core "
-						"information. "
-						"(core = %d, type = %d)\n",
-						lcore_id, comp_info->wk_type);
-				return SPP_RET_NG;
-			}
-		}
-	}
-
-	return SPP_RET_OK;
-}
-
 /* Iterate classifier_table to create response to status command */
 #ifdef SPP_VF_MODULE
 static int
@@ -684,46 +624,6 @@ add_interface(const char *name, char **output,
 	return ret;
 }
 
-/* Add entry of master lcore to a response in JSON. */
-static int
-add_master_lcore(const char *name, char **output,
-		void *tmp __attribute__ ((unused)))
-{
-	int ret = SPP_RET_NG;
-	ret = append_json_int_value(output, name, rte_get_master_lcore());
-	return ret;
-}
-
-/* Add entry of core info of worker to a response in JSON such as "core:0". */
-static int
-add_core(const char *name, char **output,
-		void *tmp __attribute__ ((unused)))
-{
-	int ret = SPP_RET_NG;
-	struct spp_iterate_core_params itr_params;
-	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s)\n",
-				name);
-		return SPP_RET_NG;
-	}
-
-	itr_params.output = tmp_buff;
-	itr_params.element_proc = append_core_element_value;
-
-	ret = spp_iterate_core_info(&itr_params);
-	if (unlikely(ret != SPP_RET_OK)) {
-		spp_strbuf_free(itr_params.output);
-		return SPP_RET_NG;
-	}
-
-	ret = append_json_array_brackets(output, name, itr_params.output);
-	spp_strbuf_free(itr_params.output);
-	return ret;
-}
-
 #ifdef SPP_VF_MODULE
 /**
  * Add entries of classifier table in JSON. Before iterating the entries,
-- 
2.17.1



------------------------------

Message: 2
Date: Mon, 24 Jun 2019 13:36:10 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 10/13] shared/sec: move ope cli-id in
	response_info_list
Message-ID: <20190624043613.19271-11-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move operation functions `add_client_id` and
`add_interface` which is defined in `cmd_runner.c` to
`cmd_res_formatter.c`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../spp_worker_th/cmd_res_formatter.c         | 57 +++++++++++++++++++
 .../spp_worker_th/cmd_res_formatter.h         | 11 ++++
 .../secondary/spp_worker_th/cmd_runner.c      | 52 -----------------
 3 files changed, 68 insertions(+), 52 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index d838a18..3476580 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -597,6 +597,63 @@ spp_iterate_core_info(struct spp_iterate_core_params *params)
 	return SPP_RET_OK;
 }
 
+/* TODO(yasufum) move to another file for util funcs. */
+/* Get client ID from global command params. */
+static int
+wk_get_client_id(void)
+{
+	struct startup_param *params;
+	sppwk_get_mng_data(&params, NULL, NULL, NULL, NULL, NULL, NULL);
+	return params->client_id;
+}
+
+/**
+ * Operator functions start with prefix `add_` defined in `response_info_list`
+ * of struct `cmd_response` which are for making each of parts of command
+ * response.
+ */
+/* Add entry of client ID to a response in JSON. */
+int
+add_client_id(const char *name, char **output,
+		void *tmp __attribute__ ((unused)))
+{
+	return append_json_int_value(output, name, wk_get_client_id());
+}
+
+/* Add entry of port to a response in JSON such as "phy:0". */
+int
+add_interface(const char *name, char **output,
+		void *tmp __attribute__ ((unused)))
+{
+	int ret = SPP_RET_NG;
+	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = %s)\n",
+				name);
+		return SPP_RET_NG;
+	}
+
+	if (strcmp(name, SPP_IFTYPE_NIC_STR) == 0)
+		ret = append_interface_array(&tmp_buff, PHY);
+
+	else if (strcmp(name, SPP_IFTYPE_VHOST_STR) == 0)
+		ret = append_interface_array(&tmp_buff, VHOST);
+
+	else if (strcmp(name, SPP_IFTYPE_RING_STR) == 0)
+		ret = append_interface_array(&tmp_buff, RING);
+
+	if (unlikely(ret < SPP_RET_OK)) {
+		spp_strbuf_free(tmp_buff);
+		return SPP_RET_NG;
+	}
+
+	ret = append_json_array_brackets(output, name, tmp_buff);
+	spp_strbuf_free(tmp_buff);
+	return ret;
+}
+
 /* Add entry of master lcore to a response in JSON. */
 int
 add_master_lcore(const char *name, char **output,
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
index 9c77763..bc0109c 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
@@ -72,6 +72,17 @@ int append_response_list_value(char **output, struct cmd_response *responses,
 int append_command_results_value(const char *name, char **output,
 		int num, struct cmd_result *results);
 
+/**
+ * Operator functions start with prefix `add_` defined in `response_info_list`
+ * of struct `cmd_response` which are for making each of parts of command
+ * response.
+ */
+int add_client_id(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+
+int add_interface(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+
 int add_master_lcore(const char *name, char **output,
 		void *tmp __attribute__ ((unused)));
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index a6894fc..007d62e 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -29,16 +29,6 @@ enum cmd_res_code {
 	CMD_INVALID,
 };
 
-/* TODO(yasufum) move to another file for util funcs. */
-/* Get client ID from global command params. */
-static int
-sppwk_get_client_id(void)
-{
-	struct startup_param *params;
-	sppwk_get_mng_data(&params, NULL, NULL, NULL, NULL, NULL, NULL);
-	return params->client_id;
-}
-
 /* Update classifier table with given action, add or del. */
 static int
 update_cls_table(enum sppwk_action wk_action,
@@ -582,48 +572,6 @@ prepare_parse_err_msg(struct cmd_result *results,
 	}
 }
 
-/* Add entry of client ID to a response in JSON. */
-static int
-add_client_id(const char *name, char **output,
-		void *tmp __attribute__ ((unused)))
-{
-	return append_json_int_value(output, name, sppwk_get_client_id());
-}
-
-/* Add entry of port to a response in JSON such as "phy:0". */
-static int
-add_interface(const char *name, char **output,
-		void *tmp __attribute__ ((unused)))
-{
-	int ret = SPP_RET_NG;
-	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s)\n",
-				name);
-		return SPP_RET_NG;
-	}
-
-	if (strcmp(name, SPP_IFTYPE_NIC_STR) == 0)
-		ret = append_interface_array(&tmp_buff, PHY);
-
-	else if (strcmp(name, SPP_IFTYPE_VHOST_STR) == 0)
-		ret = append_interface_array(&tmp_buff, VHOST);
-
-	else if (strcmp(name, SPP_IFTYPE_RING_STR) == 0)
-		ret = append_interface_array(&tmp_buff, RING);
-
-	if (unlikely(ret < SPP_RET_OK)) {
-		spp_strbuf_free(tmp_buff);
-		return SPP_RET_NG;
-	}
-
-	ret = append_json_array_brackets(output, name, tmp_buff);
-	spp_strbuf_free(tmp_buff);
-	return ret;
-}
-
 #ifdef SPP_VF_MODULE
 /**
  * Add entries of classifier table in JSON. Before iterating the entries,
-- 
2.17.1



------------------------------

Message: 3
Date: Mon, 24 Jun 2019 13:36:11 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 11/13] shared/sec: move rest of ops in
	response_info_list
Message-ID: <20190624043613.19271-12-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move the rest of operation functions for making
command response which is defined in `cmd_runner.c` to
`cmd_res_formatter.c`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../spp_worker_th/cmd_res_formatter.c         | 106 +++++++++++++++++
 .../spp_worker_th/cmd_res_formatter.h         |   4 +
 .../secondary/spp_worker_th/cmd_runner.c      | 108 ------------------
 3 files changed, 110 insertions(+), 108 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index 3476580..ab08fcd 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -52,6 +52,31 @@ struct cmd_response response_result_list[] = {
 	{ "", NULL }
 };
 
+/**
+ * List of combination of tag and operator function. It is used to assemble
+ * a result of command in JSON like as following.
+ *
+ *     {
+ *         "client-id": 1,
+ *         "ports": ["phy:0", "phy:1", "vhost:0", "ring:0"],
+ *         "components": [
+ *             {
+ *                 "core": 2,
+ *                 ...
+ */
+struct cmd_response response_info_list[] = {
+	{ "client-id", add_client_id },
+	{ "phy", add_interface },
+	{ "vhost", add_interface },
+	{ "ring", add_interface },
+	{ "master-lcore", add_master_lcore},
+	{ "core", add_core},
+#ifdef SPP_VF_MODULE
+	{ "classifier_table", add_classifier_table},
+#endif /* SPP_VF_MODULE */
+	{ "", NULL }
+};
+
 /* append a command result for JSON format */
 int
 append_result_value(const char *name, char **output, void *tmp)
@@ -535,6 +560,32 @@ append_command_results_value(const char *name, char **output,
 	return ret;
 }
 
+/* append a list of status information for JSON format. */
+int
+append_info_value(const char *name, char **output)
+{
+	int ret = SPP_RET_NG;
+	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = %s)\n",
+				name);
+		return SPP_RET_NG;
+	}
+
+	ret = append_response_list_value(&tmp_buff,
+			response_info_list, NULL);
+	if (unlikely(ret < SPP_RET_OK)) {
+		spp_strbuf_free(tmp_buff);
+		return SPP_RET_NG;
+	}
+
+	ret = append_json_block_brackets(output, name, tmp_buff);
+	spp_strbuf_free(tmp_buff);
+	return ret;
+}
+
 /* Iterate core information to create response to status command */
 static int
 spp_iterate_core_info(struct spp_iterate_core_params *params)
@@ -694,3 +745,58 @@ add_core(const char *name, char **output,
 	return ret;
 }
 
+#ifdef SPP_VF_MODULE
+/* Iterate classifier_table to create response to status command */
+static int
+_add_classifier_table(
+		struct spp_iterate_classifier_table_params *params)
+{
+	int ret;
+
+	ret = add_classifier_table_val(params);
+	if (unlikely(ret != 0)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				"Cannot iterate classifier_mac_table.\n");
+		return SPP_RET_NG;
+	}
+
+	return SPP_RET_OK;
+}
+
+/**
+ * Add entries of classifier table in JSON. Before iterating the entries,
+ * this function calls several nested functions.
+ *   add_classifier_table()  // This function.
+ *     -> _add_classifier_table()  // Wrapper and doesn't almost nothing.
+ *       -> add_classifier_table_val()  // Setup data and call iterator.
+ *         -> iterate_adding_mac_entry()
+ */
+int
+add_classifier_table(const char *name, char **output,
+		void *tmp __attribute__ ((unused)))
+{
+	int ret = SPP_RET_NG;
+	struct spp_iterate_classifier_table_params itr_params;
+	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = %s)\n",
+				name);
+		return SPP_RET_NG;
+	}
+
+	itr_params.output = tmp_buff;
+	itr_params.element_proc = append_classifier_element_value;
+
+	ret = _add_classifier_table(&itr_params);
+	if (unlikely(ret != SPP_RET_OK)) {
+		spp_strbuf_free(itr_params.output);
+		return SPP_RET_NG;
+	}
+
+	ret = append_json_array_brackets(output, name, itr_params.output);
+	spp_strbuf_free(itr_params.output);
+	return ret;
+}
+#endif /* SPP_VF_MODULE */
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
index bc0109c..d9481e3 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
@@ -72,6 +72,8 @@ int append_response_list_value(char **output, struct cmd_response *responses,
 int append_command_results_value(const char *name, char **output,
 		int num, struct cmd_result *results);
 
+int append_info_value(const char *name, char **output);
+
 /**
  * Operator functions start with prefix `add_` defined in `response_info_list`
  * of struct `cmd_response` which are for making each of parts of command
@@ -89,4 +91,6 @@ int add_master_lcore(const char *name, char **output,
 int add_core(const char *name, char **output,
 		void *tmp __attribute__ ((unused)));
 
+int add_classifier_table(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
 #endif
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 007d62e..7c4c91c 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -408,24 +408,6 @@ flush_cmd(void)
 	return ret;
 }
 
-/* Iterate classifier_table to create response to status command */
-#ifdef SPP_VF_MODULE
-static int
-_add_classifier_table(
-		struct spp_iterate_classifier_table_params *params)
-{
-	int ret;
-
-	ret = add_classifier_table_val(params);
-	if (unlikely(ret != 0)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER, "Cannot iterate classifier_mac_table.\n");
-		return SPP_RET_NG;
-	}
-
-	return SPP_RET_OK;
-}
-#endif /* SPP_VF_MODULE */
-
 /* Execute one command. */
 static int
 exec_one_cmd(const struct sppwk_cmd_attrs *cmd)
@@ -572,96 +554,6 @@ prepare_parse_err_msg(struct cmd_result *results,
 	}
 }
 
-#ifdef SPP_VF_MODULE
-/**
- * Add entries of classifier table in JSON. Before iterating the entries,
- * this function calls several nested functions.
- *   add_classifier_table()  // This function.
- *     -> _add_classifier_table()  // Wrapper and doesn't almost nothing.
- *       -> add_classifier_table_val()  // Setup data and call iterator.
- *         -> iterate_adding_mac_entry()
- */
-static int
-add_classifier_table(const char *name, char **output,
-		void *tmp __attribute__ ((unused)))
-{
-	int ret = SPP_RET_NG;
-	struct spp_iterate_classifier_table_params itr_params;
-	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s)\n",
-				name);
-		return SPP_RET_NG;
-	}
-
-	itr_params.output = tmp_buff;
-	itr_params.element_proc = append_classifier_element_value;
-
-	ret = _add_classifier_table(&itr_params);
-	if (unlikely(ret != SPP_RET_OK)) {
-		spp_strbuf_free(itr_params.output);
-		return SPP_RET_NG;
-	}
-
-	ret = append_json_array_brackets(output, name, itr_params.output);
-	spp_strbuf_free(itr_params.output);
-	return ret;
-}
-#endif /* SPP_VF_MODULE */
-
-/**
- * List of combination of tag and operator function. It is used to assemble
- * a result of command in JSON like as following.
- *
- *     {
- *         "client-id": 1,
- *         "ports": ["phy:0", "phy:1", "vhost:0", "ring:0"],
- *         "components": [
- *             {
- *                 "core": 2,
- *                 ...
- */
-struct cmd_response response_info_list[] = {
-	{ "client-id", add_client_id },
-	{ "phy", add_interface },
-	{ "vhost", add_interface },
-	{ "ring", add_interface },
-	{ "master-lcore", add_master_lcore},
-	{ "core", add_core},
-#ifdef SPP_VF_MODULE
-	{ "classifier_table", add_classifier_table},
-#endif /* SPP_VF_MODULE */
-	{ "", NULL }
-};
-
-/* append a list of status information for JSON format. */
-static int
-append_info_value(const char *name, char **output)
-{
-	int ret = SPP_RET_NG;
-	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s)\n",
-				name);
-		return SPP_RET_NG;
-	}
-
-	ret = append_response_list_value(&tmp_buff,
-			response_info_list, NULL);
-	if (unlikely(ret < SPP_RET_OK)) {
-		spp_strbuf_free(tmp_buff);
-		return SPP_RET_NG;
-	}
-
-	ret = append_json_block_brackets(output, name, tmp_buff);
-	spp_strbuf_free(tmp_buff);
-	return ret;
-}
-
 /* send response for decode error */
 static void
 send_decode_error_response(int *sock,
-- 
2.17.1



End of spp Digest, Vol 31, Issue 10
***********************************


From yasufum.o@gmail.com Mon Jun 24 13:36:13 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DD4663SMD0@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 13:37:15 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTL00412663RH00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:37:15 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00V0D6638YD0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:37:15 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id 2EA577E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:37:15 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 2D9AC8E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:37:15 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 213F68E6063	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:37:15 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id C60038E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:37:13 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:37:13 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4bDrL008342;	Mon,
 24 Jun 2019 13:37:13 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O4bDuq008341;	Mon, 24 Jun 2019 13:37:13 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O4bDZ3008338	for unknown; Mon,
 24 Jun 2019 13:37:13 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4bDhq016736 for
 unknown; Mon, 24 Jun 2019 13:37:13 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4bDRX016733; Mon,
 24 Jun 2019 13:37:13 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4bC8h030614;	Mon,
 24 Jun 2019 13:37:12 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O4bCr6030610	for unknown; Mon, 24 Jun 2019 13:37:12 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4bCfg013741 for
 unknown; Mon, 24 Jun 2019 13:37:12 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4bCYd013735 for
 unknown; Mon, 24 Jun 2019 13:37:12 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O4b5tF027733	for unknown; Mon,
 24 Jun 2019 13:37:11 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id EFC041BF57;	Mon, 24 Jun 2019 06:37:03 +0200 (CEST)
Received: from mail-pf1-f194.google.com
 (mail-pf1-f194.google.com [209.85.210.194]) by dpdk.org (Postfix)
 with ESMTP id DA65B1BF2C for <spp@dpdk.org>; Mon,
 24 Jun 2019 06:37:02 +0200 (CEST)
Received: by mail-pf1-f194.google.com with SMTP id 19so6761860pfa.4 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 21:37:02 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id c10sm9005178pjq.14.2019.06.23.21.37.00
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 21:37:01 -0700 (PDT)
Date: Mon, 24 Jun 2019 13:36:13 +0900
From: yasufum.o@gmail.com
Subject: [spp 04385] [spp] [PATCH 13/13] shared/sec: refactor comments for JSON
 formatter
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624043613.19271-14-yasufum.o@gmail.com>
In-reply-to: <20190624043613.19271-1-yasufum.o@gmail.com>
References: <20190624043613.19271-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04385
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=TiWgQsR7GcNmo5MJra+jDG9Y5XrcOJ0er+dtakWk4lM=;
 b=lDfGY5n3lAXBivFueVZPQ7jhh41y6B2j3SFqFpLWlSWxDUZHEt5EIS9bKJh241Y/Or
 s6kQZ5BW51iKVkGrN+uIs+K4qIWKRR9iJu8xJZLHe5kFyEmbK0yryyfZ/3S2wN1BvCTZ
 9ACkuW1SMbcoy/DrkDi7E5xAw00rHjTdYaTbTayaEPjjrTmW0ZeJcerkSPn021tJPvNI
 WFXY37h8hOkh8TxN76IaOdRQ0S8aOTQGl67dCT4vEIk2RiYiB1lOvZS+PirASgpI49x7
 JI02MO3Dc8nM+vfMX2SblRjlMprGiGPTAQYUEVYl5jTdRZJpu8u9t5X4o+ct+flphGNC L6gg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=TiWgQsR7GcNmo5MJra+jDG9Y5XrcOJ0er+dtakWk4lM=;
 b=W60Bxp4MMfaEKd29dwmRPJ354mtdteh0UaGzYu4Q+PYL23FvjASdXc9CbbXH8WTxIw
 utHN0K/x/kTtGG8NpWFJU1PJbVl3qCf7+guncfl0MyQBCvo9hhlERyogXvnDn22ykn/Q
 BQUWfUi2Ik5USny9JOvohiqjrECx/+dfD/z7dri4hn+ovf09mNdXADzbBlzWvzi7hZ7x
 9WMc8cKvTZiQq4xyld7IGxLCnGEXgfnEeCqQ36bLTH+OzqTLiQir/fkgoAULm5PEWQsX
 iJhPunTnvvDxKFCmAOD1kmavO4RDNDEiK2xa2+7LGnj4UVUn0QlbDJZHF+Hr1uM993rn M7vA==
X-Gm-Message-State: APjAAAUlqnDNkJErzkO7b0YXzDgwoJLuz3JbY44U0tQ5DgrpGgELF0bt
 ATktTlBSNo4iAEmJDBzixC6LyM3F
X-Google-Smtp-Source:
 APXvYqx9iiXoANyIGzFKvIj7o5/vImiRHsaUQXpm+IwO69P1FOzkr1hAAyROGeHYCo8Giswsvj74qw==
X-Received: by 2002:a65:6102:: with SMTP id z2mr29989134pgu.194.1561351022009;
 Sun, 23 Jun 2019 21:37:02 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 195
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to refactor comments for JSON formatter.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../spp_worker_th/cmd_res_formatter.c         | 68 ++++++++++++-------
 1 file changed, 43 insertions(+), 25 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index 24b5608..21024b9 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -88,7 +88,7 @@ struct cmd_response response_info_list[] = {
 	{ "", NULL }
 };
 
-/* append a command result for JSON format */
+/* Append a command result in JSON format. */
 static int
 append_result_value(const char *name, char **output, void *tmp)
 {
@@ -96,7 +96,7 @@ append_result_value(const char *name, char **output, void *tmp)
 	return append_json_str_value(output, name, result->result);
 }
 
-/* append error details for JSON format */
+/* Append error details in JSON format. */
 static int
 append_error_details_value(const char *name, char **output, void *tmp)
 {
@@ -110,9 +110,7 @@ append_error_details_value(const char *name, char **output, void *tmp)
 	tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
 	if (unlikely(tmp_buff == NULL)) {
 		RTE_LOG(ERR, WK_CMD_RES_FMT,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s)\n",
-				name);
+				"Fail to alloc buf for `%s`.\n", name);
 		return SPP_RET_NG;
 	}
 
@@ -135,7 +133,7 @@ is_port_flushed(enum port_type iface_type, int iface_no)
 	return port->ethdev_port_id >= 0;
 }
 
-/* append a list of interface numbers */
+/* Append index number as comma separated format such as `0, 1, ...`. */
 int
 append_interface_array(char **output, const enum port_type type)
 {
@@ -151,14 +149,12 @@ append_interface_array(char **output, const enum port_type type)
 		*output = spp_strbuf_append(*output, tmp_str, strlen(tmp_str));
 		if (unlikely(*output == NULL)) {
 			RTE_LOG(ERR, WK_CMD_RES_FMT,
-					"Interface number failed to add. "
-					"(type = %d)\n", type);
+				/* TODO(yasufum) replace %d to string. */
+				"Failed to add index for type `%d`.\n", type);
 			return SPP_RET_NG;
 		}
-
 		port_cnt++;
 	}
-
 	return SPP_RET_OK;
 }
 
@@ -519,7 +515,10 @@ append_response_list_value(char **output, struct cmd_response *responses,
 	return SPP_RET_OK;
 }
 
-/* append a list of command results for JSON format. */
+/**
+ * Setup `results` section in JSON msg. This is an example.
+ *   "results": [ { "result": "success" } ]
+ */
 int
 append_command_results_value(const char *name, char **output,
 		int num, struct cmd_result *results)
@@ -527,27 +526,26 @@ append_command_results_value(const char *name, char **output,
 	int ret = SPP_RET_NG;
 	int i;
 	char *tmp_buff1, *tmp_buff2;
+
+	/* Setup result statement step by step with two buffers. */
 	tmp_buff1 = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
 	if (unlikely(tmp_buff1 == NULL)) {
 		RTE_LOG(ERR, WK_CMD_RES_FMT,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s, buff=1)\n",
-				name);
+				"Faield to alloc 1st buf for `%s`.\n", name);
 		return SPP_RET_NG;
 	}
-
 	tmp_buff2 = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
 	if (unlikely(tmp_buff2 == NULL)) {
 		spp_strbuf_free(tmp_buff1);
 		RTE_LOG(ERR, WK_CMD_RES_FMT,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s, buff=2)\n",
-				name);
+				"Faield to alloc 2nd buf for `%s`.\n", name);
 		return SPP_RET_NG;
 	}
 
 	for (i = 0; i < num; i++) {
 		tmp_buff1[0] = '\0';
+
+		/* Setup key-val pair such as `"result": "success"` */
 		ret = append_response_list_value(&tmp_buff1,
 				response_result_list, &results[i]);
 		if (unlikely(ret < 0)) {
@@ -556,22 +554,41 @@ append_command_results_value(const char *name, char **output,
 			return SPP_RET_NG;
 		}
 
+		/* Surround key-val pair such as `{ "result": "success" }`. */
 		ret = append_json_block_brackets(&tmp_buff2, "", tmp_buff1);
 		if (unlikely(ret < 0)) {
 			spp_strbuf_free(tmp_buff1);
 			spp_strbuf_free(tmp_buff2);
 			return SPP_RET_NG;
 		}
-
 	}
 
+	/**
+	 * Setup result statement such as
+	 * `"results": [ { "result": "success" } ]`.
+	 */
 	ret = append_json_array_brackets(output, name, tmp_buff2);
+
 	spp_strbuf_free(tmp_buff1);
 	spp_strbuf_free(tmp_buff2);
 	return ret;
 }
 
-/* append a list of status information for JSON format. */
+/**
+ * Setup response of `status` command.
+ *
+ * This is an example of the response.
+ *   "results": [ { "result": "success" } ],
+ *   "info": {
+ *       "client-id": 2,
+ *       "phy": [ 0, 1 ], "vhost": [  ], "ring": [  ],
+ *       "master-lcore": 1,
+ *       "core": [
+ *           {"core": 2, "type": "unuse"}, {"core": 3, "type": "unuse"}, ...
+ *       ],
+ *       "classifier_table": [  ]
+ *   }
+ */
 int
 append_info_value(const char *name, char **output)
 {
@@ -579,19 +596,19 @@ append_info_value(const char *name, char **output)
 	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
 	if (unlikely(tmp_buff == NULL)) {
 		RTE_LOG(ERR, WK_CMD_RES_FMT,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s)\n",
+				"Failed to get empty buf for append `%s`.\n",
 				name);
 		return SPP_RET_NG;
 	}
 
-	ret = append_response_list_value(&tmp_buff,
-			response_info_list, NULL);
+	/* Setup JSON msg in value of `info` key. */
+	ret = append_response_list_value(&tmp_buff, response_info_list, NULL);
 	if (unlikely(ret < SPP_RET_OK)) {
 		spp_strbuf_free(tmp_buff);
 		return SPP_RET_NG;
 	}
 
+	/* Setup response of JSON msg. */
 	ret = append_json_block_brackets(output, name, tmp_buff);
 	spp_strbuf_free(tmp_buff);
 	return ret;
@@ -674,7 +691,8 @@ wk_get_client_id(void)
  * of struct `cmd_response` which are for making each of parts of command
  * response.
  */
-/* Add entry of client ID to a response in JSON. */
+
+/* Add entry of client ID such as `"client-id": 1` to a response in JSON. */
 int
 add_client_id(const char *name, char **output,
 		void *tmp __attribute__ ((unused)))
-- 
2.17.1



From yasufum.o@gmail.com Mon Jul 01 13:11:07 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTY00XGZ3N71U10@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 01 Jul 2019 13:11:31 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTY00W263N6VA00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:11:30 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTY00ART3N6M8C0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:11:30 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf106.ddreams.local (Postfix) with ESMTP id EA0857E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:11:30 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id E8E018E6042	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:11:30 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id DDB068E6057	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:11:30 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 7BEBD8E6042	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:11:29 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf106.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:11:29 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BTvO015355;	Mon,
 1 Jul 2019 13:11:29 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x614BTfj015354;	Mon, 1 Jul 2019 13:11:29 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x614BTqK015351	for unknown; Mon,
 1 Jul 2019 13:11:29 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BSsh029367 for
 unknown; Mon, 1 Jul 2019 13:11:28 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BSHK029356; Mon,
 1 Jul 2019 13:11:28 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BR3i019604;	Mon,
 1 Jul 2019 13:11:27 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x614BRQD019600	for unknown; Mon, 1 Jul 2019 13:11:27 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BRVx024954 for
 unknown; Mon, 1 Jul 2019 13:11:27 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BRsE024946 for
 unknown; Mon, 1 Jul 2019 13:11:27 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x614BJHn006657	for unknown; Mon,
 1 Jul 2019 13:11:25 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 571AE31FC;	Mon,  1 Jul 2019 06:11:17 +0200 (CEST)
Received: from mail-pf1-f194.google.com
 (mail-pf1-f194.google.com [209.85.210.194]) by dpdk.org (Postfix)
 with ESMTP id 146062AB for <spp@dpdk.org>; Mon,
 1 Jul 2019 06:11:16 +0200 (CEST)
Received: by mail-pf1-f194.google.com with SMTP id q10so5858826pff.9 for
 <spp@dpdk.org>; Sun, 30 Jun 2019 21:11:15 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id p6sm7744955pgs.77.2019.06.30.21.11.13
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 30 Jun 2019 21:11:14 -0700 (PDT)
Date: Mon, 01 Jul 2019 13:11:07 +0900
From: yasufum.o@gmail.com
Subject: [spp 04453] [spp] [PATCH] shared/sec: rename members of enum
 sppwk_port_ops
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190701041107.33893-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04453
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=zpJjzDU8VvqvTbLPr88WW+EkctWikWWfCOuKd4jw96E=;
 b=njTTzmwrtLkxfHzsZRR1dBOrTG6zkCtpJBkK9t/JYEpfB5CxmXYVJSagDmZgvl3qnJ
 5YmBd09x6eNdYIsdoqaPIdI7BFwGCzTxhmnKjz0Qam676HwtH3tBsOoVcS88Daglax1N
 4dKaxOs9lPMcyL0cgQ8n9SJu+J+LVqFldAJXjEQlOybxmbCITfIFgClqi2+Itb8tyryD
 7vXYci8rZM79Ii2W1dtmbPACp4dpBKmve+1xzEKhnrsxXzg6A6/lsBaARA86g/PwSnl7
 NuwKRn8Y8tuYKPB9y7mkmxByc/JEncyTy2L4kYMhnBOBAgbz/vRRO3+YhDMWDD1TOqgq iZXw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=zpJjzDU8VvqvTbLPr88WW+EkctWikWWfCOuKd4jw96E=;
 b=BnHv5R3XWLWl2bXHZ7GfJYTm1Wjadx2gN1cCpROfHDR2OS7/LOWOYutcfLnswRl0HE
 6CX1Y0zJZ3XohfzYcMeczDm/KimgR5djEiV+LqmaYmjIXeL4GlYThK3n6AR7BKD7qzu/
 0yS8mzYHTr+2qNuEmUEao4xx4ngVwZ5v3r3gzY0LgO5SWvGDSR1HQmLk7yGM6sNQxE0p
 pFERi36PREPiRfk82ZMYl521oAtEi8Thl98ALDGlwebnKhXcJ5mM10SDqqcoo/c1lIgy
 lztAHe/0Qjd9S0kScRUunVuth9oICCwzGCnVacB3WtTKxvzXdOaa9uWkx4grGcuJcnDc sh3Q==
X-Gm-Message-State: APjAAAWXaYONCpqPj3+iSMmye+PjBQxM3bbAwNH2fPPCwigWUPSoywd4
 0XpuAuVQPCxBVGjgI16SIgZvsqgc
X-Google-Smtp-Source:
 APXvYqyMm7GlxsPfrxS0XjkGNU+4TllTYQDp7Idvpovz6jp8eJe7R3bJC1VGvnOpUGEwZo9xLRQjMQ==
X-Received: by 2002:a63:5045:: with SMTP id q5mr21489604pgl.380.1561954274974;
 Sun, 30 Jun 2019 21:11:14 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 230
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Name of Members of enum `sppwk_port_ops` such as
`SPPWK_PORT_ABL_OPS_ADD_VLANTAG` or `SPPWK_PORT_ABL_OPS_DEL_VLANTAG`
are too long. It is enough, for example `SPPWK_PORT_OPS_ADD_VLAN` or
so.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/mir_cmd_runner.c                            | 10 +++++-----
 src/pcap/cmd_utils.h                                   |  6 +++---
 src/shared/secondary/spp_worker_th/cmd_parser.c        |  8 ++++----
 src/shared/secondary/spp_worker_th/cmd_res_formatter.c |  6 +++---
 src/shared/secondary/spp_worker_th/cmd_utils.h         |  6 +++---
 src/shared/secondary/spp_worker_th/spp_port.c          |  8 ++++----
 src/vf/vf_cmd_runner.c                                 | 10 +++++-----
 7 files changed, 27 insertions(+), 27 deletions(-)

diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index 307b3f6..2f63f77 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -176,10 +176,10 @@ update_port(enum sppwk_action wk_action,
 		if (port_idx >= SPP_RET_OK) {
 			/* registered */
 			/* TODO(yasufum) confirm it is needed for spp_mirror. */
-			if (port_attrs->ops == SPPWK_PORT_ABL_OPS_ADD_VLANTAG) {
+			if (port_attrs->ops == SPPWK_PORT_OPS_ADD_VLAN) {
 				while ((cnt < PORT_ABL_MAX) &&
 					    (port_info->port_attrs[cnt].ops !=
-					    SPPWK_PORT_ABL_OPS_ADD_VLANTAG))
+					    SPPWK_PORT_OPS_ADD_VLAN))
 					cnt++;
 				if (cnt >= PORT_ABL_MAX) {
 					RTE_LOG(ERR, MIR_CMD_RUNNER, "update VLAN tag "
@@ -201,10 +201,10 @@ update_port(enum sppwk_action wk_action,
 			return SPP_RET_NG;
 		}
 
-		if (port_attrs->ops != SPPWK_PORT_ABL_OPS_NONE) {
+		if (port_attrs->ops != SPPWK_PORT_OPS_NONE) {
 			while ((cnt < PORT_ABL_MAX) &&
 					(port_info->port_attrs[cnt].ops !=
-					SPPWK_PORT_ABL_OPS_NONE)) {
+					SPPWK_PORT_OPS_NONE)) {
 				cnt++;
 			}
 			if (cnt >= PORT_ABL_MAX) {
@@ -226,7 +226,7 @@ update_port(enum sppwk_action wk_action,
 	case SPPWK_ACT_DEL:
 		for (cnt = 0; cnt < PORT_ABL_MAX; cnt++) {
 			if (port_info->port_attrs[cnt].ops ==
-					SPPWK_PORT_ABL_OPS_NONE)
+					SPPWK_PORT_OPS_NONE)
 				continue;
 
 			if (port_info->port_attrs[cnt].dir == dir)
diff --git a/src/pcap/cmd_utils.h b/src/pcap/cmd_utils.h
index e3714a5..f2cb9ef 100644
--- a/src/pcap/cmd_utils.h
+++ b/src/pcap/cmd_utils.h
@@ -76,9 +76,9 @@ enum sppwk_worker_type {
  * (e.g. add vlan tag or delete vlan tag)
  */
 enum sppwk_port_ops {
-	SPPWK_PORT_ABL_OPS_NONE,
-	SPPWK_PORT_ABL_OPS_ADD_VLANTAG,
-	SPPWK_PORT_ABL_OPS_DEL_VLANTAG,
+	SPPWK_PORT_OPS_NONE,
+	SPPWK_PORT_OPS_ADD_VLAN,  /* Add vlan tag. */
+	SPPWK_PORT_OPS_DEL_VLAN,  /* Delete vlan tag. */
 };
 
 /* getopt_long return value for long option */
diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.c b/src/shared/secondary/spp_worker_th/cmd_parser.c
index 7933ed2..84de7e4 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.c
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.c
@@ -543,7 +543,7 @@ parse_port_vlan_ops(void *output, const char *arg_val,
 	struct sppwk_port_attrs *port_attrs = &port->port_attrs;
 
 	switch (port_attrs->ops) {
-	case SPPWK_PORT_ABL_OPS_NONE:
+	case SPPWK_PORT_OPS_NONE:
 		ret = get_list_idx(arg_val, PORT_ABILITY_LIST);
 		if (unlikely(ret <= 0)) {
 			RTE_LOG(ERR, WK_CMD_PARSER,
@@ -554,7 +554,7 @@ parse_port_vlan_ops(void *output, const char *arg_val,
 		port_attrs->ops = ret;
 		port_attrs->dir = port->dir;
 		break;
-	case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
+	case SPPWK_PORT_OPS_ADD_VLAN:
 		/* Nothing to do. */
 		break;
 	default:
@@ -575,7 +575,7 @@ parse_port_vid(void *output, const char *arg_val,
 	struct sppwk_port_attrs *port_attrs = &port->port_attrs;
 
 	switch (port_attrs->ops) {
-	case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
+	case SPPWK_PORT_OPS_ADD_VLAN:
 		vlan_id = get_int_in_range(&port_attrs->capability.vlantag.vid,
 			arg_val, 0, ETH_VLAN_ID_MAX);
 		if (unlikely(vlan_id < SPP_RET_OK)) {
@@ -604,7 +604,7 @@ parse_port_pcp(void *output, const char *arg_val,
 	struct sppwk_port_attrs *port_attrs = &port->port_attrs;
 
 	switch (port_attrs->ops) {
-	case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
+	case SPPWK_PORT_OPS_ADD_VLAN:
 		pcp = get_int_in_range(&port_attrs->capability.vlantag.pcp,
 				arg_val, 0, SPP_VLAN_PCP_MAX);
 		if (unlikely(pcp < SPP_RET_OK)) {
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index c18f8e5..73ef4c2 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -157,8 +157,8 @@ append_vlan_block(const char *name, char **output,
 	spp_port_ability_get_info(port_id, dir, &port_attrs);
 	for (i = 0; i < PORT_ABL_MAX; i++) {
 		switch (port_attrs[i].ops) {
-		case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
-		case SPPWK_PORT_ABL_OPS_DEL_VLANTAG:
+		case SPPWK_PORT_OPS_ADD_VLAN:
+		case SPPWK_PORT_OPS_DEL_VLAN:
 			ret = append_vlan_value(&tmp_buff, port_attrs[i].ops,
 					port_attrs[i].capability.vlantag.vid,
 					port_attrs[i].capability.vlantag.pcp);
@@ -178,7 +178,7 @@ append_vlan_block(const char *name, char **output,
 		}
 	}
 	if (i == PORT_ABL_MAX) {
-		ret = append_vlan_value(&tmp_buff, SPPWK_PORT_ABL_OPS_NONE,
+		ret = append_vlan_value(&tmp_buff, SPPWK_PORT_OPS_NONE,
 				0, 0);
 		if (unlikely(ret < SPP_RET_OK))
 			return SPP_RET_NG;
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 69e0a69..1d32228 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -113,9 +113,9 @@ enum sppwk_port_dir {
  * (e.g. add vlan tag or delete vlan tag)
  */
 enum sppwk_port_ops {
-	SPPWK_PORT_ABL_OPS_NONE,
-	SPPWK_PORT_ABL_OPS_ADD_VLANTAG,
-	SPPWK_PORT_ABL_OPS_DEL_VLANTAG,
+	SPPWK_PORT_OPS_NONE,
+	SPPWK_PORT_OPS_ADD_VLAN,  /* Add vlan tag. */
+	SPPWK_PORT_OPS_DEL_VLAN,  /* Delete vlan tag. */
 };
 
 /* getopt_long return value for long option */
diff --git a/src/shared/secondary/spp_worker_th/spp_port.c b/src/shared/secondary/spp_worker_th/spp_port.c
index cc87200..6fe0dc5 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.c
+++ b/src/shared/secondary/spp_worker_th/spp_port.c
@@ -276,12 +276,12 @@ port_ability_set_ability(struct sppwk_port_info *port,
 				sizeof(struct sppwk_port_attrs));
 
 		switch (port_attrs_out[out_cnt].ops) {
-		case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
+		case SPPWK_PORT_OPS_ADD_VLAN:
 			tag = &port_attrs_out[out_cnt].capability.vlantag;
 			tag->tci = rte_cpu_to_be_16(SPP_VLANTAG_CALC_TCI(
 					tag->vid, tag->pcp));
 			break;
-		case SPPWK_PORT_ABL_OPS_DEL_VLANTAG:
+		case SPPWK_PORT_OPS_DEL_VLAN:
 		default:
 			/* Nothing to do. */
 			break;
@@ -335,11 +335,11 @@ port_ability_each_operation(uint16_t port_id,
 	struct sppwk_port_attrs *port_attrs = NULL;
 
 	spp_port_ability_get_info(port_id, dir, &port_attrs);
-	if (unlikely(port_attrs[0].ops == SPPWK_PORT_ABL_OPS_NONE))
+	if (unlikely(port_attrs[0].ops == SPPWK_PORT_OPS_NONE))
 		return nb_pkts;
 
 	for (cnt = 0; cnt < PORT_ABL_MAX; cnt++) {
-		if (port_attrs[cnt].ops == SPPWK_PORT_ABL_OPS_NONE)
+		if (port_attrs[cnt].ops == SPPWK_PORT_OPS_NONE)
 			break;
 
 		ok_pkts = port_ability_function_list[port_attrs[cnt].ops](
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index e9388e0..fe37a19 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -297,10 +297,10 @@ update_port(enum sppwk_action wk_action,
 		port_idx = get_idx_port_info(port_info, *nof_ports, ports);
 		if (port_idx >= SPP_RET_OK) {
 			/* registered */
-			if (port_attrs->ops == SPPWK_PORT_ABL_OPS_ADD_VLANTAG) {
+			if (port_attrs->ops == SPPWK_PORT_OPS_ADD_VLAN) {
 				while ((cnt < PORT_ABL_MAX) &&
 					    (port_info->port_attrs[cnt].ops !=
-					    SPPWK_PORT_ABL_OPS_ADD_VLANTAG))
+					    SPPWK_PORT_OPS_ADD_VLAN))
 					cnt++;
 				if (cnt >= PORT_ABL_MAX) {
 					RTE_LOG(ERR, VF_CMD_RUNNER, "update VLAN tag "
@@ -322,10 +322,10 @@ update_port(enum sppwk_action wk_action,
 			return SPP_RET_NG;
 		}
 
-		if (port_attrs->ops != SPPWK_PORT_ABL_OPS_NONE) {
+		if (port_attrs->ops != SPPWK_PORT_OPS_NONE) {
 			while ((cnt < PORT_ABL_MAX) &&
 					(port_info->port_attrs[cnt].ops !=
-					SPPWK_PORT_ABL_OPS_NONE)) {
+					SPPWK_PORT_OPS_NONE)) {
 				cnt++;
 			}
 			if (cnt >= PORT_ABL_MAX) {
@@ -347,7 +347,7 @@ update_port(enum sppwk_action wk_action,
 	case SPPWK_ACT_DEL:
 		for (cnt = 0; cnt < PORT_ABL_MAX; cnt++) {
 			if (port_info->port_attrs[cnt].ops ==
-					SPPWK_PORT_ABL_OPS_NONE)
+					SPPWK_PORT_OPS_NONE)
 				continue;
 
 			if (port_info->port_attrs[cnt].dir == dir)
-- 
2.17.1



From yasufum.o@gmail.com Mon Jul 01 13:11:22 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd106.ddreams.local
 (zssg-mailmd106.ddreams.local [10.160.123.101])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTY00XKT3NI1U10@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 01 Jul 2019 13:11:42 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd106.ddreams.local by
 zssg-mailmd106.ddreams.local (dDREAMS) id <0PTY00J4A3NIXV00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:11:42 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd106.ddreams.local
 (dDREAMS) with ESMTP id <0PTY001NW3NIVYA0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:11:42 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id 8D5B87E603A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:11:42 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 8CDBB8E6052	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:11:42 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 8B0FF8E6055	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:11:42 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id DA6AE8E6052	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:11:41 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:11:41 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614Bf3L015479;	Mon,
 1 Jul 2019 13:11:41 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x614BfiD015475;	Mon, 1 Jul 2019 13:11:41 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x614Bfqd015467	for unknown; Mon,
 1 Jul 2019 13:11:41 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BfdB029589 for
 unknown; Mon, 1 Jul 2019 13:11:41 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614Bf9I029586; Mon,
 1 Jul 2019 13:11:41 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BfxT019643;	Mon,
 1 Jul 2019 13:11:41 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x614Be83019639	for unknown; Mon, 1 Jul 2019 13:11:40 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614Beb2025051 for
 unknown; Mon, 1 Jul 2019 13:11:40 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614Bedo025045 for
 unknown; Mon, 1 Jul 2019 13:11:40 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x614BXUg006724	for unknown; Mon,
 1 Jul 2019 13:11:39 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 6CF0331FC;	Mon,  1 Jul 2019 06:11:33 +0200 (CEST)
Received: from mail-pf1-f173.google.com
 (mail-pf1-f173.google.com [209.85.210.173]) by dpdk.org (Postfix)
 with ESMTP id 351CE2AB for <spp@dpdk.org>; Mon,
 1 Jul 2019 06:11:32 +0200 (CEST)
Received: by mail-pf1-f173.google.com with SMTP id i189so5850985pfg.10 for
 <spp@dpdk.org>; Sun, 30 Jun 2019 21:11:32 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id o128sm12190907pfb.42.2019.06.30.21.11.29
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 30 Jun 2019 21:11:30 -0700 (PDT)
Date: Mon, 01 Jul 2019 13:11:22 +0900
From: yasufum.o@gmail.com
Subject: [spp 04454] [spp] [PATCH 0/4] Add specific RX and TX burst functions
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190701041126.33947-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04454
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=nl/Gf6FrmHfiok5cpYFfTfD/GHUr0cdIWTsKf4RklmE=;
 b=d4amVns0HF6g8MDsOIFeN+2mL6QxgHwmC3EDuicHl5+PBLn6Mk88d9vvjjwpIe06a4
 BOb/zyrR2+je+L2oG60JqVgDldE1lHIdYOcv43L87hkU4JO3erHHtrB30ErmJeQmymK/
 Od/U4+seDTXPkOX3wJBF1qjqWfMZn5R/W/PIGS1gbRPmXZ6Mt9tp0imnfin3UXkgGCbf
 SoYBdYgZcbzbvkC1D5njWTGvNsqiybKbVlHjkUlR7+C/hIFLDKDmMKoRsyOTsUF2hKb3
 lDctfwQR74vCKHot6wRFhkMlWV8OM+boKVpdD63S3BlAc7w3pkl8zxa78XiZNIxCy9ZQ x8pg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=nl/Gf6FrmHfiok5cpYFfTfD/GHUr0cdIWTsKf4RklmE=;
 b=pjdzgS4qKMy/Njaygm7detyvt3g1GWXl5rVh3lnAW7xcHiXM8Qk+lVWu4IQXhIRJkP
 4yMMha3kBP6xCV2Djw4a+Jsm3kt8xC7vV6izaL47uIomBPeE2qvmEd27H7CubGy4WqiO
 6dBmeFaVXa0RpRYVHem24Wu4Zc7JUanqhxf6lH9gMNsq9vBH7MUvflGy6t154isf8tB3
 OOX+nlfICC2c3ingHnmQmZeNiW+WWH/bV0fHTUz+uL1qTaD22Jc+ulTjUEahCs3pSXKP
 QfwVjSOTYGyaVQEiSv/GAKOdphacSohTSztMbEn4W9tKoMF9rNGEeloiB96Kl8Zvylu8 MCFg==
X-Gm-Message-State: APjAAAUdEPRp4PtuhSVGGFXpHtDRfZD/PpsVC68lL70LQPHcFGxCVvWf
 8046AQY1OgL7q/Fc7ZyzUvgjUg/Q
X-Google-Smtp-Source:
 APXvYqzAomUAdZ4QHVYkGMezlkl116Ovv8KKFXdXeL3pHpAJQs7+IuL3wyItjNylaSnbI8zCHVYdCg==
X-Received: by 2002:a65:4cc4:: with SMTP id n4mr23246830pgt.307.1561954291262;
 Sun, 30 Jun 2019 21:11:31 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 39
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

In SPP worker processes, customized version of rte_eth_rx_burst() and
rte_eth_tx_burst() are defined to add features of VLAN or ring lantency
statistics. However, these features are not required from all of
processes.

This series of patches is to add burst functions used for VLAN,
statistics or both.

Yasufumi Ogawa (4):
  shared/sec: Add RX and TX burst without VLAN
  spp_vf: change to use burst funcs with VLAN
  spp_mirror: change to use burst funcs with VLAN
  spp_pcap: update include path of port capability

 src/mirror/Makefile                           |   1 +
 src/mirror/mir_cmd_runner.c                   |   1 +
 src/mirror/spp_mirror.c                       |   7 +-
 src/pcap/Makefile                             |   1 +
 src/pcap/spp_pcap.c                           |   4 +-
 .../spp_worker_th/cmd_res_formatter.c         |   2 +
 .../spp_worker_th/cmd_res_formatter.h         |   1 -
 .../secondary/spp_worker_th/port_capability.c | 409 ++++++++++++++++++
 .../secondary/spp_worker_th/port_capability.h |  84 ++++
 src/shared/secondary/spp_worker_th/spp_port.c | 373 +---------------
 src/shared/secondary/spp_worker_th/spp_port.h | 100 +----
 src/vf/Makefile                               |   2 +-
 src/vf/classifier_mac.c                       |   8 +-
 src/vf/forwarder.c                            |   5 +-
 src/vf/spp_vf.c                               |   1 +
 src/vf/vf_cmd_runner.c                        |   1 +
 16 files changed, 546 insertions(+), 454 deletions(-)
 create mode 100644 src/shared/secondary/spp_worker_th/port_capability.c
 create mode 100644 src/shared/secondary/spp_worker_th/port_capability.h

-- 
2.17.1



From yasufum.o@gmail.com Mon Jul 01 13:11:23 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTY00XLH3NK1U10@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 01 Jul 2019 13:11:44 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTY00X0O3NKE900@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:11:44 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTY00A0K3NKM8D0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:11:44 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id D4E7E7E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:11:44 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id D34358E6052	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:11:44 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id C7CE78E6050	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:11:44 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 3AC598E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:11:44 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:11:44 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BikF015501;	Mon,
 1 Jul 2019 13:11:44 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x614Bipb015500;	Mon, 1 Jul 2019 13:11:44 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x614Bh7N015492	for unknown; Mon,
 1 Jul 2019 13:11:43 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BhlM029676 for
 unknown; Mon, 1 Jul 2019 13:11:43 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614Bhl9029673; Mon,
 1 Jul 2019 13:11:43 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BhX2019650;	Mon,
 1 Jul 2019 13:11:43 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x614BhnG019646	for unknown; Mon, 1 Jul 2019 13:11:43 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BhrL025069 for
 unknown; Mon, 1 Jul 2019 13:11:43 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614Bg3R025063 for
 unknown; Mon, 1 Jul 2019 13:11:42 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x614Ba0j006741	for unknown; Mon,
 1 Jul 2019 13:11:41 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 9416B37AF;	Mon,  1 Jul 2019 06:11:35 +0200 (CEST)
Received: from mail-pg1-f196.google.com
 (mail-pg1-f196.google.com [209.85.215.196]) by dpdk.org (Postfix)
 with ESMTP id 2BA96325F for <spp@dpdk.org>; Mon,
 1 Jul 2019 06:11:34 +0200 (CEST)
Received: by mail-pg1-f196.google.com with SMTP id m4so5347657pgk.0 for
 <spp@dpdk.org>; Sun, 30 Jun 2019 21:11:34 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id o128sm12190907pfb.42.2019.06.30.21.11.31
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 30 Jun 2019 21:11:32 -0700 (PDT)
Date: Mon, 01 Jul 2019 13:11:23 +0900
From: yasufum.o@gmail.com
Subject: [spp 04455] [spp] [PATCH 1/4] shared/sec: Add RX and TX burst without
 VLAN
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190701041126.33947-2-yasufum.o@gmail.com>
In-reply-to: <20190701041126.33947-1-yasufum.o@gmail.com>
References: <20190701041126.33947-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04455
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=jTPUCFcr/oONhn0/usJbXNaM29M7Agz5+TKTMi8hBEc=;
 b=dSE6SyrAZ1iPVMFBDM9YBMW242H9j/c/f36XATla3N4EtUXASfelTqq/JHSstlkGo/
 fCYAUadljw9y579KoC4P2PMa77oiYuztFdapVBqUZCRSyhml/sdRjdA9dAofm4WAEPye
 wS9XWVhJhRaD2WRLyShUle52B+69C0lnHq5m4ylE2lEBPLL2jEiEsMZrkP/7Ssvut6wr
 kwn8kuyh85KHX+yOS1EEIdn1Ww67gpu6QLYH+CMrRwXWXBA3JQ6Rass6SFRSJW6ylIXW
 1l0jIrJpXf8WJK7/Ugo5jEvrIFuTj5ZciAI6+qqauyQYvv92xPiMrxlzka1F/+2DBzPD 1VJg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=jTPUCFcr/oONhn0/usJbXNaM29M7Agz5+TKTMi8hBEc=;
 b=A5DI0jhUbkNpGqLDjQF7GmiMZUYPAQdyPt+MVZYbeduFKOpc5QaqUCvzOTMbazYBx/
 kd3dibz6bcdBXA7X5BTMbMADzqqjKcYUJZcRJ9ENMAGDxrdm3wGxB8yZ4fmvR9MBvRM2
 9nmH0sayYFwqUHcPS2hw2VgMqHv6BFipB0Qebffq/2r25XGuwjJ99RbqZuRPfcL/5IoT
 XB7mCNHWTh4u4Rvck8KsUxE3SQeYWGDkOSPDKgBtsrvrSMd6CA1TGOzoOQajD4BkEjX3
 2m1xcLbaByeuxBGkwdxjPP2KG2HCP1SqfmBbW630ejOsH7zbXJ7CHr5dTOuyTmspNw7E hEJQ==
X-Gm-Message-State: APjAAAWmR87XkRaWwQgNIHDrmxIB2tXaZTyqH/rn6NXhMh8pKzWbjE6i
 HE5hhj1l1m8wmE/7U8OhCI9ljbFq
X-Google-Smtp-Source:
 APXvYqzAdga2AjStcBPVhCzo7sUh4L7jyPxhkCIrXK5L2XrH97KTsWiwpVtRHYpiPaIHeibBVroAlA==
X-Received: by 2002:a17:90a:9382:: with SMTP id
 q2mr28712255pjo.131.1561954292837; Sun, 30 Jun 2019 21:11:32 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 1087
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

In SPP worker, original version of RX and TX burst functions are
implemented in which adding or deleting VLAN tag are added to
rte_eth_rx_burst() and rte_eth_tx_burst(). However, it is also called
from processes which does not VLAN features.

This update is to add functions without VLAN features in addition to
them for supporting both of usecases.

  * sppwk_eth_rx_burst()
  * sppwk_eth_tx_burst()
  * sppwk_eth_vlan_rx_burst()
  * sppwk_eth_vlan_tx_burst()

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../spp_worker_th/cmd_res_formatter.c         |   2 +
 .../spp_worker_th/cmd_res_formatter.h         |   1 -
 .../secondary/spp_worker_th/port_capability.c | 409 ++++++++++++++++++
 .../secondary/spp_worker_th/port_capability.h |  84 ++++
 src/shared/secondary/spp_worker_th/spp_port.c | 373 +---------------
 src/shared/secondary/spp_worker_th/spp_port.h | 100 +----
 6 files changed, 526 insertions(+), 443 deletions(-)
 create mode 100644 src/shared/secondary/spp_worker_th/port_capability.c
 create mode 100644 src/shared/secondary/spp_worker_th/port_capability.h

diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index 73ef4c2..2cc7d42 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -3,6 +3,8 @@
  */
 
 #include "cmd_res_formatter.h"
+#include "spp_port.h"
+#include "port_capability.h"
 #include "cmd_utils.h"
 #include "shared/secondary/json_helper.h"
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
index 66eabb5..1e52c0e 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
@@ -6,7 +6,6 @@
 #define _SPPWK_CMD_RES_FORMATTER_H_
 
 #include "cmd_utils.h"
-#include "spp_port.h"
 #include "shared/common.h"
 
 #define CMD_RES_LEN  32  /* Size of message including null char. */
diff --git a/src/shared/secondary/spp_worker_th/port_capability.c b/src/shared/secondary/spp_worker_th/port_capability.c
new file mode 100644
index 0000000..ce498fd
--- /dev/null
+++ b/src/shared/secondary/spp_worker_th/port_capability.c
@@ -0,0 +1,409 @@
+/* SPDX-License-Identifier: BSD-3-Clause
+ * Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
+ */
+
+#include <rte_ether.h>
+#include <rte_ip.h>
+#include <rte_udp.h>
+#include <rte_tcp.h>
+#include <rte_net_crc.h>
+
+#include "port_capability.h"
+#include "shared/secondary/return_codes.h"
+#include "ringlatencystats.h"
+
+/* Port ability management information */
+struct port_abl_info {
+	volatile int ref_index; /* Index to reference area. */
+	volatile int upd_index; /* Index to update area. */
+	struct sppwk_port_attrs port_attrs[TWO_SIDES][PORT_ABL_MAX];
+				/* Port attributes for spp_vf. */
+};
+
+/* Port ability port information */
+struct port_mng_info {
+	enum port_type iface_type;  /* Interface type (phy, vhost or so). */
+	int iface_no;  /* Interface number. */
+	struct port_abl_info rx;  /* Mng data of port ability for RX. */
+	struct port_abl_info tx;  /* Mng data of port ability for Tx. */
+};
+
+/* Information for VLAN tag management. */
+struct port_mng_info g_port_mng_info[RTE_MAX_ETHPORTS];
+
+/* TPID of VLAN. */
+static uint16_t g_vlan_tpid;
+
+/* Initialize port ability. */
+void
+spp_port_ability_init(void)
+{
+	int cnt = 0;
+	g_vlan_tpid = rte_cpu_to_be_16(ETHER_TYPE_VLAN);
+	memset(g_port_mng_info, 0x00, sizeof(g_port_mng_info));
+	for (cnt = 0; cnt < RTE_MAX_ETHPORTS; cnt++) {
+		g_port_mng_info[cnt].rx.ref_index = 0;
+		g_port_mng_info[cnt].rx.upd_index = 1;
+		g_port_mng_info[cnt].tx.ref_index = 0;
+		g_port_mng_info[cnt].tx.upd_index = 1;
+	}
+}
+
+/* Get information of port ability. */
+void
+spp_port_ability_get_info(
+		int port_id, enum sppwk_port_dir dir,
+		struct sppwk_port_attrs **info)
+{
+	struct port_abl_info *mng = NULL;
+
+	switch (dir) {
+	case SPPWK_PORT_DIR_RX:
+		mng = &g_port_mng_info[port_id].rx;
+		break;
+	case SPPWK_PORT_DIR_TX:
+		mng = &g_port_mng_info[port_id].tx;
+		break;
+	default:
+		/* Not used. */
+		break;
+	}
+	*info = mng->port_attrs[mng->ref_index];
+}
+
+/* Calculation and Setting of FCS. */
+static inline void
+set_fcs_packet(struct rte_mbuf *pkt)
+{
+	uint32_t *fcs = NULL;
+	fcs = rte_pktmbuf_mtod_offset(pkt, uint32_t *, pkt->data_len);
+	*fcs = rte_net_crc_calc(rte_pktmbuf_mtod(pkt, void *),
+			pkt->data_len, RTE_NET_CRC32_ETH);
+}
+
+/* Add VLAN tag to packet. */
+static inline int
+add_vlantag_packet(
+		struct rte_mbuf *pkt,
+		const union sppwk_port_capability *capability)
+{
+	struct ether_hdr *old_ether = NULL;
+	struct ether_hdr *new_ether = NULL;
+	struct vlan_hdr  *vlan      = NULL;
+	const struct sppwk_vlan_tag *vlantag = &capability->vlantag;
+
+	old_ether = rte_pktmbuf_mtod(pkt, struct ether_hdr *);
+	if (old_ether->ether_type == g_vlan_tpid) {
+		/* For packets with VLAN tags, only VLAN ID is updated */
+		new_ether = old_ether;
+		vlan = (struct vlan_hdr *)&new_ether[1];
+	} else {
+		/* For packets without VLAN tag, add VLAN tag. */
+		new_ether = (struct ether_hdr *)rte_pktmbuf_prepend(pkt,
+				sizeof(struct vlan_hdr));
+		if (unlikely(new_ether == NULL)) {
+			RTE_LOG(ERR, PORT, "Failed to "
+					"get additional header area.\n");
+			return SPP_RET_NG;
+		}
+
+		rte_memcpy(new_ether, old_ether, sizeof(struct ether_hdr));
+		vlan = (struct vlan_hdr *)&new_ether[1];
+		vlan->eth_proto = new_ether->ether_type;
+		new_ether->ether_type = g_vlan_tpid;
+	}
+
+	vlan->vlan_tci = vlantag->tci;
+	set_fcs_packet(pkt);
+	return SPP_RET_OK;
+}
+
+/* Add VLAN tag to all packets. */
+static inline int
+add_vlantag_all_packets(
+		struct rte_mbuf **pkts, int nb_pkts,
+		const union sppwk_port_capability *capability)
+{
+	int ret = SPP_RET_OK;
+	int cnt = 0;
+	for (cnt = 0; cnt < nb_pkts; cnt++) {
+		ret = add_vlantag_packet(pkts[cnt], capability);
+		if (unlikely(ret < 0)) {
+			RTE_LOG(ERR, PORT,
+					"Failed to add VLAN tag."
+					"(pkts %d/%d)\n", cnt, nb_pkts);
+			break;
+		}
+	}
+	return cnt;
+}
+
+/* Delete VLAN tag to packet. */
+static inline int
+del_vlantag_packet(
+		struct rte_mbuf *pkt,
+		const union sppwk_port_capability *cbl __attribute__ ((unused)))
+{
+	struct ether_hdr *old_ether = NULL;
+	struct ether_hdr *new_ether = NULL;
+	uint32_t *old, *new;
+
+	old_ether = rte_pktmbuf_mtod(pkt, struct ether_hdr *);
+	if (old_ether->ether_type == g_vlan_tpid) {
+		/* For packets without VLAN tag, delete VLAN tag. */
+		new_ether = (struct ether_hdr *)rte_pktmbuf_adj(pkt,
+				sizeof(struct vlan_hdr));
+		if (unlikely(new_ether == NULL)) {
+			RTE_LOG(ERR, PORT, "Failed to "
+					"delete unnecessary header area.\n");
+			return SPP_RET_NG;
+		}
+
+		old = (uint32_t *)old_ether;
+		new = (uint32_t *)new_ether;
+		new[2] = old[2];
+		new[1] = old[1];
+		new[0] = old[0];
+		old[0] = 0;
+		set_fcs_packet(pkt);
+	}
+	return SPP_RET_OK;
+}
+
+/* Delete VLAN tag to all packets. */
+static inline int
+del_vlantag_all_packets(
+		struct rte_mbuf **pkts, int nb_pkts,
+		const union sppwk_port_capability *capability)
+{
+	int ret = SPP_RET_OK;
+	int cnt = 0;
+	for (cnt = 0; cnt < nb_pkts; cnt++) {
+		ret = del_vlantag_packet(pkts[cnt], capability);
+		if (unlikely(ret < 0)) {
+			RTE_LOG(ERR, PORT,
+					"Failed to del VLAN tag."
+					"(pkts %d/%d)\n", cnt, nb_pkts);
+			break;
+		}
+	}
+	return cnt;
+}
+
+/* Change index of management information. */
+void
+spp_port_ability_change_index(
+		enum port_ability_chg_index_type type,
+		int port_id, enum sppwk_port_dir dir)
+{
+	int cnt;
+	static int num_rx;
+	static int rx_list[RTE_MAX_ETHPORTS];
+	static int num_tx;
+	static int tx_list[RTE_MAX_ETHPORTS];
+	struct port_abl_info *mng = NULL;
+
+	if (type == PORT_ABILITY_CHG_INDEX_UPD) {
+		switch (dir) {
+		case SPPWK_PORT_DIR_RX:
+			mng = &g_port_mng_info[port_id].rx;
+			mng->upd_index = mng->ref_index;
+			rx_list[num_rx++] = port_id;
+			break;
+		case SPPWK_PORT_DIR_TX:
+			mng = &g_port_mng_info[port_id].tx;
+			mng->upd_index = mng->ref_index;
+			tx_list[num_tx++] = port_id;
+			break;
+		default:
+			/* Not used. */
+			break;
+		}
+		return;
+	}
+
+	for (cnt = 0; cnt < num_rx; cnt++) {
+		mng = &g_port_mng_info[rx_list[cnt]].rx;
+		mng->ref_index = (mng->upd_index+1) % TWO_SIDES;
+		rx_list[cnt] = 0;
+	}
+	for (cnt = 0; cnt < num_tx; cnt++) {
+		mng = &g_port_mng_info[tx_list[cnt]].tx;
+		mng->ref_index = (mng->upd_index+1) % TWO_SIDES;
+		tx_list[cnt] = 0;
+	}
+
+	num_rx = 0;
+	num_tx = 0;
+}
+
+/* Set ability data of port ability. */
+static void
+port_ability_set_ability(struct sppwk_port_info *port,
+		enum sppwk_port_dir dir)
+{
+	int in_cnt, out_cnt = 0;
+	int port_id = port->ethdev_port_id;
+	struct port_mng_info *port_mng = &g_port_mng_info[port_id];
+	struct port_abl_info *mng = NULL;
+	struct sppwk_port_attrs *port_attrs_in = port->port_attrs;
+	struct sppwk_port_attrs *port_attrs_out = NULL;
+	struct sppwk_vlan_tag *tag = NULL;
+
+	port_mng->iface_type = port->iface_type;
+	port_mng->iface_no   = port->iface_no;
+
+	switch (dir) {
+	case SPPWK_PORT_DIR_RX:
+		mng = &port_mng->rx;
+		break;
+	case SPPWK_PORT_DIR_TX:
+		mng = &port_mng->tx;
+		break;
+	default:
+		/* Not used. */
+		break;
+	}
+
+	port_attrs_out = mng->port_attrs[mng->upd_index];
+	memset(port_attrs_out, 0x00, sizeof(struct sppwk_port_attrs)
+			* PORT_ABL_MAX);
+	for (in_cnt = 0; in_cnt < PORT_ABL_MAX; in_cnt++) {
+		if (port_attrs_in[in_cnt].dir != dir)
+			continue;
+
+		memcpy(&port_attrs_out[out_cnt], &port_attrs_in[in_cnt],
+				sizeof(struct sppwk_port_attrs));
+
+		switch (port_attrs_out[out_cnt].ops) {
+		case SPPWK_PORT_OPS_ADD_VLAN:
+			tag = &port_attrs_out[out_cnt].capability.vlantag;
+			tag->tci = rte_cpu_to_be_16(SPP_VLANTAG_CALC_TCI(
+					tag->vid, tag->pcp));
+			break;
+		case SPPWK_PORT_OPS_DEL_VLAN:
+		default:
+			/* Nothing to do. */
+			break;
+		}
+
+		out_cnt++;
+	}
+
+	spp_port_ability_change_index(PORT_ABILITY_CHG_INDEX_UPD,
+			port_id, dir);
+}
+
+/* Update port capability. */
+void
+spp_port_ability_update(const struct sppwk_comp_info *component)
+{
+	int cnt;
+	struct sppwk_port_info *port = NULL;
+	for (cnt = 0; cnt < component->nof_rx; cnt++) {
+		port = component->rx_ports[cnt];
+		port_ability_set_ability(port, SPPWK_PORT_DIR_RX);
+	}
+
+	for (cnt = 0; cnt < component->nof_tx; cnt++) {
+		port = component->tx_ports[cnt];
+		port_ability_set_ability(port, SPPWK_PORT_DIR_TX);
+	}
+}
+
+/* Definition of functions that operate port abilities. */
+typedef int (*port_ability_func)(
+		struct rte_mbuf **pkts, int nb_pkts,
+		const union sppwk_port_capability *capability);
+
+/* List of functions per port ability. */
+port_ability_func port_ability_function_list[] = {
+	NULL,                    /* None */
+	add_vlantag_all_packets, /* Add VLAN tag */
+	del_vlantag_all_packets, /* Del VLAN tag */
+	NULL                     /* Termination */
+};
+
+/* Each packet operation of port capability. */
+static inline int
+port_ability_each_operation(uint16_t port_id,
+		struct rte_mbuf **pkts, const uint16_t nb_pkts,
+		enum sppwk_port_dir dir)
+{
+	int cnt, buf;
+	int ok_pkts = nb_pkts;
+	struct sppwk_port_attrs *port_attrs = NULL;
+
+	spp_port_ability_get_info(port_id, dir, &port_attrs);
+	if (unlikely(port_attrs[0].ops == SPPWK_PORT_OPS_NONE))
+		return nb_pkts;
+
+	for (cnt = 0; cnt < PORT_ABL_MAX; cnt++) {
+		/* Do nothing if the port is assigned no VLAN feature. */
+		if (port_attrs[cnt].ops == SPPWK_PORT_OPS_NONE)
+			break;
+
+		/* Add or delete VLAN tag with operation function. */
+		ok_pkts = port_ability_function_list[port_attrs[cnt].ops](
+				pkts, ok_pkts, &port_attrs->capability);
+	}
+
+	/* Discard remained packets to release mbuf. */
+	if (unlikely(ok_pkts < nb_pkts)) {
+		for (buf = ok_pkts; buf < nb_pkts; buf++)
+			rte_pktmbuf_free(pkts[buf]);
+	}
+
+	return ok_pkts;
+}
+
+/* TODO(yasufum) move to outside of this file. */
+/* Wrapper function for rte_eth_rx_burst() with VLAN feature. */
+uint16_t
+sppwk_eth_vlan_rx_burst(uint16_t port_id,
+		uint16_t queue_id __attribute__ ((unused)),
+		struct rte_mbuf **rx_pkts, const uint16_t nb_pkts)
+{
+	uint16_t nb_rx;
+	nb_rx = rte_eth_rx_burst(port_id, 0, rx_pkts, nb_pkts);
+	if (unlikely(nb_rx == 0))
+		return SPP_RET_OK;
+
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+	if (g_port_mng_info[port_id].iface_type == RING)
+		spp_ringlatencystats_calculate_latency(
+				g_port_mng_info[port_id].iface_no,
+				rx_pkts, nb_pkts);
+#endif /* SPP_RINGLATENCYSTATS_ENABLE */
+
+	/* Add or delete VLAN tag. */
+	return port_ability_each_operation(port_id, rx_pkts, nb_rx,
+			SPPWK_PORT_DIR_RX);
+}
+
+
+/* TODO(yasufum) move to outside of this file. */
+/* Wrapper function for rte_eth_tx_burst() with VLAN feature. */
+uint16_t
+sppwk_eth_vlan_tx_burst(uint16_t port_id,
+		uint16_t queue_id __attribute__ ((unused)),
+		struct rte_mbuf **tx_pkts, uint16_t nb_pkts)
+{
+	uint16_t nb_tx;
+
+	/* Add or delete VLAN tag. */
+	nb_tx = port_ability_each_operation(port_id, tx_pkts, nb_pkts,
+			SPPWK_PORT_DIR_TX);
+
+	if (unlikely(nb_tx == 0))
+		return SPP_RET_OK;
+
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+	if (g_port_mng_info[port_id].iface_type == RING)
+		spp_ringlatencystats_add_time_stamp(
+				g_port_mng_info[port_id].iface_no,
+				tx_pkts, nb_pkts);
+#endif /* SPP_RINGLATENCYSTATS_ENABLE */
+
+	return rte_eth_tx_burst(port_id, 0, tx_pkts, nb_tx);
+}
diff --git a/src/shared/secondary/spp_worker_th/port_capability.h b/src/shared/secondary/spp_worker_th/port_capability.h
new file mode 100644
index 0000000..5d2a38a
--- /dev/null
+++ b/src/shared/secondary/spp_worker_th/port_capability.h
@@ -0,0 +1,84 @@
+/* SPDX-License-Identifier: BSD-3-Clause
+ * Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
+ */
+
+#ifndef __PORT_CAPABILITY_H__
+#define __PORT_CAPABILITY_H__
+
+/**
+ * @file
+ * SPP Port ability
+ *
+ * Provide about the ability per port.
+ */
+
+#include "cmd_utils.h"
+
+/** Calculate TCI of VLAN tag. */
+#define SPP_VLANTAG_CALC_TCI(id, pcp) (((pcp & 0x07) << 13) | (id & 0x0fff))
+
+/** Type for changing index. */
+enum port_ability_chg_index_type {
+	PORT_ABILITY_CHG_INDEX_REF,  /** To change index to reference area. */
+	PORT_ABILITY_CHG_INDEX_UPD,  /** To change index to update area. */
+};
+
+/** Initialize port ability. */
+void spp_port_ability_init(void);
+
+/**
+ * Get information of port ability.
+ *
+ * @param port_id Etherdev ID.
+ * @param rxtx RX/TX ID of port_id.
+ * @param info Port ability information.
+ */
+void spp_port_ability_get_info(
+		int port_id, enum sppwk_port_dir dir,
+		struct sppwk_port_attrs **info);
+
+/**
+ * Change index of management information.
+ *
+ * @param port_id Etherdev ID.
+ * @param rxtx RX/TX ID of port_id.
+ * @param type Type for changing index.
+ */
+void spp_port_ability_change_index(
+		enum port_ability_chg_index_type type,
+		int port_id, enum sppwk_port_dir dir);
+
+/**
+ * Update port capability.
+ *
+ * @param component_info
+ *  The pointer to struct sppwk_comp_info.@n
+ *  The data for updating the internal data of port ability.
+ */
+void spp_port_ability_update(const struct sppwk_comp_info *component);
+
+/**
+ * Wrapper function for rte_eth_rx_burst() with ring latency feature.
+ *
+ * @param[in] port_id Etherdev ID.
+ * @param[in] queue_id RX queue ID, but fixed value 0 in SPP.
+ * @param[in] rx_pkts Pointers to mbuf should be enough to store nb_pkts.
+ * @param nb_pkts Maximum number of RX packets.
+ * @return Number of RX packets as number of pointers to mbuf.
+ */
+uint16_t sppwk_eth_vlan_rx_burst(uint16_t port_id, uint16_t queue_id,
+		struct rte_mbuf **rx_pkts, const uint16_t nb_pkts);
+
+/**
+ * Wrapper function for rte_eth_tx_burst() with ring latency feature.
+ *
+ * @param port_id Etherdev ID.
+ * @param[in] queue_id TX queue ID, but fixed value 0 in SPP.
+ * @param[in] tx_pkts Pointers to mbuf should be enough to store nb_pkts.
+ * @param nb_pkts Maximum number of TX packets.
+ * @return Number of TX packets as number of pointers to mbuf.
+ */
+uint16_t sppwk_eth_vlan_tx_burst(uint16_t port_id, uint16_t queue_id,
+		struct rte_mbuf **tx_pkts, uint16_t nb_pkts);
+
+#endif /*  __PORT_CAPABILITY_H__ */
diff --git a/src/shared/secondary/spp_worker_th/spp_port.c b/src/shared/secondary/spp_worker_th/spp_port.c
index 6fe0dc5..0c7df2b 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.c
+++ b/src/shared/secondary/spp_worker_th/spp_port.c
@@ -12,357 +12,17 @@
 #include "shared/secondary/return_codes.h"
 #include "ringlatencystats.h"
 
-/* Port ability management information */
-struct port_abl_info {
-	volatile int ref_index; /* Index to reference area. */
-	volatile int upd_index; /* Index to update area. */
-	struct sppwk_port_attrs port_attrs[TWO_SIDES][PORT_ABL_MAX];
-				/* Port attributes for spp_vf. */
-};
-
-/* Port ability port information */
-struct port_mng_info {
-	enum port_type iface_type;  /* Interface type (phy, vhost or so). */
-	int iface_no;  /* Interface number. */
-	struct port_abl_info rx;  /* Mng data of port ability for RX. */
-	struct port_abl_info tx;  /* Mng data of port ability for Tx. */
-};
-
-/* Information for VLAN tag management. */
-struct port_mng_info g_port_mng_info[RTE_MAX_ETHPORTS];
-
-/* TPID of VLAN. */
-static uint16_t g_vlan_tpid;
-
-/* Initialize port ability. */
-void
-spp_port_ability_init(void)
-{
-	int cnt = 0;
-	g_vlan_tpid = rte_cpu_to_be_16(ETHER_TYPE_VLAN);
-	memset(g_port_mng_info, 0x00, sizeof(g_port_mng_info));
-	for (cnt = 0; cnt < RTE_MAX_ETHPORTS; cnt++) {
-		g_port_mng_info[cnt].rx.ref_index = 0;
-		g_port_mng_info[cnt].rx.upd_index = 1;
-		g_port_mng_info[cnt].tx.ref_index = 0;
-		g_port_mng_info[cnt].tx.upd_index = 1;
-	}
-}
-
-/* Get information of port ability. */
-void
-spp_port_ability_get_info(
-		int port_id, enum sppwk_port_dir dir,
-		struct sppwk_port_attrs **info)
-{
-	struct port_abl_info *mng = NULL;
-
-	switch (dir) {
-	case SPPWK_PORT_DIR_RX:
-		mng = &g_port_mng_info[port_id].rx;
-		break;
-	case SPPWK_PORT_DIR_TX:
-		mng = &g_port_mng_info[port_id].tx;
-		break;
-	default:
-		/* Not used. */
-		break;
-	}
-	*info = mng->port_attrs[mng->ref_index];
-}
-
-/* Calculation and Setting of FCS. */
-static inline void
-set_fcs_packet(struct rte_mbuf *pkt)
-{
-	uint32_t *fcs = NULL;
-	fcs = rte_pktmbuf_mtod_offset(pkt, uint32_t *, pkt->data_len);
-	*fcs = rte_net_crc_calc(rte_pktmbuf_mtod(pkt, void *),
-			pkt->data_len, RTE_NET_CRC32_ETH);
-}
-
-/* Add VLAN tag to packet. */
-static inline int
-add_vlantag_packet(
-		struct rte_mbuf *pkt,
-		const union sppwk_port_capability *capability)
-{
-	struct ether_hdr *old_ether = NULL;
-	struct ether_hdr *new_ether = NULL;
-	struct vlan_hdr  *vlan      = NULL;
-	const struct sppwk_vlan_tag *vlantag = &capability->vlantag;
-
-	old_ether = rte_pktmbuf_mtod(pkt, struct ether_hdr *);
-	if (old_ether->ether_type == g_vlan_tpid) {
-		/* For packets with VLAN tags, only VLAN ID is updated */
-		new_ether = old_ether;
-		vlan = (struct vlan_hdr *)&new_ether[1];
-	} else {
-		/* For packets without VLAN tag, add VLAN tag. */
-		new_ether = (struct ether_hdr *)rte_pktmbuf_prepend(pkt,
-				sizeof(struct vlan_hdr));
-		if (unlikely(new_ether == NULL)) {
-			RTE_LOG(ERR, PORT, "Failed to "
-					"get additional header area.\n");
-			return SPP_RET_NG;
-		}
-
-		rte_memcpy(new_ether, old_ether, sizeof(struct ether_hdr));
-		vlan = (struct vlan_hdr *)&new_ether[1];
-		vlan->eth_proto = new_ether->ether_type;
-		new_ether->ether_type = g_vlan_tpid;
-	}
-
-	vlan->vlan_tci = vlantag->tci;
-	set_fcs_packet(pkt);
-	return SPP_RET_OK;
-}
-
-/* Add VLAN tag to all packets. */
-static inline int
-add_vlantag_all_packets(
-		struct rte_mbuf **pkts, int nb_pkts,
-		const union sppwk_port_capability *capability)
-{
-	int ret = SPP_RET_OK;
-	int cnt = 0;
-	for (cnt = 0; cnt < nb_pkts; cnt++) {
-		ret = add_vlantag_packet(pkts[cnt], capability);
-		if (unlikely(ret < 0)) {
-			RTE_LOG(ERR, PORT,
-					"Failed to add VLAN tag."
-					"(pkts %d/%d)\n", cnt, nb_pkts);
-			break;
-		}
-	}
-	return cnt;
-}
-
-/* Delete VLAN tag to packet. */
-static inline int
-del_vlantag_packet(
-		struct rte_mbuf *pkt,
-		const union sppwk_port_capability *cbl __attribute__ ((unused)))
-{
-	struct ether_hdr *old_ether = NULL;
-	struct ether_hdr *new_ether = NULL;
-	uint32_t *old, *new;
-
-	old_ether = rte_pktmbuf_mtod(pkt, struct ether_hdr *);
-	if (old_ether->ether_type == g_vlan_tpid) {
-		/* For packets without VLAN tag, delete VLAN tag. */
-		new_ether = (struct ether_hdr *)rte_pktmbuf_adj(pkt,
-				sizeof(struct vlan_hdr));
-		if (unlikely(new_ether == NULL)) {
-			RTE_LOG(ERR, PORT, "Failed to "
-					"delete unnecessary header area.\n");
-			return SPP_RET_NG;
-		}
-
-		old = (uint32_t *)old_ether;
-		new = (uint32_t *)new_ether;
-		new[2] = old[2];
-		new[1] = old[1];
-		new[0] = old[0];
-		old[0] = 0;
-		set_fcs_packet(pkt);
-	}
-	return SPP_RET_OK;
-}
-
-/* Delete VLAN tag to all packets. */
-static inline int
-del_vlantag_all_packets(
-		struct rte_mbuf **pkts, int nb_pkts,
-		const union sppwk_port_capability *capability)
-{
-	int ret = SPP_RET_OK;
-	int cnt = 0;
-	for (cnt = 0; cnt < nb_pkts; cnt++) {
-		ret = del_vlantag_packet(pkts[cnt], capability);
-		if (unlikely(ret < 0)) {
-			RTE_LOG(ERR, PORT,
-					"Failed to del VLAN tag."
-					"(pkts %d/%d)\n", cnt, nb_pkts);
-			break;
-		}
-	}
-	return cnt;
-}
-
-/* Change index of management information. */
-void
-spp_port_ability_change_index(
-		enum port_ability_chg_index_type type,
-		int port_id, enum sppwk_port_dir dir)
-{
-	int cnt;
-	static int num_rx;
-	static int rx_list[RTE_MAX_ETHPORTS];
-	static int num_tx;
-	static int tx_list[RTE_MAX_ETHPORTS];
-	struct port_abl_info *mng = NULL;
-
-	if (type == PORT_ABILITY_CHG_INDEX_UPD) {
-		switch (dir) {
-		case SPPWK_PORT_DIR_RX:
-			mng = &g_port_mng_info[port_id].rx;
-			mng->upd_index = mng->ref_index;
-			rx_list[num_rx++] = port_id;
-			break;
-		case SPPWK_PORT_DIR_TX:
-			mng = &g_port_mng_info[port_id].tx;
-			mng->upd_index = mng->ref_index;
-			tx_list[num_tx++] = port_id;
-			break;
-		default:
-			/* Not used. */
-			break;
-		}
-		return;
-	}
-
-	for (cnt = 0; cnt < num_rx; cnt++) {
-		mng = &g_port_mng_info[rx_list[cnt]].rx;
-		mng->ref_index = (mng->upd_index+1) % TWO_SIDES;
-		rx_list[cnt] = 0;
-	}
-	for (cnt = 0; cnt < num_tx; cnt++) {
-		mng = &g_port_mng_info[tx_list[cnt]].tx;
-		mng->ref_index = (mng->upd_index+1) % TWO_SIDES;
-		tx_list[cnt] = 0;
-	}
-
-	num_rx = 0;
-	num_tx = 0;
-}
-
-/* Set ability data of port ability. */
-static void
-port_ability_set_ability(struct sppwk_port_info *port,
-		enum sppwk_port_dir dir)
-{
-	int in_cnt, out_cnt = 0;
-	int port_id = port->ethdev_port_id;
-	struct port_mng_info *port_mng = &g_port_mng_info[port_id];
-	struct port_abl_info *mng = NULL;
-	struct sppwk_port_attrs *port_attrs_in = port->port_attrs;
-	struct sppwk_port_attrs *port_attrs_out = NULL;
-	struct sppwk_vlan_tag *tag = NULL;
-
-	port_mng->iface_type = port->iface_type;
-	port_mng->iface_no   = port->iface_no;
-
-	switch (dir) {
-	case SPPWK_PORT_DIR_RX:
-		mng = &port_mng->rx;
-		break;
-	case SPPWK_PORT_DIR_TX:
-		mng = &port_mng->tx;
-		break;
-	default:
-		/* Not used. */
-		break;
-	}
-
-	port_attrs_out = mng->port_attrs[mng->upd_index];
-	memset(port_attrs_out, 0x00, sizeof(struct sppwk_port_attrs)
-			* PORT_ABL_MAX);
-	for (in_cnt = 0; in_cnt < PORT_ABL_MAX; in_cnt++) {
-		if (port_attrs_in[in_cnt].dir != dir)
-			continue;
-
-		memcpy(&port_attrs_out[out_cnt], &port_attrs_in[in_cnt],
-				sizeof(struct sppwk_port_attrs));
-
-		switch (port_attrs_out[out_cnt].ops) {
-		case SPPWK_PORT_OPS_ADD_VLAN:
-			tag = &port_attrs_out[out_cnt].capability.vlantag;
-			tag->tci = rte_cpu_to_be_16(SPP_VLANTAG_CALC_TCI(
-					tag->vid, tag->pcp));
-			break;
-		case SPPWK_PORT_OPS_DEL_VLAN:
-		default:
-			/* Nothing to do. */
-			break;
-		}
-
-		out_cnt++;
-	}
-
-	spp_port_ability_change_index(PORT_ABILITY_CHG_INDEX_UPD,
-			port_id, dir);
-}
-
-/* Update port capability. */
-void
-spp_port_ability_update(const struct sppwk_comp_info *component)
-{
-	int cnt;
-	struct sppwk_port_info *port = NULL;
-	for (cnt = 0; cnt < component->nof_rx; cnt++) {
-		port = component->rx_ports[cnt];
-		port_ability_set_ability(port, SPPWK_PORT_DIR_RX);
-	}
-
-	for (cnt = 0; cnt < component->nof_tx; cnt++) {
-		port = component->tx_ports[cnt];
-		port_ability_set_ability(port, SPPWK_PORT_DIR_TX);
-	}
-}
-
-/* Definition of functions that operate port abilities. */
-typedef int (*port_ability_func)(
-		struct rte_mbuf **pkts, int nb_pkts,
-		const union sppwk_port_capability *capability);
-
-/* List of functions per port ability. */
-port_ability_func port_ability_function_list[] = {
-	NULL,                    /* None */
-	add_vlantag_all_packets, /* Add VLAN tag */
-	del_vlantag_all_packets, /* Del VLAN tag */
-	NULL                     /* Termination */
-};
-
-/* Each packet operation of port capability. */
-static inline int
-port_ability_each_operation(uint16_t port_id,
-		struct rte_mbuf **pkts, const uint16_t nb_pkts,
-		enum sppwk_port_dir dir)
-{
-	int cnt, buf;
-	int ok_pkts = nb_pkts;
-	struct sppwk_port_attrs *port_attrs = NULL;
-
-	spp_port_ability_get_info(port_id, dir, &port_attrs);
-	if (unlikely(port_attrs[0].ops == SPPWK_PORT_OPS_NONE))
-		return nb_pkts;
-
-	for (cnt = 0; cnt < PORT_ABL_MAX; cnt++) {
-		if (port_attrs[cnt].ops == SPPWK_PORT_OPS_NONE)
-			break;
-
-		ok_pkts = port_ability_function_list[port_attrs[cnt].ops](
-				pkts, ok_pkts, &port_attrs->capability);
-	}
-
-	/* Discard remained packets to release mbuf. */
-	if (unlikely(ok_pkts < nb_pkts)) {
-		for (buf = ok_pkts; buf < nb_pkts; buf++)
-			rte_pktmbuf_free(pkts[buf]);
-	}
-
-	return ok_pkts;
-}
-
-/* Wrapper function for rte_eth_rx_burst(). */
+/* Wrapper function for rte_eth_rx_burst() with ring latency feature. */
 uint16_t
-spp_eth_rx_burst(
-		uint16_t port_id, uint16_t queue_id  __attribute__ ((unused)),
+sppwk_eth_rx_burst(uint16_t port_id,
+		uint16_t queue_id  __attribute__ ((unused)),
 		struct rte_mbuf **rx_pkts, const uint16_t nb_pkts)
 {
-	uint16_t nb_rx = 0;
+	uint16_t nb_rx;
+
 	nb_rx = rte_eth_rx_burst(port_id, 0, rx_pkts, nb_pkts);
+
+	/* TODO(yasufum) confirm why it returns SPP_RET_OK. */
 	if (unlikely(nb_rx == 0))
 		return SPP_RET_OK;
 
@@ -373,21 +33,18 @@ spp_eth_rx_burst(
 				rx_pkts, nb_pkts);
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 
-	return port_ability_each_operation(port_id, rx_pkts, nb_rx,
-			SPPWK_PORT_DIR_RX);
+	return nb_rx;
 }
 
-/* Wrapper function for rte_eth_tx_burst(). */
+/* Wrapper function for rte_eth_tx_burst() with ring latency feature. */
 uint16_t
-spp_eth_tx_burst(
-		uint16_t port_id, uint16_t queue_id  __attribute__ ((unused)),
+sppwk_eth_tx_burst(uint16_t port_id,
+		uint16_t queue_id __attribute__ ((unused)),
 		struct rte_mbuf **tx_pkts, uint16_t nb_pkts)
 {
-	uint16_t nb_tx = 0;
-	nb_tx = port_ability_each_operation(port_id, tx_pkts, nb_pkts,
-			SPPWK_PORT_DIR_TX);
-	if (unlikely(nb_tx == 0))
-		return SPP_RET_OK;
+	uint16_t nb_tx;
+
+	nb_tx = rte_eth_tx_burst(port_id, 0, tx_pkts, nb_pkts);
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
 	if (g_port_mng_info[port_id].iface_type == RING)
@@ -396,5 +53,5 @@ spp_eth_tx_burst(
 				tx_pkts, nb_pkts);
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 
-	return rte_eth_tx_burst(port_id, 0, tx_pkts, nb_tx);
+	return nb_tx;
 }
diff --git a/src/shared/secondary/spp_worker_th/spp_port.h b/src/shared/secondary/spp_worker_th/spp_port.h
index 81aefa7..eaeaea5 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.h
+++ b/src/shared/secondary/spp_worker_th/spp_port.h
@@ -2,101 +2,33 @@
  * Copyright(c) 2017-2018 Nippon Telegraph and Telephone Corporation
  */
 
-#ifndef _SPP_PORT_H_
-#define _SPP_PORT_H_
-
-/**
- * @file
- * SPP Port ability
- *
- * Provide about the ability per port.
- */
+#ifndef __WK_SPP_PORT_H__
+#define __WK_SPP_PORT_H__
 
 #include "cmd_utils.h"
 
-/** Calculate TCI of VLAN tag. */
-#define SPP_VLANTAG_CALC_TCI(id, pcp) (((pcp & 0x07) << 13) | (id & 0x0fff))
-
-/** Type for changing index. */
-enum port_ability_chg_index_type {
-	PORT_ABILITY_CHG_INDEX_REF,  /** To change index to reference area. */
-	PORT_ABILITY_CHG_INDEX_UPD,  /** To change index to update area. */
-};
-
-/** Initialize port ability. */
-void spp_port_ability_init(void);
-
-/**
- * Get information of port ability.
- *
- * @param port_id Etherdev ID.
- * @param rxtx RX/TX ID of port_id.
- * @param info Port ability information.
- */
-void spp_port_ability_get_info(
-		int port_id, enum sppwk_port_dir dir,
-		struct sppwk_port_attrs **info);
-
 /**
- * Change index of management information.
+ * Wrapper function for rte_eth_rx_burst() with ring latency feature.
  *
- * @param port_id Etherdev ID.
- * @param rxtx RX/TX ID of port_id.
- * @param type Type for changing index.
- */
-void spp_port_ability_change_index(
-		enum port_ability_chg_index_type type,
-		int port_id, enum sppwk_port_dir dir);
-
-/**
- * Update port capability.
- *
- * @param component_info
- *  The pointer to struct sppwk_comp_info.@n
- *  The data for updating the internal data of port ability.
- */
-void spp_port_ability_update(const struct sppwk_comp_info *component);
-
-/**
- * Wrapper function for rte_eth_rx_burst().
- *
- * @param port_id Etherdev ID.
- * @param queue_id
- *  The index of the receive queue from which to retrieve input packets.
- *  SPP is fixed at 0.
- * @param rx_pkts
- *  The address of an array of pointers to *rte_mbuf* structures that
- *  must be large enough to store *nb_pkts* pointers in it.
- * @param nb_pkts
- *  The maximum number of packets to retrieve.
- *
- * @return
- *  The number of packets actually retrieved, which is the number
- *  of pointers to *rte_mbuf* structures effectively supplied to the
- *  *rx_pkts* array.
+ * @param[in] port_id Etherdev ID.
+ * @param[in] queue_id RX queue ID, but fixed value 0 in SPP.
+ * @param[in] rx_pkts Pointers to mbuf should be enough to store nb_pkts.
+ * @param nb_pkts Maximum number of RX packets.
+ * @return Number of RX packets as number of pointers to mbuf.
  */
-uint16_t spp_eth_rx_burst(uint16_t port_id, uint16_t queue_id,
+uint16_t sppwk_eth_rx_burst(uint16_t port_id, uint16_t queue_id,
 		struct rte_mbuf **rx_pkts, const uint16_t nb_pkts);
 
 /**
- * Wrapper function for rte_eth_tx_burst().
+ * Wrapper function for rte_eth_tx_burst() with ring latency feature.
  *
  * @param port_id Etherdev ID.
- * @param queue_id
- *  The index of the transmit queue through which output packets must be sent.
- *  SPP is fixed at 0.
- * @param tx_pkts
- *  The address of an array of *nb_pkts* pointers to *rte_mbuf* structures
- *  which contain the output packets.
- * @param nb_pkts
- *  The maximum number of packets to transmit.
- *
- * @return
- *  The number of output packets actually stored in transmit descriptors of
- *  the transmit ring. The return value can be less than the value of the
- *  *tx_pkts* parameter when the transmit ring is full or has been filled up.
+ * @param[in] queue_id TX queue ID, but fixed value 0 in SPP.
+ * @param[in] tx_pkts Pointers to mbuf should be enough to store nb_pkts.
+ * @param nb_pkts Maximum number of TX packets.
+ * @return Number of TX packets as number of pointers to mbuf.
  */
-uint16_t spp_eth_tx_burst(uint16_t port_id, uint16_t queue_id,
+uint16_t sppwk_eth_tx_burst(uint16_t port_id, uint16_t queue_id,
 		struct rte_mbuf **tx_pkts, uint16_t nb_pkts);
 
-#endif /*  _SPP_PORT_H_ */
+#endif /*  __WK_SPP_PORT_H__ */
-- 
2.17.1



From spp-request@dpdk.org Mon Jul 01 13:11:35 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd105.ddreams.local
 (zssg-mailmd105.ddreams.local [10.160.123.100])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTY00XLP3NL1U10@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 01 Jul 2019 13:11:45 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd105.ddreams.local by
 zssg-mailmd105.ddreams.local (dDREAMS) id <0PTY019123NLLJ00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:11:45 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd105.ddreams.local
 (dDREAMS) with ESMTP id <0PTY00X623NLGS70@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:11:45 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id 802CA7E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:11:45 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 7E61E8E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:11:45 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 72B378E605C	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:11:45 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 8C2108E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:11:44 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:11:44 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BiiK015510;	Mon,
 1 Jul 2019 13:11:44 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x614Bigj015509;	Mon, 1 Jul 2019 13:11:44 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x614BiHr015506	for unknown; Mon,
 1 Jul 2019 13:11:44 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BiqH025100 for
 unknown; Mon, 1 Jul 2019 13:11:44 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BhWU025094 for
 unknown; Mon, 1 Jul 2019 13:11:43 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x614Bb63006743	for unknown; Mon,
 1 Jul 2019 13:11:42 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id ABE2F325F	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 1 Jul 2019 06:11:36 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 32, Issue 1
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 01 Jul 2019 06:11:35 +0200
Message-id: <mailman.24122.1561954295.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH] shared/sec: rename members of enum sppwk_port_ops
      (yasufum.o@gmail.com)
   2. [PATCH 0/4] Add specific RX and TX burst functions
      (yasufum.o@gmail.com)
   3. [PATCH 1/4] shared/sec: Add RX and TX burst without VLAN
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon,  1 Jul 2019 13:11:07 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] shared/sec: rename members of enum
	sppwk_port_ops
Message-ID: <20190701041107.33893-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Name of Members of enum `sppwk_port_ops` such as
`SPPWK_PORT_ABL_OPS_ADD_VLANTAG` or `SPPWK_PORT_ABL_OPS_DEL_VLANTAG`
are too long. It is enough, for example `SPPWK_PORT_OPS_ADD_VLAN` or
so.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/mir_cmd_runner.c                            | 10 +++++-----
 src/pcap/cmd_utils.h                                   |  6 +++---
 src/shared/secondary/spp_worker_th/cmd_parser.c        |  8 ++++----
 src/shared/secondary/spp_worker_th/cmd_res_formatter.c |  6 +++---
 src/shared/secondary/spp_worker_th/cmd_utils.h         |  6 +++---
 src/shared/secondary/spp_worker_th/spp_port.c          |  8 ++++----
 src/vf/vf_cmd_runner.c                                 | 10 +++++-----
 7 files changed, 27 insertions(+), 27 deletions(-)

diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index 307b3f6..2f63f77 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -176,10 +176,10 @@ update_port(enum sppwk_action wk_action,
 		if (port_idx >= SPP_RET_OK) {
 			/* registered */
 			/* TODO(yasufum) confirm it is needed for spp_mirror. */
-			if (port_attrs->ops == SPPWK_PORT_ABL_OPS_ADD_VLANTAG) {
+			if (port_attrs->ops == SPPWK_PORT_OPS_ADD_VLAN) {
 				while ((cnt < PORT_ABL_MAX) &&
 					    (port_info->port_attrs[cnt].ops !=
-					    SPPWK_PORT_ABL_OPS_ADD_VLANTAG))
+					    SPPWK_PORT_OPS_ADD_VLAN))
 					cnt++;
 				if (cnt >= PORT_ABL_MAX) {
 					RTE_LOG(ERR, MIR_CMD_RUNNER, "update VLAN tag "
@@ -201,10 +201,10 @@ update_port(enum sppwk_action wk_action,
 			return SPP_RET_NG;
 		}
 
-		if (port_attrs->ops != SPPWK_PORT_ABL_OPS_NONE) {
+		if (port_attrs->ops != SPPWK_PORT_OPS_NONE) {
 			while ((cnt < PORT_ABL_MAX) &&
 					(port_info->port_attrs[cnt].ops !=
-					SPPWK_PORT_ABL_OPS_NONE)) {
+					SPPWK_PORT_OPS_NONE)) {
 				cnt++;
 			}
 			if (cnt >= PORT_ABL_MAX) {
@@ -226,7 +226,7 @@ update_port(enum sppwk_action wk_action,
 	case SPPWK_ACT_DEL:
 		for (cnt = 0; cnt < PORT_ABL_MAX; cnt++) {
 			if (port_info->port_attrs[cnt].ops ==
-					SPPWK_PORT_ABL_OPS_NONE)
+					SPPWK_PORT_OPS_NONE)
 				continue;
 
 			if (port_info->port_attrs[cnt].dir == dir)
diff --git a/src/pcap/cmd_utils.h b/src/pcap/cmd_utils.h
index e3714a5..f2cb9ef 100644
--- a/src/pcap/cmd_utils.h
+++ b/src/pcap/cmd_utils.h
@@ -76,9 +76,9 @@ enum sppwk_worker_type {
  * (e.g. add vlan tag or delete vlan tag)
  */
 enum sppwk_port_ops {
-	SPPWK_PORT_ABL_OPS_NONE,
-	SPPWK_PORT_ABL_OPS_ADD_VLANTAG,
-	SPPWK_PORT_ABL_OPS_DEL_VLANTAG,
+	SPPWK_PORT_OPS_NONE,
+	SPPWK_PORT_OPS_ADD_VLAN,  /* Add vlan tag. */
+	SPPWK_PORT_OPS_DEL_VLAN,  /* Delete vlan tag. */
 };
 
 /* getopt_long return value for long option */
diff --git a/src/shared/secondary/spp_worker_th/cmd_parser.c b/src/shared/secondary/spp_worker_th/cmd_parser.c
index 7933ed2..84de7e4 100644
--- a/src/shared/secondary/spp_worker_th/cmd_parser.c
+++ b/src/shared/secondary/spp_worker_th/cmd_parser.c
@@ -543,7 +543,7 @@ parse_port_vlan_ops(void *output, const char *arg_val,
 	struct sppwk_port_attrs *port_attrs = &port->port_attrs;
 
 	switch (port_attrs->ops) {
-	case SPPWK_PORT_ABL_OPS_NONE:
+	case SPPWK_PORT_OPS_NONE:
 		ret = get_list_idx(arg_val, PORT_ABILITY_LIST);
 		if (unlikely(ret <= 0)) {
 			RTE_LOG(ERR, WK_CMD_PARSER,
@@ -554,7 +554,7 @@ parse_port_vlan_ops(void *output, const char *arg_val,
 		port_attrs->ops = ret;
 		port_attrs->dir = port->dir;
 		break;
-	case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
+	case SPPWK_PORT_OPS_ADD_VLAN:
 		/* Nothing to do. */
 		break;
 	default:
@@ -575,7 +575,7 @@ parse_port_vid(void *output, const char *arg_val,
 	struct sppwk_port_attrs *port_attrs = &port->port_attrs;
 
 	switch (port_attrs->ops) {
-	case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
+	case SPPWK_PORT_OPS_ADD_VLAN:
 		vlan_id = get_int_in_range(&port_attrs->capability.vlantag.vid,
 			arg_val, 0, ETH_VLAN_ID_MAX);
 		if (unlikely(vlan_id < SPP_RET_OK)) {
@@ -604,7 +604,7 @@ parse_port_pcp(void *output, const char *arg_val,
 	struct sppwk_port_attrs *port_attrs = &port->port_attrs;
 
 	switch (port_attrs->ops) {
-	case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
+	case SPPWK_PORT_OPS_ADD_VLAN:
 		pcp = get_int_in_range(&port_attrs->capability.vlantag.pcp,
 				arg_val, 0, SPP_VLAN_PCP_MAX);
 		if (unlikely(pcp < SPP_RET_OK)) {
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index c18f8e5..73ef4c2 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -157,8 +157,8 @@ append_vlan_block(const char *name, char **output,
 	spp_port_ability_get_info(port_id, dir, &port_attrs);
 	for (i = 0; i < PORT_ABL_MAX; i++) {
 		switch (port_attrs[i].ops) {
-		case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
-		case SPPWK_PORT_ABL_OPS_DEL_VLANTAG:
+		case SPPWK_PORT_OPS_ADD_VLAN:
+		case SPPWK_PORT_OPS_DEL_VLAN:
 			ret = append_vlan_value(&tmp_buff, port_attrs[i].ops,
 					port_attrs[i].capability.vlantag.vid,
 					port_attrs[i].capability.vlantag.pcp);
@@ -178,7 +178,7 @@ append_vlan_block(const char *name, char **output,
 		}
 	}
 	if (i == PORT_ABL_MAX) {
-		ret = append_vlan_value(&tmp_buff, SPPWK_PORT_ABL_OPS_NONE,
+		ret = append_vlan_value(&tmp_buff, SPPWK_PORT_OPS_NONE,
 				0, 0);
 		if (unlikely(ret < SPP_RET_OK))
 			return SPP_RET_NG;
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 69e0a69..1d32228 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -113,9 +113,9 @@ enum sppwk_port_dir {
  * (e.g. add vlan tag or delete vlan tag)
  */
 enum sppwk_port_ops {
-	SPPWK_PORT_ABL_OPS_NONE,
-	SPPWK_PORT_ABL_OPS_ADD_VLANTAG,
-	SPPWK_PORT_ABL_OPS_DEL_VLANTAG,
+	SPPWK_PORT_OPS_NONE,
+	SPPWK_PORT_OPS_ADD_VLAN,  /* Add vlan tag. */
+	SPPWK_PORT_OPS_DEL_VLAN,  /* Delete vlan tag. */
 };
 
 /* getopt_long return value for long option */
diff --git a/src/shared/secondary/spp_worker_th/spp_port.c b/src/shared/secondary/spp_worker_th/spp_port.c
index cc87200..6fe0dc5 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.c
+++ b/src/shared/secondary/spp_worker_th/spp_port.c
@@ -276,12 +276,12 @@ port_ability_set_ability(struct sppwk_port_info *port,
 				sizeof(struct sppwk_port_attrs));
 
 		switch (port_attrs_out[out_cnt].ops) {
-		case SPPWK_PORT_ABL_OPS_ADD_VLANTAG:
+		case SPPWK_PORT_OPS_ADD_VLAN:
 			tag = &port_attrs_out[out_cnt].capability.vlantag;
 			tag->tci = rte_cpu_to_be_16(SPP_VLANTAG_CALC_TCI(
 					tag->vid, tag->pcp));
 			break;
-		case SPPWK_PORT_ABL_OPS_DEL_VLANTAG:
+		case SPPWK_PORT_OPS_DEL_VLAN:
 		default:
 			/* Nothing to do. */
 			break;
@@ -335,11 +335,11 @@ port_ability_each_operation(uint16_t port_id,
 	struct sppwk_port_attrs *port_attrs = NULL;
 
 	spp_port_ability_get_info(port_id, dir, &port_attrs);
-	if (unlikely(port_attrs[0].ops == SPPWK_PORT_ABL_OPS_NONE))
+	if (unlikely(port_attrs[0].ops == SPPWK_PORT_OPS_NONE))
 		return nb_pkts;
 
 	for (cnt = 0; cnt < PORT_ABL_MAX; cnt++) {
-		if (port_attrs[cnt].ops == SPPWK_PORT_ABL_OPS_NONE)
+		if (port_attrs[cnt].ops == SPPWK_PORT_OPS_NONE)
 			break;
 
 		ok_pkts = port_ability_function_list[port_attrs[cnt].ops](
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index e9388e0..fe37a19 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -297,10 +297,10 @@ update_port(enum sppwk_action wk_action,
 		port_idx = get_idx_port_info(port_info, *nof_ports, ports);
 		if (port_idx >= SPP_RET_OK) {
 			/* registered */
-			if (port_attrs->ops == SPPWK_PORT_ABL_OPS_ADD_VLANTAG) {
+			if (port_attrs->ops == SPPWK_PORT_OPS_ADD_VLAN) {
 				while ((cnt < PORT_ABL_MAX) &&
 					    (port_info->port_attrs[cnt].ops !=
-					    SPPWK_PORT_ABL_OPS_ADD_VLANTAG))
+					    SPPWK_PORT_OPS_ADD_VLAN))
 					cnt++;
 				if (cnt >= PORT_ABL_MAX) {
 					RTE_LOG(ERR, VF_CMD_RUNNER, "update VLAN tag "
@@ -322,10 +322,10 @@ update_port(enum sppwk_action wk_action,
 			return SPP_RET_NG;
 		}
 
-		if (port_attrs->ops != SPPWK_PORT_ABL_OPS_NONE) {
+		if (port_attrs->ops != SPPWK_PORT_OPS_NONE) {
 			while ((cnt < PORT_ABL_MAX) &&
 					(port_info->port_attrs[cnt].ops !=
-					SPPWK_PORT_ABL_OPS_NONE)) {
+					SPPWK_PORT_OPS_NONE)) {
 				cnt++;
 			}
 			if (cnt >= PORT_ABL_MAX) {
@@ -347,7 +347,7 @@ update_port(enum sppwk_action wk_action,
 	case SPPWK_ACT_DEL:
 		for (cnt = 0; cnt < PORT_ABL_MAX; cnt++) {
 			if (port_info->port_attrs[cnt].ops ==
-					SPPWK_PORT_ABL_OPS_NONE)
+					SPPWK_PORT_OPS_NONE)
 				continue;
 
 			if (port_info->port_attrs[cnt].dir == dir)
-- 
2.17.1



------------------------------

Message: 2
Date: Mon,  1 Jul 2019 13:11:22 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 0/4] Add specific RX and TX burst functions
Message-ID: <20190701041126.33947-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

In SPP worker processes, customized version of rte_eth_rx_burst() and
rte_eth_tx_burst() are defined to add features of VLAN or ring lantency
statistics. However, these features are not required from all of
processes.

This series of patches is to add burst functions used for VLAN,
statistics or both.

Yasufumi Ogawa (4):
  shared/sec: Add RX and TX burst without VLAN
  spp_vf: change to use burst funcs with VLAN
  spp_mirror: change to use burst funcs with VLAN
  spp_pcap: update include path of port capability

 src/mirror/Makefile                           |   1 +
 src/mirror/mir_cmd_runner.c                   |   1 +
 src/mirror/spp_mirror.c                       |   7 +-
 src/pcap/Makefile                             |   1 +
 src/pcap/spp_pcap.c                           |   4 +-
 .../spp_worker_th/cmd_res_formatter.c         |   2 +
 .../spp_worker_th/cmd_res_formatter.h         |   1 -
 .../secondary/spp_worker_th/port_capability.c | 409 ++++++++++++++++++
 .../secondary/spp_worker_th/port_capability.h |  84 ++++
 src/shared/secondary/spp_worker_th/spp_port.c | 373 +---------------
 src/shared/secondary/spp_worker_th/spp_port.h | 100 +----
 src/vf/Makefile                               |   2 +-
 src/vf/classifier_mac.c                       |   8 +-
 src/vf/forwarder.c                            |   5 +-
 src/vf/spp_vf.c                               |   1 +
 src/vf/vf_cmd_runner.c                        |   1 +
 16 files changed, 546 insertions(+), 454 deletions(-)
 create mode 100644 src/shared/secondary/spp_worker_th/port_capability.c
 create mode 100644 src/shared/secondary/spp_worker_th/port_capability.h

-- 
2.17.1



------------------------------

Message: 3
Date: Mon,  1 Jul 2019 13:11:23 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 1/4] shared/sec: Add RX and TX burst without
	VLAN
Message-ID: <20190701041126.33947-2-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

In SPP worker, original version of RX and TX burst functions are
implemented in which adding or deleting VLAN tag are added to
rte_eth_rx_burst() and rte_eth_tx_burst(). However, it is also called
from processes which does not VLAN features.

This update is to add functions without VLAN features in addition to
them for supporting both of usecases.

  * sppwk_eth_rx_burst()
  * sppwk_eth_tx_burst()
  * sppwk_eth_vlan_rx_burst()
  * sppwk_eth_vlan_tx_burst()

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../spp_worker_th/cmd_res_formatter.c         |   2 +
 .../spp_worker_th/cmd_res_formatter.h         |   1 -
 .../secondary/spp_worker_th/port_capability.c | 409 ++++++++++++++++++
 .../secondary/spp_worker_th/port_capability.h |  84 ++++
 src/shared/secondary/spp_worker_th/spp_port.c | 373 +---------------
 src/shared/secondary/spp_worker_th/spp_port.h | 100 +----
 6 files changed, 526 insertions(+), 443 deletions(-)
 create mode 100644 src/shared/secondary/spp_worker_th/port_capability.c
 create mode 100644 src/shared/secondary/spp_worker_th/port_capability.h

diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index 73ef4c2..2cc7d42 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -3,6 +3,8 @@
  */
 
 #include "cmd_res_formatter.h"
+#include "spp_port.h"
+#include "port_capability.h"
 #include "cmd_utils.h"
 #include "shared/secondary/json_helper.h"
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
index 66eabb5..1e52c0e 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
@@ -6,7 +6,6 @@
 #define _SPPWK_CMD_RES_FORMATTER_H_
 
 #include "cmd_utils.h"
-#include "spp_port.h"
 #include "shared/common.h"
 
 #define CMD_RES_LEN  32  /* Size of message including null char. */
diff --git a/src/shared/secondary/spp_worker_th/port_capability.c b/src/shared/secondary/spp_worker_th/port_capability.c
new file mode 100644
index 0000000..ce498fd
--- /dev/null
+++ b/src/shared/secondary/spp_worker_th/port_capability.c
@@ -0,0 +1,409 @@
+/* SPDX-License-Identifier: BSD-3-Clause
+ * Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
+ */
+
+#include <rte_ether.h>
+#include <rte_ip.h>
+#include <rte_udp.h>
+#include <rte_tcp.h>
+#include <rte_net_crc.h>
+
+#include "port_capability.h"
+#include "shared/secondary/return_codes.h"
+#include "ringlatencystats.h"
+
+/* Port ability management information */
+struct port_abl_info {
+	volatile int ref_index; /* Index to reference area. */
+	volatile int upd_index; /* Index to update area. */
+	struct sppwk_port_attrs port_attrs[TWO_SIDES][PORT_ABL_MAX];
+				/* Port attributes for spp_vf. */
+};
+
+/* Port ability port information */
+struct port_mng_info {
+	enum port_type iface_type;  /* Interface type (phy, vhost or so). */
+	int iface_no;  /* Interface number. */
+	struct port_abl_info rx;  /* Mng data of port ability for RX. */
+	struct port_abl_info tx;  /* Mng data of port ability for Tx. */
+};
+
+/* Information for VLAN tag management. */
+struct port_mng_info g_port_mng_info[RTE_MAX_ETHPORTS];
+
+/* TPID of VLAN. */
+static uint16_t g_vlan_tpid;
+
+/* Initialize port ability. */
+void
+spp_port_ability_init(void)
+{
+	int cnt = 0;
+	g_vlan_tpid = rte_cpu_to_be_16(ETHER_TYPE_VLAN);
+	memset(g_port_mng_info, 0x00, sizeof(g_port_mng_info));
+	for (cnt = 0; cnt < RTE_MAX_ETHPORTS; cnt++) {
+		g_port_mng_info[cnt].rx.ref_index = 0;
+		g_port_mng_info[cnt].rx.upd_index = 1;
+		g_port_mng_info[cnt].tx.ref_index = 0;
+		g_port_mng_info[cnt].tx.upd_index = 1;
+	}
+}
+
+/* Get information of port ability. */
+void
+spp_port_ability_get_info(
+		int port_id, enum sppwk_port_dir dir,
+		struct sppwk_port_attrs **info)
+{
+	struct port_abl_info *mng = NULL;
+
+	switch (dir) {
+	case SPPWK_PORT_DIR_RX:
+		mng = &g_port_mng_info[port_id].rx;
+		break;
+	case SPPWK_PORT_DIR_TX:
+		mng = &g_port_mng_info[port_id].tx;
+		break;
+	default:
+		/* Not used. */
+		break;
+	}
+	*info = mng->port_attrs[mng->ref_index];
+}
+
+/* Calculation and Setting of FCS. */
+static inline void
+set_fcs_packet(struct rte_mbuf *pkt)
+{
+	uint32_t *fcs = NULL;
+	fcs = rte_pktmbuf_mtod_offset(pkt, uint32_t *, pkt->data_len);
+	*fcs = rte_net_crc_calc(rte_pktmbuf_mtod(pkt, void *),
+			pkt->data_len, RTE_NET_CRC32_ETH);
+}
+
+/* Add VLAN tag to packet. */
+static inline int
+add_vlantag_packet(
+		struct rte_mbuf *pkt,
+		const union sppwk_port_capability *capability)
+{
+	struct ether_hdr *old_ether = NULL;
+	struct ether_hdr *new_ether = NULL;
+	struct vlan_hdr  *vlan      = NULL;
+	const struct sppwk_vlan_tag *vlantag = &capability->vlantag;
+
+	old_ether = rte_pktmbuf_mtod(pkt, struct ether_hdr *);
+	if (old_ether->ether_type == g_vlan_tpid) {
+		/* For packets with VLAN tags, only VLAN ID is updated */
+		new_ether = old_ether;
+		vlan = (struct vlan_hdr *)&new_ether[1];
+	} else {
+		/* For packets without VLAN tag, add VLAN tag. */
+		new_ether = (struct ether_hdr *)rte_pktmbuf_prepend(pkt,
+				sizeof(struct vlan_hdr));
+		if (unlikely(new_ether == NULL)) {
+			RTE_LOG(ERR, PORT, "Failed to "
+					"get additional header area.\n");
+			return SPP_RET_NG;
+		}
+
+		rte_memcpy(new_ether, old_ether, sizeof(struct ether_hdr));
+		vlan = (struct vlan_hdr *)&new_ether[1];
+		vlan->eth_proto = new_ether->ether_type;
+		new_ether->ether_type = g_vlan_tpid;
+	}
+
+	vlan->vlan_tci = vlantag->tci;
+	set_fcs_packet(pkt);
+	return SPP_RET_OK;
+}
+
+/* Add VLAN tag to all packets. */
+static inline int
+add_vlantag_all_packets(
+		struct rte_mbuf **pkts, int nb_pkts,
+		const union sppwk_port_capability *capability)
+{
+	int ret = SPP_RET_OK;
+	int cnt = 0;
+	for (cnt = 0; cnt < nb_pkts; cnt++) {
+		ret = add_vlantag_packet(pkts[cnt], capability);
+		if (unlikely(ret < 0)) {
+			RTE_LOG(ERR, PORT,
+					"Failed to add VLAN tag."
+					"(pkts %d/%d)\n", cnt, nb_pkts);
+			break;
+		}
+	}
+	return cnt;
+}
+
+/* Delete VLAN tag to packet. */
+static inline int
+del_vlantag_packet(
+		struct rte_mbuf *pkt,
+		const union sppwk_port_capability *cbl __attribute__ ((unused)))
+{
+	struct ether_hdr *old_ether = NULL;
+	struct ether_hdr *new_ether = NULL;
+	uint32_t *old, *new;
+
+	old_ether = rte_pktmbuf_mtod(pkt, struct ether_hdr *);
+	if (old_ether->ether_type == g_vlan_tpid) {
+		/* For packets without VLAN tag, delete VLAN tag. */
+		new_ether = (struct ether_hdr *)rte_pktmbuf_adj(pkt,
+				sizeof(struct vlan_hdr));
+		if (unlikely(new_ether == NULL)) {
+			RTE_LOG(ERR, PORT, "Failed to "
+					"delete unnecessary header area.\n");
+			return SPP_RET_NG;
+		}
+
+		old = (uint32_t *)old_ether;
+		new = (uint32_t *)new_ether;
+		new[2] = old[2];
+		new[1] = old[1];
+		new[0] = old[0];
+		old[0] = 0;
+		set_fcs_packet(pkt);
+	}
+	return SPP_RET_OK;
+}
+
+/* Delete VLAN tag to all packets. */
+static inline int
+del_vlantag_all_packets(
+		struct rte_mbuf **pkts, int nb_pkts,
+		const union sppwk_port_capability *capability)
+{
+	int ret = SPP_RET_OK;
+	int cnt = 0;
+	for (cnt = 0; cnt < nb_pkts; cnt++) {
+		ret = del_vlantag_packet(pkts[cnt], capability);
+		if (unlikely(ret < 0)) {
+			RTE_LOG(ERR, PORT,
+					"Failed to del VLAN tag."
+					"(pkts %d/%d)\n", cnt, nb_pkts);
+			break;
+		}
+	}
+	return cnt;
+}
+
+/* Change index of management information. */
+void
+spp_port_ability_change_index(
+		enum port_ability_chg_index_type type,
+		int port_id, enum sppwk_port_dir dir)
+{
+	int cnt;
+	static int num_rx;
+	static int rx_list[RTE_MAX_ETHPORTS];
+	static int num_tx;
+	static int tx_list[RTE_MAX_ETHPORTS];
+	struct port_abl_info *mng = NULL;
+
+	if (type == PORT_ABILITY_CHG_INDEX_UPD) {
+		switch (dir) {
+		case SPPWK_PORT_DIR_RX:
+			mng = &g_port_mng_info[port_id].rx;
+			mng->upd_index = mng->ref_index;
+			rx_list[num_rx++] = port_id;
+			break;
+		case SPPWK_PORT_DIR_TX:
+			mng = &g_port_mng_info[port_id].tx;
+			mng->upd_index = mng->ref_index;
+			tx_list[num_tx++] = port_id;
+			break;
+		default:
+			/* Not used. */
+			break;
+		}
+		return;
+	}
+
+	for (cnt = 0; cnt < num_rx; cnt++) {
+		mng = &g_port_mng_info[rx_list[cnt]].rx;
+		mng->ref_index = (mng->upd_index+1) % TWO_SIDES;
+		rx_list[cnt] = 0;
+	}
+	for (cnt = 0; cnt < num_tx; cnt++) {
+		mng = &g_port_mng_info[tx_list[cnt]].tx;
+		mng->ref_index = (mng->upd_index+1) % TWO_SIDES;
+		tx_list[cnt] = 0;
+	}
+
+	num_rx = 0;
+	num_tx = 0;
+}
+
+/* Set ability data of port ability. */
+static void
+port_ability_set_ability(struct sppwk_port_info *port,
+		enum sppwk_port_dir dir)
+{
+	int in_cnt, out_cnt = 0;
+	int port_id = port->ethdev_port_id;
+	struct port_mng_info *port_mng = &g_port_mng_info[port_id];
+	struct port_abl_info *mng = NULL;
+	struct sppwk_port_attrs *port_attrs_in = port->port_attrs;
+	struct sppwk_port_attrs *port_attrs_out = NULL;
+	struct sppwk_vlan_tag *tag = NULL;
+
+	port_mng->iface_type = port->iface_type;
+	port_mng->iface_no   = port->iface_no;
+
+	switch (dir) {
+	case SPPWK_PORT_DIR_RX:
+		mng = &port_mng->rx;
+		break;
+	case SPPWK_PORT_DIR_TX:
+		mng = &port_mng->tx;
+		break;
+	default:
+		/* Not used. */
+		break;
+	}
+
+	port_attrs_out = mng->port_attrs[mng->upd_index];
+	memset(port_attrs_out, 0x00, sizeof(struct sppwk_port_attrs)
+			* PORT_ABL_MAX);
+	for (in_cnt = 0; in_cnt < PORT_ABL_MAX; in_cnt++) {
+		if (port_attrs_in[in_cnt].dir != dir)
+			continue;
+
+		memcpy(&port_attrs_out[out_cnt], &port_attrs_in[in_cnt],
+				sizeof(struct sppwk_port_attrs));
+
+		switch (port_attrs_out[out_cnt].ops) {
+		case SPPWK_PORT_OPS_ADD_VLAN:
+			tag = &port_attrs_out[out_cnt].capability.vlantag;
+			tag->tci = rte_cpu_to_be_16(SPP_VLANTAG_CALC_TCI(
+					tag->vid, tag->pcp));
+			break;
+		case SPPWK_PORT_OPS_DEL_VLAN:
+		default:
+			/* Nothing to do. */
+			break;
+		}
+
+		out_cnt++;
+	}
+
+	spp_port_ability_change_index(PORT_ABILITY_CHG_INDEX_UPD,
+			port_id, dir);
+}
+
+/* Update port capability. */
+void
+spp_port_ability_update(const struct sppwk_comp_info *component)
+{
+	int cnt;
+	struct sppwk_port_info *port = NULL;
+	for (cnt = 0; cnt < component->nof_rx; cnt++) {
+		port = component->rx_ports[cnt];
+		port_ability_set_ability(port, SPPWK_PORT_DIR_RX);
+	}
+
+	for (cnt = 0; cnt < component->nof_tx; cnt++) {
+		port = component->tx_ports[cnt];
+		port_ability_set_ability(port, SPPWK_PORT_DIR_TX);
+	}
+}
+
+/* Definition of functions that operate port abilities. */
+typedef int (*port_ability_func)(
+		struct rte_mbuf **pkts, int nb_pkts,
+		const union sppwk_port_capability *capability);
+
+/* List of functions per port ability. */
+port_ability_func port_ability_function_list[] = {
+	NULL,                    /* None */
+	add_vlantag_all_packets, /* Add VLAN tag */
+	del_vlantag_all_packets, /* Del VLAN tag */
+	NULL                     /* Termination */
+};
+
+/* Each packet operation of port capability. */
+static inline int
+port_ability_each_operation(uint16_t port_id,
+		struct rte_mbuf **pkts, const uint16_t nb_pkts,
+		enum sppwk_port_dir dir)
+{
+	int cnt, buf;
+	int ok_pkts = nb_pkts;
+	struct sppwk_port_attrs *port_attrs = NULL;
+
+	spp_port_ability_get_info(port_id, dir, &port_attrs);
+	if (unlikely(port_attrs[0].ops == SPPWK_PORT_OPS_NONE))
+		return nb_pkts;
+
+	for (cnt = 0; cnt < PORT_ABL_MAX; cnt++) {
+		/* Do nothing if the port is assigned no VLAN feature. */
+		if (port_attrs[cnt].ops == SPPWK_PORT_OPS_NONE)
+			break;
+
+		/* Add or delete VLAN tag with operation function. */
+		ok_pkts = port_ability_function_list[port_attrs[cnt].ops](
+				pkts, ok_pkts, &port_attrs->capability);
+	}
+
+	/* Discard remained packets to release mbuf. */
+	if (unlikely(ok_pkts < nb_pkts)) {
+		for (buf = ok_pkts; buf < nb_pkts; buf++)
+			rte_pktmbuf_free(pkts[buf]);
+	}
+
+	return ok_pkts;
+}
+
+/* TODO(yasufum) move to outside of this file. */
+/* Wrapper function for rte_eth_rx_burst() with VLAN feature. */
+uint16_t
+sppwk_eth_vlan_rx_burst(uint16_t port_id,
+		uint16_t queue_id __attribute__ ((unused)),
+		struct rte_mbuf **rx_pkts, const uint16_t nb_pkts)
+{
+	uint16_t nb_rx;
+	nb_rx = rte_eth_rx_burst(port_id, 0, rx_pkts, nb_pkts);
+	if (unlikely(nb_rx == 0))
+		return SPP_RET_OK;
+
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+	if (g_port_mng_info[port_id].iface_type == RING)
+		spp_ringlatencystats_calculate_latency(
+				g_port_mng_info[port_id].iface_no,
+				rx_pkts, nb_pkts);
+#endif /* SPP_RINGLATENCYSTATS_ENABLE */
+
+	/* Add or delete VLAN tag. */
+	return port_ability_each_operation(port_id, rx_pkts, nb_rx,
+			SPPWK_PORT_DIR_RX);
+}
+
+
+/* TODO(yasufum) move to outside of this file. */
+/* Wrapper function for rte_eth_tx_burst() with VLAN feature. */
+uint16_t
+sppwk_eth_vlan_tx_burst(uint16_t port_id,
+		uint16_t queue_id __attribute__ ((unused)),
+		struct rte_mbuf **tx_pkts, uint16_t nb_pkts)
+{
+	uint16_t nb_tx;
+
+	/* Add or delete VLAN tag. */
+	nb_tx = port_ability_each_operation(port_id, tx_pkts, nb_pkts,
+			SPPWK_PORT_DIR_TX);
+
+	if (unlikely(nb_tx == 0))
+		return SPP_RET_OK;
+
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+	if (g_port_mng_info[port_id].iface_type == RING)
+		spp_ringlatencystats_add_time_stamp(
+				g_port_mng_info[port_id].iface_no,
+				tx_pkts, nb_pkts);
+#endif /* SPP_RINGLATENCYSTATS_ENABLE */
+
+	return rte_eth_tx_burst(port_id, 0, tx_pkts, nb_tx);
+}
diff --git a/src/shared/secondary/spp_worker_th/port_capability.h b/src/shared/secondary/spp_worker_th/port_capability.h
new file mode 100644
index 0000000..5d2a38a
--- /dev/null
+++ b/src/shared/secondary/spp_worker_th/port_capability.h
@@ -0,0 +1,84 @@
+/* SPDX-License-Identifier: BSD-3-Clause
+ * Copyright(c) 2019 Nippon Telegraph and Telephone Corporation
+ */
+
+#ifndef __PORT_CAPABILITY_H__
+#define __PORT_CAPABILITY_H__
+
+/**
+ * @file
+ * SPP Port ability
+ *
+ * Provide about the ability per port.
+ */
+
+#include "cmd_utils.h"
+
+/** Calculate TCI of VLAN tag. */
+#define SPP_VLANTAG_CALC_TCI(id, pcp) (((pcp & 0x07) << 13) | (id & 0x0fff))
+
+/** Type for changing index. */
+enum port_ability_chg_index_type {
+	PORT_ABILITY_CHG_INDEX_REF,  /** To change index to reference area. */
+	PORT_ABILITY_CHG_INDEX_UPD,  /** To change index to update area. */
+};
+
+/** Initialize port ability. */
+void spp_port_ability_init(void);
+
+/**
+ * Get information of port ability.
+ *
+ * @param port_id Etherdev ID.
+ * @param rxtx RX/TX ID of port_id.
+ * @param info Port ability information.
+ */
+void spp_port_ability_get_info(
+		int port_id, enum sppwk_port_dir dir,
+		struct sppwk_port_attrs **info);
+
+/**
+ * Change index of management information.
+ *
+ * @param port_id Etherdev ID.
+ * @param rxtx RX/TX ID of port_id.
+ * @param type Type for changing index.
+ */
+void spp_port_ability_change_index(
+		enum port_ability_chg_index_type type,
+		int port_id, enum sppwk_port_dir dir);
+
+/**
+ * Update port capability.
+ *
+ * @param component_info
+ *  The pointer to struct sppwk_comp_info.@n
+ *  The data for updating the internal data of port ability.
+ */
+void spp_port_ability_update(const struct sppwk_comp_info *component);
+
+/**
+ * Wrapper function for rte_eth_rx_burst() with ring latency feature.
+ *
+ * @param[in] port_id Etherdev ID.
+ * @param[in] queue_id RX queue ID, but fixed value 0 in SPP.
+ * @param[in] rx_pkts Pointers to mbuf should be enough to store nb_pkts.
+ * @param nb_pkts Maximum number of RX packets.
+ * @return Number of RX packets as number of pointers to mbuf.
+ */
+uint16_t sppwk_eth_vlan_rx_burst(uint16_t port_id, uint16_t queue_id,
+		struct rte_mbuf **rx_pkts, const uint16_t nb_pkts);
+
+/**
+ * Wrapper function for rte_eth_tx_burst() with ring latency feature.
+ *
+ * @param port_id Etherdev ID.
+ * @param[in] queue_id TX queue ID, but fixed value 0 in SPP.
+ * @param[in] tx_pkts Pointers to mbuf should be enough to store nb_pkts.
+ * @param nb_pkts Maximum number of TX packets.
+ * @return Number of TX packets as number of pointers to mbuf.
+ */
+uint16_t sppwk_eth_vlan_tx_burst(uint16_t port_id, uint16_t queue_id,
+		struct rte_mbuf **tx_pkts, uint16_t nb_pkts);
+
+#endif /*  __PORT_CAPABILITY_H__ */
diff --git a/src/shared/secondary/spp_worker_th/spp_port.c b/src/shared/secondary/spp_worker_th/spp_port.c
index 6fe0dc5..0c7df2b 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.c
+++ b/src/shared/secondary/spp_worker_th/spp_port.c
@@ -12,357 +12,17 @@
 #include "shared/secondary/return_codes.h"
 #include "ringlatencystats.h"
 
-/* Port ability management information */
-struct port_abl_info {
-	volatile int ref_index; /* Index to reference area. */
-	volatile int upd_index; /* Index to update area. */
-	struct sppwk_port_attrs port_attrs[TWO_SIDES][PORT_ABL_MAX];
-				/* Port attributes for spp_vf. */
-};
-
-/* Port ability port information */
-struct port_mng_info {
-	enum port_type iface_type;  /* Interface type (phy, vhost or so). */
-	int iface_no;  /* Interface number. */
-	struct port_abl_info rx;  /* Mng data of port ability for RX. */
-	struct port_abl_info tx;  /* Mng data of port ability for Tx. */
-};
-
-/* Information for VLAN tag management. */
-struct port_mng_info g_port_mng_info[RTE_MAX_ETHPORTS];
-
-/* TPID of VLAN. */
-static uint16_t g_vlan_tpid;
-
-/* Initialize port ability. */
-void
-spp_port_ability_init(void)
-{
-	int cnt = 0;
-	g_vlan_tpid = rte_cpu_to_be_16(ETHER_TYPE_VLAN);
-	memset(g_port_mng_info, 0x00, sizeof(g_port_mng_info));
-	for (cnt = 0; cnt < RTE_MAX_ETHPORTS; cnt++) {
-		g_port_mng_info[cnt].rx.ref_index = 0;
-		g_port_mng_info[cnt].rx.upd_index = 1;
-		g_port_mng_info[cnt].tx.ref_index = 0;
-		g_port_mng_info[cnt].tx.upd_index = 1;
-	}
-}
-
-/* Get information of port ability. */
-void
-spp_port_ability_get_info(
-		int port_id, enum sppwk_port_dir dir,
-		struct sppwk_port_attrs **info)
-{
-	struct port_abl_info *mng = NULL;
-
-	switch (dir) {
-	case SPPWK_PORT_DIR_RX:
-		mng = &g_port_mng_info[port_id].rx;
-		break;
-	case SPPWK_PORT_DIR_TX:
-		mng = &g_port_mng_info[port_id].tx;
-		break;
-	default:
-		/* Not used. */
-		break;
-	}
-	*info = mng->port_attrs[mng->ref_index];
-}
-
-/* Calculation and Setting of FCS. */
-static inline void
-set_fcs_packet(struct rte_mbuf *pkt)
-{
-	uint32_t *fcs = NULL;
-	fcs = rte_pktmbuf_mtod_offset(pkt, uint32_t *, pkt->data_len);
-	*fcs = rte_net_crc_calc(rte_pktmbuf_mtod(pkt, void *),
-			pkt->data_len, RTE_NET_CRC32_ETH);
-}
-
-/* Add VLAN tag to packet. */
-static inline int
-add_vlantag_packet(
-		struct rte_mbuf *pkt,
-		const union sppwk_port_capability *capability)
-{
-	struct ether_hdr *old_ether = NULL;
-	struct ether_hdr *new_ether = NULL;
-	struct vlan_hdr  *vlan      = NULL;
-	const struct sppwk_vlan_tag *vlantag = &capability->vlantag;
-
-	old_ether = rte_pktmbuf_mtod(pkt, struct ether_hdr *);
-	if (old_ether->ether_type == g_vlan_tpid) {
-		/* For packets with VLAN tags, only VLAN ID is updated */
-		new_ether = old_ether;
-		vlan = (struct vlan_hdr *)&new_ether[1];
-	} else {
-		/* For packets without VLAN tag, add VLAN tag. */
-		new_ether = (struct ether_hdr *)rte_pktmbuf_prepend(pkt,
-				sizeof(struct vlan_hdr));
-		if (unlikely(new_ether == NULL)) {
-			RTE_LOG(ERR, PORT, "Failed to "
-					"get additional header area.\n");
-			return SPP_RET_NG;
-		}
-
-		rte_memcpy(new_ether, old_ether, sizeof(struct ether_hdr));
-		vlan = (struct vlan_hdr *)&new_ether[1];
-		vlan->eth_proto = new_ether->ether_type;
-		new_ether->ether_type = g_vlan_tpid;
-	}
-
-	vlan->vlan_tci = vlantag->tci;
-	set_fcs_packet(pkt);
-	return SPP_RET_OK;
-}
-
-/* Add VLAN tag to all packets. */
-static inline int
-add_vlantag_all_packets(
-		struct rte_mbuf **pkts, int nb_pkts,
-		const union sppwk_port_capability *capability)
-{
-	int ret = SPP_RET_OK;
-	int cnt = 0;
-	for (cnt = 0; cnt < nb_pkts; cnt++) {
-		ret = add_vlantag_packet(pkts[cnt], capability);
-		if (unlikely(ret < 0)) {
-			RTE_LOG(ERR, PORT,
-					"Failed to add VLAN tag."
-					"(pkts %d/%d)\n", cnt, nb_pkts);
-			break;
-		}
-	}
-	return cnt;
-}
-
-/* Delete VLAN tag to packet. */
-static inline int
-del_vlantag_packet(
-		struct rte_mbuf *pkt,
-		const union sppwk_port_capability *cbl __attribute__ ((unused)))
-{
-	struct ether_hdr *old_ether = NULL;
-	struct ether_hdr *new_ether = NULL;
-	uint32_t *old, *new;
-
-	old_ether = rte_pktmbuf_mtod(pkt, struct ether_hdr *);
-	if (old_ether->ether_type == g_vlan_tpid) {
-		/* For packets without VLAN tag, delete VLAN tag. */
-		new_ether = (struct ether_hdr *)rte_pktmbuf_adj(pkt,
-				sizeof(struct vlan_hdr));
-		if (unlikely(new_ether == NULL)) {
-			RTE_LOG(ERR, PORT, "Failed to "
-					"delete unnecessary header area.\n");
-			return SPP_RET_NG;
-		}
-
-		old = (uint32_t *)old_ether;
-		new = (uint32_t *)new_ether;
-		new[2] = old[2];
-		new[1] = old[1];
-		new[0] = old[0];
-		old[0] = 0;
-		set_fcs_packet(pkt);
-	}
-	return SPP_RET_OK;
-}
-
-/* Delete VLAN tag to all packets. */
-static inline int
-del_vlantag_all_packets(
-		struct rte_mbuf **pkts, int nb_pkts,
-		const union sppwk_port_capability *capability)
-{
-	int ret = SPP_RET_OK;
-	int cnt = 0;
-	for (cnt = 0; cnt < nb_pkts; cnt++) {
-		ret = del_vlantag_packet(pkts[cnt], capability);
-		if (unlikely(ret < 0)) {
-			RTE_LOG(ERR, PORT,
-					"Failed to del VLAN tag."
-					"(pkts %d/%d)\n", cnt, nb_pkts);
-			break;
-		}
-	}
-	return cnt;
-}
-
-/* Change index of management information. */
-void
-spp_port_ability_change_index(
-		enum port_ability_chg_index_type type,
-		int port_id, enum sppwk_port_dir dir)
-{
-	int cnt;
-	static int num_rx;
-	static int rx_list[RTE_MAX_ETHPORTS];
-	static int num_tx;
-	static int tx_list[RTE_MAX_ETHPORTS];
-	struct port_abl_info *mng = NULL;
-
-	if (type == PORT_ABILITY_CHG_INDEX_UPD) {
-		switch (dir) {
-		case SPPWK_PORT_DIR_RX:
-			mng = &g_port_mng_info[port_id].rx;
-			mng->upd_index = mng->ref_index;
-			rx_list[num_rx++] = port_id;
-			break;
-		case SPPWK_PORT_DIR_TX:
-			mng = &g_port_mng_info[port_id].tx;
-			mng->upd_index = mng->ref_index;
-			tx_list[num_tx++] = port_id;
-			break;
-		default:
-			/* Not used. */
-			break;
-		}
-		return;
-	}
-
-	for (cnt = 0; cnt < num_rx; cnt++) {
-		mng = &g_port_mng_info[rx_list[cnt]].rx;
-		mng->ref_index = (mng->upd_index+1) % TWO_SIDES;
-		rx_list[cnt] = 0;
-	}
-	for (cnt = 0; cnt < num_tx; cnt++) {
-		mng = &g_port_mng_info[tx_list[cnt]].tx;
-		mng->ref_index = (mng->upd_index+1) % TWO_SIDES;
-		tx_list[cnt] = 0;
-	}
-
-	num_rx = 0;
-	num_tx = 0;
-}
-
-/* Set ability data of port ability. */
-static void
-port_ability_set_ability(struct sppwk_port_info *port,
-		enum sppwk_port_dir dir)
-{
-	int in_cnt, out_cnt = 0;
-	int port_id = port->ethdev_port_id;
-	struct port_mng_info *port_mng = &g_port_mng_info[port_id];
-	struct port_abl_info *mng = NULL;
-	struct sppwk_port_attrs *port_attrs_in = port->port_attrs;
-	struct sppwk_port_attrs *port_attrs_out = NULL;
-	struct sppwk_vlan_tag *tag = NULL;
-
-	port_mng->iface_type = port->iface_type;
-	port_mng->iface_no   = port->iface_no;
-
-	switch (dir) {
-	case SPPWK_PORT_DIR_RX:
-		mng = &port_mng->rx;
-		break;
-	case SPPWK_PORT_DIR_TX:
-		mng = &port_mng->tx;
-		break;
-	default:
-		/* Not used. */
-		break;
-	}
-
-	port_attrs_out = mng->port_attrs[mng->upd_index];
-	memset(port_attrs_out, 0x00, sizeof(struct sppwk_port_attrs)
-			* PORT_ABL_MAX);
-	for (in_cnt = 0; in_cnt < PORT_ABL_MAX; in_cnt++) {
-		if (port_attrs_in[in_cnt].dir != dir)
-			continue;
-
-		memcpy(&port_attrs_out[out_cnt], &port_attrs_in[in_cnt],
-				sizeof(struct sppwk_port_attrs));
-
-		switch (port_attrs_out[out_cnt].ops) {
-		case SPPWK_PORT_OPS_ADD_VLAN:
-			tag = &port_attrs_out[out_cnt].capability.vlantag;
-			tag->tci = rte_cpu_to_be_16(SPP_VLANTAG_CALC_TCI(
-					tag->vid, tag->pcp));
-			break;
-		case SPPWK_PORT_OPS_DEL_VLAN:
-		default:
-			/* Nothing to do. */
-			break;
-		}
-
-		out_cnt++;
-	}
-
-	spp_port_ability_change_index(PORT_ABILITY_CHG_INDEX_UPD,
-			port_id, dir);
-}
-
-/* Update port capability. */
-void
-spp_port_ability_update(const struct sppwk_comp_info *component)
-{
-	int cnt;
-	struct sppwk_port_info *port = NULL;
-	for (cnt = 0; cnt < component->nof_rx; cnt++) {
-		port = component->rx_ports[cnt];
-		port_ability_set_ability(port, SPPWK_PORT_DIR_RX);
-	}
-
-	for (cnt = 0; cnt < component->nof_tx; cnt++) {
-		port = component->tx_ports[cnt];
-		port_ability_set_ability(port, SPPWK_PORT_DIR_TX);
-	}
-}
-
-/* Definition of functions that operate port abilities. */
-typedef int (*port_ability_func)(
-		struct rte_mbuf **pkts, int nb_pkts,
-		const union sppwk_port_capability *capability);
-
-/* List of functions per port ability. */
-port_ability_func port_ability_function_list[] = {
-	NULL,                    /* None */
-	add_vlantag_all_packets, /* Add VLAN tag */
-	del_vlantag_all_packets, /* Del VLAN tag */
-	NULL                     /* Termination */
-};
-
-/* Each packet operation of port capability. */
-static inline int
-port_ability_each_operation(uint16_t port_id,
-		struct rte_mbuf **pkts, const uint16_t nb_pkts,
-		enum sppwk_port_dir dir)
-{
-	int cnt, buf;
-	int ok_pkts = nb_pkts;
-	struct sppwk_port_attrs *port_attrs = NULL;
-
-	spp_port_ability_get_info(port_id, dir, &port_attrs);
-	if (unlikely(port_attrs[0].ops == SPPWK_PORT_OPS_NONE))
-		return nb_pkts;
-
-	for (cnt = 0; cnt < PORT_ABL_MAX; cnt++) {
-		if (port_attrs[cnt].ops == SPPWK_PORT_OPS_NONE)
-			break;
-
-		ok_pkts = port_ability_function_list[port_attrs[cnt].ops](
-				pkts, ok_pkts, &port_attrs->capability);
-	}
-
-	/* Discard remained packets to release mbuf. */
-	if (unlikely(ok_pkts < nb_pkts)) {
-		for (buf = ok_pkts; buf < nb_pkts; buf++)
-			rte_pktmbuf_free(pkts[buf]);
-	}
-
-	return ok_pkts;
-}
-
-/* Wrapper function for rte_eth_rx_burst(). */
+/* Wrapper function for rte_eth_rx_burst() with ring latency feature. */
 uint16_t
-spp_eth_rx_burst(
-		uint16_t port_id, uint16_t queue_id  __attribute__ ((unused)),
+sppwk_eth_rx_burst(uint16_t port_id,
+		uint16_t queue_id  __attribute__ ((unused)),
 		struct rte_mbuf **rx_pkts, const uint16_t nb_pkts)
 {
-	uint16_t nb_rx = 0;
+	uint16_t nb_rx;
+
 	nb_rx = rte_eth_rx_burst(port_id, 0, rx_pkts, nb_pkts);
+
+	/* TODO(yasufum) confirm why it returns SPP_RET_OK. */
 	if (unlikely(nb_rx == 0))
 		return SPP_RET_OK;
 
@@ -373,21 +33,18 @@ spp_eth_rx_burst(
 				rx_pkts, nb_pkts);
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 
-	return port_ability_each_operation(port_id, rx_pkts, nb_rx,
-			SPPWK_PORT_DIR_RX);
+	return nb_rx;
 }
 
-/* Wrapper function for rte_eth_tx_burst(). */
+/* Wrapper function for rte_eth_tx_burst() with ring latency feature. */
 uint16_t
-spp_eth_tx_burst(
-		uint16_t port_id, uint16_t queue_id  __attribute__ ((unused)),
+sppwk_eth_tx_burst(uint16_t port_id,
+		uint16_t queue_id __attribute__ ((unused)),
 		struct rte_mbuf **tx_pkts, uint16_t nb_pkts)
 {
-	uint16_t nb_tx = 0;
-	nb_tx = port_ability_each_operation(port_id, tx_pkts, nb_pkts,
-			SPPWK_PORT_DIR_TX);
-	if (unlikely(nb_tx == 0))
-		return SPP_RET_OK;
+	uint16_t nb_tx;
+
+	nb_tx = rte_eth_tx_burst(port_id, 0, tx_pkts, nb_pkts);
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
 	if (g_port_mng_info[port_id].iface_type == RING)
@@ -396,5 +53,5 @@ spp_eth_tx_burst(
 				tx_pkts, nb_pkts);
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 
-	return rte_eth_tx_burst(port_id, 0, tx_pkts, nb_tx);
+	return nb_tx;
 }
diff --git a/src/shared/secondary/spp_worker_th/spp_port.h b/src/shared/secondary/spp_worker_th/spp_port.h
index 81aefa7..eaeaea5 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.h
+++ b/src/shared/secondary/spp_worker_th/spp_port.h
@@ -2,101 +2,33 @@
  * Copyright(c) 2017-2018 Nippon Telegraph and Telephone Corporation
  */
 
-#ifndef _SPP_PORT_H_
-#define _SPP_PORT_H_
-
-/**
- * @file
- * SPP Port ability
- *
- * Provide about the ability per port.
- */
+#ifndef __WK_SPP_PORT_H__
+#define __WK_SPP_PORT_H__
 
 #include "cmd_utils.h"
 
-/** Calculate TCI of VLAN tag. */
-#define SPP_VLANTAG_CALC_TCI(id, pcp) (((pcp & 0x07) << 13) | (id & 0x0fff))
-
-/** Type for changing index. */
-enum port_ability_chg_index_type {
-	PORT_ABILITY_CHG_INDEX_REF,  /** To change index to reference area. */
-	PORT_ABILITY_CHG_INDEX_UPD,  /** To change index to update area. */
-};
-
-/** Initialize port ability. */
-void spp_port_ability_init(void);
-
-/**
- * Get information of port ability.
- *
- * @param port_id Etherdev ID.
- * @param rxtx RX/TX ID of port_id.
- * @param info Port ability information.
- */
-void spp_port_ability_get_info(
-		int port_id, enum sppwk_port_dir dir,
-		struct sppwk_port_attrs **info);
-
 /**
- * Change index of management information.
+ * Wrapper function for rte_eth_rx_burst() with ring latency feature.
  *
- * @param port_id Etherdev ID.
- * @param rxtx RX/TX ID of port_id.
- * @param type Type for changing index.
- */
-void spp_port_ability_change_index(
-		enum port_ability_chg_index_type type,
-		int port_id, enum sppwk_port_dir dir);
-
-/**
- * Update port capability.
- *
- * @param component_info
- *  The pointer to struct sppwk_comp_info.@n
- *  The data for updating the internal data of port ability.
- */
-void spp_port_ability_update(const struct sppwk_comp_info *component);
-
-/**
- * Wrapper function for rte_eth_rx_burst().
- *
- * @param port_id Etherdev ID.
- * @param queue_id
- *  The index of the receive queue from which to retrieve input packets.
- *  SPP is fixed at 0.
- * @param rx_pkts
- *  The address of an array of pointers to *rte_mbuf* structures that
- *  must be large enough to store *nb_pkts* pointers in it.
- * @param nb_pkts
- *  The maximum number of packets to retrieve.
- *
- * @return
- *  The number of packets actually retrieved, which is the number
- *  of pointers to *rte_mbuf* structures effectively supplied to the
- *  *rx_pkts* array.
+ * @param[in] port_id Etherdev ID.
+ * @param[in] queue_id RX queue ID, but fixed value 0 in SPP.
+ * @param[in] rx_pkts Pointers to mbuf should be enough to store nb_pkts.
+ * @param nb_pkts Maximum number of RX packets.
+ * @return Number of RX packets as number of pointers to mbuf.
  */
-uint16_t spp_eth_rx_burst(uint16_t port_id, uint16_t queue_id,
+uint16_t sppwk_eth_rx_burst(uint16_t port_id, uint16_t queue_id,
 		struct rte_mbuf **rx_pkts, const uint16_t nb_pkts);
 
 /**
- * Wrapper function for rte_eth_tx_burst().
+ * Wrapper function for rte_eth_tx_burst() with ring latency feature.
  *
  * @param port_id Etherdev ID.
- * @param queue_id
- *  The index of the transmit queue through which output packets must be sent.
- *  SPP is fixed at 0.
- * @param tx_pkts
- *  The address of an array of *nb_pkts* pointers to *rte_mbuf* structures
- *  which contain the output packets.
- * @param nb_pkts
- *  The maximum number of packets to transmit.
- *
- * @return
- *  The number of output packets actually stored in transmit descriptors of
- *  the transmit ring. The return value can be less than the value of the
- *  *tx_pkts* parameter when the transmit ring is full or has been filled up.
+ * @param[in] queue_id TX queue ID, but fixed value 0 in SPP.
+ * @param[in] tx_pkts Pointers to mbuf should be enough to store nb_pkts.
+ * @param nb_pkts Maximum number of TX packets.
+ * @return Number of TX packets as number of pointers to mbuf.
  */
-uint16_t spp_eth_tx_burst(uint16_t port_id, uint16_t queue_id,
+uint16_t sppwk_eth_tx_burst(uint16_t port_id, uint16_t queue_id,
 		struct rte_mbuf **tx_pkts, uint16_t nb_pkts);
 
-#endif /*  _SPP_PORT_H_ */
+#endif /*  __WK_SPP_PORT_H__ */
-- 
2.17.1



End of spp Digest, Vol 32, Issue 1
**********************************


From yasufum.o@gmail.com Mon Jul 01 13:11:24 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd101.ddreams.local
 (zssg-mailmd101.ddreams.local [10.160.123.96]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTY00XM13NM1U10@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 01 Jul 2019 13:11:46 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd101.ddreams.local by
 zssg-mailmd101.ddreams.local (dDREAMS) id <0PTY00D2E3NMAY00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:11:46 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd101.ddreams.local
 (dDREAMS) with ESMTP id <0PTY01DEG3NM7V80@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:11:46 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id B97697E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:11:46 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id B86DA8E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:11:46 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id ADBF48E6054	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:11:46 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 376CE8E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:11:45 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:11:45 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BjRo015517;	Mon,
 1 Jul 2019 13:11:45 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x614BjEO015516;	Mon, 1 Jul 2019 13:11:45 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x614BiXb015513	for unknown; Mon,
 1 Jul 2019 13:11:44 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BiRH029697 for
 unknown; Mon, 1 Jul 2019 13:11:44 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BiRD029689; Mon,
 1 Jul 2019 13:11:44 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614Bi8V019664;	Mon,
 1 Jul 2019 13:11:44 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x614BiVa019658	for unknown; Mon, 1 Jul 2019 13:11:44 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614Biwg025097 for
 unknown; Mon, 1 Jul 2019 13:11:44 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BhWC025093 for
 unknown; Mon, 1 Jul 2019 13:11:43 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x614Bb7P006749	for unknown; Mon,
 1 Jul 2019 13:11:43 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id B99FC5587;	Mon,  1 Jul 2019 06:11:36 +0200 (CEST)
Received: from mail-pf1-f194.google.com
 (mail-pf1-f194.google.com [209.85.210.194]) by dpdk.org (Postfix)
 with ESMTP id 5978E325F for <spp@dpdk.org>; Mon,
 1 Jul 2019 06:11:35 +0200 (CEST)
Received: by mail-pf1-f194.google.com with SMTP id 81so5847966pfy.13 for
 <spp@dpdk.org>; Sun, 30 Jun 2019 21:11:35 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id o128sm12190907pfb.42.2019.06.30.21.11.32
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 30 Jun 2019 21:11:33 -0700 (PDT)
Date: Mon, 01 Jul 2019 13:11:24 +0900
From: yasufum.o@gmail.com
Subject: [spp 04456] [spp] [PATCH 2/4] spp_vf: change to use burst funcs with
 VLAN
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190701041126.33947-3-yasufum.o@gmail.com>
In-reply-to: <20190701041126.33947-1-yasufum.o@gmail.com>
References: <20190701041126.33947-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04456
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=wHm9ldDzBqPDP7Nh1fa08r0YcGmkjM36JnBI6wewBto=;
 b=hAsEVVSVjsL12pMq9VW7KlcTrCV1bIAO+SiuhPUPduLNY5FXV9aO2I/SojftN0H1Bu
 1vEKcMOFL6rUN8ywTXalm5Heq9qvn/kpD5I/NNRaRGM4cL4hZzOk16jTUXDwbWNUTVYY
 b6z/11f0jLYhEmnmeHt66Ugpe74/THmdfWphon+Nwu5gJRGOJAgFT7hHgNki7wjIe+IO
 DmmWdr/LUFTcCfLIMFKf+r4jAsegEy+0iyVCHwPXY0wIF/1Bt+l6bHUwDRGVAMDLjIUm
 MdtMaDMMTjq15wiSANnvpCoMBcBhLFljhgFbuj8f1ErRFWfCkIprF9n+zy1MR4E5SQMa UwjQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=wHm9ldDzBqPDP7Nh1fa08r0YcGmkjM36JnBI6wewBto=;
 b=by3m+1WBvKCPxZF/j4aAfo49eUvCh+vmsVMLEIEIXKSOKlBi5Pn/HvSA8CDoLLl2bl
 Gd/UMHDuWraOghsqt/xNPdY+icJOiq8KZDCGWlcxKtEN5nNIG63SHONM/7jh/ZEPhERK
 Z7cYjFnO0+yOnHIahO4S0pyNZhYUxo+uIUc4/c7KuEZfnRa9Up7sMJvIKHsjGmDZiapx
 5/IqbAJjoqtaXRFhgGOIHIFi7ip5hlgv2NWXWRx5UZrMB30ipbZLaAijhzPdae0g42YH
 WTwcO0uApBdzSvJUCdkejxHYPzdcPJNAhPpPQK2fHEgvrfqNCcJjMbK7+ZCS+yKZh+6J x8vQ==
X-Gm-Message-State: APjAAAXnbkoBMpW+6b7w50eh2JsBBl+ce3Llpy1br3U5+asJ9r0HJtMU
 BXdKtCx8aqYk9/S8EjaJFOYCJcvY
X-Google-Smtp-Source:
 APXvYqwRfWuGlZKPYNK4N29ltmxHSDt8TgTPFtMwcRiIVM0NLg+3USAvHWf4Q2dvve3MOiB/eTj91A==
X-Received: by 2002:a63:490a:: with SMTP id w10mr22091316pga.6.1561954294370;
 Sun, 30 Jun 2019 21:11:34 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 116
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to change to use RX and TX burst functions which were
added in the previous patch.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/vf/Makefile         | 2 +-
 src/vf/classifier_mac.c | 8 ++++----
 src/vf/forwarder.c      | 5 +++--
 src/vf/spp_vf.c         | 1 +
 src/vf/vf_cmd_runner.c  | 1 +
 5 files changed, 10 insertions(+), 7 deletions(-)

diff --git a/src/vf/Makefile b/src/vf/Makefile
index 1d6cb7c..35f13e5 100644
--- a/src/vf/Makefile
+++ b/src/vf/Makefile
@@ -20,7 +20,7 @@ SRCS-y += $(SPP_SEC_DIR)/string_buffer.c
 SRCS-y += $(SPP_SEC_DIR)/json_helper.c
 SRCS-y += $(SPP_SEC_DIR)/utils.c $(SPP_SEC_DIR)/add_port.c
 SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
-SRCS-y += $(SPP_WKT_DIR)/spp_port.c
+SRCS-y += $(SPP_WKT_DIR)/port_capability.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
 SRCS-y += ../shared/common.c
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index a1d6ba4..6850962 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -28,7 +28,7 @@
 #include "shared/secondary/json_helper.h"
 #include "shared/secondary/spp_worker_th/cmd_res_formatter.h"
 #include "shared/secondary/spp_worker_th/vf_deps.h"
-#include "shared/secondary/spp_worker_th/spp_port.h"
+#include "shared/secondary/spp_worker_th/port_capability.h"
 
 #define RTE_LOGTYPE_SPP_CLASSIFIER_MAC RTE_LOGTYPE_USER1
 
@@ -460,7 +460,7 @@ transmit_packet(struct cls_port_info *clsd_data)
 	uint16_t n_tx;
 
 	/* transmit packets */
-	n_tx = spp_eth_tx_burst(clsd_data->ethdev_port_id, 0,
+	n_tx = sppwk_eth_vlan_tx_burst(clsd_data->ethdev_port_id, 0,
 			clsd_data->pkts, clsd_data->nof_pkts);
 
 	/* free cannot transmit packets */
@@ -797,8 +797,8 @@ spp_classifier_mac_do(int id)
 		return SPP_RET_OK;
 
 	/* retrieve packets */
-	n_rx = spp_eth_rx_burst(clsd_data_rx->ethdev_port_id, 0, rx_pkts,
-			MAX_PKT_BURST);
+	n_rx = sppwk_eth_vlan_rx_burst(clsd_data_rx->ethdev_port_id, 0,
+			rx_pkts, MAX_PKT_BURST);
 	if (unlikely(n_rx == 0))
 		return SPP_RET_OK;
 
diff --git a/src/vf/forwarder.c b/src/vf/forwarder.c
index e5cc963..77afc4e 100644
--- a/src/vf/forwarder.c
+++ b/src/vf/forwarder.c
@@ -9,6 +9,7 @@
 #include "shared/secondary/return_codes.h"
 #include "shared/secondary/spp_worker_th/vf_deps.h"
 #include "shared/secondary/spp_worker_th/spp_port.h"
+#include "shared/secondary/spp_worker_th/port_capability.h"
 
 #define RTE_LOGTYPE_FORWARD RTE_LOGTYPE_USER1
 
@@ -212,14 +213,14 @@ forward_packets(int id)
 		tx = &path->ports[cnt].tx;
 
 		/* Receive packets */
-		nb_rx = spp_eth_rx_burst(rx->ethdev_port_id, 0,
+		nb_rx = sppwk_eth_vlan_rx_burst(rx->ethdev_port_id, 0,
 				bufs, MAX_PKT_BURST);
 		if (unlikely(nb_rx == 0))
 			continue;
 
 		/* Send packets */
 		if (tx->ethdev_port_id >= 0)
-			nb_tx = spp_eth_tx_burst(tx->ethdev_port_id,
+			nb_tx = sppwk_eth_vlan_tx_burst(tx->ethdev_port_id,
 					0, bufs, nb_rx);
 
 		/* Discard remained packets to release mbuf */
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index 18a3619..504ee26 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -16,6 +16,7 @@
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
 #include "shared/secondary/spp_worker_th/spp_port.h"
+#include "shared/secondary/spp_worker_th/port_capability.h"
 
 /* Declare global variables */
 /* Interface management information */
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index fe37a19..5246af7 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -6,6 +6,7 @@
 #include "forwarder.h"
 #include "shared/secondary/return_codes.h"
 #include "shared/secondary/json_helper.h"
+#include "shared/secondary/spp_worker_th/port_capability.h"
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
 #include "shared/secondary/spp_worker_th/cmd_res_formatter.h"
-- 
2.17.1



From yasufum.o@gmail.com Mon Jul 01 13:11:25 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTY00XM73NN1U10@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 01 Jul 2019 13:11:47 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTY00X3W3NN3300@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:11:47 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTY00A2A3NNM8D0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:11:47 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id 362A97E603A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:11:47 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 34EC78E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:11:47 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 33A0D8E6042	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:11:47 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 3ED828E6052	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:11:46 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:11:46 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BkoR015524;	Mon,
 1 Jul 2019 13:11:46 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x614Bkti015523;	Mon, 1 Jul 2019 13:11:46 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x614Bjxn015520	for unknown; Mon,
 1 Jul 2019 13:11:45 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614Bj7r029722 for
 unknown; Mon, 1 Jul 2019 13:11:45 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BjBQ029717; Mon,
 1 Jul 2019 13:11:45 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BjVi019671;	Mon,
 1 Jul 2019 13:11:45 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x614Bj1e019667	for unknown; Mon, 1 Jul 2019 13:11:45 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BjAf025120 for
 unknown; Mon, 1 Jul 2019 13:11:45 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614Bi25025117 for
 unknown; Mon, 1 Jul 2019 13:11:44 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x614BcT8006759	for unknown; Mon,
 1 Jul 2019 13:11:44 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id C7E205680;	Mon,  1 Jul 2019 06:11:37 +0200 (CEST)
Received: from mail-pg1-f194.google.com
 (mail-pg1-f194.google.com [209.85.215.194]) by dpdk.org (Postfix)
 with ESMTP id C860D559A for <spp@dpdk.org>; Mon,
 1 Jul 2019 06:11:36 +0200 (CEST)
Received: by mail-pg1-f194.google.com with SMTP id s27so5347032pgl.2 for
 <spp@dpdk.org>; Sun, 30 Jun 2019 21:11:36 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id o128sm12190907pfb.42.2019.06.30.21.11.34
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 30 Jun 2019 21:11:35 -0700 (PDT)
Date: Mon, 01 Jul 2019 13:11:25 +0900
From: yasufum.o@gmail.com
Subject: [spp 04457] [spp] [PATCH 3/4] spp_mirror: change to use burst funcs
 with VLAN
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190701041126.33947-4-yasufum.o@gmail.com>
In-reply-to: <20190701041126.33947-1-yasufum.o@gmail.com>
References: <20190701041126.33947-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04457
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=G0bQ0cB81IQO54+z47nCzAwZSAKyYE4tyIKmUzRWk5k=;
 b=f30baBCh0KFEbVC7AS/4ea9PvH8Kff3xJ5SofFRegyGJbitvkbgJ6+Uf9ozIM/As1l
 GrLZyODW6NwwSwxYDE97Oh0Q8MQ1SAmayGCxvB7tKfkAw2aG7OcMs13YdaFhoERtdkxx
 jokgndRkchDsqYvf81GpzuRyiUeV5XXq//pXxleEMtJDRYJUuS1Gsf0jbuhDW/1+TZqP
 rt9KYeOOQwt10sPeDZN0KYy3iqEPqGh5i+hRjkYVrl5S+YtJGaU0brNhzWtiHn0pka/v
 NaxXdeKQeM72RH4QJIJPbwxUFPFveoq/ajihlK5swwvGa7DdvG7SpGPdyKULZu+s6TtX D9aA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=G0bQ0cB81IQO54+z47nCzAwZSAKyYE4tyIKmUzRWk5k=;
 b=dfz9vtSQESz+cojE+lQzlpH2Tc8Hjgs1Ep7BYU/lArcq++AkGxNAL6o0znO+txGM2v
 DzR/xugPZF+DF+IlLXnTZB2CF0UTcblAKuQwM81ZegXJiVwo8h/SwESnlR6M5h4HYShT
 hmJ3lc8/G40ogxh2UCHZhWuoGIWgX8kG9YCGgLdpxIGfy50QuNn43WKfvgOFa6cbhjeY
 QKZwG2HdgzI76vjh+mHxdaxXmjp5HR3Wedj/NZVRjFs72+uSChMdr6kPbLMROYf5Ml08
 qstckfwy9FJ1Bd/0yNpEwQbBTkvxEZkPeDgrlcSsGlb2sWZavPkCfpIfqkz0+hoA1djn 1G0Q==
X-Gm-Message-State: APjAAAVJsSpzrAuu9Hj8+QQKZbgKkeUgHD/kaef4b1a7Y1BAz7kcoUp+
 1CMDXIiKa+pgZu2sCnPlRX4cVT/0
X-Google-Smtp-Source:
 APXvYqxWDjFDG3/de88lCS2s6MSTmDlWpfvfNhm+bmzCCEkpP8ei18rDktvSiMsQ+I5e1NbGmiw/XQ==
X-Received: by 2002:a17:90a:37c8:: with SMTP id
 v66mr29138918pjb.33.1561954295977; Sun, 30 Jun 2019 21:11:35 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 77
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to change to use RX and TX burst functions which were
added in previous patch.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/Makefile         | 1 +
 src/mirror/mir_cmd_runner.c | 1 +
 src/mirror/spp_mirror.c     | 7 ++++---
 3 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/src/mirror/Makefile b/src/mirror/Makefile
index f584fd1..69ff91e 100644
--- a/src/mirror/Makefile
+++ b/src/mirror/Makefile
@@ -22,6 +22,7 @@ SRCS-y += $(SPP_SEC_DIR)/json_helper.c
 SRCS-y += $(SPP_SEC_DIR)/string_buffer.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_utils.c
 SRCS-y += $(SPP_WKT_DIR)/spp_port.c
+SRCS-y += $(SPP_WKT_DIR)/port_capability.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_runner.c
diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index 2f63f77..7c9a240 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -9,6 +9,7 @@
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
 #include "shared/secondary/spp_worker_th/cmd_res_formatter.h"
+#include "shared/secondary/spp_worker_th/port_capability.h"
 #include "shared/secondary/spp_worker_th/mirror_deps.h"
 
 #define RTE_LOGTYPE_MIR_CMD_RUNNER RTE_LOGTYPE_USER1
diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index 695f3ac..4c2b90c 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -19,6 +19,7 @@
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
 #include "shared/secondary/spp_worker_th/cmd_utils.h"
 #include "shared/secondary/spp_worker_th/spp_port.h"
+#include "shared/secondary/spp_worker_th/port_capability.h"
 
 /* Declare global variables */
 #define RTE_LOGTYPE_MIRROR RTE_LOGTYPE_USER1
@@ -323,7 +324,7 @@ mirror_proc(int id)
 
 	rx = &path->ports[0].rx;
 	/* Receive packets */
-	nb_rx = spp_eth_rx_burst(rx->ethdev_port_id, 0, bufs, MAX_PKT_BURST);
+	nb_rx = sppwk_eth_rx_burst(rx->ethdev_port_id, 0, bufs, MAX_PKT_BURST);
 	if (unlikely(nb_rx == 0))
 		return SPP_RET_OK;
 
@@ -378,14 +379,14 @@ mirror_proc(int id)
 #endif /* SPP_MIRROR_SHALLOWCOPY */
 		}
 		if (cnt != 0)
-			nb_tx2 = spp_eth_tx_burst(
+			nb_tx2 = sppwk_eth_tx_burst(
 					tx->ethdev_port_id, 0, copybufs, cnt);
 	}
 
 	/* orginal */
 	tx = &path->ports[0].tx;
 	if (tx->ethdev_port_id >= 0)
-		nb_tx1 = spp_eth_tx_burst(tx->ethdev_port_id, 0, bufs, nb_rx);
+		nb_tx1 = sppwk_eth_tx_burst(tx->ethdev_port_id, 0, bufs, nb_rx);
 	nb_tx = nb_tx1;
 
 	if (nb_tx1 != nb_tx2)
-- 
2.17.1



From yasufum.o@gmail.com Mon Jul 01 13:11:26 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd103.ddreams.local
 (zssg-mailmd103.ddreams.local [10.160.123.98]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTY00XMT3NP1U10@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 01 Jul 2019 13:11:49 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd103.ddreams.local by
 zssg-mailmd103.ddreams.local (dDREAMS) id <0PTY0050M3NPF200@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:11:49 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd103.ddreams.local
 (dDREAMS) with ESMTP id <0PTY0179J3NP4M70@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:11:49 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id 100D77E603A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:11:49 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 0DB568E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:11:49 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 0C9D88E605A	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:11:49 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 439A98E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:11:48 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:11:48 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614Bmrm015533;	Mon,
 1 Jul 2019 13:11:48 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x614BmMT015532;	Mon, 1 Jul 2019 13:11:48 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x614BlFt015529	for unknown; Mon,
 1 Jul 2019 13:11:47 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614Blms029745 for
 unknown; Mon, 1 Jul 2019 13:11:47 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BlAX029742; Mon,
 1 Jul 2019 13:11:47 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BlUb019678;	Mon,
 1 Jul 2019 13:11:47 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x614BlaV019674	for unknown; Mon, 1 Jul 2019 13:11:47 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614BlIM025138 for
 unknown; Mon, 1 Jul 2019 13:11:47 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614Bk14025131 for
 unknown; Mon, 1 Jul 2019 13:11:46 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x614BeTX006762	for unknown; Mon,
 1 Jul 2019 13:11:46 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id D9319374C;	Mon,  1 Jul 2019 06:11:39 +0200 (CEST)
Received: from mail-pf1-f193.google.com
 (mail-pf1-f193.google.com [209.85.210.193]) by dpdk.org (Postfix)
 with ESMTP id 2B0205689 for <spp@dpdk.org>; Mon,
 1 Jul 2019 06:11:38 +0200 (CEST)
Received: by mail-pf1-f193.google.com with SMTP id c85so5871663pfc.1 for
 <spp@dpdk.org>; Sun, 30 Jun 2019 21:11:38 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id o128sm12190907pfb.42.2019.06.30.21.11.36
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 30 Jun 2019 21:11:37 -0700 (PDT)
Date: Mon, 01 Jul 2019 13:11:26 +0900
From: yasufum.o@gmail.com
Subject: [spp 04458] [spp] [PATCH 4/4] spp_pcap: update include path of port
 capability
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190701041126.33947-5-yasufum.o@gmail.com>
In-reply-to: <20190701041126.33947-1-yasufum.o@gmail.com>
References: <20190701041126.33947-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04458
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=B5AO8FWBU+d87zD2kXk9zXThxJxM2qYkvlxrMkEmZTw=;
 b=Wab6YRgmrwrtt6SGQShKu5J9mCZhROrEMeaJeV3YAvI1e0nnTba4evgH+hO5ewjzIp
 SUGhQ5mCL7vQl0ONEb5+NOvlvJK2Ai20ZAQqdfd8nOPiBEqZXr+2eAXk26rZlFCoGpf9
 QC4mruUX5QD8klppZF9vJR07FvOvF0Ajp5tZqUdJzB2x3fNAtfF3gkmPGDUz42h5L66g
 5wiBo9N2xH/gvdksZl78Q5iH0TmSk/rFvy+1eXD8LkBsQPr5wHznDibKDik465mEw0WP
 kP5k3eqcaWCoHr8bDl/cInj0oXYC/OyFv+0JiHzyBkIP08C/yekGRG8feV0pJTD/Uxp1 A9tw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=B5AO8FWBU+d87zD2kXk9zXThxJxM2qYkvlxrMkEmZTw=;
 b=g5qvmH/3NFRiupjoFjkZLXKR6HXFJjJNXlX1Vbkdwjmw93g15cB/6OObOSrqNEppqW
 sMksnSOF25Upk+AxUDa+qv/df90iBJMFLLTVCGTE+pOrzRtoBKOdwsZQsk8nSKBGy/M+
 8xZ0VeJmXFOZXLKrX2xUmoxO3pZGQDKajvdz6cmQ5Q4VrXjQ+KzkT9MnRa/1pUz9mav5
 ZcSS83yHP/5XIFzEg8auHk3FLcm9gpnIqJXRT2sCQxx8oQkFYa5HRwlTija+/8+NgI/G
 hPTY746LIedPGVPfmAWCpdx/HzmGXCvKDZ0drCNbSjN4qA8mlLIrlX/gzV7BdiSW+da5 rkIQ==
X-Gm-Message-State: APjAAAVoTPux2p1NuouXMebkvXHI/qAcRFB1CDPdGH19vEK0ycxSw0CD
 wBYbhoNtwWjXxn6oHOpCeGq2Qtqz
X-Google-Smtp-Source:
 APXvYqywcgwnC+GhGmChuPDcNhIS69sfIm3XNPIoWJPWQjaCQKQ1KT/lsaZohkyP7i4AXwdI5KC43w==
X-Received: by 2002:a17:90a:8c0c:: with SMTP id
 a12mr28548854pjo.67.1561954297320; Sun, 30 Jun 2019 21:11:37 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 48
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Spp_pcap uses struct sppwk_port_info without VLAN features, and still
need to include header `port_capability.h`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/pcap/Makefile   | 1 +
 src/pcap/spp_pcap.c | 4 +++-
 2 files changed, 4 insertions(+), 1 deletion(-)

diff --git a/src/pcap/Makefile b/src/pcap/Makefile
index 784ee1b..640c0d3 100644
--- a/src/pcap/Makefile
+++ b/src/pcap/Makefile
@@ -23,6 +23,7 @@ SRCS-y += $(SPP_SEC_DIR)/utils.c
 SRCS-y += $(SPP_SEC_DIR)/string_buffer.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/spp_port.c
+SRCS-y += $(SPP_WKT_DIR)/port_capability.c
 SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
 
 CFLAGS += -DALLOW_EXPERIMENTAL_API
diff --git a/src/pcap/spp_pcap.c b/src/pcap/spp_pcap.c
index 80e6aad..e32c360 100644
--- a/src/pcap/spp_pcap.c
+++ b/src/pcap/spp_pcap.c
@@ -19,6 +19,7 @@
 #include "cmd_parser.h"
 #include "shared/secondary/utils.h"
 #include "shared/secondary/spp_worker_th/spp_port.h"
+#include "shared/secondary/spp_worker_th/port_capability.h"
 
 /* Declare global variables */
 #define RTE_LOGTYPE_SPP_PCAP RTE_LOGTYPE_USER2
@@ -749,7 +750,8 @@ static int pcap_proc_receive(int lcore_id)
 
 	/* Receive packets */
 	rx = &g_pcap_option.port_cap;
-	nb_rx = spp_eth_rx_burst(rx->ethdev_port_id, 0, bufs, MAX_PCAP_BURST);
+	nb_rx = sppwk_eth_rx_burst(rx->ethdev_port_id, 0, bufs,
+			MAX_PCAP_BURST);
 	if (unlikely(nb_rx == 0))
 		return SPPWK_RET_OK;
 
-- 
2.17.1



From yasufum.o@gmail.com Mon Jul 01 13:11:54 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTY00XR83OA1U10@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 01 Jul 2019 13:12:10 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTY00X423OAOW00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:12:10 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTY00AGJ3OAM8D0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:12:10 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id 9D8A97E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:10 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 9C44F8E6058	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:10 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 9AAF68E6054	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:12:10 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 3110F8E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:10 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:12:10 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CAZ9015575;	Mon,
 1 Jul 2019 13:12:10 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x614CADr015574;	Mon, 1 Jul 2019 13:12:10 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x614C91w015568	for unknown; Mon,
 1 Jul 2019 13:12:09 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614C9IA029843 for
 unknown; Mon, 1 Jul 2019 13:12:09 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614C9OQ029840; Mon,
 1 Jul 2019 13:12:09 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614C9np019737;	Mon,
 1 Jul 2019 13:12:09 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x614C9d3019733	for unknown; Mon, 1 Jul 2019 13:12:09 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614C8Nh025242 for
 unknown; Mon, 1 Jul 2019 13:12:08 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614C8LJ025235 for
 unknown; Mon, 1 Jul 2019 13:12:08 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x614C28o006847	for unknown; Mon,
 1 Jul 2019 13:12:08 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id F406131FC;	Mon,  1 Jul 2019 06:12:01 +0200 (CEST)
Received: from mail-pg1-f173.google.com
 (mail-pg1-f173.google.com [209.85.215.173]) by dpdk.org (Postfix)
 with ESMTP id 173EB2AB for <spp@dpdk.org>; Mon,
 1 Jul 2019 06:12:01 +0200 (CEST)
Received: by mail-pg1-f173.google.com with SMTP id c13so5339187pgg.3 for
 <spp@dpdk.org>; Sun, 30 Jun 2019 21:12:01 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id 131sm19015550pfx.57.2019.06.30.21.11.58
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 30 Jun 2019 21:11:59 -0700 (PDT)
Date: Mon, 01 Jul 2019 13:11:54 +0900
From: yasufum.o@gmail.com
Subject: [spp 04459] [spp] [PATCH 0/2] Refactor port capability
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190701041156.34004-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04459
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=zw9eTLZUYjL8ISq6De3dx4KbJrJgbRXE4oWbkXMdyk8=;
 b=t7Owm8IG6BWXb2+45TH5lqb/TJZETp3+tSzzMQRIf8u8SRPsh0i9y1T/QX6nRZKrwS
 fqFdZu6YhwKhcOGNm7c5sQ04Jpg3hebxA4lG/xEc0M3PKqbRInubXp33f/4SEc6M7OTu
 l1GvUk7VNY+3GNkGX91HFhfudsCqYUB4go+82xIGDgQs4rKCnKB1CEk9FnV74EDWkiX3
 SThqy3241jEqkr+yt9EyQl5Z5StU7eFhy5pjZZjw4SUjCokhlIxrRFK86HfX6sLCDZGq
 Iir4TC+NpZU15LL1WhK3AW9Ze4puGtdA6wuU90DfIiG1svy2fLkPCzqsZzmOPJSa+Qug TOMg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=zw9eTLZUYjL8ISq6De3dx4KbJrJgbRXE4oWbkXMdyk8=;
 b=pkU/pRRYfXvhiCmzSE1BEotoJERcLJGcvaqG0l7jCw+OM4mn3OWaxQsYhMJ9ulP1yz
 pzfhdNRZ1mlmpGRkj/xFjfQ86/l1tg4jFzGfd7MQewXIq3wv6Veg16xGyp5Z8x/9ApXM
 2gByO3JjhF3NoApv0Qy6sue++0wLJ9OWLbqUk7Us6qzFUgrNnUJz1Pgj+z/dB7gcl6Kt
 9N/88Rfv15TouQoDxzCXWweNpC6Qzw7bnXcFwS+9eUqEJndmf/aplkTR1kW6F6jvzRdY
 DzS+g3oXS9dzpuoxMb1gsspod8vcuWrcmcBVmPvwB2CFokAsdvjxB8J7I3i4qp7afpHf da5g==
X-Gm-Message-State: APjAAAUVQQyld1gn+F9h74bEoIHuR5yNpyE4phaiqCJ2LiSSON/J++QS
 wyGVNItFWkeFqwFJp1uq60ChcmRD
X-Google-Smtp-Source:
 APXvYqzHi3sv4WhPpGq2OPiqMtfiHnKAkZ74p9e6J4jN+6Z1YsCXKLM/2fKVzGFQBGBPEgxp4SUFkw==
X-Received: by 2002:a63:dc09:: with SMTP id s9mr22696156pgg.425.1561954320217;
 Sun, 30 Jun 2019 21:12:00 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 24
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This series of patches is to refactor functions or variables defined in
`port_capability.c` and `port_capability.h`.

Yasufumi Ogawa (2):
  shared/sec: refactor public funcs of capability
  shared/sec: refactor port capability funcs

 src/mirror/mir_cmd_runner.c                   |   2 +-
 src/mirror/spp_mirror.c                       |   4 +-
 src/pcap/spp_pcap.c                           |   2 +-
 .../spp_worker_th/cmd_res_formatter.c         |   2 +-
 .../secondary/spp_worker_th/port_capability.c | 141 ++++++++++--------
 .../secondary/spp_worker_th/port_capability.h |  43 +++---
 src/vf/classifier_mac.c                       |   3 +-
 src/vf/forwarder.c                            |   3 +-
 src/vf/spp_vf.c                               |   2 +-
 src/vf/vf_cmd_runner.c                        |   2 +-
 10 files changed, 108 insertions(+), 96 deletions(-)

-- 
2.17.1



From yasufum.o@gmail.com Mon Jul 01 13:11:56 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd102.ddreams.local
 (zssg-mailmd102.ddreams.local [10.160.123.97]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTY00XS43OD1U10@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 01 Jul 2019 13:12:13 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd102.ddreams.local by
 zssg-mailmd102.ddreams.local (dDREAMS) id <0PTY01A243OD7D00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:12:13 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd102.ddreams.local
 (dDREAMS) with ESMTP id <0PTY00ZJ93OD7360@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:12:13 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id CB4FF7E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:13 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id C9BF88E6058	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:13 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id BF04B8E6054	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:12:13 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 62D668E6058	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:13 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:12:13 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CDWb015600;	Mon,
 1 Jul 2019 13:12:13 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x614CDt0015599;	Mon, 1 Jul 2019 13:12:13 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x614CD3i015596	for unknown; Mon,
 1 Jul 2019 13:12:13 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CChA029888 for
 unknown; Mon, 1 Jul 2019 13:12:12 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CCBa029883; Mon,
 1 Jul 2019 13:12:12 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CCOj019752;	Mon,
 1 Jul 2019 13:12:12 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x614CCZC019748	for unknown; Mon, 1 Jul 2019 13:12:12 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CCcF025301 for
 unknown; Mon, 1 Jul 2019 13:12:12 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CCLH025292 for
 unknown; Mon, 1 Jul 2019 13:12:12 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x614C53u006873	for unknown; Mon,
 1 Jul 2019 13:12:11 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 2C8115587;	Mon,  1 Jul 2019 06:12:05 +0200 (CEST)
Received: from mail-pl1-f196.google.com
 (mail-pl1-f196.google.com [209.85.214.196]) by dpdk.org (Postfix)
 with ESMTP id 14854374C for <spp@dpdk.org>; Mon,
 1 Jul 2019 06:12:04 +0200 (CEST)
Received: by mail-pl1-f196.google.com with SMTP id 9so5837710ple.5 for
 <spp@dpdk.org>; Sun, 30 Jun 2019 21:12:03 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id 131sm19015550pfx.57.2019.06.30.21.12.02
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 30 Jun 2019 21:12:02 -0700 (PDT)
Date: Mon, 01 Jul 2019 13:11:56 +0900
From: yasufum.o@gmail.com
Subject: [spp 04461] [spp] [PATCH 2/2] shared/sec: refactor port capability
 funcs
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190701041156.34004-3-yasufum.o@gmail.com>
In-reply-to: <20190701041156.34004-1-yasufum.o@gmail.com>
References: <20190701041156.34004-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04461
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=Rgly1nZQQ4TMJm3/D7nROwb9onqs103Ifxh6PqhI5ts=;
 b=T6Pc999TDTxvueMcNc/eewpiHfw6aPWqHWcP3jJsSKzS3xhnsQD9Za94EkYYfBWfQg
 1d5Mzs1cZO5gbnooeT01SOH8Xkge/EHBb5Pts+znoUmOOfiq/xH+1MQX2DjwlUh19YhB
 D8pgP+/C9fur58XiFVs3CuCUjwY/7mMe34EZfAK7L0+pdJHWH/2JhRD8HNh4+rpFrSQm
 zmyn4tL81dUs6P4oc2tjxE9Rz4fgqawMsXDHNBb9UFTIGtq/aj66EDuHcIYWaz1cHSGc
 xdcOiIf2JQ11CK5kyM3RvLAARt4CtnJybJezTUcy/fNihnnxNlBvD1zFX4kDp8Bd6N0b i1Dg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=Rgly1nZQQ4TMJm3/D7nROwb9onqs103Ifxh6PqhI5ts=;
 b=Rhfu4Pi2Vb4LEGQMhHNgqqdmLl0wpM30DHRcKQOg9FXHksch4GkdMEwGPk2CFqv8wi
 tZTu6TYVkG4xEAazIly40AHaDuF3Wx9p6r7tYTZQjpcuxCUEanUNK70Mzb3M430CczJM
 DcXFRo12cOk49D/0WEFDSXSj6Hppq5MKH3Beov1O1YYzvhfuow4ZETZhoTkB07cReYJk
 Q7DiCLeTx4vAGmMiwqgbQZSdDnl9Y6m98Op2mCu81LoO34tOp9oHRa44+JUEw6xK3Cm3
 ed6Sf6VkJ90c59QOLpck/yWGjfAYP/bjuzseKFHtU+gOcJ15hhlTXHaG9P7F1TKZE1Gf lOGA==
X-Gm-Message-State: APjAAAXfmNqZbisy7YdrRXlXvijEmY+V5emYtraMwFeVSARYE4k6x889
 fjxv78jwyOc7S8XWLG0LEU/0nE6k
X-Google-Smtp-Source:
 APXvYqyeg2YA69dWJgXJGGmy+ZgCmPmjM3AoAyfbCzayiWma1IGbX4tS0swuScyeaNeAbTvDo92rEQ==
X-Received: by 2002:a17:902:d20a:: with SMTP id
 t10mr25847321ply.52.1561954323233; Sun, 30 Jun 2019 21:12:03 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 167
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to refactor functions for port capability defined in
`port_capability.c`. All of incorrect or ambiguous term usages are
fixed.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/port_capability.c | 57 +++++++++----------
 1 file changed, 28 insertions(+), 29 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/port_capability.c b/src/shared/secondary/spp_worker_th/port_capability.c
index 30c6e95..db12f0c 100644
--- a/src/shared/secondary/spp_worker_th/port_capability.c
+++ b/src/shared/secondary/spp_worker_th/port_capability.c
@@ -96,9 +96,9 @@ set_fcs_packet(struct rte_mbuf *pkt)
 			pkt->data_len, RTE_NET_CRC32_ETH);
 }
 
-/* Add VLAN tag to packet. */
+/* Add VLAN tag to a packet. It is called from add_vlan_tag_all(). */
 static inline int
-add_vlantag_packet(
+add_vlan_tag_one(
 		struct rte_mbuf *pkt,
 		const union sppwk_port_capability *capability)
 {
@@ -135,14 +135,14 @@ add_vlantag_packet(
 
 /* Add VLAN tag to all packets. */
 static inline int
-add_vlantag_all_packets(
+add_vlan_tag_all(
 		struct rte_mbuf **pkts, int nb_pkts,
 		const union sppwk_port_capability *capability)
 {
 	int ret = SPP_RET_OK;
 	int cnt = 0;
 	for (cnt = 0; cnt < nb_pkts; cnt++) {
-		ret = add_vlantag_packet(pkts[cnt], capability);
+		ret = add_vlan_tag_one(pkts[cnt], capability);
 		if (unlikely(ret < 0)) {
 			RTE_LOG(ERR, PORT,
 					"Failed to add VLAN tag."
@@ -153,9 +153,9 @@ add_vlantag_all_packets(
 	return cnt;
 }
 
-/* Delete VLAN tag to packet. */
+/* Delete VLAN tag from a packet. It is called from del_vlan_tag_all(). */
 static inline int
-del_vlantag_packet(
+del_vlan_tag_one(
 		struct rte_mbuf *pkt,
 		const union sppwk_port_capability *cbl __attribute__ ((unused)))
 {
@@ -185,16 +185,16 @@ del_vlantag_packet(
 	return SPP_RET_OK;
 }
 
-/* Delete VLAN tag to all packets. */
+/* Delete VLAN tag from all packets. */
 static inline int
-del_vlantag_all_packets(
+del_vlan_tag_all(
 		struct rte_mbuf **pkts, int nb_pkts,
 		const union sppwk_port_capability *capability)
 {
 	int ret = SPP_RET_OK;
 	int cnt = 0;
 	for (cnt = 0; cnt < nb_pkts; cnt++) {
-		ret = del_vlantag_packet(pkts[cnt], capability);
+		ret = del_vlan_tag_one(pkts[cnt], capability);
 		if (unlikely(ret < 0)) {
 			RTE_LOG(ERR, PORT,
 					"Failed to del VLAN tag."
@@ -251,9 +251,9 @@ sppwk_swap_two_sides(
 	}
 }
 
-/* Set ability data of port ability. */
+/* Update port attributes of given direction. */
 static void
-port_ability_set_ability(struct sppwk_port_info *port,
+update_port_attrs(struct sppwk_port_info *port,
 		enum sppwk_port_dir dir)
 {
 	int in_cnt, out_cnt = 0;
@@ -316,32 +316,33 @@ sppwk_update_port_dir(const struct sppwk_comp_info *comp)
 
 	for (cnt = 0; cnt < comp->nof_rx; cnt++) {
 		port_info = comp->rx_ports[cnt];
-		port_ability_set_ability(port_info, SPPWK_PORT_DIR_RX);
+		update_port_attrs(port_info, SPPWK_PORT_DIR_RX);
 	}
 
 	for (cnt = 0; cnt < comp->nof_tx; cnt++) {
 		port_info = comp->tx_ports[cnt];
-		port_ability_set_ability(port_info, SPPWK_PORT_DIR_TX);
+		update_port_attrs(port_info, SPPWK_PORT_DIR_TX);
 	}
 }
 
-/* Definition of functions that operate port abilities. */
-typedef int (*port_ability_func)(
+/**
+ * Define list of VLAN opeartion functions. It is only used in
+ * vlan_operation().
+ */
+typedef int (*vlan_f)(
 		struct rte_mbuf **pkts, int nb_pkts,
 		const union sppwk_port_capability *capability);
 
-/* List of functions per port ability. */
-port_ability_func port_ability_function_list[] = {
-	NULL,                    /* None */
-	add_vlantag_all_packets, /* Add VLAN tag */
-	del_vlantag_all_packets, /* Del VLAN tag */
-	NULL                     /* Termination */
+vlan_f vlan_ops[] = {
+	NULL,              /* None */
+	add_vlan_tag_all,  /* Add VLAN tag */
+	del_vlan_tag_all,  /* Del VLAN tag */
+	NULL               /* Termination */
 };
 
-/* Each packet operation of port capability. */
+/* Add or delete VLAN tag. */
 static inline int
-port_ability_each_operation(uint16_t port_id,
-		struct rte_mbuf **pkts, const uint16_t nb_pkts,
+vlan_operation(uint16_t port_id, struct rte_mbuf **pkts, const uint16_t nb_pkts,
 		enum sppwk_port_dir dir)
 {
 	int cnt, buf;
@@ -358,7 +359,7 @@ port_ability_each_operation(uint16_t port_id,
 			break;
 
 		/* Add or delete VLAN tag with operation function. */
-		ok_pkts = port_ability_function_list[port_attrs[cnt].ops](
+		ok_pkts = vlan_ops[port_attrs[cnt].ops](
 				pkts, ok_pkts, &port_attrs->capability);
 	}
 
@@ -391,8 +392,7 @@ sppwk_eth_vlan_rx_burst(uint16_t port_id,
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 
 	/* Add or delete VLAN tag. */
-	return port_ability_each_operation(port_id, rx_pkts, nb_rx,
-			SPPWK_PORT_DIR_RX);
+	return vlan_operation(port_id, rx_pkts, nb_rx, SPPWK_PORT_DIR_RX);
 }
 
 
@@ -406,8 +406,7 @@ sppwk_eth_vlan_tx_burst(uint16_t port_id,
 	uint16_t nb_tx;
 
 	/* Add or delete VLAN tag. */
-	nb_tx = port_ability_each_operation(port_id, tx_pkts, nb_pkts,
-			SPPWK_PORT_DIR_TX);
+	nb_tx = vlan_operation(port_id, tx_pkts, nb_pkts, SPPWK_PORT_DIR_TX);
 
 	if (unlikely(nb_tx == 0))
 		return SPP_RET_OK;
-- 
2.17.1



From spp-request@dpdk.org Mon Jul 01 13:12:03 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTY00XS63OD1U10@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 01 Jul 2019 13:12:13 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTY00X2E3ODYX00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:12:13 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTY00AHW3ODM8D0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:12:13 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id D616B7E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:13 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id D4AF08E6058	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:13 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id C9AD18E6056	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:12:13 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id AADA88E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:12 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:12:12 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CCks015593;	Mon,
 1 Jul 2019 13:12:12 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x614CClR015592;	Mon, 1 Jul 2019 13:12:12 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x614CC5j015589	for unknown; Mon,
 1 Jul 2019 13:12:12 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CCXp025295 for
 unknown; Mon, 1 Jul 2019 13:12:12 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CC1u025290 for
 unknown; Mon, 1 Jul 2019 13:12:12 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x614C5Ym006869	for unknown; Mon,
 1 Jul 2019 13:12:11 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 1D2C837AF	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 1 Jul 2019 06:12:05 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 32, Issue 2
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 01 Jul 2019 06:12:03 +0200
Message-id: <mailman.24124.1561954323.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH 2/4] spp_vf: change to use burst funcs with VLAN
      (yasufum.o@gmail.com)
   2. [PATCH 3/4] spp_mirror: change to use burst funcs with VLAN
      (yasufum.o@gmail.com)
   3. [PATCH 4/4] spp_pcap: update include path of port capability
      (yasufum.o@gmail.com)
   4. [PATCH 0/2] Refactor port capability (yasufum.o@gmail.com)
   5. [PATCH 1/2] shared/sec: refactor public funcs of capability
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon,  1 Jul 2019 13:11:24 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 2/4] spp_vf: change to use burst funcs with VLAN
Message-ID: <20190701041126.33947-3-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to change to use RX and TX burst functions which were
added in the previous patch.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/vf/Makefile         | 2 +-
 src/vf/classifier_mac.c | 8 ++++----
 src/vf/forwarder.c      | 5 +++--
 src/vf/spp_vf.c         | 1 +
 src/vf/vf_cmd_runner.c  | 1 +
 5 files changed, 10 insertions(+), 7 deletions(-)

diff --git a/src/vf/Makefile b/src/vf/Makefile
index 1d6cb7c..35f13e5 100644
--- a/src/vf/Makefile
+++ b/src/vf/Makefile
@@ -20,7 +20,7 @@ SRCS-y += $(SPP_SEC_DIR)/string_buffer.c
 SRCS-y += $(SPP_SEC_DIR)/json_helper.c
 SRCS-y += $(SPP_SEC_DIR)/utils.c $(SPP_SEC_DIR)/add_port.c
 SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
-SRCS-y += $(SPP_WKT_DIR)/spp_port.c
+SRCS-y += $(SPP_WKT_DIR)/port_capability.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
 SRCS-y += ../shared/common.c
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index a1d6ba4..6850962 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -28,7 +28,7 @@
 #include "shared/secondary/json_helper.h"
 #include "shared/secondary/spp_worker_th/cmd_res_formatter.h"
 #include "shared/secondary/spp_worker_th/vf_deps.h"
-#include "shared/secondary/spp_worker_th/spp_port.h"
+#include "shared/secondary/spp_worker_th/port_capability.h"
 
 #define RTE_LOGTYPE_SPP_CLASSIFIER_MAC RTE_LOGTYPE_USER1
 
@@ -460,7 +460,7 @@ transmit_packet(struct cls_port_info *clsd_data)
 	uint16_t n_tx;
 
 	/* transmit packets */
-	n_tx = spp_eth_tx_burst(clsd_data->ethdev_port_id, 0,
+	n_tx = sppwk_eth_vlan_tx_burst(clsd_data->ethdev_port_id, 0,
 			clsd_data->pkts, clsd_data->nof_pkts);
 
 	/* free cannot transmit packets */
@@ -797,8 +797,8 @@ spp_classifier_mac_do(int id)
 		return SPP_RET_OK;
 
 	/* retrieve packets */
-	n_rx = spp_eth_rx_burst(clsd_data_rx->ethdev_port_id, 0, rx_pkts,
-			MAX_PKT_BURST);
+	n_rx = sppwk_eth_vlan_rx_burst(clsd_data_rx->ethdev_port_id, 0,
+			rx_pkts, MAX_PKT_BURST);
 	if (unlikely(n_rx == 0))
 		return SPP_RET_OK;
 
diff --git a/src/vf/forwarder.c b/src/vf/forwarder.c
index e5cc963..77afc4e 100644
--- a/src/vf/forwarder.c
+++ b/src/vf/forwarder.c
@@ -9,6 +9,7 @@
 #include "shared/secondary/return_codes.h"
 #include "shared/secondary/spp_worker_th/vf_deps.h"
 #include "shared/secondary/spp_worker_th/spp_port.h"
+#include "shared/secondary/spp_worker_th/port_capability.h"
 
 #define RTE_LOGTYPE_FORWARD RTE_LOGTYPE_USER1
 
@@ -212,14 +213,14 @@ forward_packets(int id)
 		tx = &path->ports[cnt].tx;
 
 		/* Receive packets */
-		nb_rx = spp_eth_rx_burst(rx->ethdev_port_id, 0,
+		nb_rx = sppwk_eth_vlan_rx_burst(rx->ethdev_port_id, 0,
 				bufs, MAX_PKT_BURST);
 		if (unlikely(nb_rx == 0))
 			continue;
 
 		/* Send packets */
 		if (tx->ethdev_port_id >= 0)
-			nb_tx = spp_eth_tx_burst(tx->ethdev_port_id,
+			nb_tx = sppwk_eth_vlan_tx_burst(tx->ethdev_port_id,
 					0, bufs, nb_rx);
 
 		/* Discard remained packets to release mbuf */
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index 18a3619..504ee26 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -16,6 +16,7 @@
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
 #include "shared/secondary/spp_worker_th/spp_port.h"
+#include "shared/secondary/spp_worker_th/port_capability.h"
 
 /* Declare global variables */
 /* Interface management information */
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index fe37a19..5246af7 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -6,6 +6,7 @@
 #include "forwarder.h"
 #include "shared/secondary/return_codes.h"
 #include "shared/secondary/json_helper.h"
+#include "shared/secondary/spp_worker_th/port_capability.h"
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
 #include "shared/secondary/spp_worker_th/cmd_res_formatter.h"
-- 
2.17.1



------------------------------

Message: 2
Date: Mon,  1 Jul 2019 13:11:25 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 3/4] spp_mirror: change to use burst funcs with
	VLAN
Message-ID: <20190701041126.33947-4-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to change to use RX and TX burst functions which were
added in previous patch.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/Makefile         | 1 +
 src/mirror/mir_cmd_runner.c | 1 +
 src/mirror/spp_mirror.c     | 7 ++++---
 3 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/src/mirror/Makefile b/src/mirror/Makefile
index f584fd1..69ff91e 100644
--- a/src/mirror/Makefile
+++ b/src/mirror/Makefile
@@ -22,6 +22,7 @@ SRCS-y += $(SPP_SEC_DIR)/json_helper.c
 SRCS-y += $(SPP_SEC_DIR)/string_buffer.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_utils.c
 SRCS-y += $(SPP_WKT_DIR)/spp_port.c
+SRCS-y += $(SPP_WKT_DIR)/port_capability.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_runner.c
diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index 2f63f77..7c9a240 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -9,6 +9,7 @@
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
 #include "shared/secondary/spp_worker_th/cmd_res_formatter.h"
+#include "shared/secondary/spp_worker_th/port_capability.h"
 #include "shared/secondary/spp_worker_th/mirror_deps.h"
 
 #define RTE_LOGTYPE_MIR_CMD_RUNNER RTE_LOGTYPE_USER1
diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index 695f3ac..4c2b90c 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -19,6 +19,7 @@
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
 #include "shared/secondary/spp_worker_th/cmd_utils.h"
 #include "shared/secondary/spp_worker_th/spp_port.h"
+#include "shared/secondary/spp_worker_th/port_capability.h"
 
 /* Declare global variables */
 #define RTE_LOGTYPE_MIRROR RTE_LOGTYPE_USER1
@@ -323,7 +324,7 @@ mirror_proc(int id)
 
 	rx = &path->ports[0].rx;
 	/* Receive packets */
-	nb_rx = spp_eth_rx_burst(rx->ethdev_port_id, 0, bufs, MAX_PKT_BURST);
+	nb_rx = sppwk_eth_rx_burst(rx->ethdev_port_id, 0, bufs, MAX_PKT_BURST);
 	if (unlikely(nb_rx == 0))
 		return SPP_RET_OK;
 
@@ -378,14 +379,14 @@ mirror_proc(int id)
 #endif /* SPP_MIRROR_SHALLOWCOPY */
 		}
 		if (cnt != 0)
-			nb_tx2 = spp_eth_tx_burst(
+			nb_tx2 = sppwk_eth_tx_burst(
 					tx->ethdev_port_id, 0, copybufs, cnt);
 	}
 
 	/* orginal */
 	tx = &path->ports[0].tx;
 	if (tx->ethdev_port_id >= 0)
-		nb_tx1 = spp_eth_tx_burst(tx->ethdev_port_id, 0, bufs, nb_rx);
+		nb_tx1 = sppwk_eth_tx_burst(tx->ethdev_port_id, 0, bufs, nb_rx);
 	nb_tx = nb_tx1;
 
 	if (nb_tx1 != nb_tx2)
-- 
2.17.1



------------------------------

Message: 3
Date: Mon,  1 Jul 2019 13:11:26 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 4/4] spp_pcap: update include path of port
	capability
Message-ID: <20190701041126.33947-5-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Spp_pcap uses struct sppwk_port_info without VLAN features, and still
need to include header `port_capability.h`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/pcap/Makefile   | 1 +
 src/pcap/spp_pcap.c | 4 +++-
 2 files changed, 4 insertions(+), 1 deletion(-)

diff --git a/src/pcap/Makefile b/src/pcap/Makefile
index 784ee1b..640c0d3 100644
--- a/src/pcap/Makefile
+++ b/src/pcap/Makefile
@@ -23,6 +23,7 @@ SRCS-y += $(SPP_SEC_DIR)/utils.c
 SRCS-y += $(SPP_SEC_DIR)/string_buffer.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/spp_port.c
+SRCS-y += $(SPP_WKT_DIR)/port_capability.c
 SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
 
 CFLAGS += -DALLOW_EXPERIMENTAL_API
diff --git a/src/pcap/spp_pcap.c b/src/pcap/spp_pcap.c
index 80e6aad..e32c360 100644
--- a/src/pcap/spp_pcap.c
+++ b/src/pcap/spp_pcap.c
@@ -19,6 +19,7 @@
 #include "cmd_parser.h"
 #include "shared/secondary/utils.h"
 #include "shared/secondary/spp_worker_th/spp_port.h"
+#include "shared/secondary/spp_worker_th/port_capability.h"
 
 /* Declare global variables */
 #define RTE_LOGTYPE_SPP_PCAP RTE_LOGTYPE_USER2
@@ -749,7 +750,8 @@ static int pcap_proc_receive(int lcore_id)
 
 	/* Receive packets */
 	rx = &g_pcap_option.port_cap;
-	nb_rx = spp_eth_rx_burst(rx->ethdev_port_id, 0, bufs, MAX_PCAP_BURST);
+	nb_rx = sppwk_eth_rx_burst(rx->ethdev_port_id, 0, bufs,
+			MAX_PCAP_BURST);
 	if (unlikely(nb_rx == 0))
 		return SPPWK_RET_OK;
 
-- 
2.17.1



------------------------------

Message: 4
Date: Mon,  1 Jul 2019 13:11:54 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 0/2] Refactor port capability
Message-ID: <20190701041156.34004-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This series of patches is to refactor functions or variables defined in
`port_capability.c` and `port_capability.h`.

Yasufumi Ogawa (2):
  shared/sec: refactor public funcs of capability
  shared/sec: refactor port capability funcs

 src/mirror/mir_cmd_runner.c                   |   2 +-
 src/mirror/spp_mirror.c                       |   4 +-
 src/pcap/spp_pcap.c                           |   2 +-
 .../spp_worker_th/cmd_res_formatter.c         |   2 +-
 .../secondary/spp_worker_th/port_capability.c | 141 ++++++++++--------
 .../secondary/spp_worker_th/port_capability.h |  43 +++---
 src/vf/classifier_mac.c                       |   3 +-
 src/vf/forwarder.c                            |   3 +-
 src/vf/spp_vf.c                               |   2 +-
 src/vf/vf_cmd_runner.c                        |   2 +-
 10 files changed, 108 insertions(+), 96 deletions(-)

-- 
2.17.1



------------------------------

Message: 5
Date: Mon,  1 Jul 2019 13:11:55 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 1/2] shared/sec: refactor public funcs of
	capability
Message-ID: <20190701041156.34004-2-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to rename public functions `port_capability.c` and
`port_capability.h` for refactoring. It also includes revising
variables, structures or comments of them.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/mir_cmd_runner.c                   |  2 +-
 src/mirror/spp_mirror.c                       |  4 +-
 src/pcap/spp_pcap.c                           |  2 +-
 .../spp_worker_th/cmd_res_formatter.c         |  2 +-
 .../secondary/spp_worker_th/port_capability.c | 88 +++++++++++--------
 .../secondary/spp_worker_th/port_capability.h | 43 ++++-----
 src/vf/classifier_mac.c                       |  3 +-
 src/vf/forwarder.c                            |  3 +-
 src/vf/spp_vf.c                               |  2 +-
 src/vf/vf_cmd_runner.c                        |  2 +-
 10 files changed, 82 insertions(+), 69 deletions(-)

diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index 7c9a240..3f90e9a 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -389,7 +389,7 @@ update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp)
 			continue;
 
 		comp_info = (p_comp_info + cnt);
-		spp_port_ability_update(comp_info);
+		sppwk_update_port_dir(comp_info);
 
 		ret = update_mirror(comp_info);
 		RTE_LOG(DEBUG, MIR_CMD_RUNNER, "Update mirror.\n");
diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index 4c2b90c..37327c7 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -288,7 +288,7 @@ change_mirror_index(int id)
 	struct mirror_info *info = &g_mirror_info[id];
 	if (info->ref_index == info->upd_index) {
 	/* Change reference index of port ability. */
-		spp_port_ability_change_index(PORT_ABILITY_CHG_INDEX_REF, 0, 0);
+		sppwk_swap_two_sides(SPPWK_SWAP_REF, 0, 0);
 		info->ref_index = (info->upd_index+1) % TWO_SIDES;
 	}
 }
@@ -521,7 +521,7 @@ main(int argc, char *argv[])
 			break;
 
 		mirror_proc_init();
-		spp_port_ability_init();
+		sppwk_port_capability_init();
 
 		/* Setup connection for accepting commands from controller */
 		get_spp_ctl_ip(ctl_ip);
diff --git a/src/pcap/spp_pcap.c b/src/pcap/spp_pcap.c
index e32c360..bcce13f 100644
--- a/src/pcap/spp_pcap.c
+++ b/src/pcap/spp_pcap.c
@@ -946,7 +946,7 @@ main(int argc, char *argv[])
 		if (unlikely(ret_mng != 0))
 			break;
 
-		spp_port_ability_init();
+		sppwk_port_capability_init();
 
 		/* Setup connection for accepting commands from controller */
 		get_spp_ctl_ip(ctl_ip);
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index 2cc7d42..1485533 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -156,7 +156,7 @@ append_vlan_block(const char *name, char **output,
 		return SPP_RET_NG;
 	}
 
-	spp_port_ability_get_info(port_id, dir, &port_attrs);
+	sppwk_get_port_attrs(&port_attrs, port_id, dir);
 	for (i = 0; i < PORT_ABL_MAX; i++) {
 		switch (port_attrs[i].ops) {
 		case SPPWK_PORT_OPS_ADD_VLAN:
diff --git a/src/shared/secondary/spp_worker_th/port_capability.c b/src/shared/secondary/spp_worker_th/port_capability.c
index ce498fd..30c6e95 100644
--- a/src/shared/secondary/spp_worker_th/port_capability.c
+++ b/src/shared/secondary/spp_worker_th/port_capability.c
@@ -12,20 +12,35 @@
 #include "shared/secondary/return_codes.h"
 #include "ringlatencystats.h"
 
-/* Port ability management information */
-struct port_abl_info {
-	volatile int ref_index; /* Index to reference area. */
-	volatile int upd_index; /* Index to update area. */
+/**
+ * TODO(yasufum) This `port capability` is intended to be used mainly for VLAN
+ * features. However, other features, such as two sides structure of
+ * management info or port direction, are also included this capability.
+ * For the reason, SPP worker processes other spp_vf should include the
+ * capability even if it is not using VLAN. It is a bad design because of
+ * tightly coupled for dependency and it is so confusing.
+ *
+ * This problem should be fixed in a future update.
+ */
+
+/* Port capability management information used as a member of port_mng_info. */
+struct port_capabl_mng_info {
+	/* TODO(yasufum) rename ref_index and upd_index because flag. */
+	/* TODO(yasufum) consider to not use two flags for (0,1) and (1,0). */
+	volatile int ref_index; /* Flag to indicate using reference side. */
+	volatile int upd_index; /* Flag to indicate using update side. */
+
+	/* A set of attrs including sppwk_port_capability. */
+	/* TODO(yasufum) confirm why using PORT_ABL_MAX. */
 	struct sppwk_port_attrs port_attrs[TWO_SIDES][PORT_ABL_MAX];
-				/* Port attributes for spp_vf. */
 };
 
 /* Port ability port information */
 struct port_mng_info {
 	enum port_type iface_type;  /* Interface type (phy, vhost or so). */
 	int iface_no;  /* Interface number. */
-	struct port_abl_info rx;  /* Mng data of port ability for RX. */
-	struct port_abl_info tx;  /* Mng data of port ability for Tx. */
+	struct port_capabl_mng_info rx;  /* Mng data of capability for RX. */
+	struct port_capabl_mng_info tx;  /* Mng data of capability for Tx. */
 };
 
 /* Information for VLAN tag management. */
@@ -34,9 +49,9 @@ struct port_mng_info g_port_mng_info[RTE_MAX_ETHPORTS];
 /* TPID of VLAN. */
 static uint16_t g_vlan_tpid;
 
-/* Initialize port ability. */
+/* Initialize g_port_mng_info, and set ref side to 0 and update side to 1. */
 void
-spp_port_ability_init(void)
+sppwk_port_capability_init(void)
 {
 	int cnt = 0;
 	g_vlan_tpid = rte_cpu_to_be_16(ETHER_TYPE_VLAN);
@@ -49,13 +64,12 @@ spp_port_ability_init(void)
 	}
 }
 
-/* Get information of port ability. */
+/* Get port attributes of given ID and direction from g_port_mng_info. */
 void
-spp_port_ability_get_info(
-		int port_id, enum sppwk_port_dir dir,
-		struct sppwk_port_attrs **info)
+sppwk_get_port_attrs(struct sppwk_port_attrs **p_attrs,
+		int port_id, enum sppwk_port_dir dir)
 {
-	struct port_abl_info *mng = NULL;
+	struct port_capabl_mng_info *mng = NULL;
 
 	switch (dir) {
 	case SPPWK_PORT_DIR_RX:
@@ -68,7 +82,8 @@ spp_port_ability_get_info(
 		/* Not used. */
 		break;
 	}
-	*info = mng->port_attrs[mng->ref_index];
+
+	*p_attrs = mng->port_attrs[mng->ref_index];
 }
 
 /* Calculation and Setting of FCS. */
@@ -190,20 +205,21 @@ del_vlantag_all_packets(
 	return cnt;
 }
 
-/* Change index of management information. */
+/* Swap ref side and update side. */
+/* TODO(yasufum) add desc for this function. */
 void
-spp_port_ability_change_index(
-		enum port_ability_chg_index_type type,
+sppwk_swap_two_sides(
+		enum sppwk_swap_type swap_type,
 		int port_id, enum sppwk_port_dir dir)
 {
 	int cnt;
 	static int num_rx;
-	static int rx_list[RTE_MAX_ETHPORTS];
 	static int num_tx;
+	static int rx_list[RTE_MAX_ETHPORTS];
 	static int tx_list[RTE_MAX_ETHPORTS];
-	struct port_abl_info *mng = NULL;
+	struct port_capabl_mng_info *mng = NULL;
 
-	if (type == PORT_ABILITY_CHG_INDEX_UPD) {
+	if (swap_type == SPPWK_SWAP_UPD) {
 		switch (dir) {
 		case SPPWK_PORT_DIR_RX:
 			mng = &g_port_mng_info[port_id].rx;
@@ -227,14 +243,12 @@ spp_port_ability_change_index(
 		mng->ref_index = (mng->upd_index+1) % TWO_SIDES;
 		rx_list[cnt] = 0;
 	}
+
 	for (cnt = 0; cnt < num_tx; cnt++) {
 		mng = &g_port_mng_info[tx_list[cnt]].tx;
 		mng->ref_index = (mng->upd_index+1) % TWO_SIDES;
 		tx_list[cnt] = 0;
 	}
-
-	num_rx = 0;
-	num_tx = 0;
 }
 
 /* Set ability data of port ability. */
@@ -245,7 +259,7 @@ port_ability_set_ability(struct sppwk_port_info *port,
 	int in_cnt, out_cnt = 0;
 	int port_id = port->ethdev_port_id;
 	struct port_mng_info *port_mng = &g_port_mng_info[port_id];
-	struct port_abl_info *mng = NULL;
+	struct port_capabl_mng_info *mng = NULL;
 	struct sppwk_port_attrs *port_attrs_in = port->port_attrs;
 	struct sppwk_port_attrs *port_attrs_out = NULL;
 	struct sppwk_vlan_tag *tag = NULL;
@@ -290,24 +304,24 @@ port_ability_set_ability(struct sppwk_port_info *port,
 		out_cnt++;
 	}
 
-	spp_port_ability_change_index(PORT_ABILITY_CHG_INDEX_UPD,
-			port_id, dir);
+	sppwk_swap_two_sides(SPPWK_SWAP_UPD, port_id, dir);
 }
 
-/* Update port capability. */
+/* Update port direction of given component. */
 void
-spp_port_ability_update(const struct sppwk_comp_info *component)
+sppwk_update_port_dir(const struct sppwk_comp_info *comp)
 {
 	int cnt;
-	struct sppwk_port_info *port = NULL;
-	for (cnt = 0; cnt < component->nof_rx; cnt++) {
-		port = component->rx_ports[cnt];
-		port_ability_set_ability(port, SPPWK_PORT_DIR_RX);
+	struct sppwk_port_info *port_info = NULL;
+
+	for (cnt = 0; cnt < comp->nof_rx; cnt++) {
+		port_info = comp->rx_ports[cnt];
+		port_ability_set_ability(port_info, SPPWK_PORT_DIR_RX);
 	}
 
-	for (cnt = 0; cnt < component->nof_tx; cnt++) {
-		port = component->tx_ports[cnt];
-		port_ability_set_ability(port, SPPWK_PORT_DIR_TX);
+	for (cnt = 0; cnt < comp->nof_tx; cnt++) {
+		port_info = comp->tx_ports[cnt];
+		port_ability_set_ability(port_info, SPPWK_PORT_DIR_TX);
 	}
 }
 
@@ -334,7 +348,7 @@ port_ability_each_operation(uint16_t port_id,
 	int ok_pkts = nb_pkts;
 	struct sppwk_port_attrs *port_attrs = NULL;
 
-	spp_port_ability_get_info(port_id, dir, &port_attrs);
+	sppwk_get_port_attrs(&port_attrs, port_id, dir);
 	if (unlikely(port_attrs[0].ops == SPPWK_PORT_OPS_NONE))
 		return nb_pkts;
 
diff --git a/src/shared/secondary/spp_worker_th/port_capability.h b/src/shared/secondary/spp_worker_th/port_capability.h
index 5d2a38a..0593f10 100644
--- a/src/shared/secondary/spp_worker_th/port_capability.h
+++ b/src/shared/secondary/spp_worker_th/port_capability.h
@@ -17,45 +17,46 @@
 /** Calculate TCI of VLAN tag. */
 #define SPP_VLANTAG_CALC_TCI(id, pcp) (((pcp & 0x07) << 13) | (id & 0x0fff))
 
-/** Type for changing index. */
-enum port_ability_chg_index_type {
-	PORT_ABILITY_CHG_INDEX_REF,  /** To change index to reference area. */
-	PORT_ABILITY_CHG_INDEX_UPD,  /** To change index to update area. */
+/** Type for swaping sides . */
+enum sppwk_swap_type {
+	SPPWK_SWAP_REF,  /** Swap to reference area. */
+	SPPWK_SWAP_UPD,  /** Swap to update area. */
 };
 
-/** Initialize port ability. */
-void spp_port_ability_init(void);
+/**
+ * Initialize global variable g_port_mng_info, and set ref side to 0 and
+ * update side to 1.
+ */
+void sppwk_port_capability_init(void);
 
 /**
- * Get information of port ability.
+ * Get port attributes of given ID and direction from global g_port_mng_info.
  *
- * @param port_id Etherdev ID.
- * @param rxtx RX/TX ID of port_id.
- * @param info Port ability information.
+ * @param[in,out] p_attrs Port attributes.
+ * @param[in] port_id Etherdev ID.
+ * @param[in] dir Direction of teh port of sppwk_port_dir.
  */
-void spp_port_ability_get_info(
-		int port_id, enum sppwk_port_dir dir,
-		struct sppwk_port_attrs **info);
+void sppwk_get_port_attrs(
+		struct sppwk_port_attrs **p_attrs,
+		int port_id, enum sppwk_port_dir dir);
 
 /**
- * Change index of management information.
+ * Swap ref side and update side.
  *
  * @param port_id Etherdev ID.
  * @param rxtx RX/TX ID of port_id.
  * @param type Type for changing index.
  */
-void spp_port_ability_change_index(
-		enum port_ability_chg_index_type type,
+void sppwk_swap_two_sides(
+		enum sppwk_swap_type swap_type,
 		int port_id, enum sppwk_port_dir dir);
 
 /**
- * Update port capability.
+ * Update port direction of given component.
  *
- * @param component_info
- *  The pointer to struct sppwk_comp_info.@n
- *  The data for updating the internal data of port ability.
+ * @param comp Pointer to sppwk_comp_info.
  */
-void spp_port_ability_update(const struct sppwk_comp_info *component);
+void sppwk_update_port_dir(const struct sppwk_comp_info *comp);
 
 /**
  * Wrapper function for rte_eth_rx_burst() with ring latency feature.
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 6850962..e41c65a 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -679,8 +679,7 @@ change_classifier_index(struct management_info *mng_info, int id)
 	if (unlikely(mng_info->ref_index ==
 			mng_info->upd_index)) {
 		/* Change reference index of port ability. */
-		spp_port_ability_change_index(PORT_ABILITY_CHG_INDEX_REF,
-									0, 0);
+		sppwk_swap_two_sides(SPPWK_SWAP_REF, 0, 0);
 
 		/* Transmit all packets for switching the using data. */
 		transmit_all_packet(mng_info->cmp_infos + mng_info->ref_index);
diff --git a/src/vf/forwarder.c b/src/vf/forwarder.c
index 77afc4e..cd28a58 100644
--- a/src/vf/forwarder.c
+++ b/src/vf/forwarder.c
@@ -170,8 +170,7 @@ change_forward_index(int id)
 	struct forward_info *info = &g_forward_info[id];
 	if (info->ref_index == info->upd_index) {
 		/* Change reference index of port ability. */
-		spp_port_ability_change_index(
-				PORT_ABILITY_CHG_INDEX_REF, 0, 0);
+		sppwk_swap_two_sides(SPPWK_SWAP_REF, 0, 0);
 
 		info->ref_index = (info->upd_index+1) % TWO_SIDES;
 	}
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index 504ee26..dbd47bf 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -248,7 +248,7 @@ main(int argc, char *argv[])
 			break;
 
 		init_forwarder();
-		spp_port_ability_init();
+		sppwk_port_capability_init();
 
 		/* Setup connection for accepting commands from controller */
 		get_spp_ctl_ip(ctl_ip);
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index 5246af7..520398b 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -529,7 +529,7 @@ update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp)
 			continue;
 
 		comp_info = (p_comp_info + cnt);
-		spp_port_ability_update(comp_info);
+		sppwk_update_port_dir(comp_info);
 
 		if (comp_info->wk_type == SPPWK_TYPE_CLS) {
 			ret = update_classifier(comp_info);
-- 
2.17.1



End of spp Digest, Vol 32, Issue 2
**********************************


From yasufum.o@gmail.com Mon Jul 01 13:11:55 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd106.ddreams.local
 (zssg-mailmd106.ddreams.local [10.160.123.101])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTY00XSA3OE1U10@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 01 Jul 2019 13:12:14 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd106.ddreams.local by
 zssg-mailmd106.ddreams.local (dDREAMS) id <0PTY00L143OE4R00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:12:14 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd106.ddreams.local
 (dDREAMS) with ESMTP id <0PTY0013H3OEVYB0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:12:14 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf101.ddreams.local (Postfix) with ESMTP id 0CBBC7E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:14 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 0B7938E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:14 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 009D38E6055	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:12:14 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 35B158E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:12 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf101.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:12:12 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CCRm015586;	Mon,
 1 Jul 2019 13:12:12 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x614CClq015585;	Mon, 1 Jul 2019 13:12:12 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x614CBhX015582	for unknown; Mon,
 1 Jul 2019 13:12:11 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CBZF029872 for
 unknown; Mon, 1 Jul 2019 13:12:11 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CBxw029869; Mon,
 1 Jul 2019 13:12:11 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CBWw019745;	Mon,
 1 Jul 2019 13:12:11 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x614CBnb019741	for unknown; Mon, 1 Jul 2019 13:12:11 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CBCK025267 for
 unknown; Mon, 1 Jul 2019 13:12:11 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CBH9025264 for
 unknown; Mon, 1 Jul 2019 13:12:11 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x614C49M006859	for unknown; Mon,
 1 Jul 2019 13:12:10 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 104AC326D;	Mon,  1 Jul 2019 06:12:04 +0200 (CEST)
Received: from mail-pf1-f195.google.com
 (mail-pf1-f195.google.com [209.85.210.195]) by dpdk.org (Postfix)
 with ESMTP id BF991325F for <spp@dpdk.org>; Mon,
 1 Jul 2019 06:12:02 +0200 (CEST)
Received: by mail-pf1-f195.google.com with SMTP id p184so5857711pfp.7 for
 <spp@dpdk.org>; Sun, 30 Jun 2019 21:12:02 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id 131sm19015550pfx.57.2019.06.30.21.12.00
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 30 Jun 2019 21:12:01 -0700 (PDT)
Date: Mon, 01 Jul 2019 13:11:55 +0900
From: yasufum.o@gmail.com
Subject: [spp 04460] [spp] [PATCH 1/2] shared/sec: refactor public funcs of
 capability
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190701041156.34004-2-yasufum.o@gmail.com>
In-reply-to: <20190701041156.34004-1-yasufum.o@gmail.com>
References: <20190701041156.34004-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04460
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=Z80rPL6jFFDU1uOLRWhVP+dDA49sN0DXhzf0uKkoyuI=;
 b=VPP3HjPxNRIN74LLMxC5tncJGjY9Byoylt9mr1wAqx3jrZsZdToeggwVtjOUH9dqU1
 GN3tBLoBw7Qmgv2YwfhfN1fjja7CfW7ilKANOkjjcq05gouOC9J327vJq/bPkDsF2y61
 /Z8R7hV0wfnhWb0LJLA62fD3lOW+lYC9tzs5sVSLxX/N+DMvFQ72x3pc+qaiq96S8hCU
 YV06u5GYSjXwLKesJ4AW9YxgIXwccsNZ6APCzFNMLiwqMHjr3RAD7gucIZ5Jzs/R9guk
 o137eQ4TU1Yik3xbHEaj6tg3vBk5K2HStR+g5roRc3f695QZaIfnjzPwL+S92vLrZica YMoA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=Z80rPL6jFFDU1uOLRWhVP+dDA49sN0DXhzf0uKkoyuI=;
 b=VipY9V1lOpEhDGTwdXjOEIz4+41GeFhERMXW+ZvBvRNIZ5MjJwbI2RyAtyONZojPtJ
 tTHtmAmSb2jQpC6wcm5y4Pc/UgaMZBpupAeZAtVL4alXq8SibVtar4iyTagvX7jna89+
 0pA8oCjqGsXs1HzxY1CJBlzCMk6+2JOBbMjZldhHTn1tcdFWxNFXpedVHilzZuAW8Ww+
 lyAgaTo7r9abcfv1QqFc6iM2zRQyK+ErCn7XdyVWF3bTvZayY1y7aDhP9AXNMV1NgD/D
 /1lHnY69efqdhbZCASjhXsIGmL+eV/2Zaf9i6nR0uq4ghG80CF8Fjl1gJoSJ0njI4Xp7 XEEA==
X-Gm-Message-State: APjAAAXd4uYmBOOmQhfYiqMx/qwl0CQ62O+gqUXp249Y3IWG0n81call
 NuvEddFrUHeUQ2XdlTDtRqYWx0n7
X-Google-Smtp-Source:
 APXvYqwdv9e3kVZFOP6gNVaSOKKxj38//+VFaOwS2mVxKvQuMLnmF9JoEfj2TWbo5JbeKz7hpb9MVw==
X-Received: by 2002:a65:524b:: with SMTP id q11mr21831574pgp.384.1561954321752;
 Sun, 30 Jun 2019 21:12:01 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 395
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to rename public functions `port_capability.c` and
`port_capability.h` for refactoring. It also includes revising
variables, structures or comments of them.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/mir_cmd_runner.c                   |  2 +-
 src/mirror/spp_mirror.c                       |  4 +-
 src/pcap/spp_pcap.c                           |  2 +-
 .../spp_worker_th/cmd_res_formatter.c         |  2 +-
 .../secondary/spp_worker_th/port_capability.c | 88 +++++++++++--------
 .../secondary/spp_worker_th/port_capability.h | 43 ++++-----
 src/vf/classifier_mac.c                       |  3 +-
 src/vf/forwarder.c                            |  3 +-
 src/vf/spp_vf.c                               |  2 +-
 src/vf/vf_cmd_runner.c                        |  2 +-
 10 files changed, 82 insertions(+), 69 deletions(-)

diff --git a/src/mirror/mir_cmd_runner.c b/src/mirror/mir_cmd_runner.c
index 7c9a240..3f90e9a 100644
--- a/src/mirror/mir_cmd_runner.c
+++ b/src/mirror/mir_cmd_runner.c
@@ -389,7 +389,7 @@ update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp)
 			continue;
 
 		comp_info = (p_comp_info + cnt);
-		spp_port_ability_update(comp_info);
+		sppwk_update_port_dir(comp_info);
 
 		ret = update_mirror(comp_info);
 		RTE_LOG(DEBUG, MIR_CMD_RUNNER, "Update mirror.\n");
diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index 4c2b90c..37327c7 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -288,7 +288,7 @@ change_mirror_index(int id)
 	struct mirror_info *info = &g_mirror_info[id];
 	if (info->ref_index == info->upd_index) {
 	/* Change reference index of port ability. */
-		spp_port_ability_change_index(PORT_ABILITY_CHG_INDEX_REF, 0, 0);
+		sppwk_swap_two_sides(SPPWK_SWAP_REF, 0, 0);
 		info->ref_index = (info->upd_index+1) % TWO_SIDES;
 	}
 }
@@ -521,7 +521,7 @@ main(int argc, char *argv[])
 			break;
 
 		mirror_proc_init();
-		spp_port_ability_init();
+		sppwk_port_capability_init();
 
 		/* Setup connection for accepting commands from controller */
 		get_spp_ctl_ip(ctl_ip);
diff --git a/src/pcap/spp_pcap.c b/src/pcap/spp_pcap.c
index e32c360..bcce13f 100644
--- a/src/pcap/spp_pcap.c
+++ b/src/pcap/spp_pcap.c
@@ -946,7 +946,7 @@ main(int argc, char *argv[])
 		if (unlikely(ret_mng != 0))
 			break;
 
-		spp_port_ability_init();
+		sppwk_port_capability_init();
 
 		/* Setup connection for accepting commands from controller */
 		get_spp_ctl_ip(ctl_ip);
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index 2cc7d42..1485533 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -156,7 +156,7 @@ append_vlan_block(const char *name, char **output,
 		return SPP_RET_NG;
 	}
 
-	spp_port_ability_get_info(port_id, dir, &port_attrs);
+	sppwk_get_port_attrs(&port_attrs, port_id, dir);
 	for (i = 0; i < PORT_ABL_MAX; i++) {
 		switch (port_attrs[i].ops) {
 		case SPPWK_PORT_OPS_ADD_VLAN:
diff --git a/src/shared/secondary/spp_worker_th/port_capability.c b/src/shared/secondary/spp_worker_th/port_capability.c
index ce498fd..30c6e95 100644
--- a/src/shared/secondary/spp_worker_th/port_capability.c
+++ b/src/shared/secondary/spp_worker_th/port_capability.c
@@ -12,20 +12,35 @@
 #include "shared/secondary/return_codes.h"
 #include "ringlatencystats.h"
 
-/* Port ability management information */
-struct port_abl_info {
-	volatile int ref_index; /* Index to reference area. */
-	volatile int upd_index; /* Index to update area. */
+/**
+ * TODO(yasufum) This `port capability` is intended to be used mainly for VLAN
+ * features. However, other features, such as two sides structure of
+ * management info or port direction, are also included this capability.
+ * For the reason, SPP worker processes other spp_vf should include the
+ * capability even if it is not using VLAN. It is a bad design because of
+ * tightly coupled for dependency and it is so confusing.
+ *
+ * This problem should be fixed in a future update.
+ */
+
+/* Port capability management information used as a member of port_mng_info. */
+struct port_capabl_mng_info {
+	/* TODO(yasufum) rename ref_index and upd_index because flag. */
+	/* TODO(yasufum) consider to not use two flags for (0,1) and (1,0). */
+	volatile int ref_index; /* Flag to indicate using reference side. */
+	volatile int upd_index; /* Flag to indicate using update side. */
+
+	/* A set of attrs including sppwk_port_capability. */
+	/* TODO(yasufum) confirm why using PORT_ABL_MAX. */
 	struct sppwk_port_attrs port_attrs[TWO_SIDES][PORT_ABL_MAX];
-				/* Port attributes for spp_vf. */
 };
 
 /* Port ability port information */
 struct port_mng_info {
 	enum port_type iface_type;  /* Interface type (phy, vhost or so). */
 	int iface_no;  /* Interface number. */
-	struct port_abl_info rx;  /* Mng data of port ability for RX. */
-	struct port_abl_info tx;  /* Mng data of port ability for Tx. */
+	struct port_capabl_mng_info rx;  /* Mng data of capability for RX. */
+	struct port_capabl_mng_info tx;  /* Mng data of capability for Tx. */
 };
 
 /* Information for VLAN tag management. */
@@ -34,9 +49,9 @@ struct port_mng_info g_port_mng_info[RTE_MAX_ETHPORTS];
 /* TPID of VLAN. */
 static uint16_t g_vlan_tpid;
 
-/* Initialize port ability. */
+/* Initialize g_port_mng_info, and set ref side to 0 and update side to 1. */
 void
-spp_port_ability_init(void)
+sppwk_port_capability_init(void)
 {
 	int cnt = 0;
 	g_vlan_tpid = rte_cpu_to_be_16(ETHER_TYPE_VLAN);
@@ -49,13 +64,12 @@ spp_port_ability_init(void)
 	}
 }
 
-/* Get information of port ability. */
+/* Get port attributes of given ID and direction from g_port_mng_info. */
 void
-spp_port_ability_get_info(
-		int port_id, enum sppwk_port_dir dir,
-		struct sppwk_port_attrs **info)
+sppwk_get_port_attrs(struct sppwk_port_attrs **p_attrs,
+		int port_id, enum sppwk_port_dir dir)
 {
-	struct port_abl_info *mng = NULL;
+	struct port_capabl_mng_info *mng = NULL;
 
 	switch (dir) {
 	case SPPWK_PORT_DIR_RX:
@@ -68,7 +82,8 @@ spp_port_ability_get_info(
 		/* Not used. */
 		break;
 	}
-	*info = mng->port_attrs[mng->ref_index];
+
+	*p_attrs = mng->port_attrs[mng->ref_index];
 }
 
 /* Calculation and Setting of FCS. */
@@ -190,20 +205,21 @@ del_vlantag_all_packets(
 	return cnt;
 }
 
-/* Change index of management information. */
+/* Swap ref side and update side. */
+/* TODO(yasufum) add desc for this function. */
 void
-spp_port_ability_change_index(
-		enum port_ability_chg_index_type type,
+sppwk_swap_two_sides(
+		enum sppwk_swap_type swap_type,
 		int port_id, enum sppwk_port_dir dir)
 {
 	int cnt;
 	static int num_rx;
-	static int rx_list[RTE_MAX_ETHPORTS];
 	static int num_tx;
+	static int rx_list[RTE_MAX_ETHPORTS];
 	static int tx_list[RTE_MAX_ETHPORTS];
-	struct port_abl_info *mng = NULL;
+	struct port_capabl_mng_info *mng = NULL;
 
-	if (type == PORT_ABILITY_CHG_INDEX_UPD) {
+	if (swap_type == SPPWK_SWAP_UPD) {
 		switch (dir) {
 		case SPPWK_PORT_DIR_RX:
 			mng = &g_port_mng_info[port_id].rx;
@@ -227,14 +243,12 @@ spp_port_ability_change_index(
 		mng->ref_index = (mng->upd_index+1) % TWO_SIDES;
 		rx_list[cnt] = 0;
 	}
+
 	for (cnt = 0; cnt < num_tx; cnt++) {
 		mng = &g_port_mng_info[tx_list[cnt]].tx;
 		mng->ref_index = (mng->upd_index+1) % TWO_SIDES;
 		tx_list[cnt] = 0;
 	}
-
-	num_rx = 0;
-	num_tx = 0;
 }
 
 /* Set ability data of port ability. */
@@ -245,7 +259,7 @@ port_ability_set_ability(struct sppwk_port_info *port,
 	int in_cnt, out_cnt = 0;
 	int port_id = port->ethdev_port_id;
 	struct port_mng_info *port_mng = &g_port_mng_info[port_id];
-	struct port_abl_info *mng = NULL;
+	struct port_capabl_mng_info *mng = NULL;
 	struct sppwk_port_attrs *port_attrs_in = port->port_attrs;
 	struct sppwk_port_attrs *port_attrs_out = NULL;
 	struct sppwk_vlan_tag *tag = NULL;
@@ -290,24 +304,24 @@ port_ability_set_ability(struct sppwk_port_info *port,
 		out_cnt++;
 	}
 
-	spp_port_ability_change_index(PORT_ABILITY_CHG_INDEX_UPD,
-			port_id, dir);
+	sppwk_swap_two_sides(SPPWK_SWAP_UPD, port_id, dir);
 }
 
-/* Update port capability. */
+/* Update port direction of given component. */
 void
-spp_port_ability_update(const struct sppwk_comp_info *component)
+sppwk_update_port_dir(const struct sppwk_comp_info *comp)
 {
 	int cnt;
-	struct sppwk_port_info *port = NULL;
-	for (cnt = 0; cnt < component->nof_rx; cnt++) {
-		port = component->rx_ports[cnt];
-		port_ability_set_ability(port, SPPWK_PORT_DIR_RX);
+	struct sppwk_port_info *port_info = NULL;
+
+	for (cnt = 0; cnt < comp->nof_rx; cnt++) {
+		port_info = comp->rx_ports[cnt];
+		port_ability_set_ability(port_info, SPPWK_PORT_DIR_RX);
 	}
 
-	for (cnt = 0; cnt < component->nof_tx; cnt++) {
-		port = component->tx_ports[cnt];
-		port_ability_set_ability(port, SPPWK_PORT_DIR_TX);
+	for (cnt = 0; cnt < comp->nof_tx; cnt++) {
+		port_info = comp->tx_ports[cnt];
+		port_ability_set_ability(port_info, SPPWK_PORT_DIR_TX);
 	}
 }
 
@@ -334,7 +348,7 @@ port_ability_each_operation(uint16_t port_id,
 	int ok_pkts = nb_pkts;
 	struct sppwk_port_attrs *port_attrs = NULL;
 
-	spp_port_ability_get_info(port_id, dir, &port_attrs);
+	sppwk_get_port_attrs(&port_attrs, port_id, dir);
 	if (unlikely(port_attrs[0].ops == SPPWK_PORT_OPS_NONE))
 		return nb_pkts;
 
diff --git a/src/shared/secondary/spp_worker_th/port_capability.h b/src/shared/secondary/spp_worker_th/port_capability.h
index 5d2a38a..0593f10 100644
--- a/src/shared/secondary/spp_worker_th/port_capability.h
+++ b/src/shared/secondary/spp_worker_th/port_capability.h
@@ -17,45 +17,46 @@
 /** Calculate TCI of VLAN tag. */
 #define SPP_VLANTAG_CALC_TCI(id, pcp) (((pcp & 0x07) << 13) | (id & 0x0fff))
 
-/** Type for changing index. */
-enum port_ability_chg_index_type {
-	PORT_ABILITY_CHG_INDEX_REF,  /** To change index to reference area. */
-	PORT_ABILITY_CHG_INDEX_UPD,  /** To change index to update area. */
+/** Type for swaping sides . */
+enum sppwk_swap_type {
+	SPPWK_SWAP_REF,  /** Swap to reference area. */
+	SPPWK_SWAP_UPD,  /** Swap to update area. */
 };
 
-/** Initialize port ability. */
-void spp_port_ability_init(void);
+/**
+ * Initialize global variable g_port_mng_info, and set ref side to 0 and
+ * update side to 1.
+ */
+void sppwk_port_capability_init(void);
 
 /**
- * Get information of port ability.
+ * Get port attributes of given ID and direction from global g_port_mng_info.
  *
- * @param port_id Etherdev ID.
- * @param rxtx RX/TX ID of port_id.
- * @param info Port ability information.
+ * @param[in,out] p_attrs Port attributes.
+ * @param[in] port_id Etherdev ID.
+ * @param[in] dir Direction of teh port of sppwk_port_dir.
  */
-void spp_port_ability_get_info(
-		int port_id, enum sppwk_port_dir dir,
-		struct sppwk_port_attrs **info);
+void sppwk_get_port_attrs(
+		struct sppwk_port_attrs **p_attrs,
+		int port_id, enum sppwk_port_dir dir);
 
 /**
- * Change index of management information.
+ * Swap ref side and update side.
  *
  * @param port_id Etherdev ID.
  * @param rxtx RX/TX ID of port_id.
  * @param type Type for changing index.
  */
-void spp_port_ability_change_index(
-		enum port_ability_chg_index_type type,
+void sppwk_swap_two_sides(
+		enum sppwk_swap_type swap_type,
 		int port_id, enum sppwk_port_dir dir);
 
 /**
- * Update port capability.
+ * Update port direction of given component.
  *
- * @param component_info
- *  The pointer to struct sppwk_comp_info.@n
- *  The data for updating the internal data of port ability.
+ * @param comp Pointer to sppwk_comp_info.
  */
-void spp_port_ability_update(const struct sppwk_comp_info *component);
+void sppwk_update_port_dir(const struct sppwk_comp_info *comp);
 
 /**
  * Wrapper function for rte_eth_rx_burst() with ring latency feature.
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 6850962..e41c65a 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -679,8 +679,7 @@ change_classifier_index(struct management_info *mng_info, int id)
 	if (unlikely(mng_info->ref_index ==
 			mng_info->upd_index)) {
 		/* Change reference index of port ability. */
-		spp_port_ability_change_index(PORT_ABILITY_CHG_INDEX_REF,
-									0, 0);
+		sppwk_swap_two_sides(SPPWK_SWAP_REF, 0, 0);
 
 		/* Transmit all packets for switching the using data. */
 		transmit_all_packet(mng_info->cmp_infos + mng_info->ref_index);
diff --git a/src/vf/forwarder.c b/src/vf/forwarder.c
index 77afc4e..cd28a58 100644
--- a/src/vf/forwarder.c
+++ b/src/vf/forwarder.c
@@ -170,8 +170,7 @@ change_forward_index(int id)
 	struct forward_info *info = &g_forward_info[id];
 	if (info->ref_index == info->upd_index) {
 		/* Change reference index of port ability. */
-		spp_port_ability_change_index(
-				PORT_ABILITY_CHG_INDEX_REF, 0, 0);
+		sppwk_swap_two_sides(SPPWK_SWAP_REF, 0, 0);
 
 		info->ref_index = (info->upd_index+1) % TWO_SIDES;
 	}
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index 504ee26..dbd47bf 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -248,7 +248,7 @@ main(int argc, char *argv[])
 			break;
 
 		init_forwarder();
-		spp_port_ability_init();
+		sppwk_port_capability_init();
 
 		/* Setup connection for accepting commands from controller */
 		get_spp_ctl_ip(ctl_ip);
diff --git a/src/vf/vf_cmd_runner.c b/src/vf/vf_cmd_runner.c
index 5246af7..520398b 100644
--- a/src/vf/vf_cmd_runner.c
+++ b/src/vf/vf_cmd_runner.c
@@ -529,7 +529,7 @@ update_comp_info(struct sppwk_comp_info *p_comp_info, int *p_change_comp)
 			continue;
 
 		comp_info = (p_comp_info + cnt);
-		spp_port_ability_update(comp_info);
+		sppwk_update_port_dir(comp_info);
 
 		if (comp_info->wk_type == SPPWK_TYPE_CLS) {
 			ret = update_classifier(comp_info);
-- 
2.17.1



From yasufum.o@gmail.com Mon Jul 01 13:12:09 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd105.ddreams.local
 (zssg-mailmd105.ddreams.local [10.160.123.100])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTY00XWY3OS1U10@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 01 Jul 2019 13:12:28 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd105.ddreams.local by
 zssg-mailmd105.ddreams.local (dDREAMS) id <0PTY01A263OSSP00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:12:28 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd105.ddreams.local
 (dDREAMS) with ESMTP id <0PTY00XTS3ORGS70@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:12:28 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id 309067E603A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:28 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 2F3A48E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:28 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 2DD388E6054	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:12:28 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id DF92C8E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:26 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:12:26 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CQvV015753;	Mon,
 1 Jul 2019 13:12:26 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x614CQcH015752;	Mon, 1 Jul 2019 13:12:26 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x614CQVW015749	for unknown; Mon,
 1 Jul 2019 13:12:26 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CQrd030144 for
 unknown; Mon, 1 Jul 2019 13:12:26 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CQ2f030139; Mon,
 1 Jul 2019 13:12:26 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CQ24019805;	Mon,
 1 Jul 2019 13:12:26 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x614CPa7019801	for unknown; Mon, 1 Jul 2019 13:12:25 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CPnk025421 for
 unknown; Mon, 1 Jul 2019 13:12:25 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CPes025412 for
 unknown; Mon, 1 Jul 2019 13:12:25 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x614CIkr006931	for unknown; Mon,
 1 Jul 2019 13:12:24 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 41D4931FC;	Mon,  1 Jul 2019 06:12:18 +0200 (CEST)
Received: from mail-pf1-f174.google.com
 (mail-pf1-f174.google.com [209.85.210.174]) by dpdk.org (Postfix)
 with ESMTP id C79852AB for <spp@dpdk.org>; Mon,
 1 Jul 2019 06:12:16 +0200 (CEST)
Received: by mail-pf1-f174.google.com with SMTP id x15so5872586pfq.0 for
 <spp@dpdk.org>; Sun, 30 Jun 2019 21:12:16 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id j21sm9531126pfh.86.2019.06.30.21.12.14
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 30 Jun 2019 21:12:15 -0700 (PDT)
Date: Mon, 01 Jul 2019 13:12:09 +0900
From: yasufum.o@gmail.com
Subject: [spp 04462] [spp] [PATCH 0/2] Fix compile errors of ring latency stats
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190701041211.34060-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04462
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=p4IskviPcPI54BV1+IEQvP8YhHyA7gItgBoSDGDZz4E=;
 b=bKidiR7ZYV6NCrr7LNoi7kVOyOAqbZZub3F1Ypk5auy+s+OFnxdjgSsMTcpb6yjT69
 hfN1cGhp+ZuGjSu/KF3F7iQVo2h9wRsUw0W4f/EIuc5PtbMuaQ77Jwmr8XJm6PHkd1j2
 +q4TZUuG9BbpfttqELwWHGLEvZFzkAPKsyQjqtPXLQxid3b9NljAKqxbrXLYM8rSTpCX
 F6xs55rguCtehEyHrOcXnbgfcYLgDxpDH7XM+BLNEKpEZU1RuDDObM/bMKfLtXcfaSWa
 7UyMe2LRySJT/NmIn5qwwbjeRRFt8tfnaxKBba65xGgXmCkiO846Du5pGjbPpP6cJiEb aLag==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=p4IskviPcPI54BV1+IEQvP8YhHyA7gItgBoSDGDZz4E=;
 b=a1GBRhnV76TsESbc0bgFkxpwNyItsUnwU1t13IUGOLABFMBQAM7zRI84UHOiiaPHO/
 PmhFSSnJcQBFVneXJeh23sElZ0vh+wtUEblT7lM8lA+r4grTgEFDxKXDpadpFfX/GoA/
 93fTOKivGNhqODgW5gZVjRbeovFakLEiiE3ey99C2xa1xtJ7ih5KVs/74M1ju2Hlz21m
 IxrNIGJ1xhvhhHq7Vdh6ifnPOrr1Rhmk/sxF0Z/8YjxiISgG907TMaeyUSyGOjnmPhtv
 fxnq5h43S2BaPoL0FI9RNuueRbuhWgSbE4qUt+5z4V8krTlhomeYBzFoeE8FfbfLgE/B EGHA==
X-Gm-Message-State: APjAAAUAF4OzcgOemHsPP7ztB69qMpwpoABy2cMem9KcQArJAHe9el+m
 r9X0G7ZY6fjcKJ39O9TULp4HirRm
X-Google-Smtp-Source:
 APXvYqyaRgc2rq8UiL0F1n/wGhImLnskqPetmgYuftr3nM39YCk7dyNY+mHTuzWeb5r2gR65FRACJQ==
X-Received: by 2002:a17:90a:346c:: with SMTP id
 o99mr27975365pjb.20.1561954336005; Sun, 30 Jun 2019 21:12:16 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 35
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

For adding burst functions and changing dir structure, it causes compile
errors if CFLAG DSPP_RINGLATENCYSTATS_ENABLE is activated in each of
Makefiles. This update is to fix this issue.

Yasufumi Ogawa (2):
  shared/sec: fix compile error of ringlatencystats
  shared/sec: remove source and header of spp_port

 src/mirror/Makefile                           |  1 -
 src/mirror/spp_mirror.c                       | 37 +++++++--
 src/pcap/Makefile                             |  1 -
 src/pcap/spp_pcap.c                           | 13 ++-
 .../spp_worker_th/cmd_res_formatter.c         |  1 -
 .../secondary/spp_worker_th/cmd_runner.c      |  1 -
 .../secondary/spp_worker_th/cmd_utils.c       | 41 ----------
 .../secondary/spp_worker_th/cmd_utils.h       |  5 --
 .../secondary/spp_worker_th/port_capability.c | 60 ++++++++++----
 .../secondary/spp_worker_th/port_capability.h |  4 +-
 .../spp_worker_th/ringlatencystats.c          | 81 +++++++++++++++++++
 .../spp_worker_th/ringlatencystats.h          | 65 +++++++++++++++
 src/shared/secondary/spp_worker_th/spp_port.c | 57 -------------
 src/shared/secondary/spp_worker_th/spp_port.h | 34 --------
 src/vf/Makefile                               |  2 +-
 src/vf/classifier_mac.c                       | 16 ++++
 src/vf/forwarder.c                            | 18 ++++-
 src/vf/spp_vf.c                               |  9 ++-
 18 files changed, 272 insertions(+), 174 deletions(-)
 delete mode 100644 src/shared/secondary/spp_worker_th/spp_port.c
 delete mode 100644 src/shared/secondary/spp_worker_th/spp_port.h

-- 
2.17.1



From yasufum.o@gmail.com Mon Jul 01 13:12:10 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd105.ddreams.local
 (zssg-mailmd105.ddreams.local [10.160.123.100])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTY00XX63OT1U10@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 01 Jul 2019 13:12:29 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd105.ddreams.local by
 zssg-mailmd105.ddreams.local (dDREAMS) id <0PTY01A0Y3OTWC00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:12:29 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd105.ddreams.local
 (dDREAMS) with ESMTP id <0PTY00XUW3OTGS70@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:12:29 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf103.ddreams.local (Postfix) with ESMTP id 61B837E6036	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:29 +0900 (JST)
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 605CD8E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:29 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 5548F8E6054	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:12:29 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf103.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 868ED8E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:28 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf103.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:12:28 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CSpn015767;	Mon,
 1 Jul 2019 13:12:28 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x614CS1B015766;	Mon, 1 Jul 2019 13:12:28 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x614CSg4015763	for unknown; Mon,
 1 Jul 2019 13:12:28 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CRih030185 for
 unknown; Mon, 1 Jul 2019 13:12:28 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CRKH030182; Mon,
 1 Jul 2019 13:12:27 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CRwo019812;	Mon,
 1 Jul 2019 13:12:27 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x614CRJd019808	for unknown; Mon, 1 Jul 2019 13:12:27 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CRIR025439 for
 unknown; Mon, 1 Jul 2019 13:12:27 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CR2D025432 for
 unknown; Mon, 1 Jul 2019 13:12:27 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x614CKww006946	for unknown; Mon,
 1 Jul 2019 13:12:26 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 5543C374C;	Mon,  1 Jul 2019 06:12:20 +0200 (CEST)
Received: from mail-pl1-f182.google.com
 (mail-pl1-f182.google.com [209.85.214.182]) by dpdk.org (Postfix)
 with ESMTP id AD556325F for <spp@dpdk.org>; Mon,
 1 Jul 2019 06:12:18 +0200 (CEST)
Received: by mail-pl1-f182.google.com with SMTP id i2so6609269plt.1 for
 <spp@dpdk.org>; Sun, 30 Jun 2019 21:12:18 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id j21sm9531126pfh.86.2019.06.30.21.12.16
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 30 Jun 2019 21:12:17 -0700 (PDT)
Date: Mon, 01 Jul 2019 13:12:10 +0900
From: yasufum.o@gmail.com
Subject: [spp 04463] [spp] [PATCH 1/2] shared/sec: fix compile error of
 ringlatencystats
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190701041211.34060-2-yasufum.o@gmail.com>
In-reply-to: <20190701041211.34060-1-yasufum.o@gmail.com>
References: <20190701041211.34060-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04463
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=z5WTmbw32DRAaxhPrJjBUFI5nonpUWukoeF5wW10/Bo=;
 b=oVwQ0xVdT/J9ezU6Uy7r1xFC4UPnyd5uroZ6zVcf4g4q8Ulko/h0jBmLKJjXpzl8dN
 HzOGtuLy9J4J/3yVkDJyTpspcRspPUQhAyr5Hq5MiLv0NBqocap5mWmuvrTGWLP6WOru
 zGX8M/iVNa991jU2mcD1jZQ1CyC94wrIWfD/b7SAMN99RC208pyKPZqXq0R/iNGzNsiQ
 NA7CtJ2Q/8WsuIok5793oPnn3ELojYia2IiQWcTC64M6eth9DRfwdbpfY3tlXOwmnbMy
 co1fHfq8zf+gE8MDXLTAM6NoPmZZuukKhkNMUu8nWGO1CNzclizmybcEUOoX1rRUkH6Y 1oHQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=z5WTmbw32DRAaxhPrJjBUFI5nonpUWukoeF5wW10/Bo=;
 b=D95l4Bu6U/o2yr8nk63jiDM3vy45KOnKbgQfuJwtHe2bW9wgLDtfoUgY6jiQNy5jC6
 ezw/BD+72Ixn/08qJB7UE1/es5v1h8F63gQx+R192c4xGRMMhVrVXSIrJeIYYkGWZ5mb
 JQuyjQ5JTnfw5Q1rLDo9LxI/s/bABWpBsXyDy7VZmcycIcZRYnB8tIwFJplqUZgT57z6
 IR7n6CTI61li1n3Pr0ZylgnLUvl6jdbQPcYdK/XdifT9wq1HwyA+Fz/mYRMYjCCcNe54
 Q720e10Lo4hHU2295Ym8JcyVU49SSPxdXmYLfGopA+Cm1u4nULSrFDm/DdhbiLi0ocqc 7Dbg==
X-Gm-Message-State: APjAAAVvCD1Mw1RXvQa+elVcR8N5KUhDlpbXtq/Y5ZXfLa7WkEyx0btS
 yZ/b3cMP7CP/Nq6HiOTw0wZ+tGde
X-Google-Smtp-Source:
 APXvYqzAMLXlPuQOBsTt62HjqWTntAVHsBDeO8m0N1V/ZFbDzqqmWTW1BkpKkl/bFJ7peBVb2Ri5PQ==
X-Received: by 2002:a17:902:704a:: with SMTP id
 h10mr25922205plt.337.1561954337521; Sun, 30 Jun 2019 21:12:17 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 751
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

As refactored each of burst functions of SPP workers in previous
patches, it causes compile errors if `DSPP_RINGLATENCYSTATS_ENABLE` is
activated in each of Makefiles.

This update is to fix this issue. Both of burst functions for
supporting ring latency statistics are moved to `ringlatencystats.c`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/spp_mirror.c                       | 36 +++++++--
 src/pcap/spp_pcap.c                           | 12 ++-
 .../secondary/spp_worker_th/cmd_utils.c       | 40 ---------
 .../secondary/spp_worker_th/cmd_utils.h       |  5 --
 .../secondary/spp_worker_th/port_capability.c | 60 ++++++++++----
 .../secondary/spp_worker_th/port_capability.h |  4 +-
 .../spp_worker_th/ringlatencystats.c          | 81 +++++++++++++++++++
 .../spp_worker_th/ringlatencystats.h          | 65 +++++++++++++++
 src/shared/secondary/spp_worker_th/spp_port.c | 45 -----------
 src/shared/secondary/spp_worker_th/spp_port.h | 24 ------
 src/vf/Makefile                               |  3 +-
 src/vf/classifier_mac.c                       | 17 ++++
 src/vf/forwarder.c                            | 17 +++-
 src/vf/spp_vf.c                               |  8 +-
 14 files changed, 274 insertions(+), 143 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index 37327c7..aefb4f5 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -21,6 +21,10 @@
 #include "shared/secondary/spp_worker_th/spp_port.h"
 #include "shared/secondary/spp_worker_th/port_capability.h"
 
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+#include "shared/secondary/spp_worker_th/ringlatencystats.h"
+#endif
+
 /* Declare global variables */
 #define RTE_LOGTYPE_MIRROR RTE_LOGTYPE_USER1
 
@@ -323,8 +327,14 @@ mirror_proc(int id)
 		return SPP_RET_OK;
 
 	rx = &path->ports[0].rx;
-	/* Receive packets */
-	nb_rx = sppwk_eth_rx_burst(rx->ethdev_port_id, 0, bufs, MAX_PKT_BURST);
+
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+	nb_rx = sppwk_eth_ring_stats_rx_burst(rx->ethdev_port_id,
+			rx->iface_type, rx->iface_no, 0, bufs, MAX_PKT_BURST);
+#else
+	nb_rx = rte_eth_rx_burst(rx->ethdev_port_id, 0, bufs, MAX_PKT_BURST);
+#endif
+
 	if (unlikely(nb_rx == 0))
 		return SPP_RET_OK;
 
@@ -378,15 +388,27 @@ mirror_proc(int id)
 
 #endif /* SPP_MIRROR_SHALLOWCOPY */
 		}
+
 		if (cnt != 0)
-			nb_tx2 = sppwk_eth_tx_burst(
-					tx->ethdev_port_id, 0, copybufs, cnt);
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+			nb_tx2 = sppwk_eth_ring_stats_tx_burst(
+					tx->ethdev_port_id, tx->iface_type,
+					tx->iface_no, 0, copybufs, cnt);
+#else
+			nb_tx2 = rte_eth_tx_burst(tx->ethdev_port_id, 0,
+					copybufs, cnt);
+#endif
 	}
 
 	/* orginal */
 	tx = &path->ports[0].tx;
 	if (tx->ethdev_port_id >= 0)
-		nb_tx1 = sppwk_eth_tx_burst(tx->ethdev_port_id, 0, bufs, nb_rx);
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+		nb_tx1 = sppwk_eth_ring_stats_tx_burst(tx->ethdev_port_id,
+				tx->iface_type, tx->iface_no, 0, bufs, nb_rx);
+#else
+		nb_tx1 = rte_eth_tx_burst(tx->ethdev_port_id, 0, bufs, nb_rx);
+#endif
 	nb_tx = nb_tx1;
 
 	if (nb_tx1 != nb_tx2)
@@ -533,7 +555,7 @@ main(int argc, char *argv[])
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
 		int ret_ringlatency = spp_ringlatencystats_init(
 				SPP_RING_LATENCY_STATS_SAMPLING_INTERVAL,
-				g_iface_info.num_ring);
+				g_iface_info.nof_rings);
 		if (unlikely(ret_ringlatency != SPP_RET_OK))
 			break;
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
@@ -583,7 +605,7 @@ main(int argc, char *argv[])
 			usleep(100);
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
-			print_ring_latency_stats();
+			print_ring_latency_stats(&g_iface_info);
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 		}
 
diff --git a/src/pcap/spp_pcap.c b/src/pcap/spp_pcap.c
index bcce13f..909787d 100644
--- a/src/pcap/spp_pcap.c
+++ b/src/pcap/spp_pcap.c
@@ -21,6 +21,10 @@
 #include "shared/secondary/spp_worker_th/spp_port.h"
 #include "shared/secondary/spp_worker_th/port_capability.h"
 
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+#include "shared/secondary/spp_worker_th/ringlatencystats.h"
+#endif
+
 /* Declare global variables */
 #define RTE_LOGTYPE_SPP_PCAP RTE_LOGTYPE_USER2
 
@@ -750,8 +754,12 @@ static int pcap_proc_receive(int lcore_id)
 
 	/* Receive packets */
 	rx = &g_pcap_option.port_cap;
-	nb_rx = sppwk_eth_rx_burst(rx->ethdev_port_id, 0, bufs,
-			MAX_PCAP_BURST);
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+	nb_rx = sppwk_eth_ring_stats_rx_burst(rx->ethdev_port_id,
+			rx->iface_type, rx->iface_no, 0, bufs, MAX_PCAP_BURST);
+#else
+	nb_rx = rte_eth_rx_burst(rx->ethdev_port_id, 0, bufs, MAX_PCAP_BURST);
+#endif
 	if (unlikely(nb_rx == 0))
 		return SPPWK_RET_OK;
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index a4d8031..338054f 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -441,46 +441,6 @@ init_mng_data(void)
 	return SPP_RET_OK;
 }
 
-#ifdef SPP_RINGLATENCYSTATS_ENABLE
-/* Print statistics of time for packet processing in ring interface */
-static void
-print_ring_latency_stats(void)
-{
-	/* Clear screen and move cursor to top left */
-	const char topLeft[] = { 27, '[', '1', ';', '1', 'H', '\0' };
-	const char clr[] = { 27, '[', '2', 'J', '\0' };
-	printf("%s%s", clr, topLeft);
-
-	int ring_cnt, stats_cnt;
-	struct spp_ringlatencystats_ring_latency_stats stats[RTE_MAX_ETHPORTS];
-	memset(&stats, 0x00, sizeof(stats));
-
-	struct iface_info *p_iface_info = g_mng_data_addr.p_iface_info;
-	printf("RING Latency\n");
-	printf(" RING");
-	for (ring_cnt = 0; ring_cnt < RTE_MAX_ETHPORTS; ring_cnt++) {
-		if (p_iface_info->ring[ring_cnt].iface_type == UNDEF)
-			continue;
-
-		spp_ringlatencystats_get_stats(ring_cnt, &stats[ring_cnt]);
-		printf(", %-18d", ring_cnt);
-	}
-	printf("\n");
-
-	for (stats_cnt = 0; stats_cnt < SPP_RINGLATENCYSTATS_STATS_SLOT_COUNT;
-			stats_cnt++) {
-		printf("%3dns", stats_cnt);
-		for (ring_cnt = 0; ring_cnt < RTE_MAX_ETHPORTS; ring_cnt++) {
-			if (p_iface_info->ring[ring_cnt].iface_type == UNDEF)
-				continue;
-
-			printf(", 0x%-16lx", stats[ring_cnt].slot[stats_cnt]);
-		}
-		printf("\n");
-	}
-}
-#endif /* SPP_RINGLATENCYSTATS_ENABLE */
-
 /* Remove sock file if spp is not running */
 void
 del_vhost_sockfile(struct sppwk_port_info *vhost)
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 1d32228..6578cb8 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -378,11 +378,6 @@ void backup_mng_info(struct cancel_backup_info *backup);
 /* Setup management info for spp_vf */
 int init_mng_data(void);
 
-#ifdef SPP_RINGLATENCYSTATS_ENABLE
-/* Print statistics of time for packet processing in ring interface */
-void print_ring_latency_stats(void);
-#endif /* SPP_RINGLATENCYSTATS_ENABLE */
-
 /* Remove sock file if spp is not running */
 void del_vhost_sockfile(struct sppwk_port_info *vhost);
 
diff --git a/src/shared/secondary/spp_worker_th/port_capability.c b/src/shared/secondary/spp_worker_th/port_capability.c
index db12f0c..917d5fc 100644
--- a/src/shared/secondary/spp_worker_th/port_capability.c
+++ b/src/shared/secondary/spp_worker_th/port_capability.c
@@ -10,7 +10,10 @@
 
 #include "port_capability.h"
 #include "shared/secondary/return_codes.h"
+
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
 #include "ringlatencystats.h"
+#endif
 
 /**
  * TODO(yasufum) This `port capability` is intended to be used mainly for VLAN
@@ -372,7 +375,6 @@ vlan_operation(uint16_t port_id, struct rte_mbuf **pkts, const uint16_t nb_pkts,
 	return ok_pkts;
 }
 
-/* TODO(yasufum) move to outside of this file. */
 /* Wrapper function for rte_eth_rx_burst() with VLAN feature. */
 uint16_t
 sppwk_eth_vlan_rx_burst(uint16_t port_id,
@@ -384,22 +386,53 @@ sppwk_eth_vlan_rx_burst(uint16_t port_id,
 	if (unlikely(nb_rx == 0))
 		return SPP_RET_OK;
 
+	/* Add or delete VLAN tag. */
+	return vlan_operation(port_id, rx_pkts, nb_rx, SPPWK_PORT_DIR_RX);
+}
+
+/* Wrapper function for rte_eth_tx_burst() with VLAN feature. */
+uint16_t
+sppwk_eth_vlan_tx_burst(uint16_t port_id,
+		uint16_t queue_id __attribute__ ((unused)),
+		struct rte_mbuf **tx_pkts, uint16_t nb_pkts)
+{
+	uint16_t nb_tx;
+
+	/* Add or delete VLAN tag. */
+	nb_tx = vlan_operation(port_id, tx_pkts, nb_pkts, SPPWK_PORT_DIR_TX);
+
+	if (unlikely(nb_tx == 0))
+		return SPP_RET_OK;
+
+	return rte_eth_tx_burst(port_id, 0, tx_pkts, nb_tx);
+}
+
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
-	if (g_port_mng_info[port_id].iface_type == RING)
-		spp_ringlatencystats_calculate_latency(
-				g_port_mng_info[port_id].iface_no,
+
+/* Wrapper function for rte_eth_rx_burst() with VLAN feature. */
+uint16_t
+sppwk_eth_vlan_ring_stats_rx_burst(uint16_t port_id,
+		enum port_type iface_type, int iface_no,
+		uint16_t queue_id __attribute__ ((unused)),
+		struct rte_mbuf **rx_pkts, const uint16_t nb_pkts)
+{
+	uint16_t nb_rx;
+	nb_rx = rte_eth_rx_burst(port_id, 0, rx_pkts, nb_pkts);
+	if (unlikely(nb_rx == 0))
+		return SPP_RET_OK;
+
+	if (iface_type == RING)
+		spp_ringlatencystats_calculate_latency(iface_no,
 				rx_pkts, nb_pkts);
-#endif /* SPP_RINGLATENCYSTATS_ENABLE */
 
 	/* Add or delete VLAN tag. */
 	return vlan_operation(port_id, rx_pkts, nb_rx, SPPWK_PORT_DIR_RX);
 }
 
-
-/* TODO(yasufum) move to outside of this file. */
 /* Wrapper function for rte_eth_tx_burst() with VLAN feature. */
 uint16_t
-sppwk_eth_vlan_tx_burst(uint16_t port_id,
+sppwk_eth_vlan_ring_stats_tx_burst(uint16_t port_id,
+		enum port_type iface_type, int iface_no,
 		uint16_t queue_id __attribute__ ((unused)),
 		struct rte_mbuf **tx_pkts, uint16_t nb_pkts)
 {
@@ -411,12 +444,11 @@ sppwk_eth_vlan_tx_burst(uint16_t port_id,
 	if (unlikely(nb_tx == 0))
 		return SPP_RET_OK;
 
-#ifdef SPP_RINGLATENCYSTATS_ENABLE
-	if (g_port_mng_info[port_id].iface_type == RING)
-		spp_ringlatencystats_add_time_stamp(
-				g_port_mng_info[port_id].iface_no,
-				tx_pkts, nb_pkts);
-#endif /* SPP_RINGLATENCYSTATS_ENABLE */
+	if (iface_type == RING) {
+		spp_ringlatencystats_add_time_stamp(iface_no, tx_pkts, nb_pkts);
+	}
 
 	return rte_eth_tx_burst(port_id, 0, tx_pkts, nb_tx);
 }
+
+#endif /* SPP_RINGLATENCYSTATS_ENABLE */
diff --git a/src/shared/secondary/spp_worker_th/port_capability.h b/src/shared/secondary/spp_worker_th/port_capability.h
index 0593f10..284ba30 100644
--- a/src/shared/secondary/spp_worker_th/port_capability.h
+++ b/src/shared/secondary/spp_worker_th/port_capability.h
@@ -59,7 +59,7 @@ void sppwk_swap_two_sides(
 void sppwk_update_port_dir(const struct sppwk_comp_info *comp);
 
 /**
- * Wrapper function for rte_eth_rx_burst() with ring latency feature.
+ * Wrapper function for rte_eth_rx_burst() with VLAN feature.
  *
  * @param[in] port_id Etherdev ID.
  * @param[in] queue_id RX queue ID, but fixed value 0 in SPP.
@@ -71,7 +71,7 @@ uint16_t sppwk_eth_vlan_rx_burst(uint16_t port_id, uint16_t queue_id,
 		struct rte_mbuf **rx_pkts, const uint16_t nb_pkts);
 
 /**
- * Wrapper function for rte_eth_tx_burst() with ring latency feature.
+ * Wrapper function for rte_eth_tx_burst() with VLAN feature.
  *
  * @param port_id Etherdev ID.
  * @param[in] queue_id TX queue ID, but fixed value 0 in SPP.
diff --git a/src/shared/secondary/spp_worker_th/ringlatencystats.c b/src/shared/secondary/spp_worker_th/ringlatencystats.c
index e0cc1aa..5678e37 100644
--- a/src/shared/secondary/spp_worker_th/ringlatencystats.c
+++ b/src/shared/secondary/spp_worker_th/ringlatencystats.c
@@ -16,6 +16,8 @@
 
 #include "ringlatencystats.h"
 #include "cmd_utils.h"
+#include "port_capability.h"
+#include "../return_codes.h"
 
 #define NS_PER_SEC 1E9
 
@@ -160,4 +162,83 @@ spp_ringlatencystats_get_stats(int ring_id,
 			sizeof(struct spp_ringlatencystats_ring_latency_stats));
 }
 
+/* Print statistics of time for packet processing in ring interface */
+void
+print_ring_latency_stats(struct iface_info *if_info)
+{
+	/* Clear screen and move cursor to top left */
+	const char topLeft[] = { 27, '[', '1', ';', '1', 'H', '\0' };
+	const char clr[] = { 27, '[', '2', 'J', '\0' };
+	printf("%s%s", clr, topLeft);
+
+	int ring_cnt, stats_cnt;
+	struct spp_ringlatencystats_ring_latency_stats stats[RTE_MAX_ETHPORTS];
+	memset(&stats, 0x00, sizeof(stats));
+
+	printf("RING Latency\n");
+	printf(" RING");
+	for (ring_cnt = 0; ring_cnt < RTE_MAX_ETHPORTS; ring_cnt++) {
+		if (if_info->ring[ring_cnt].iface_type == UNDEF)
+			continue;
+
+		spp_ringlatencystats_get_stats(ring_cnt, &stats[ring_cnt]);
+		printf(", %-18d", ring_cnt);
+	}
+	printf("\n");
+
+	for (stats_cnt = 0; stats_cnt < SPP_RINGLATENCYSTATS_STATS_SLOT_COUNT;
+			stats_cnt++) {
+		printf("%3dns", stats_cnt);
+		for (ring_cnt = 0; ring_cnt < RTE_MAX_ETHPORTS; ring_cnt++) {
+			if (if_info->ring[ring_cnt].iface_type == UNDEF)
+				continue;
+
+			printf(", 0x%-16lx", stats[ring_cnt].slot[stats_cnt]);
+		}
+		printf("\n");
+	}
+}
+
+/* Wrapper function for rte_eth_rx_burst() with ring latency feature. */
+uint16_t
+sppwk_eth_ring_stats_rx_burst(uint16_t port_id,
+		enum port_type iface_type,
+		int iface_no,
+		uint16_t queue_id  __attribute__ ((unused)),
+		struct rte_mbuf **rx_pkts, const uint16_t nb_pkts)
+{
+	uint16_t nb_rx;
+
+	nb_rx = rte_eth_rx_burst(port_id, 0, rx_pkts, nb_pkts);
+
+	/* TODO(yasufum) confirm why it returns SPP_RET_OK. */
+	if (unlikely(nb_rx == 0))
+		return SPP_RET_OK;
+
+	if (iface_type == RING)
+		spp_ringlatencystats_calculate_latency(
+				iface_no,
+				rx_pkts, nb_pkts);
+	return nb_rx;
+}
+
+/* Wrapper function for rte_eth_tx_burst() with ring latency feature. */
+uint16_t
+sppwk_eth_ring_stats_tx_burst(uint16_t port_id,
+		enum port_type iface_type,
+		int iface_no,
+		uint16_t queue_id __attribute__ ((unused)),
+		struct rte_mbuf **tx_pkts, uint16_t nb_pkts)
+{
+	uint16_t nb_tx;
+
+	nb_tx = rte_eth_tx_burst(port_id, 0, tx_pkts, nb_pkts);
+
+	if (iface_type == RING)
+		spp_ringlatencystats_add_time_stamp(
+				iface_no,
+				tx_pkts, nb_pkts);
+	return nb_tx;
+}
+
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
diff --git a/src/shared/secondary/spp_worker_th/ringlatencystats.h b/src/shared/secondary/spp_worker_th/ringlatencystats.h
index b919c62..33c456d 100644
--- a/src/shared/secondary/spp_worker_th/ringlatencystats.h
+++ b/src/shared/secondary/spp_worker_th/ringlatencystats.h
@@ -13,6 +13,7 @@
  */
 
 #include <rte_mbuf.h>
+#include "cmd_utils.h"
 
 /** number of slots to save latency. 0ns~99ns and 100ns over */
 #define SPP_RINGLATENCYSTATS_STATS_SLOT_COUNT 101
@@ -93,6 +94,65 @@ int spp_ringlatencystats_get_count(void);
 void spp_ringlatencystats_get_stats(int ring_id,
 		struct spp_ringlatencystats_ring_latency_stats *stats);
 
+/* Print statistics of time for packet processing in ring interface */
+void print_ring_latency_stats(struct iface_info *if_info);
+
+/**
+ * Wrapper function for rte_eth_rx_burst() with ring latency feature.
+ *
+ * @param[in] port_id Etherdev ID.
+ * @param[in] queue_id RX queue ID, but fixed value 0 in SPP.
+ * @param[in] rx_pkts Pointers to mbuf should be enough to store nb_pkts.
+ * @param nb_pkts Maximum number of RX packets.
+ * @return Number of RX packets as number of pointers to mbuf.
+ */
+uint16_t sppwk_eth_ring_stats_rx_burst(uint16_t port_id,
+		enum port_type iface_type,
+		int iface_no, uint16_t queue_id,
+		struct rte_mbuf **rx_pkts, const uint16_t nb_pkts);
+
+/**
+ * Wrapper function for rte_eth_tx_burst() with ring latency feature.
+ *
+ * @param port_id Etherdev ID.
+ * @param[in] queue_id TX queue ID, but fixed value 0 in SPP.
+ * @param[in] tx_pkts Pointers to mbuf should be enough to store nb_pkts.
+ * @param nb_pkts Maximum number of TX packets.
+ * @return Number of TX packets as number of pointers to mbuf.
+ */
+uint16_t sppwk_eth_ring_stats_tx_burst(uint16_t port_id,
+		enum port_type iface_type,
+		int iface_no, uint16_t queue_id,
+		struct rte_mbuf **tx_pkts, uint16_t nb_pkts);
+
+/**
+ * Wrapper function for rte_eth_rx_burst() with VLAN and ring latency feature.
+ *
+ * @param[in] port_id Etherdev ID.
+ * @param[in] queue_id RX queue ID, but fixed value 0 in SPP.
+ * @param[in] rx_pkts Pointers to mbuf should be enough to store nb_pkts.
+ * @param nb_pkts Maximum number of RX packets.
+ * @return Number of RX packets as number of pointers to mbuf.
+ */
+uint16_t sppwk_eth_vlan_ring_stats_rx_burst(uint16_t port_id,
+		enum port_type iface_type,
+		int iface_no, uint16_t queue_id,
+		struct rte_mbuf **rx_pkts, const uint16_t nb_pkts);
+
+/**
+ * Wrapper function for rte_eth_tx_burst() with VLAN and ring latency feature.
+ *
+ * @param port_id Etherdev ID.
+ * @param[in] queue_id TX queue ID, but fixed value 0 in SPP.
+ * @param[in] tx_pkts Pointers to mbuf should be enough to store nb_pkts.
+ * @param nb_pkts Maximum number of TX packets.
+ * @return Number of TX packets as number of pointers to mbuf.
+ */
+uint16_t sppwk_eth_vlan_ring_stats_tx_burst(uint16_t port_id,
+		enum port_type iface_type,
+		int iface_no, uint16_t queue_id,
+		struct rte_mbuf **tx_pkts, uint16_t nb_pkts);
+
 #else
 
 #define spp_ringlatencystats_init(arg1, arg2) 0
@@ -101,6 +161,11 @@ void spp_ringlatencystats_get_stats(int ring_id,
 #define spp_ringlatencystats_calculate_latency(arg1, arg2, arg3)
 #define spp_ringlatencystats_get_count() 0
 #define spp_ringlatencystats_get_stats(arg1, arg2)
+#define print_ringlatencystats_stats(arg)
+#define sppwk_eth_ring_stats_rx_burst(arg1, arg2, arg3, arg4, arg5, arg6)
+#define sppwk_eth_ring_stats_tx_burst(arg1, arg2, arg3, arg4, arg5, arg6)
+#define sppwk_eth_vlan_ring_stats_rx_burst(arg1, arg2, arg3, arg4, arg5, arg6)
+#define sppwk_eth_vlan_ring_stats_tx_burst(arg1, arg2, arg3, arg4, arg5, arg6)
 
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 
diff --git a/src/shared/secondary/spp_worker_th/spp_port.c b/src/shared/secondary/spp_worker_th/spp_port.c
index 0c7df2b..66f73df 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.c
+++ b/src/shared/secondary/spp_worker_th/spp_port.c
@@ -10,48 +10,3 @@
 
 #include "spp_port.h"
 #include "shared/secondary/return_codes.h"
-#include "ringlatencystats.h"
-
-/* Wrapper function for rte_eth_rx_burst() with ring latency feature. */
-uint16_t
-sppwk_eth_rx_burst(uint16_t port_id,
-		uint16_t queue_id  __attribute__ ((unused)),
-		struct rte_mbuf **rx_pkts, const uint16_t nb_pkts)
-{
-	uint16_t nb_rx;
-
-	nb_rx = rte_eth_rx_burst(port_id, 0, rx_pkts, nb_pkts);
-
-	/* TODO(yasufum) confirm why it returns SPP_RET_OK. */
-	if (unlikely(nb_rx == 0))
-		return SPP_RET_OK;
-
-#ifdef SPP_RINGLATENCYSTATS_ENABLE
-	if (g_port_mng_info[port_id].iface_type == RING)
-		spp_ringlatencystats_calculate_latency(
-				g_port_mng_info[port_id].iface_no,
-				rx_pkts, nb_pkts);
-#endif /* SPP_RINGLATENCYSTATS_ENABLE */
-
-	return nb_rx;
-}
-
-/* Wrapper function for rte_eth_tx_burst() with ring latency feature. */
-uint16_t
-sppwk_eth_tx_burst(uint16_t port_id,
-		uint16_t queue_id __attribute__ ((unused)),
-		struct rte_mbuf **tx_pkts, uint16_t nb_pkts)
-{
-	uint16_t nb_tx;
-
-	nb_tx = rte_eth_tx_burst(port_id, 0, tx_pkts, nb_pkts);
-
-#ifdef SPP_RINGLATENCYSTATS_ENABLE
-	if (g_port_mng_info[port_id].iface_type == RING)
-		spp_ringlatencystats_add_time_stamp(
-				g_port_mng_info[port_id].iface_no,
-				tx_pkts, nb_pkts);
-#endif /* SPP_RINGLATENCYSTATS_ENABLE */
-
-	return nb_tx;
-}
diff --git a/src/shared/secondary/spp_worker_th/spp_port.h b/src/shared/secondary/spp_worker_th/spp_port.h
index eaeaea5..9b6132b 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.h
+++ b/src/shared/secondary/spp_worker_th/spp_port.h
@@ -7,28 +7,4 @@
 
 #include "cmd_utils.h"
 
-/**
- * Wrapper function for rte_eth_rx_burst() with ring latency feature.
- *
- * @param[in] port_id Etherdev ID.
- * @param[in] queue_id RX queue ID, but fixed value 0 in SPP.
- * @param[in] rx_pkts Pointers to mbuf should be enough to store nb_pkts.
- * @param nb_pkts Maximum number of RX packets.
- * @return Number of RX packets as number of pointers to mbuf.
- */
-uint16_t sppwk_eth_rx_burst(uint16_t port_id, uint16_t queue_id,
-		struct rte_mbuf **rx_pkts, const uint16_t nb_pkts);
-
-/**
- * Wrapper function for rte_eth_tx_burst() with ring latency feature.
- *
- * @param port_id Etherdev ID.
- * @param[in] queue_id TX queue ID, but fixed value 0 in SPP.
- * @param[in] tx_pkts Pointers to mbuf should be enough to store nb_pkts.
- * @param nb_pkts Maximum number of TX packets.
- * @return Number of TX packets as number of pointers to mbuf.
- */
-uint16_t sppwk_eth_tx_burst(uint16_t port_id, uint16_t queue_id,
-		struct rte_mbuf **tx_pkts, uint16_t nb_pkts);
-
 #endif /*  __WK_SPP_PORT_H__ */
diff --git a/src/vf/Makefile b/src/vf/Makefile
index 35f13e5..07870ac 100644
--- a/src/vf/Makefile
+++ b/src/vf/Makefile
@@ -19,14 +19,15 @@ SRCS-y := spp_vf.c classifier_mac.c forwarder.c
 SRCS-y += $(SPP_SEC_DIR)/string_buffer.c
 SRCS-y += $(SPP_SEC_DIR)/json_helper.c
 SRCS-y += $(SPP_SEC_DIR)/utils.c $(SPP_SEC_DIR)/add_port.c
+SRCS-y += $(SPP_WKT_DIR)/spp_port.c
 SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
 SRCS-y += $(SPP_WKT_DIR)/port_capability.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
-SRCS-y += ../shared/common.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_runner.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_utils.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_res_formatter.c
+SRCS-y += ../shared/common.c
 SRCS-y += vf_cmd_runner.c
 
 CFLAGS += -DALLOW_EXPERIMENTAL_API
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index e41c65a..893f01d 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -28,8 +28,13 @@
 #include "shared/secondary/json_helper.h"
 #include "shared/secondary/spp_worker_th/cmd_res_formatter.h"
 #include "shared/secondary/spp_worker_th/vf_deps.h"
+#include "shared/secondary/spp_worker_th/spp_port.h"
 #include "shared/secondary/spp_worker_th/port_capability.h"
 
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+#include "shared/secondary/spp_worker_th/ringlatencystats.h"
+#endif
+
 #define RTE_LOGTYPE_SPP_CLASSIFIER_MAC RTE_LOGTYPE_USER1
 
 #ifdef RTE_MACHINE_CPUFLAG_SSE4_2
@@ -460,8 +465,14 @@ transmit_packet(struct cls_port_info *clsd_data)
 	uint16_t n_tx;
 
 	/* transmit packets */
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+	n_tx = sppwk_eth_vlan_ring_stats_tx_burst(clsd_data->ethdev_port_id,
+			clsd_data->iface_type, clsd_data->iface_no,
+			0, clsd_data->pkts, clsd_data->nof_pkts);
+#else
 	n_tx = sppwk_eth_vlan_tx_burst(clsd_data->ethdev_port_id, 0,
 			clsd_data->pkts, clsd_data->nof_pkts);
+#endif
 
 	/* free cannot transmit packets */
 	if (unlikely(n_tx != clsd_data->nof_pkts)) {
@@ -796,8 +807,14 @@ spp_classifier_mac_do(int id)
 		return SPP_RET_OK;
 
 	/* retrieve packets */
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+	n_rx = sppwk_eth_vlan_ring_stats_rx_burst(clsd_data_rx->ethdev_port_id,
+			clsd_data_rx->iface_type, clsd_data_rx->iface_no,
+			0, rx_pkts, MAX_PKT_BURST);
+#else
 	n_rx = sppwk_eth_vlan_rx_burst(clsd_data_rx->ethdev_port_id, 0,
 			rx_pkts, MAX_PKT_BURST);
+#endif
 	if (unlikely(n_rx == 0))
 		return SPP_RET_OK;
 
diff --git a/src/vf/forwarder.c b/src/vf/forwarder.c
index cd28a58..5a061ad 100644
--- a/src/vf/forwarder.c
+++ b/src/vf/forwarder.c
@@ -11,6 +11,10 @@
 #include "shared/secondary/spp_worker_th/spp_port.h"
 #include "shared/secondary/spp_worker_th/port_capability.h"
 
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+#include "shared/secondary/spp_worker_th/ringlatencystats.h"
+#endif
+
 #define RTE_LOGTYPE_FORWARD RTE_LOGTYPE_USER1
 
 /* A set of port info of rx and tx */
@@ -211,16 +215,27 @@ forward_packets(int id)
 		rx = &path->ports[cnt].rx;
 		tx = &path->ports[cnt].tx;
 
-		/* Receive packets */
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+		nb_rx = sppwk_eth_vlan_ring_stats_rx_burst(rx->ethdev_port_id,
+				rx->iface_type, rx->iface_no, 0,
+				bufs, MAX_PKT_BURST);
+#else
 		nb_rx = sppwk_eth_vlan_rx_burst(rx->ethdev_port_id, 0,
 				bufs, MAX_PKT_BURST);
+#endif
 		if (unlikely(nb_rx == 0))
 			continue;
 
 		/* Send packets */
 		if (tx->ethdev_port_id >= 0)
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+			nb_tx = sppwk_eth_vlan_ring_stats_tx_burst(
+					tx->ethdev_port_id, tx->iface_type,
+					tx->iface_no, 0, bufs, nb_rx);
+#else
 			nb_tx = sppwk_eth_vlan_tx_burst(tx->ethdev_port_id,
 					0, bufs, nb_rx);
+#endif
 
 		/* Discard remained packets to release mbuf */
 		if (unlikely(nb_tx < nb_rx)) {
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index dbd47bf..1ef8e4f 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -18,6 +18,10 @@
 #include "shared/secondary/spp_worker_th/spp_port.h"
 #include "shared/secondary/spp_worker_th/port_capability.h"
 
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+#include "shared/secondary/spp_worker_th/ringlatencystats.h"
+#endif
+
 /* Declare global variables */
 /* Interface management information */
 static struct iface_info g_iface_info;
@@ -260,7 +264,7 @@ main(int argc, char *argv[])
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
 		int ret_ringlatency = spp_ringlatencystats_init(
 				SPP_RING_LATENCY_STATS_SAMPLING_INTERVAL,
-				g_iface_info.num_ring);
+				g_iface_info.nof_rings);
 		if (unlikely(ret_ringlatency != SPP_RET_OK))
 			break;
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
@@ -304,7 +308,7 @@ main(int argc, char *argv[])
 			usleep(100);
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
-			print_ring_latency_stats();
+			print_ring_latency_stats(&g_iface_info);
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 		}
 
-- 
2.17.1



From spp-request@dpdk.org Mon Jul 01 13:12:19 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTY00XXE3OT1U10@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 01 Jul 2019 13:12:29 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTY00Y243OTM600@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:12:29 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTY00AQZ3OTM8D0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:12:29 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf106.ddreams.local (Postfix) with ESMTP id 8B1857E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:29 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 89F5B8E6057	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:29 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 7F0048E6055	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:12:29 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 330748E6042	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:28 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf106.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:12:28 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CSGV015760;	Mon,
 1 Jul 2019 13:12:28 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x614CSjG015759;	Mon, 1 Jul 2019 13:12:28 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x614CR5s015756	for unknown; Mon,
 1 Jul 2019 13:12:27 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CRa5025448 for
 unknown; Mon, 1 Jul 2019 13:12:27 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CRJS025445 for
 unknown; Mon, 1 Jul 2019 13:12:27 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x614CK1f006949	for unknown; Mon,
 1 Jul 2019 13:12:26 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 634714C99	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 1 Jul 2019 06:12:20 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 32, Issue 3
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 01 Jul 2019 06:12:19 +0200
Message-id: <mailman.24126.1561954339.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH 2/2] shared/sec: refactor port capability funcs
      (yasufum.o@gmail.com)
   2. [PATCH 0/2] Fix compile errors of ring latency stats
      (yasufum.o@gmail.com)
   3. [PATCH 1/2] shared/sec: fix compile error of ringlatencystats
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon,  1 Jul 2019 13:11:56 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 2/2] shared/sec: refactor port capability funcs
Message-ID: <20190701041156.34004-3-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to refactor functions for port capability defined in
`port_capability.c`. All of incorrect or ambiguous term usages are
fixed.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../secondary/spp_worker_th/port_capability.c | 57 +++++++++----------
 1 file changed, 28 insertions(+), 29 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/port_capability.c b/src/shared/secondary/spp_worker_th/port_capability.c
index 30c6e95..db12f0c 100644
--- a/src/shared/secondary/spp_worker_th/port_capability.c
+++ b/src/shared/secondary/spp_worker_th/port_capability.c
@@ -96,9 +96,9 @@ set_fcs_packet(struct rte_mbuf *pkt)
 			pkt->data_len, RTE_NET_CRC32_ETH);
 }
 
-/* Add VLAN tag to packet. */
+/* Add VLAN tag to a packet. It is called from add_vlan_tag_all(). */
 static inline int
-add_vlantag_packet(
+add_vlan_tag_one(
 		struct rte_mbuf *pkt,
 		const union sppwk_port_capability *capability)
 {
@@ -135,14 +135,14 @@ add_vlantag_packet(
 
 /* Add VLAN tag to all packets. */
 static inline int
-add_vlantag_all_packets(
+add_vlan_tag_all(
 		struct rte_mbuf **pkts, int nb_pkts,
 		const union sppwk_port_capability *capability)
 {
 	int ret = SPP_RET_OK;
 	int cnt = 0;
 	for (cnt = 0; cnt < nb_pkts; cnt++) {
-		ret = add_vlantag_packet(pkts[cnt], capability);
+		ret = add_vlan_tag_one(pkts[cnt], capability);
 		if (unlikely(ret < 0)) {
 			RTE_LOG(ERR, PORT,
 					"Failed to add VLAN tag."
@@ -153,9 +153,9 @@ add_vlantag_all_packets(
 	return cnt;
 }
 
-/* Delete VLAN tag to packet. */
+/* Delete VLAN tag from a packet. It is called from del_vlan_tag_all(). */
 static inline int
-del_vlantag_packet(
+del_vlan_tag_one(
 		struct rte_mbuf *pkt,
 		const union sppwk_port_capability *cbl __attribute__ ((unused)))
 {
@@ -185,16 +185,16 @@ del_vlantag_packet(
 	return SPP_RET_OK;
 }
 
-/* Delete VLAN tag to all packets. */
+/* Delete VLAN tag from all packets. */
 static inline int
-del_vlantag_all_packets(
+del_vlan_tag_all(
 		struct rte_mbuf **pkts, int nb_pkts,
 		const union sppwk_port_capability *capability)
 {
 	int ret = SPP_RET_OK;
 	int cnt = 0;
 	for (cnt = 0; cnt < nb_pkts; cnt++) {
-		ret = del_vlantag_packet(pkts[cnt], capability);
+		ret = del_vlan_tag_one(pkts[cnt], capability);
 		if (unlikely(ret < 0)) {
 			RTE_LOG(ERR, PORT,
 					"Failed to del VLAN tag."
@@ -251,9 +251,9 @@ sppwk_swap_two_sides(
 	}
 }
 
-/* Set ability data of port ability. */
+/* Update port attributes of given direction. */
 static void
-port_ability_set_ability(struct sppwk_port_info *port,
+update_port_attrs(struct sppwk_port_info *port,
 		enum sppwk_port_dir dir)
 {
 	int in_cnt, out_cnt = 0;
@@ -316,32 +316,33 @@ sppwk_update_port_dir(const struct sppwk_comp_info *comp)
 
 	for (cnt = 0; cnt < comp->nof_rx; cnt++) {
 		port_info = comp->rx_ports[cnt];
-		port_ability_set_ability(port_info, SPPWK_PORT_DIR_RX);
+		update_port_attrs(port_info, SPPWK_PORT_DIR_RX);
 	}
 
 	for (cnt = 0; cnt < comp->nof_tx; cnt++) {
 		port_info = comp->tx_ports[cnt];
-		port_ability_set_ability(port_info, SPPWK_PORT_DIR_TX);
+		update_port_attrs(port_info, SPPWK_PORT_DIR_TX);
 	}
 }
 
-/* Definition of functions that operate port abilities. */
-typedef int (*port_ability_func)(
+/**
+ * Define list of VLAN opeartion functions. It is only used in
+ * vlan_operation().
+ */
+typedef int (*vlan_f)(
 		struct rte_mbuf **pkts, int nb_pkts,
 		const union sppwk_port_capability *capability);
 
-/* List of functions per port ability. */
-port_ability_func port_ability_function_list[] = {
-	NULL,                    /* None */
-	add_vlantag_all_packets, /* Add VLAN tag */
-	del_vlantag_all_packets, /* Del VLAN tag */
-	NULL                     /* Termination */
+vlan_f vlan_ops[] = {
+	NULL,              /* None */
+	add_vlan_tag_all,  /* Add VLAN tag */
+	del_vlan_tag_all,  /* Del VLAN tag */
+	NULL               /* Termination */
 };
 
-/* Each packet operation of port capability. */
+/* Add or delete VLAN tag. */
 static inline int
-port_ability_each_operation(uint16_t port_id,
-		struct rte_mbuf **pkts, const uint16_t nb_pkts,
+vlan_operation(uint16_t port_id, struct rte_mbuf **pkts, const uint16_t nb_pkts,
 		enum sppwk_port_dir dir)
 {
 	int cnt, buf;
@@ -358,7 +359,7 @@ port_ability_each_operation(uint16_t port_id,
 			break;
 
 		/* Add or delete VLAN tag with operation function. */
-		ok_pkts = port_ability_function_list[port_attrs[cnt].ops](
+		ok_pkts = vlan_ops[port_attrs[cnt].ops](
 				pkts, ok_pkts, &port_attrs->capability);
 	}
 
@@ -391,8 +392,7 @@ sppwk_eth_vlan_rx_burst(uint16_t port_id,
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 
 	/* Add or delete VLAN tag. */
-	return port_ability_each_operation(port_id, rx_pkts, nb_rx,
-			SPPWK_PORT_DIR_RX);
+	return vlan_operation(port_id, rx_pkts, nb_rx, SPPWK_PORT_DIR_RX);
 }
 
 
@@ -406,8 +406,7 @@ sppwk_eth_vlan_tx_burst(uint16_t port_id,
 	uint16_t nb_tx;
 
 	/* Add or delete VLAN tag. */
-	nb_tx = port_ability_each_operation(port_id, tx_pkts, nb_pkts,
-			SPPWK_PORT_DIR_TX);
+	nb_tx = vlan_operation(port_id, tx_pkts, nb_pkts, SPPWK_PORT_DIR_TX);
 
 	if (unlikely(nb_tx == 0))
 		return SPP_RET_OK;
-- 
2.17.1



------------------------------

Message: 2
Date: Mon,  1 Jul 2019 13:12:09 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 0/2] Fix compile errors of ring latency stats
Message-ID: <20190701041211.34060-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

For adding burst functions and changing dir structure, it causes compile
errors if CFLAG DSPP_RINGLATENCYSTATS_ENABLE is activated in each of
Makefiles. This update is to fix this issue.

Yasufumi Ogawa (2):
  shared/sec: fix compile error of ringlatencystats
  shared/sec: remove source and header of spp_port

 src/mirror/Makefile                           |  1 -
 src/mirror/spp_mirror.c                       | 37 +++++++--
 src/pcap/Makefile                             |  1 -
 src/pcap/spp_pcap.c                           | 13 ++-
 .../spp_worker_th/cmd_res_formatter.c         |  1 -
 .../secondary/spp_worker_th/cmd_runner.c      |  1 -
 .../secondary/spp_worker_th/cmd_utils.c       | 41 ----------
 .../secondary/spp_worker_th/cmd_utils.h       |  5 --
 .../secondary/spp_worker_th/port_capability.c | 60 ++++++++++----
 .../secondary/spp_worker_th/port_capability.h |  4 +-
 .../spp_worker_th/ringlatencystats.c          | 81 +++++++++++++++++++
 .../spp_worker_th/ringlatencystats.h          | 65 +++++++++++++++
 src/shared/secondary/spp_worker_th/spp_port.c | 57 -------------
 src/shared/secondary/spp_worker_th/spp_port.h | 34 --------
 src/vf/Makefile                               |  2 +-
 src/vf/classifier_mac.c                       | 16 ++++
 src/vf/forwarder.c                            | 18 ++++-
 src/vf/spp_vf.c                               |  9 ++-
 18 files changed, 272 insertions(+), 174 deletions(-)
 delete mode 100644 src/shared/secondary/spp_worker_th/spp_port.c
 delete mode 100644 src/shared/secondary/spp_worker_th/spp_port.h

-- 
2.17.1



------------------------------

Message: 3
Date: Mon,  1 Jul 2019 13:12:10 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 1/2] shared/sec: fix compile error of
	ringlatencystats
Message-ID: <20190701041211.34060-2-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

As refactored each of burst functions of SPP workers in previous
patches, it causes compile errors if `DSPP_RINGLATENCYSTATS_ENABLE` is
activated in each of Makefiles.

This update is to fix this issue. Both of burst functions for
supporting ring latency statistics are moved to `ringlatencystats.c`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/spp_mirror.c                       | 36 +++++++--
 src/pcap/spp_pcap.c                           | 12 ++-
 .../secondary/spp_worker_th/cmd_utils.c       | 40 ---------
 .../secondary/spp_worker_th/cmd_utils.h       |  5 --
 .../secondary/spp_worker_th/port_capability.c | 60 ++++++++++----
 .../secondary/spp_worker_th/port_capability.h |  4 +-
 .../spp_worker_th/ringlatencystats.c          | 81 +++++++++++++++++++
 .../spp_worker_th/ringlatencystats.h          | 65 +++++++++++++++
 src/shared/secondary/spp_worker_th/spp_port.c | 45 -----------
 src/shared/secondary/spp_worker_th/spp_port.h | 24 ------
 src/vf/Makefile                               |  3 +-
 src/vf/classifier_mac.c                       | 17 ++++
 src/vf/forwarder.c                            | 17 +++-
 src/vf/spp_vf.c                               |  8 +-
 14 files changed, 274 insertions(+), 143 deletions(-)

diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index 37327c7..aefb4f5 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -21,6 +21,10 @@
 #include "shared/secondary/spp_worker_th/spp_port.h"
 #include "shared/secondary/spp_worker_th/port_capability.h"
 
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+#include "shared/secondary/spp_worker_th/ringlatencystats.h"
+#endif
+
 /* Declare global variables */
 #define RTE_LOGTYPE_MIRROR RTE_LOGTYPE_USER1
 
@@ -323,8 +327,14 @@ mirror_proc(int id)
 		return SPP_RET_OK;
 
 	rx = &path->ports[0].rx;
-	/* Receive packets */
-	nb_rx = sppwk_eth_rx_burst(rx->ethdev_port_id, 0, bufs, MAX_PKT_BURST);
+
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+	nb_rx = sppwk_eth_ring_stats_rx_burst(rx->ethdev_port_id,
+			rx->iface_type, rx->iface_no, 0, bufs, MAX_PKT_BURST);
+#else
+	nb_rx = rte_eth_rx_burst(rx->ethdev_port_id, 0, bufs, MAX_PKT_BURST);
+#endif
+
 	if (unlikely(nb_rx == 0))
 		return SPP_RET_OK;
 
@@ -378,15 +388,27 @@ mirror_proc(int id)
 
 #endif /* SPP_MIRROR_SHALLOWCOPY */
 		}
+
 		if (cnt != 0)
-			nb_tx2 = sppwk_eth_tx_burst(
-					tx->ethdev_port_id, 0, copybufs, cnt);
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+			nb_tx2 = sppwk_eth_ring_stats_tx_burst(
+					tx->ethdev_port_id, tx->iface_type,
+					tx->iface_no, 0, copybufs, cnt);
+#else
+			nb_tx2 = rte_eth_tx_burst(tx->ethdev_port_id, 0,
+					copybufs, cnt);
+#endif
 	}
 
 	/* orginal */
 	tx = &path->ports[0].tx;
 	if (tx->ethdev_port_id >= 0)
-		nb_tx1 = sppwk_eth_tx_burst(tx->ethdev_port_id, 0, bufs, nb_rx);
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+		nb_tx1 = sppwk_eth_ring_stats_tx_burst(tx->ethdev_port_id,
+				tx->iface_type, tx->iface_no, 0, bufs, nb_rx);
+#else
+		nb_tx1 = rte_eth_tx_burst(tx->ethdev_port_id, 0, bufs, nb_rx);
+#endif
 	nb_tx = nb_tx1;
 
 	if (nb_tx1 != nb_tx2)
@@ -533,7 +555,7 @@ main(int argc, char *argv[])
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
 		int ret_ringlatency = spp_ringlatencystats_init(
 				SPP_RING_LATENCY_STATS_SAMPLING_INTERVAL,
-				g_iface_info.num_ring);
+				g_iface_info.nof_rings);
 		if (unlikely(ret_ringlatency != SPP_RET_OK))
 			break;
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
@@ -583,7 +605,7 @@ main(int argc, char *argv[])
 			usleep(100);
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
-			print_ring_latency_stats();
+			print_ring_latency_stats(&g_iface_info);
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 		}
 
diff --git a/src/pcap/spp_pcap.c b/src/pcap/spp_pcap.c
index bcce13f..909787d 100644
--- a/src/pcap/spp_pcap.c
+++ b/src/pcap/spp_pcap.c
@@ -21,6 +21,10 @@
 #include "shared/secondary/spp_worker_th/spp_port.h"
 #include "shared/secondary/spp_worker_th/port_capability.h"
 
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+#include "shared/secondary/spp_worker_th/ringlatencystats.h"
+#endif
+
 /* Declare global variables */
 #define RTE_LOGTYPE_SPP_PCAP RTE_LOGTYPE_USER2
 
@@ -750,8 +754,12 @@ static int pcap_proc_receive(int lcore_id)
 
 	/* Receive packets */
 	rx = &g_pcap_option.port_cap;
-	nb_rx = sppwk_eth_rx_burst(rx->ethdev_port_id, 0, bufs,
-			MAX_PCAP_BURST);
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+	nb_rx = sppwk_eth_ring_stats_rx_burst(rx->ethdev_port_id,
+			rx->iface_type, rx->iface_no, 0, bufs, MAX_PCAP_BURST);
+#else
+	nb_rx = rte_eth_rx_burst(rx->ethdev_port_id, 0, bufs, MAX_PCAP_BURST);
+#endif
 	if (unlikely(nb_rx == 0))
 		return SPPWK_RET_OK;
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index a4d8031..338054f 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -441,46 +441,6 @@ init_mng_data(void)
 	return SPP_RET_OK;
 }
 
-#ifdef SPP_RINGLATENCYSTATS_ENABLE
-/* Print statistics of time for packet processing in ring interface */
-static void
-print_ring_latency_stats(void)
-{
-	/* Clear screen and move cursor to top left */
-	const char topLeft[] = { 27, '[', '1', ';', '1', 'H', '\0' };
-	const char clr[] = { 27, '[', '2', 'J', '\0' };
-	printf("%s%s", clr, topLeft);
-
-	int ring_cnt, stats_cnt;
-	struct spp_ringlatencystats_ring_latency_stats stats[RTE_MAX_ETHPORTS];
-	memset(&stats, 0x00, sizeof(stats));
-
-	struct iface_info *p_iface_info = g_mng_data_addr.p_iface_info;
-	printf("RING Latency\n");
-	printf(" RING");
-	for (ring_cnt = 0; ring_cnt < RTE_MAX_ETHPORTS; ring_cnt++) {
-		if (p_iface_info->ring[ring_cnt].iface_type == UNDEF)
-			continue;
-
-		spp_ringlatencystats_get_stats(ring_cnt, &stats[ring_cnt]);
-		printf(", %-18d", ring_cnt);
-	}
-	printf("\n");
-
-	for (stats_cnt = 0; stats_cnt < SPP_RINGLATENCYSTATS_STATS_SLOT_COUNT;
-			stats_cnt++) {
-		printf("%3dns", stats_cnt);
-		for (ring_cnt = 0; ring_cnt < RTE_MAX_ETHPORTS; ring_cnt++) {
-			if (p_iface_info->ring[ring_cnt].iface_type == UNDEF)
-				continue;
-
-			printf(", 0x%-16lx", stats[ring_cnt].slot[stats_cnt]);
-		}
-		printf("\n");
-	}
-}
-#endif /* SPP_RINGLATENCYSTATS_ENABLE */
-
 /* Remove sock file if spp is not running */
 void
 del_vhost_sockfile(struct sppwk_port_info *vhost)
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.h b/src/shared/secondary/spp_worker_th/cmd_utils.h
index 1d32228..6578cb8 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.h
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.h
@@ -378,11 +378,6 @@ void backup_mng_info(struct cancel_backup_info *backup);
 /* Setup management info for spp_vf */
 int init_mng_data(void);
 
-#ifdef SPP_RINGLATENCYSTATS_ENABLE
-/* Print statistics of time for packet processing in ring interface */
-void print_ring_latency_stats(void);
-#endif /* SPP_RINGLATENCYSTATS_ENABLE */
-
 /* Remove sock file if spp is not running */
 void del_vhost_sockfile(struct sppwk_port_info *vhost);
 
diff --git a/src/shared/secondary/spp_worker_th/port_capability.c b/src/shared/secondary/spp_worker_th/port_capability.c
index db12f0c..917d5fc 100644
--- a/src/shared/secondary/spp_worker_th/port_capability.c
+++ b/src/shared/secondary/spp_worker_th/port_capability.c
@@ -10,7 +10,10 @@
 
 #include "port_capability.h"
 #include "shared/secondary/return_codes.h"
+
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
 #include "ringlatencystats.h"
+#endif
 
 /**
  * TODO(yasufum) This `port capability` is intended to be used mainly for VLAN
@@ -372,7 +375,6 @@ vlan_operation(uint16_t port_id, struct rte_mbuf **pkts, const uint16_t nb_pkts,
 	return ok_pkts;
 }
 
-/* TODO(yasufum) move to outside of this file. */
 /* Wrapper function for rte_eth_rx_burst() with VLAN feature. */
 uint16_t
 sppwk_eth_vlan_rx_burst(uint16_t port_id,
@@ -384,22 +386,53 @@ sppwk_eth_vlan_rx_burst(uint16_t port_id,
 	if (unlikely(nb_rx == 0))
 		return SPP_RET_OK;
 
+	/* Add or delete VLAN tag. */
+	return vlan_operation(port_id, rx_pkts, nb_rx, SPPWK_PORT_DIR_RX);
+}
+
+/* Wrapper function for rte_eth_tx_burst() with VLAN feature. */
+uint16_t
+sppwk_eth_vlan_tx_burst(uint16_t port_id,
+		uint16_t queue_id __attribute__ ((unused)),
+		struct rte_mbuf **tx_pkts, uint16_t nb_pkts)
+{
+	uint16_t nb_tx;
+
+	/* Add or delete VLAN tag. */
+	nb_tx = vlan_operation(port_id, tx_pkts, nb_pkts, SPPWK_PORT_DIR_TX);
+
+	if (unlikely(nb_tx == 0))
+		return SPP_RET_OK;
+
+	return rte_eth_tx_burst(port_id, 0, tx_pkts, nb_tx);
+}
+
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
-	if (g_port_mng_info[port_id].iface_type == RING)
-		spp_ringlatencystats_calculate_latency(
-				g_port_mng_info[port_id].iface_no,
+
+/* Wrapper function for rte_eth_rx_burst() with VLAN feature. */
+uint16_t
+sppwk_eth_vlan_ring_stats_rx_burst(uint16_t port_id,
+		enum port_type iface_type, int iface_no,
+		uint16_t queue_id __attribute__ ((unused)),
+		struct rte_mbuf **rx_pkts, const uint16_t nb_pkts)
+{
+	uint16_t nb_rx;
+	nb_rx = rte_eth_rx_burst(port_id, 0, rx_pkts, nb_pkts);
+	if (unlikely(nb_rx == 0))
+		return SPP_RET_OK;
+
+	if (iface_type == RING)
+		spp_ringlatencystats_calculate_latency(iface_no,
 				rx_pkts, nb_pkts);
-#endif /* SPP_RINGLATENCYSTATS_ENABLE */
 
 	/* Add or delete VLAN tag. */
 	return vlan_operation(port_id, rx_pkts, nb_rx, SPPWK_PORT_DIR_RX);
 }
 
-
-/* TODO(yasufum) move to outside of this file. */
 /* Wrapper function for rte_eth_tx_burst() with VLAN feature. */
 uint16_t
-sppwk_eth_vlan_tx_burst(uint16_t port_id,
+sppwk_eth_vlan_ring_stats_tx_burst(uint16_t port_id,
+		enum port_type iface_type, int iface_no,
 		uint16_t queue_id __attribute__ ((unused)),
 		struct rte_mbuf **tx_pkts, uint16_t nb_pkts)
 {
@@ -411,12 +444,11 @@ sppwk_eth_vlan_tx_burst(uint16_t port_id,
 	if (unlikely(nb_tx == 0))
 		return SPP_RET_OK;
 
-#ifdef SPP_RINGLATENCYSTATS_ENABLE
-	if (g_port_mng_info[port_id].iface_type == RING)
-		spp_ringlatencystats_add_time_stamp(
-				g_port_mng_info[port_id].iface_no,
-				tx_pkts, nb_pkts);
-#endif /* SPP_RINGLATENCYSTATS_ENABLE */
+	if (iface_type == RING) {
+		spp_ringlatencystats_add_time_stamp(iface_no, tx_pkts, nb_pkts);
+	}
 
 	return rte_eth_tx_burst(port_id, 0, tx_pkts, nb_tx);
 }
+
+#endif /* SPP_RINGLATENCYSTATS_ENABLE */
diff --git a/src/shared/secondary/spp_worker_th/port_capability.h b/src/shared/secondary/spp_worker_th/port_capability.h
index 0593f10..284ba30 100644
--- a/src/shared/secondary/spp_worker_th/port_capability.h
+++ b/src/shared/secondary/spp_worker_th/port_capability.h
@@ -59,7 +59,7 @@ void sppwk_swap_two_sides(
 void sppwk_update_port_dir(const struct sppwk_comp_info *comp);
 
 /**
- * Wrapper function for rte_eth_rx_burst() with ring latency feature.
+ * Wrapper function for rte_eth_rx_burst() with VLAN feature.
  *
  * @param[in] port_id Etherdev ID.
  * @param[in] queue_id RX queue ID, but fixed value 0 in SPP.
@@ -71,7 +71,7 @@ uint16_t sppwk_eth_vlan_rx_burst(uint16_t port_id, uint16_t queue_id,
 		struct rte_mbuf **rx_pkts, const uint16_t nb_pkts);
 
 /**
- * Wrapper function for rte_eth_tx_burst() with ring latency feature.
+ * Wrapper function for rte_eth_tx_burst() with VLAN feature.
  *
  * @param port_id Etherdev ID.
  * @param[in] queue_id TX queue ID, but fixed value 0 in SPP.
diff --git a/src/shared/secondary/spp_worker_th/ringlatencystats.c b/src/shared/secondary/spp_worker_th/ringlatencystats.c
index e0cc1aa..5678e37 100644
--- a/src/shared/secondary/spp_worker_th/ringlatencystats.c
+++ b/src/shared/secondary/spp_worker_th/ringlatencystats.c
@@ -16,6 +16,8 @@
 
 #include "ringlatencystats.h"
 #include "cmd_utils.h"
+#include "port_capability.h"
+#include "../return_codes.h"
 
 #define NS_PER_SEC 1E9
 
@@ -160,4 +162,83 @@ spp_ringlatencystats_get_stats(int ring_id,
 			sizeof(struct spp_ringlatencystats_ring_latency_stats));
 }
 
+/* Print statistics of time for packet processing in ring interface */
+void
+print_ring_latency_stats(struct iface_info *if_info)
+{
+	/* Clear screen and move cursor to top left */
+	const char topLeft[] = { 27, '[', '1', ';', '1', 'H', '\0' };
+	const char clr[] = { 27, '[', '2', 'J', '\0' };
+	printf("%s%s", clr, topLeft);
+
+	int ring_cnt, stats_cnt;
+	struct spp_ringlatencystats_ring_latency_stats stats[RTE_MAX_ETHPORTS];
+	memset(&stats, 0x00, sizeof(stats));
+
+	printf("RING Latency\n");
+	printf(" RING");
+	for (ring_cnt = 0; ring_cnt < RTE_MAX_ETHPORTS; ring_cnt++) {
+		if (if_info->ring[ring_cnt].iface_type == UNDEF)
+			continue;
+
+		spp_ringlatencystats_get_stats(ring_cnt, &stats[ring_cnt]);
+		printf(", %-18d", ring_cnt);
+	}
+	printf("\n");
+
+	for (stats_cnt = 0; stats_cnt < SPP_RINGLATENCYSTATS_STATS_SLOT_COUNT;
+			stats_cnt++) {
+		printf("%3dns", stats_cnt);
+		for (ring_cnt = 0; ring_cnt < RTE_MAX_ETHPORTS; ring_cnt++) {
+			if (if_info->ring[ring_cnt].iface_type == UNDEF)
+				continue;
+
+			printf(", 0x%-16lx", stats[ring_cnt].slot[stats_cnt]);
+		}
+		printf("\n");
+	}
+}
+
+/* Wrapper function for rte_eth_rx_burst() with ring latency feature. */
+uint16_t
+sppwk_eth_ring_stats_rx_burst(uint16_t port_id,
+		enum port_type iface_type,
+		int iface_no,
+		uint16_t queue_id  __attribute__ ((unused)),
+		struct rte_mbuf **rx_pkts, const uint16_t nb_pkts)
+{
+	uint16_t nb_rx;
+
+	nb_rx = rte_eth_rx_burst(port_id, 0, rx_pkts, nb_pkts);
+
+	/* TODO(yasufum) confirm why it returns SPP_RET_OK. */
+	if (unlikely(nb_rx == 0))
+		return SPP_RET_OK;
+
+	if (iface_type == RING)
+		spp_ringlatencystats_calculate_latency(
+				iface_no,
+				rx_pkts, nb_pkts);
+	return nb_rx;
+}
+
+/* Wrapper function for rte_eth_tx_burst() with ring latency feature. */
+uint16_t
+sppwk_eth_ring_stats_tx_burst(uint16_t port_id,
+		enum port_type iface_type,
+		int iface_no,
+		uint16_t queue_id __attribute__ ((unused)),
+		struct rte_mbuf **tx_pkts, uint16_t nb_pkts)
+{
+	uint16_t nb_tx;
+
+	nb_tx = rte_eth_tx_burst(port_id, 0, tx_pkts, nb_pkts);
+
+	if (iface_type == RING)
+		spp_ringlatencystats_add_time_stamp(
+				iface_no,
+				tx_pkts, nb_pkts);
+	return nb_tx;
+}
+
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
diff --git a/src/shared/secondary/spp_worker_th/ringlatencystats.h b/src/shared/secondary/spp_worker_th/ringlatencystats.h
index b919c62..33c456d 100644
--- a/src/shared/secondary/spp_worker_th/ringlatencystats.h
+++ b/src/shared/secondary/spp_worker_th/ringlatencystats.h
@@ -13,6 +13,7 @@
  */
 
 #include <rte_mbuf.h>
+#include "cmd_utils.h"
 
 /** number of slots to save latency. 0ns~99ns and 100ns over */
 #define SPP_RINGLATENCYSTATS_STATS_SLOT_COUNT 101
@@ -93,6 +94,65 @@ int spp_ringlatencystats_get_count(void);
 void spp_ringlatencystats_get_stats(int ring_id,
 		struct spp_ringlatencystats_ring_latency_stats *stats);
 
+/* Print statistics of time for packet processing in ring interface */
+void print_ring_latency_stats(struct iface_info *if_info);
+
+/**
+ * Wrapper function for rte_eth_rx_burst() with ring latency feature.
+ *
+ * @param[in] port_id Etherdev ID.
+ * @param[in] queue_id RX queue ID, but fixed value 0 in SPP.
+ * @param[in] rx_pkts Pointers to mbuf should be enough to store nb_pkts.
+ * @param nb_pkts Maximum number of RX packets.
+ * @return Number of RX packets as number of pointers to mbuf.
+ */
+uint16_t sppwk_eth_ring_stats_rx_burst(uint16_t port_id,
+		enum port_type iface_type,
+		int iface_no, uint16_t queue_id,
+		struct rte_mbuf **rx_pkts, const uint16_t nb_pkts);
+
+/**
+ * Wrapper function for rte_eth_tx_burst() with ring latency feature.
+ *
+ * @param port_id Etherdev ID.
+ * @param[in] queue_id TX queue ID, but fixed value 0 in SPP.
+ * @param[in] tx_pkts Pointers to mbuf should be enough to store nb_pkts.
+ * @param nb_pkts Maximum number of TX packets.
+ * @return Number of TX packets as number of pointers to mbuf.
+ */
+uint16_t sppwk_eth_ring_stats_tx_burst(uint16_t port_id,
+		enum port_type iface_type,
+		int iface_no, uint16_t queue_id,
+		struct rte_mbuf **tx_pkts, uint16_t nb_pkts);
+
+/**
+ * Wrapper function for rte_eth_rx_burst() with VLAN and ring latency feature.
+ *
+ * @param[in] port_id Etherdev ID.
+ * @param[in] queue_id RX queue ID, but fixed value 0 in SPP.
+ * @param[in] rx_pkts Pointers to mbuf should be enough to store nb_pkts.
+ * @param nb_pkts Maximum number of RX packets.
+ * @return Number of RX packets as number of pointers to mbuf.
+ */
+uint16_t sppwk_eth_vlan_ring_stats_rx_burst(uint16_t port_id,
+		enum port_type iface_type,
+		int iface_no, uint16_t queue_id,
+		struct rte_mbuf **rx_pkts, const uint16_t nb_pkts);
+
+/**
+ * Wrapper function for rte_eth_tx_burst() with VLAN and ring latency feature.
+ *
+ * @param port_id Etherdev ID.
+ * @param[in] queue_id TX queue ID, but fixed value 0 in SPP.
+ * @param[in] tx_pkts Pointers to mbuf should be enough to store nb_pkts.
+ * @param nb_pkts Maximum number of TX packets.
+ * @return Number of TX packets as number of pointers to mbuf.
+ */
+uint16_t sppwk_eth_vlan_ring_stats_tx_burst(uint16_t port_id,
+		enum port_type iface_type,
+		int iface_no, uint16_t queue_id,
+		struct rte_mbuf **tx_pkts, uint16_t nb_pkts);
+
 #else
 
 #define spp_ringlatencystats_init(arg1, arg2) 0
@@ -101,6 +161,11 @@ void spp_ringlatencystats_get_stats(int ring_id,
 #define spp_ringlatencystats_calculate_latency(arg1, arg2, arg3)
 #define spp_ringlatencystats_get_count() 0
 #define spp_ringlatencystats_get_stats(arg1, arg2)
+#define print_ringlatencystats_stats(arg)
+#define sppwk_eth_ring_stats_rx_burst(arg1, arg2, arg3, arg4, arg5, arg6)
+#define sppwk_eth_ring_stats_tx_burst(arg1, arg2, arg3, arg4, arg5, arg6)
+#define sppwk_eth_vlan_ring_stats_rx_burst(arg1, arg2, arg3, arg4, arg5, arg6)
+#define sppwk_eth_vlan_ring_stats_tx_burst(arg1, arg2, arg3, arg4, arg5, arg6)
 
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 
diff --git a/src/shared/secondary/spp_worker_th/spp_port.c b/src/shared/secondary/spp_worker_th/spp_port.c
index 0c7df2b..66f73df 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.c
+++ b/src/shared/secondary/spp_worker_th/spp_port.c
@@ -10,48 +10,3 @@
 
 #include "spp_port.h"
 #include "shared/secondary/return_codes.h"
-#include "ringlatencystats.h"
-
-/* Wrapper function for rte_eth_rx_burst() with ring latency feature. */
-uint16_t
-sppwk_eth_rx_burst(uint16_t port_id,
-		uint16_t queue_id  __attribute__ ((unused)),
-		struct rte_mbuf **rx_pkts, const uint16_t nb_pkts)
-{
-	uint16_t nb_rx;
-
-	nb_rx = rte_eth_rx_burst(port_id, 0, rx_pkts, nb_pkts);
-
-	/* TODO(yasufum) confirm why it returns SPP_RET_OK. */
-	if (unlikely(nb_rx == 0))
-		return SPP_RET_OK;
-
-#ifdef SPP_RINGLATENCYSTATS_ENABLE
-	if (g_port_mng_info[port_id].iface_type == RING)
-		spp_ringlatencystats_calculate_latency(
-				g_port_mng_info[port_id].iface_no,
-				rx_pkts, nb_pkts);
-#endif /* SPP_RINGLATENCYSTATS_ENABLE */
-
-	return nb_rx;
-}
-
-/* Wrapper function for rte_eth_tx_burst() with ring latency feature. */
-uint16_t
-sppwk_eth_tx_burst(uint16_t port_id,
-		uint16_t queue_id __attribute__ ((unused)),
-		struct rte_mbuf **tx_pkts, uint16_t nb_pkts)
-{
-	uint16_t nb_tx;
-
-	nb_tx = rte_eth_tx_burst(port_id, 0, tx_pkts, nb_pkts);
-
-#ifdef SPP_RINGLATENCYSTATS_ENABLE
-	if (g_port_mng_info[port_id].iface_type == RING)
-		spp_ringlatencystats_add_time_stamp(
-				g_port_mng_info[port_id].iface_no,
-				tx_pkts, nb_pkts);
-#endif /* SPP_RINGLATENCYSTATS_ENABLE */
-
-	return nb_tx;
-}
diff --git a/src/shared/secondary/spp_worker_th/spp_port.h b/src/shared/secondary/spp_worker_th/spp_port.h
index eaeaea5..9b6132b 100644
--- a/src/shared/secondary/spp_worker_th/spp_port.h
+++ b/src/shared/secondary/spp_worker_th/spp_port.h
@@ -7,28 +7,4 @@
 
 #include "cmd_utils.h"
 
-/**
- * Wrapper function for rte_eth_rx_burst() with ring latency feature.
- *
- * @param[in] port_id Etherdev ID.
- * @param[in] queue_id RX queue ID, but fixed value 0 in SPP.
- * @param[in] rx_pkts Pointers to mbuf should be enough to store nb_pkts.
- * @param nb_pkts Maximum number of RX packets.
- * @return Number of RX packets as number of pointers to mbuf.
- */
-uint16_t sppwk_eth_rx_burst(uint16_t port_id, uint16_t queue_id,
-		struct rte_mbuf **rx_pkts, const uint16_t nb_pkts);
-
-/**
- * Wrapper function for rte_eth_tx_burst() with ring latency feature.
- *
- * @param port_id Etherdev ID.
- * @param[in] queue_id TX queue ID, but fixed value 0 in SPP.
- * @param[in] tx_pkts Pointers to mbuf should be enough to store nb_pkts.
- * @param nb_pkts Maximum number of TX packets.
- * @return Number of TX packets as number of pointers to mbuf.
- */
-uint16_t sppwk_eth_tx_burst(uint16_t port_id, uint16_t queue_id,
-		struct rte_mbuf **tx_pkts, uint16_t nb_pkts);
-
 #endif /*  __WK_SPP_PORT_H__ */
diff --git a/src/vf/Makefile b/src/vf/Makefile
index 35f13e5..07870ac 100644
--- a/src/vf/Makefile
+++ b/src/vf/Makefile
@@ -19,14 +19,15 @@ SRCS-y := spp_vf.c classifier_mac.c forwarder.c
 SRCS-y += $(SPP_SEC_DIR)/string_buffer.c
 SRCS-y += $(SPP_SEC_DIR)/json_helper.c
 SRCS-y += $(SPP_SEC_DIR)/utils.c $(SPP_SEC_DIR)/add_port.c
+SRCS-y += $(SPP_WKT_DIR)/spp_port.c
 SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
 SRCS-y += $(SPP_WKT_DIR)/port_capability.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
-SRCS-y += ../shared/common.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_runner.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_utils.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_res_formatter.c
+SRCS-y += ../shared/common.c
 SRCS-y += vf_cmd_runner.c
 
 CFLAGS += -DALLOW_EXPERIMENTAL_API
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index e41c65a..893f01d 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -28,8 +28,13 @@
 #include "shared/secondary/json_helper.h"
 #include "shared/secondary/spp_worker_th/cmd_res_formatter.h"
 #include "shared/secondary/spp_worker_th/vf_deps.h"
+#include "shared/secondary/spp_worker_th/spp_port.h"
 #include "shared/secondary/spp_worker_th/port_capability.h"
 
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+#include "shared/secondary/spp_worker_th/ringlatencystats.h"
+#endif
+
 #define RTE_LOGTYPE_SPP_CLASSIFIER_MAC RTE_LOGTYPE_USER1
 
 #ifdef RTE_MACHINE_CPUFLAG_SSE4_2
@@ -460,8 +465,14 @@ transmit_packet(struct cls_port_info *clsd_data)
 	uint16_t n_tx;
 
 	/* transmit packets */
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+	n_tx = sppwk_eth_vlan_ring_stats_tx_burst(clsd_data->ethdev_port_id,
+			clsd_data->iface_type, clsd_data->iface_no,
+			0, clsd_data->pkts, clsd_data->nof_pkts);
+#else
 	n_tx = sppwk_eth_vlan_tx_burst(clsd_data->ethdev_port_id, 0,
 			clsd_data->pkts, clsd_data->nof_pkts);
+#endif
 
 	/* free cannot transmit packets */
 	if (unlikely(n_tx != clsd_data->nof_pkts)) {
@@ -796,8 +807,14 @@ spp_classifier_mac_do(int id)
 		return SPP_RET_OK;
 
 	/* retrieve packets */
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+	n_rx = sppwk_eth_vlan_ring_stats_rx_burst(clsd_data_rx->ethdev_port_id,
+			clsd_data_rx->iface_type, clsd_data_rx->iface_no,
+			0, rx_pkts, MAX_PKT_BURST);
+#else
 	n_rx = sppwk_eth_vlan_rx_burst(clsd_data_rx->ethdev_port_id, 0,
 			rx_pkts, MAX_PKT_BURST);
+#endif
 	if (unlikely(n_rx == 0))
 		return SPP_RET_OK;
 
diff --git a/src/vf/forwarder.c b/src/vf/forwarder.c
index cd28a58..5a061ad 100644
--- a/src/vf/forwarder.c
+++ b/src/vf/forwarder.c
@@ -11,6 +11,10 @@
 #include "shared/secondary/spp_worker_th/spp_port.h"
 #include "shared/secondary/spp_worker_th/port_capability.h"
 
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+#include "shared/secondary/spp_worker_th/ringlatencystats.h"
+#endif
+
 #define RTE_LOGTYPE_FORWARD RTE_LOGTYPE_USER1
 
 /* A set of port info of rx and tx */
@@ -211,16 +215,27 @@ forward_packets(int id)
 		rx = &path->ports[cnt].rx;
 		tx = &path->ports[cnt].tx;
 
-		/* Receive packets */
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+		nb_rx = sppwk_eth_vlan_ring_stats_rx_burst(rx->ethdev_port_id,
+				rx->iface_type, rx->iface_no, 0,
+				bufs, MAX_PKT_BURST);
+#else
 		nb_rx = sppwk_eth_vlan_rx_burst(rx->ethdev_port_id, 0,
 				bufs, MAX_PKT_BURST);
+#endif
 		if (unlikely(nb_rx == 0))
 			continue;
 
 		/* Send packets */
 		if (tx->ethdev_port_id >= 0)
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+			nb_tx = sppwk_eth_vlan_ring_stats_tx_burst(
+					tx->ethdev_port_id, tx->iface_type,
+					tx->iface_no, 0, bufs, nb_rx);
+#else
 			nb_tx = sppwk_eth_vlan_tx_burst(tx->ethdev_port_id,
 					0, bufs, nb_rx);
+#endif
 
 		/* Discard remained packets to release mbuf */
 		if (unlikely(nb_tx < nb_rx)) {
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index dbd47bf..1ef8e4f 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -18,6 +18,10 @@
 #include "shared/secondary/spp_worker_th/spp_port.h"
 #include "shared/secondary/spp_worker_th/port_capability.h"
 
+#ifdef SPP_RINGLATENCYSTATS_ENABLE
+#include "shared/secondary/spp_worker_th/ringlatencystats.h"
+#endif
+
 /* Declare global variables */
 /* Interface management information */
 static struct iface_info g_iface_info;
@@ -260,7 +264,7 @@ main(int argc, char *argv[])
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
 		int ret_ringlatency = spp_ringlatencystats_init(
 				SPP_RING_LATENCY_STATS_SAMPLING_INTERVAL,
-				g_iface_info.num_ring);
+				g_iface_info.nof_rings);
 		if (unlikely(ret_ringlatency != SPP_RET_OK))
 			break;
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
@@ -304,7 +308,7 @@ main(int argc, char *argv[])
 			usleep(100);
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
-			print_ring_latency_stats();
+			print_ring_latency_stats(&g_iface_info);
 #endif /* SPP_RINGLATENCYSTATS_ENABLE */
 		}
 
-- 
2.17.1



End of spp Digest, Vol 32, Issue 3
**********************************


From yasufum.o@gmail.com Mon Jul 01 13:12:11 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd106.ddreams.local
 (zssg-mailmd106.ddreams.local [10.160.123.101])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTY00XXY3OV1U10@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 01 Jul 2019 13:12:31 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd106.ddreams.local by
 zssg-mailmd106.ddreams.local (dDREAMS) id <0PTY00L0I3OVJD00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:12:31 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd106.ddreams.local
 (dDREAMS) with ESMTP id <0PTY001AZ3OVVYB0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:12:31 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf105.ddreams.local (Postfix) with ESMTP id 1293E7E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:31 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 10FD48E605D	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:31 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 05C518E6052	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:12:31 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id A297C8E6062	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:29 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf105.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:12:29 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CTCI015774;	Mon,
 1 Jul 2019 13:12:29 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x614CTok015773;	Mon, 1 Jul 2019 13:12:29 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x614CTTK015770	for unknown; Mon,
 1 Jul 2019 13:12:29 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CSlR030206 for
 unknown; Mon, 1 Jul 2019 13:12:29 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CSQk030203; Mon,
 1 Jul 2019 13:12:28 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CSQG019819;	Mon,
 1 Jul 2019 13:12:28 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x614CS9p019815	for unknown; Mon, 1 Jul 2019 13:12:28 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CSaw025470 for
 unknown; Mon, 1 Jul 2019 13:12:28 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CShm025463 for
 unknown; Mon, 1 Jul 2019 13:12:28 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x614CLWe006954	for unknown; Mon,
 1 Jul 2019 13:12:27 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 726F65587;	Mon,  1 Jul 2019 06:12:21 +0200 (CEST)
Received: from mail-pl1-f193.google.com
 (mail-pl1-f193.google.com [209.85.214.193]) by dpdk.org (Postfix)
 with ESMTP id ABCE2325F for <spp@dpdk.org>; Mon,
 1 Jul 2019 06:12:19 +0200 (CEST)
Received: by mail-pl1-f193.google.com with SMTP id 9so5838026ple.5 for
 <spp@dpdk.org>; Sun, 30 Jun 2019 21:12:19 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id j21sm9531126pfh.86.2019.06.30.21.12.17
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 30 Jun 2019 21:12:18 -0700 (PDT)
Date: Mon, 01 Jul 2019 13:12:11 +0900
From: yasufum.o@gmail.com
Subject: [spp 04464] [spp] [PATCH 2/2] shared/sec: remove source and header of
 spp_port
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190701041211.34060-3-yasufum.o@gmail.com>
In-reply-to: <20190701041211.34060-1-yasufum.o@gmail.com>
References: <20190701041211.34060-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04464
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=PkXauMAsgRqeKuNz9trvADSzEXmcZ6G4LyY0BPJrEg4=;
 b=YPPQxenz+Cd97SDCUa0KHWi3bC+vu31cQmEjvmDiJAc/RfURtrlqvqkEAtcOn7VBW9
 9HasdKUfJ8s5a76Nkf9sP2Y+67j0fcCz1Aky164Ov0yhF5GHopCS6ZLFjTF5JWHfwZjj
 hrPKdCtcggINpLMMZm2RdqTKNhBV1LavrsycHbo6dllMj5jefxgC71bAFzqe1E0upzRC
 unl3V8eDUO/b1pxD1Nh7CWl1th1AkTkJ9T1SCJxHa6UGjSp7ZXHLvgdskVcIpqv3w9gN
 QsIWX7QtI9EDhlP05geKNP8d4XAhtYtC/3TRFkOVq0SWBY4u4NzJBp8k3XNRl2rgvb1o G6fw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=PkXauMAsgRqeKuNz9trvADSzEXmcZ6G4LyY0BPJrEg4=;
 b=kvySjZV2ZT8+bZjrWwQjuu40D9cKaKByPGbOP4MQ3FxzKyD3xnjnVlE0Yp/0iMhVXf
 HvQwjK4SfCRVxkgWTwl5i4zE4iZqOWVAWMCXqz5ZKDaOhJyN4TAvqEiGDSnt0f1T0M2y
 kM1DTKv+MlJlXxTRSJjlX84F+XrZqFP1e64mEZV4KIg+0zK0vTxMD3vhaVtkjTCqEnXf
 dvCiPEiDycp+wKOCDw99kPyjbRUQb/h8Qb+KI0ez5NJPIssftsmIsTy9zLEyTggC+2Ev
 cwJy3CeSYg8OnPUrS0hCWiuQHrjwdePxQdshojZfzRT8oxextIXDEuCaeVNIbdUl2WvT V/7g==
X-Gm-Message-State: APjAAAUxZ9mKqrDzEdYxFjBUAAf9BgZlKyO1Yhuzk3i52MQeg6Kz4Dqt
 Yqt0zG/yhw6AT3Ch7wDCOsA2/EFM
X-Google-Smtp-Source:
 APXvYqx+v9lE8qfl/TkOvuWMHVojTVxuYmH41y7guhNXWckny0pDBnvfzE/DD4dk2lCSzLTzlCeDxw==
X-Received: by 2002:a17:902:3fa5:: with SMTP id
 a34mr25608626pld.317.1561954338863; Sun, 30 Jun 2019 21:12:18 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 194
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to remove `spp_port.c` and `spp_port.h` because burst
functions define in these files are moved to others and no needed
anymore.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/Makefile                                  |  1 -
 src/mirror/spp_mirror.c                              |  1 -
 src/pcap/Makefile                                    |  1 -
 src/pcap/spp_pcap.c                                  |  1 -
 .../secondary/spp_worker_th/cmd_res_formatter.c      |  1 -
 src/shared/secondary/spp_worker_th/cmd_runner.c      |  1 -
 src/shared/secondary/spp_worker_th/cmd_utils.c       |  1 -
 src/shared/secondary/spp_worker_th/spp_port.c        | 12 ------------
 src/shared/secondary/spp_worker_th/spp_port.h        | 10 ----------
 src/vf/Makefile                                      |  1 -
 src/vf/classifier_mac.c                              |  1 -
 src/vf/forwarder.c                                   |  1 -
 src/vf/spp_vf.c                                      |  1 -
 13 files changed, 33 deletions(-)
 delete mode 100644 src/shared/secondary/spp_worker_th/spp_port.c
 delete mode 100644 src/shared/secondary/spp_worker_th/spp_port.h

diff --git a/src/mirror/Makefile b/src/mirror/Makefile
index 69ff91e..af9667e 100644
--- a/src/mirror/Makefile
+++ b/src/mirror/Makefile
@@ -21,7 +21,6 @@ SRCS-y += $(SPP_SEC_DIR)/utils.c $(SPP_SEC_DIR)/add_port.c
 SRCS-y += $(SPP_SEC_DIR)/json_helper.c
 SRCS-y += $(SPP_SEC_DIR)/string_buffer.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_utils.c
-SRCS-y += $(SPP_WKT_DIR)/spp_port.c
 SRCS-y += $(SPP_WKT_DIR)/port_capability.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index aefb4f5..e6352cf 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -18,7 +18,6 @@
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
 #include "shared/secondary/spp_worker_th/cmd_utils.h"
-#include "shared/secondary/spp_worker_th/spp_port.h"
 #include "shared/secondary/spp_worker_th/port_capability.h"
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
diff --git a/src/pcap/Makefile b/src/pcap/Makefile
index 640c0d3..6273b41 100644
--- a/src/pcap/Makefile
+++ b/src/pcap/Makefile
@@ -22,7 +22,6 @@ SRCS-y += ../shared/common.c
 SRCS-y += $(SPP_SEC_DIR)/utils.c
 SRCS-y += $(SPP_SEC_DIR)/string_buffer.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
-SRCS-y += $(SPP_WKT_DIR)/spp_port.c
 SRCS-y += $(SPP_WKT_DIR)/port_capability.c
 SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
 
diff --git a/src/pcap/spp_pcap.c b/src/pcap/spp_pcap.c
index 909787d..79d155c 100644
--- a/src/pcap/spp_pcap.c
+++ b/src/pcap/spp_pcap.c
@@ -18,7 +18,6 @@
 #include "cmd_runner.h"
 #include "cmd_parser.h"
 #include "shared/secondary/utils.h"
-#include "shared/secondary/spp_worker_th/spp_port.h"
 #include "shared/secondary/spp_worker_th/port_capability.h"
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index 1485533..00d9466 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -3,7 +3,6 @@
  */
 
 #include "cmd_res_formatter.h"
-#include "spp_port.h"
 #include "port_capability.h"
 #include "cmd_utils.h"
 #include "shared/secondary/json_helper.h"
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 4e43fe6..d11dfc9 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -9,7 +9,6 @@
 #include <rte_branch_prediction.h>
 
 #include "cmd_runner.h"
-#include "spp_port.h"
 #include "cmd_res_formatter.h"
 #include "conn_spp_ctl.h"
 #include "cmd_parser.h"
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 338054f..e77dbe7 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -12,7 +12,6 @@
 #include <rte_branch_prediction.h>
 
 #include "cmd_utils.h"
-#include "spp_port.h"
 #include "shared/secondary/add_port.h"
 #include "shared/secondary/return_codes.h"
 
diff --git a/src/shared/secondary/spp_worker_th/spp_port.c b/src/shared/secondary/spp_worker_th/spp_port.c
deleted file mode 100644
index 66f73df..0000000
--- a/src/shared/secondary/spp_worker_th/spp_port.c
+++ /dev/null
@@ -1,12 +0,0 @@
-/* SPDX-License-Identifier: BSD-3-Clause
- * Copyright(c) 2017-2018 Nippon Telegraph and Telephone Corporation
- */
-
-#include <rte_ether.h>
-#include <rte_ip.h>
-#include <rte_udp.h>
-#include <rte_tcp.h>
-#include <rte_net_crc.h>
-
-#include "spp_port.h"
-#include "shared/secondary/return_codes.h"
diff --git a/src/shared/secondary/spp_worker_th/spp_port.h b/src/shared/secondary/spp_worker_th/spp_port.h
deleted file mode 100644
index 9b6132b..0000000
--- a/src/shared/secondary/spp_worker_th/spp_port.h
+++ /dev/null
@@ -1,10 +0,0 @@
-/* SPDX-License-Identifier: BSD-3-Clause
- * Copyright(c) 2017-2018 Nippon Telegraph and Telephone Corporation
- */
-
-#ifndef __WK_SPP_PORT_H__
-#define __WK_SPP_PORT_H__
-
-#include "cmd_utils.h"
-
-#endif /*  __WK_SPP_PORT_H__ */
diff --git a/src/vf/Makefile b/src/vf/Makefile
index 07870ac..92d2854 100644
--- a/src/vf/Makefile
+++ b/src/vf/Makefile
@@ -19,7 +19,6 @@ SRCS-y := spp_vf.c classifier_mac.c forwarder.c
 SRCS-y += $(SPP_SEC_DIR)/string_buffer.c
 SRCS-y += $(SPP_SEC_DIR)/json_helper.c
 SRCS-y += $(SPP_SEC_DIR)/utils.c $(SPP_SEC_DIR)/add_port.c
-SRCS-y += $(SPP_WKT_DIR)/spp_port.c
 SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
 SRCS-y += $(SPP_WKT_DIR)/port_capability.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 893f01d..8273726 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -28,7 +28,6 @@
 #include "shared/secondary/json_helper.h"
 #include "shared/secondary/spp_worker_th/cmd_res_formatter.h"
 #include "shared/secondary/spp_worker_th/vf_deps.h"
-#include "shared/secondary/spp_worker_th/spp_port.h"
 #include "shared/secondary/spp_worker_th/port_capability.h"
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
diff --git a/src/vf/forwarder.c b/src/vf/forwarder.c
index 5a061ad..ba93df5 100644
--- a/src/vf/forwarder.c
+++ b/src/vf/forwarder.c
@@ -8,7 +8,6 @@
 #include "spp_vf.h"
 #include "shared/secondary/return_codes.h"
 #include "shared/secondary/spp_worker_th/vf_deps.h"
-#include "shared/secondary/spp_worker_th/spp_port.h"
 #include "shared/secondary/spp_worker_th/port_capability.h"
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index 1ef8e4f..d7dd5d0 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -15,7 +15,6 @@
 #include "shared/secondary/add_port.h"
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
-#include "shared/secondary/spp_worker_th/spp_port.h"
 #include "shared/secondary/spp_worker_th/port_capability.h"
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
-- 
2.17.1



From yasufum.o@gmail.com Mon Jul 01 13:12:32 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTY00XZY3PC1U10@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 01 Jul 2019 13:12:48 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PTY00Y2W3PCYA00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:12:48 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PTY00A2G3PCM8E0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:12:48 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id 4145C7E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:48 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 3FF1C8E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:48 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 350D38E605E	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:12:48 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id B8EF28E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:12:47 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:12:47 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614ClE5015804;	Mon,
 1 Jul 2019 13:12:47 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x614Clea015803;	Mon, 1 Jul 2019 13:12:47 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x614ClsB015800	for unknown; Mon,
 1 Jul 2019 13:12:47 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614Clar030286 for
 unknown; Mon, 1 Jul 2019 13:12:47 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614ClrF030283; Mon,
 1 Jul 2019 13:12:47 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CkHS019846;	Mon,
 1 Jul 2019 13:12:46 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x614Ckil019842	for unknown; Mon, 1 Jul 2019 13:12:46 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614Ck9L025572 for
 unknown; Mon, 1 Jul 2019 13:12:46 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614Ckfe025562 for
 unknown; Mon, 1 Jul 2019 13:12:46 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x614CdSQ007032	for unknown; Mon,
 1 Jul 2019 13:12:45 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 8C42831FC;	Mon,  1 Jul 2019 06:12:39 +0200 (CEST)
Received: from mail-pl1-f170.google.com
 (mail-pl1-f170.google.com [209.85.214.170]) by dpdk.org (Postfix)
 with ESMTP id 8264D2AB for <spp@dpdk.org>; Mon,
 1 Jul 2019 06:12:37 +0200 (CEST)
Received: by mail-pl1-f170.google.com with SMTP id k8so6605256plt.3 for
 <spp@dpdk.org>; Sun, 30 Jun 2019 21:12:37 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id b19sm8589765pgh.57.2019.06.30.21.12.35
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 30 Jun 2019 21:12:36 -0700 (PDT)
Date: Mon, 01 Jul 2019 13:12:32 +0900
From: yasufum.o@gmail.com
Subject: [spp 04465] [spp] [PATCH] readme: update README
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190701041232.34122-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04465
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=LX1JIJOKeTn9GpdKiv43vNUR13tsPvw0KRXYNb62+5Q=;
 b=Pg609TyrUh4r74CRL7hWpQR+1PqRJhNlDt0rlnBaZQn3o2gX1mON+xIvRqpSnqPOVD
 JZ/rP6at7+8OkpsEuEk0UfOjadBuMgaxd40FVyIVYRgDdFZ48BIn7DUPzTrw2AZ0rEYM
 cafbZ818vJ51aG6i/3uCQ5uJP4iP/BbMi0LIB6zBrTTJyk0XJ+2D6gPQ6FYVTNQ8dUJW
 BN8SJ20ANb/V7jIK2w36udxvJad62Ybb01zL4kgOpsmvqvCbrZJGI6amlS8PUFDEvjs+
 Od73eXYQD5U0x9qoSih2e3CKfw8Av7ix2cIQiiZKxNmDAlQ0jjG3TV/1/1xlKIqMDCj6 fI+A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=LX1JIJOKeTn9GpdKiv43vNUR13tsPvw0KRXYNb62+5Q=;
 b=LULKU0EB8TwlOU29SmdEtxzj/R3Z+rM7UtmpHp/fJmRfNF6JbfjdNko6RanO7kGYHo
 8dO8I/NCou+OBNYnnJ6czwBPk3/2X6tvboxMaZXrrb3cfqQofGDSz0l+wuyEED4hh/oX
 /QqFBi9RQMgjGNytdlY3lcW8pI537VmAqJMfuiy08a6gtBtm4fCXixld4mX/yKoth+jm
 FxLK2j7qAcsuAfiXt5eZhsiHxBl6KiRFgaduNqO0UpRURpUUALxztVj31+GTlndoSBTs
 us3HNhZi6AZNpTX6WoifU/E5dmpK50SaefrMUZCQK5ziuvUh56zV/QIvLDy4F1JKmJ3k LYYQ==
X-Gm-Message-State: APjAAAVubnM5AIN9OxH+RhBQn0TYPRuPtqNDjTuv7Ed/wz5AHA+djoOz
 OF8XjqMa3/ZI/gAuYB14J/DmpWeS
X-Google-Smtp-Source:
 APXvYqzocIhzHSrmyTOdPn77QXAxrpYUw0etREg59WmwHJX8Pwes9nyOPhdsl/uwTkhkoFgmynFa1w==
X-Received: by 2002:a17:902:f082:: with SMTP id
 go2mr27790406plb.25.1561954356455; Sun, 30 Jun 2019 21:12:36 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 313
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This patch is to `README.md` on project root for adding new features
such as `launch` command or `config`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 README.md | 213 +++++++++++++++++++++++++++++++++++++++++-------------
 1 file changed, 161 insertions(+), 52 deletions(-)

diff --git a/README.md b/README.md
index 4ede2f2..e1085e0 100644
--- a/README.md
+++ b/README.md
@@ -23,43 +23,40 @@ with patch panel like simple interface.
 
 ## Architecture Overview
 
-The framework is composed of a primary DPDK application that is
-responsible for resource management and secondary processes as workers
-for packet forwarding. This primary application doesn't
-interact with any traffic, and is used to manage creation and freeing of
-resources only.
-
-A Python based management interfaces, `spp-ctl` and `SPP CLI`,
-are provided to control the primary DPDK application to create resources,
-which are then to be used by secondary applications.
-
-This management application provides a socket based interface for
-the primary and secondary DPDK applications to
-interface to the manager.
+SPP is a kind of DPDK
+[multi-process application](https://doc.dpdk.org/guides/prog_guide/multi_proc_support.html).
+It is composed of primary process which is responsible for resource
+management, and secondary processes as workers for packet forwarding.
+This primary process does not interact with any traffic. It is
+responsible for creation and freeing of resources shared among other
+secondary processes.
+
+A Python based management interface called SPP controller consists of
+`spp-ctl` and `SPP CLI`.
+`SPP CLI` is a command line interface of SPP, and `spp-ctl` a backend
+server for managing primary and secondary processes.
+`spp-ctl` behaves as a REST API server and `SPP CLI` sends a command via
+the REST API.
 
 
 ## Install
 
-Before using SPP, you need to install DPDK. Briefly describ here how to install
-and setup DPDK. Please refer to SPP's
+Before using SPP, you need to install DPDK. Briefly describ here how to
+install and setup DPDK. Please refer to SPP's
 [Getting Started](https://doc.dpdk.org/spp/setup/getting_started.html) guide
 for more details. For DPDK, refer to
 [Getting Started Guide for Linux](https://doc.dpdk.org/guides/linux_gsg/index.html).
 
-### Install DPDK
-
-It is required to install Python and libnuma-devel library before.
+It is required to install Python3 and libnuma-devel library before.
+SPP does not support Python2 anymore.
 
 ```sh
-$ sudo apt install libnuma-dev
-
-# Python2
-$ sudo apt install python python-pip
-
-# Python3
 $ sudo apt install python3 python3-pip
+$ sudo apt install libnuma-dev
 ```
 
+### DPDK
+
 Clone repository and compile DPDK in any directory.
 
 ```
@@ -76,7 +73,7 @@ $ export RTE_TARGET=x86_64-native-linuxapp-gcc  # depends on your env
 $ make install T=$RTE_TARGET
 ```
 
-### Install SPP
+### SPP
 
 Clone repository and compile SPP in any directory.
 
@@ -89,12 +86,13 @@ $ make  # Confirm that $RTE_SDK and $RTE_TARGET are set
 
 ### Binding Network Ports to DPDK
 
-Network ports must be bound to DPDK with a UIO (Userspace IO) driver. UIO driver
-is for mapping device memory to userspace and registering interrupts.
+Network ports must be bound to DPDK with a UIO (Userspace IO) driver.
+UIO driver is for mapping device memory to userspace and registering
+interrupts.
 
-You usually use the standard `uio_pci_generic` for many use cases or `vfio-pci`
-for more robust and secure cases. Both of drivers are included by default in
-modern Linux kernel.
+You usually use the standard `uio_pci_generic` for many use cases or
+`vfio-pci` for more robust and secure cases. Both of drivers are
+included by default in modern Linux kernel.
 
 ```sh
 # Activate uio_pci_generic
@@ -104,8 +102,9 @@ $ sudo modprobe uio_pci_generic
 $ sudo modprobe vfio-pci
 ```
 
-Once UIO driver is activated, bind network ports with the driver. DPDK provides
-`usertools/dpdk-devbind.py` for managing devices.
+Once UIO driver is activated, bind network ports with the driver.
+DPDK provides `usertools/dpdk-devbind.py` for managing devices.
+Here are some examples.
 
 ```
 # Bind a port with 2a:00.0 (PCI address)
@@ -115,8 +114,8 @@ $ ./usertools/dpdk-devbind.py --bind=uio_pci_generic 2a:00.0
 $ ./usertools/dpdk-devbind.py --bind=uio_pci_generic eth0
 ```
 
-After binding two ports, you can find it is under the DPDK driver, and cannot
-find it by using `ifconfig` or `ip`.
+After binding a port, you can find it is under the DPDK driver,
+and cannot find it by using `ifconfig` or `ip`.
 
 ```sh
 $ $RTE_SDK/usertools/dpdk-devbind.py -s
@@ -129,43 +128,154 @@ Network devices using DPDK-compatible driver
 
 ## How to Use
 
-You should keep in mind the order of launching processes. Primary process must
-be launched before secondary processes. `spp-ctl` need to be launched before
-`spp.py`, but no need to be launched before other processes.
-In general, `spp-ctl` should be launched first, then `spp.py` and `spp_primary`
-in each of terminals without running as background process.
+You can use SPP from `bin/start.sh` script or launching each of
+processes manually. This startup script is provided for skipping to
+input many options for multiple DPDK applications.
+
+### Quick Start
+
+Start with `bin/start.sh` with configuration file `bin/config.sh`.
+First time you run the startup script, it generates the config file
+and asks to edit the config without launchin processes.
+
+Here is a part of config parameters. You do not need to change most of
+params.
+If you do not have physical NICs on your server, activate
+`PRI_VHOST_IDS` which is for setting up vhost interfaces instead of
+physical.
+
+```sh
+SPP_HOST_IP=127.0.0.1
+SPP_HUGEPAGES=/dev/hugepages
+
+# spp_primary options
+LOGLEVEL=7  # change to 8 if you refer debug messages.
+PRI_CORE_LIST=0  # required one lcore usually.
+PRI_MEM=1024
+PRI_MEMCHAN=4  # change for your memory channels.
+NUM_RINGS=8
+PRI_PORTMASK=0x03  # total num of ports of spp_primary.
+#PRI_VHOST_IDS=(11 12)  # you use if you have no phy ports.
+```
+
+After you edit configuration, you can launch `spp-ctl`,
+`spp_primary` and `SPP CLI` from startup script.
+
+```sh
+$ ./bin/start.sh
+Start spp-ctl
+Start spp_primary
+Waiting for spp-ctl is ready ...
+Welcome to the SPP CLI. Type `help` or `?` to list commands.
+
+spp >
+```
+
+Check status of `spp_primary` because it takes several seconds to be
+ready. Confirm that the status is `running`.
+
+```sh
+spp > status
+- spp-ctl:
+  - address: 127.0.0.1:7777
+- primary:
+  - status: running
+- secondary:
+  - processes:
+```
+
+Now you are ready to launch secondary processes from `pri; launch`
+command, or another terminal.
+Here is an example for launching `spp_nfv` with options from
+`pri; launch`. Log file of this process is created as
+`log/spp_nfv1.log`.
+
+```sh
+spp > pri; launch nfv 1 -l 1,2 -m 512 -- -n 1 -s 127.0.0.1:6666
+```
 
-It has a option -b for binding address explicitly to be accessed from other
-than default, `127.0.0.1` or `localhost`.
+This `launch` command supports TAB completion. Parameters for `spp_nfv`
+are completed after secondary ID `1`.
 
+```sh
+spp > pri; launch nfv 1
 
-### SPP Controller
+# Press TAB
+spp > pri; launch nfv 1 -l 1,2 -m 512 -- -n 1 -s 127.0.0.1:6666
+```
+
+It is same as following options launching from terminal.
+
+```sh
+$ sudo ./src/nfv/x86_64-native-linuxapp-gcc/spp_nfv \
+    -l 1,2 -n 4 -m 512 \
+    --proc-type secondary \
+    -- \
+    -n 1 \
+    -s 127.0.0.1:6666
+```
+
+Parameters for completion are defined in `SPP CLI`, and you can find
+parameters with `config` command.
+
+```sh
+spp > config
+- max_secondary: "16"   # The maximum number of secondary processes
+- prompt: "spp > "  # Command prompt
+- topo_size: "60%"  # Percentage or ratio of topo
+- sec_mem: "-m 512" # Mem size
+...
+```
+
+You can launch consequence secondary processes from CLI.
+
+```sh
+spp > pri; launch nfv 2 -l 1,3 -m 512 -- -n 2 -s 127.0.0.1:6666
+spp > pri; launch vf 3 -l 1,4,5,6 -m 512 -- -n 3 -s 127.0.0.1:6666
+...
+```
+
+### Startup Manually
+
+You should keep in mind the order of launching processes if you launch
+processes without using startup script.
+`spp-ctl` should be launched before all of other processes. Then,
+primary process must be launched before secondary processes.
+On the other hand, you can launch SPP CLI `spp.py` in any time
+after `spp-ctl`. In general, `spp-ctl` is launched first,
+then `spp.py`, `spp_primary` and secondary processes.
+
+It has a option -b for binding address explicitly to be accessed from
+other than default, `127.0.0.1` or `localhost`.
+
+In the following example, processes are launched in different terminals
+for describing options, although you can launch them with
+`pri; launch` command.
+
+#### SPP Controller
 
 SPP controller consists of `spp-ctl` and SPP CLI.
 `spp-ctl` is a HTTP server for REST APIs for managing SPP processes.
 
 ```sh
 # terminal 1
-$ cd /path/to/spp
 $ python3 src/spp-ctl/spp-ctl -b 192.168.1.100
 ```
 
-SPP CLI is a client of `spp-ctl` for providing simple user interface without
-using REST APIs.
+SPP CLI is a client of `spp-ctl` for providing simple user interface
+without using REST APIs.
 
 ```sh
 # terminal 2
-$ cd /path/to/spp
 $ python3 src/spp.py -b 192.168.1.100
 ```
 
-
-### SPP Primary
+#### SPP Processes
 
 Launch SPP primary and secondary processes.
-SPP primary is a resource manager and initializing EAL for secondary processes.
-Secondary process behaves as a client of primary process and a worker for doing
-tasks.
+SPP primary is a resource manager and initializing EAL for secondary
+processes. Secondary process behaves as a client of primary process
+and a worker for doing tasks.
 
 ```sh
 # terminal 3
@@ -185,7 +295,6 @@ one.
 
 ```sh
 # terminal 4
-$ cd /path/to/spp
 $ sudo ./src/nfv/x86_64-native-linuxapp-gcc/spp_nfv \
     -l 2-3 -n 4 \
     --proc-type=secondary \
-- 
2.17.1



From yasufum.o@gmail.com Mon Jul 01 13:12:42 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd101.ddreams.local
 (zssg-mailmd101.ddreams.local [10.160.123.96]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTY00X2M3PQ1U20@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 01 Jul 2019 13:13:02 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd101.ddreams.local by
 zssg-mailmd101.ddreams.local (dDREAMS) id <0PTY00F2K3PP8O00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:13:01 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd101.ddreams.local
 (dDREAMS) with ESMTP id <0PTY01DIZ3PP7V90@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:13:01 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id E2E557E6038	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:13:01 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id E17268E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:13:01 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id E03FE8E6050	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:13:01 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 056FD8E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:13:01 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:13:00 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614D00G015853;	Mon,
 1 Jul 2019 13:13:00 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x614D0OR015852;	Mon, 1 Jul 2019 13:13:00 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x614D05A015849	for unknown; Mon,
 1 Jul 2019 13:13:00 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614D0Hf030376 for
 unknown; Mon, 1 Jul 2019 13:13:00 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614D0nU030373; Mon,
 1 Jul 2019 13:13:00 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614D0bD019867;	Mon,
 1 Jul 2019 13:13:00 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x614CxtU019863	for unknown; Mon, 1 Jul 2019 13:12:59 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CxWt025682 for
 unknown; Mon, 1 Jul 2019 13:12:59 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614CxMk025676 for
 unknown; Mon, 1 Jul 2019 13:12:59 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x614Cre1007097	for unknown; Mon,
 1 Jul 2019 13:12:58 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id A76BA326D;	Mon,  1 Jul 2019 06:12:52 +0200 (CEST)
Received: from mail-pg1-f178.google.com
 (mail-pg1-f178.google.com [209.85.215.178]) by dpdk.org (Postfix)
 with ESMTP id 314EC3195 for <spp@dpdk.org>; Mon,
 1 Jul 2019 06:12:51 +0200 (CEST)
Received: by mail-pg1-f178.google.com with SMTP id s27so5348361pgl.2 for
 <spp@dpdk.org>; Sun, 30 Jun 2019 21:12:51 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id cx22sm9305604pjb.25.2019.06.30.21.12.48
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 30 Jun 2019 21:12:49 -0700 (PDT)
Date: Mon, 01 Jul 2019 13:12:42 +0900
From: yasufum.o@gmail.com
Subject: [spp 04466] [spp] [PATCH 0/2] Update recipe scripts
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190701041244.34176-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04466
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=o74YLBGSC17Jfs4v1uvGTaV8raVk4IFCQMWhKTcbOgw=;
 b=ckE32xS85jQ+j6f9q2BaoYFb1icn7utPeOxt5vyM6okzFSDie2P7Ymwt5AH2t3Z/Qr
 H48I+NsPrhdhNlvmKiD8glL82Q1261P9c+iDt/RmjdGaXI2OFlN7HakgT6kh4WuZZ1wt
 QVzNVNXs0DjukHJ2MsjIbLT7Y7WRoe/vTzIerIhLFYszKLR0nqPrWEN9RkFHoc8Z+Yl4
 BL8bFPlEqf3j68Zx5SP1BG7ngOYA1jfF1PTYQIoALej+sa0PBLghSF064WXWOESjz6TR
 OvJduKwbenjh5jHn40nUbpHLzdOo243rgAGOaj2e42cNm/SKoTNGTcXuW9scKzolbxk7 ktuQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=o74YLBGSC17Jfs4v1uvGTaV8raVk4IFCQMWhKTcbOgw=;
 b=Llf2VMEPP3qqnnhZ+Z1hEjONbCA6C5upRawn7fHGGgzgVwLQr7ZHaDmoFOWDTIudHa
 18zowp1SMepNuvahY2k+hgrANL9D7taZBbXUeZ9TC8DZ1JnqAt0rG42Bvg5bz5FPXBtM
 MFL88tKzIUbsrHSxTYu5IwaoHo9HdH/OTzvjZLP9lKm2enBkSoqnOLU5cuhN6+QQ+78O
 eR1L4OlYqmxiAvoRZsuUZugD97/fWaW75oglh+IUQpn2W8tiVfdAI03A61gK743JtdrC
 8zeeUM/YCxpkfe7sYPsmlPPqviRQs4i9QDtJPw3fTbjsiXrLY/scrrObHiRGdSaOtzfw eP+w==
X-Gm-Message-State: APjAAAXr2jWCGDRZm9zfcypRnPUuaGmm1wASLSup17G1jikM27Zku4d8
 09Ii6AVqhRkEJeiDMyCK4XWCKDNq
X-Google-Smtp-Source:
 APXvYqykuQQfCVQT/XkoQuYRD4WIRvU4LWinxXX4hM3K98w1dnQo2AQJzZGD6+Wdg4iZuTbZoH7vmg==
X-Received: by 2002:a63:89c7:: with SMTP id
 v190mr21691814pgd.299.1561954370272; Sun, 30 Jun 2019 21:12:50 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 49
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Recipe scripts for spp_nfv and spp_vf are not maintained and failed to
run because command syntax is too old. This series of patches is to
update them to the latest syntax as described in documents.

Yasufumi Ogawa (2):
  recipes: update old rcps for spp_nfv
  recipes: update old rcps for spp_vf

 recipes/usecases/spp_nfv/dual_bidir.rcps      | 10 ++++-----
 recipes/usecases/spp_nfv/dual_loopback.rcps   |  9 ++++----
 recipes/usecases/spp_nfv/ring_dual_bidir.rcps | 22 +++++++++----------
 .../usecases/spp_nfv/ring_dual_unidir.rcps    | 16 ++++++--------
 recipes/usecases/spp_nfv/single_bidir.rcps    |  8 +++----
 recipes/usecases/spp_nfv/single_loopback.rcps |  4 ++++
 recipes/usecases/spp_nfv/vhost_unidir.rcps    | 11 +++++-----
 .../ssh_login/setup/1-start_components.rcps   |  7 ------
 .../ssh_login/setup/1_start_components.rcps   |  7 ++++++
 .../ssh_login/setup/2-add_ports_path1.rcps    | 20 -----------------
 .../ssh_login/setup/2_add_ports_path1.rcps    | 18 +++++++++++++++
 .../ssh_login/setup/3-reg_mac_path1.rcps      |  3 ---
 .../ssh_login/setup/3_reg_mac_path1.rcps      |  3 +++
 .../ssh_login/setup/4-start_components.rcps   |  7 ------
 .../ssh_login/setup/4_start_components.rcps   |  7 ++++++
 .../ssh_login/setup/5-add_ports_path2.rcps    | 20 -----------------
 .../ssh_login/setup/5_add_ports_path2.rcps    | 19 ++++++++++++++++
 .../ssh_login/setup/6-reg_mac_path2.rcps      |  3 ---
 .../ssh_login/setup/6_reg_mac_path2.rcps      |  3 +++
 .../spp_vf/ssh_login/setup/7-flush.rcps       |  1 -
 20 files changed, 97 insertions(+), 101 deletions(-)
 create mode 100644 recipes/usecases/spp_nfv/single_loopback.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/1-start_components.rcps
 create mode 100644 recipes/usecases/spp_vf/ssh_login/setup/1_start_components.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/2-add_ports_path1.rcps
 create mode 100644 recipes/usecases/spp_vf/ssh_login/setup/2_add_ports_path1.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/3-reg_mac_path1.rcps
 create mode 100644 recipes/usecases/spp_vf/ssh_login/setup/3_reg_mac_path1.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/4-start_components.rcps
 create mode 100644 recipes/usecases/spp_vf/ssh_login/setup/4_start_components.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/5-add_ports_path2.rcps
 create mode 100644 recipes/usecases/spp_vf/ssh_login/setup/5_add_ports_path2.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/6-reg_mac_path2.rcps
 create mode 100644 recipes/usecases/spp_vf/ssh_login/setup/6_reg_mac_path2.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/7-flush.rcps

-- 
2.17.1



From spp-request@dpdk.org Mon Jul 01 13:12:53 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd105.ddreams.local
 (zssg-mailmd105.ddreams.local [10.160.123.100])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTY00X2U3PR1U20@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 01 Jul 2019 13:13:03 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd105.ddreams.local by
 zssg-mailmd105.ddreams.local (dDREAMS) id <0PTY01B2Q3PRAO00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:13:03 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd105.ddreams.local
 (dDREAMS) with ESMTP id <0PTY00X9N3PRGS80@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:13:03 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id 25F2F7E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:13:03 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 247888E6063	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:13:03 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 197128E6060	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:13:03 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 54FA18E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:13:02 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:13:02 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614D2id015860;	Mon,
 1 Jul 2019 13:13:02 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x614D2n1015859;	Mon, 1 Jul 2019 13:13:02 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x614D2G6015856	for unknown; Mon,
 1 Jul 2019 13:13:02 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614D1Mr025711 for
 unknown; Mon, 1 Jul 2019 13:13:01 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614D1bd025702 for
 unknown; Mon, 1 Jul 2019 13:13:01 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x614CtJV007120	for unknown; Mon,
 1 Jul 2019 13:13:00 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id CBDDC4C99	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 1 Jul 2019 06:12:54 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 32, Issue 4
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 01 Jul 2019 06:12:53 +0200
Message-id: <mailman.24128.1561954373.7586.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH 2/2] shared/sec: remove source and header of spp_port
      (yasufum.o@gmail.com)
   2. [PATCH] readme: update README (yasufum.o@gmail.com)
   3. [PATCH 0/2] Update recipe scripts (yasufum.o@gmail.com)
   4. [PATCH 1/2] recipes: update old rcps for spp_nfv
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon,  1 Jul 2019 13:12:11 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 2/2] shared/sec: remove source and header of
	spp_port
Message-ID: <20190701041211.34060-3-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to remove `spp_port.c` and `spp_port.h` because burst
functions define in these files are moved to others and no needed
anymore.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 src/mirror/Makefile                                  |  1 -
 src/mirror/spp_mirror.c                              |  1 -
 src/pcap/Makefile                                    |  1 -
 src/pcap/spp_pcap.c                                  |  1 -
 .../secondary/spp_worker_th/cmd_res_formatter.c      |  1 -
 src/shared/secondary/spp_worker_th/cmd_runner.c      |  1 -
 src/shared/secondary/spp_worker_th/cmd_utils.c       |  1 -
 src/shared/secondary/spp_worker_th/spp_port.c        | 12 ------------
 src/shared/secondary/spp_worker_th/spp_port.h        | 10 ----------
 src/vf/Makefile                                      |  1 -
 src/vf/classifier_mac.c                              |  1 -
 src/vf/forwarder.c                                   |  1 -
 src/vf/spp_vf.c                                      |  1 -
 13 files changed, 33 deletions(-)
 delete mode 100644 src/shared/secondary/spp_worker_th/spp_port.c
 delete mode 100644 src/shared/secondary/spp_worker_th/spp_port.h

diff --git a/src/mirror/Makefile b/src/mirror/Makefile
index 69ff91e..af9667e 100644
--- a/src/mirror/Makefile
+++ b/src/mirror/Makefile
@@ -21,7 +21,6 @@ SRCS-y += $(SPP_SEC_DIR)/utils.c $(SPP_SEC_DIR)/add_port.c
 SRCS-y += $(SPP_SEC_DIR)/json_helper.c
 SRCS-y += $(SPP_SEC_DIR)/string_buffer.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_utils.c
-SRCS-y += $(SPP_WKT_DIR)/spp_port.c
 SRCS-y += $(SPP_WKT_DIR)/port_capability.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
 SRCS-y += $(SPP_WKT_DIR)/cmd_parser.c
diff --git a/src/mirror/spp_mirror.c b/src/mirror/spp_mirror.c
index aefb4f5..e6352cf 100644
--- a/src/mirror/spp_mirror.c
+++ b/src/mirror/spp_mirror.c
@@ -18,7 +18,6 @@
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
 #include "shared/secondary/spp_worker_th/cmd_utils.h"
-#include "shared/secondary/spp_worker_th/spp_port.h"
 #include "shared/secondary/spp_worker_th/port_capability.h"
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
diff --git a/src/pcap/Makefile b/src/pcap/Makefile
index 640c0d3..6273b41 100644
--- a/src/pcap/Makefile
+++ b/src/pcap/Makefile
@@ -22,7 +22,6 @@ SRCS-y += ../shared/common.c
 SRCS-y += $(SPP_SEC_DIR)/utils.c
 SRCS-y += $(SPP_SEC_DIR)/string_buffer.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
-SRCS-y += $(SPP_WKT_DIR)/spp_port.c
 SRCS-y += $(SPP_WKT_DIR)/port_capability.c
 SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
 
diff --git a/src/pcap/spp_pcap.c b/src/pcap/spp_pcap.c
index 909787d..79d155c 100644
--- a/src/pcap/spp_pcap.c
+++ b/src/pcap/spp_pcap.c
@@ -18,7 +18,6 @@
 #include "cmd_runner.h"
 #include "cmd_parser.h"
 #include "shared/secondary/utils.h"
-#include "shared/secondary/spp_worker_th/spp_port.h"
 #include "shared/secondary/spp_worker_th/port_capability.h"
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index 1485533..00d9466 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -3,7 +3,6 @@
  */
 
 #include "cmd_res_formatter.h"
-#include "spp_port.h"
 #include "port_capability.h"
 #include "cmd_utils.h"
 #include "shared/secondary/json_helper.h"
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index 4e43fe6..d11dfc9 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -9,7 +9,6 @@
 #include <rte_branch_prediction.h>
 
 #include "cmd_runner.h"
-#include "spp_port.h"
 #include "cmd_res_formatter.h"
 #include "conn_spp_ctl.h"
 #include "cmd_parser.h"
diff --git a/src/shared/secondary/spp_worker_th/cmd_utils.c b/src/shared/secondary/spp_worker_th/cmd_utils.c
index 338054f..e77dbe7 100644
--- a/src/shared/secondary/spp_worker_th/cmd_utils.c
+++ b/src/shared/secondary/spp_worker_th/cmd_utils.c
@@ -12,7 +12,6 @@
 #include <rte_branch_prediction.h>
 
 #include "cmd_utils.h"
-#include "spp_port.h"
 #include "shared/secondary/add_port.h"
 #include "shared/secondary/return_codes.h"
 
diff --git a/src/shared/secondary/spp_worker_th/spp_port.c b/src/shared/secondary/spp_worker_th/spp_port.c
deleted file mode 100644
index 66f73df..0000000
--- a/src/shared/secondary/spp_worker_th/spp_port.c
+++ /dev/null
@@ -1,12 +0,0 @@
-/* SPDX-License-Identifier: BSD-3-Clause
- * Copyright(c) 2017-2018 Nippon Telegraph and Telephone Corporation
- */
-
-#include <rte_ether.h>
-#include <rte_ip.h>
-#include <rte_udp.h>
-#include <rte_tcp.h>
-#include <rte_net_crc.h>
-
-#include "spp_port.h"
-#include "shared/secondary/return_codes.h"
diff --git a/src/shared/secondary/spp_worker_th/spp_port.h b/src/shared/secondary/spp_worker_th/spp_port.h
deleted file mode 100644
index 9b6132b..0000000
--- a/src/shared/secondary/spp_worker_th/spp_port.h
+++ /dev/null
@@ -1,10 +0,0 @@
-/* SPDX-License-Identifier: BSD-3-Clause
- * Copyright(c) 2017-2018 Nippon Telegraph and Telephone Corporation
- */
-
-#ifndef __WK_SPP_PORT_H__
-#define __WK_SPP_PORT_H__
-
-#include "cmd_utils.h"
-
-#endif /*  __WK_SPP_PORT_H__ */
diff --git a/src/vf/Makefile b/src/vf/Makefile
index 07870ac..92d2854 100644
--- a/src/vf/Makefile
+++ b/src/vf/Makefile
@@ -19,7 +19,6 @@ SRCS-y := spp_vf.c classifier_mac.c forwarder.c
 SRCS-y += $(SPP_SEC_DIR)/string_buffer.c
 SRCS-y += $(SPP_SEC_DIR)/json_helper.c
 SRCS-y += $(SPP_SEC_DIR)/utils.c $(SPP_SEC_DIR)/add_port.c
-SRCS-y += $(SPP_WKT_DIR)/spp_port.c
 SRCS-y += $(SPP_WKT_DIR)/ringlatencystats.c
 SRCS-y += $(SPP_WKT_DIR)/port_capability.c
 SRCS-y += $(SPP_WKT_DIR)/conn_spp_ctl.c
diff --git a/src/vf/classifier_mac.c b/src/vf/classifier_mac.c
index 893f01d..8273726 100644
--- a/src/vf/classifier_mac.c
+++ b/src/vf/classifier_mac.c
@@ -28,7 +28,6 @@
 #include "shared/secondary/json_helper.h"
 #include "shared/secondary/spp_worker_th/cmd_res_formatter.h"
 #include "shared/secondary/spp_worker_th/vf_deps.h"
-#include "shared/secondary/spp_worker_th/spp_port.h"
 #include "shared/secondary/spp_worker_th/port_capability.h"
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
diff --git a/src/vf/forwarder.c b/src/vf/forwarder.c
index 5a061ad..ba93df5 100644
--- a/src/vf/forwarder.c
+++ b/src/vf/forwarder.c
@@ -8,7 +8,6 @@
 #include "spp_vf.h"
 #include "shared/secondary/return_codes.h"
 #include "shared/secondary/spp_worker_th/vf_deps.h"
-#include "shared/secondary/spp_worker_th/spp_port.h"
 #include "shared/secondary/spp_worker_th/port_capability.h"
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
diff --git a/src/vf/spp_vf.c b/src/vf/spp_vf.c
index 1ef8e4f..d7dd5d0 100644
--- a/src/vf/spp_vf.c
+++ b/src/vf/spp_vf.c
@@ -15,7 +15,6 @@
 #include "shared/secondary/add_port.h"
 #include "shared/secondary/spp_worker_th/cmd_runner.h"
 #include "shared/secondary/spp_worker_th/cmd_parser.h"
-#include "shared/secondary/spp_worker_th/spp_port.h"
 #include "shared/secondary/spp_worker_th/port_capability.h"
 
 #ifdef SPP_RINGLATENCYSTATS_ENABLE
-- 
2.17.1



------------------------------

Message: 2
Date: Mon,  1 Jul 2019 13:12:32 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH] readme: update README
Message-ID: <20190701041232.34122-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This patch is to `README.md` on project root for adding new features
such as `launch` command or `config`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 README.md | 213 +++++++++++++++++++++++++++++++++++++++++-------------
 1 file changed, 161 insertions(+), 52 deletions(-)

diff --git a/README.md b/README.md
index 4ede2f2..e1085e0 100644
--- a/README.md
+++ b/README.md
@@ -23,43 +23,40 @@ with patch panel like simple interface.
 
 ## Architecture Overview
 
-The framework is composed of a primary DPDK application that is
-responsible for resource management and secondary processes as workers
-for packet forwarding. This primary application doesn't
-interact with any traffic, and is used to manage creation and freeing of
-resources only.
-
-A Python based management interfaces, `spp-ctl` and `SPP CLI`,
-are provided to control the primary DPDK application to create resources,
-which are then to be used by secondary applications.
-
-This management application provides a socket based interface for
-the primary and secondary DPDK applications to
-interface to the manager.
+SPP is a kind of DPDK
+[multi-process application](https://doc.dpdk.org/guides/prog_guide/multi_proc_support.html).
+It is composed of primary process which is responsible for resource
+management, and secondary processes as workers for packet forwarding.
+This primary process does not interact with any traffic. It is
+responsible for creation and freeing of resources shared among other
+secondary processes.
+
+A Python based management interface called SPP controller consists of
+`spp-ctl` and `SPP CLI`.
+`SPP CLI` is a command line interface of SPP, and `spp-ctl` a backend
+server for managing primary and secondary processes.
+`spp-ctl` behaves as a REST API server and `SPP CLI` sends a command via
+the REST API.
 
 
 ## Install
 
-Before using SPP, you need to install DPDK. Briefly describ here how to install
-and setup DPDK. Please refer to SPP's
+Before using SPP, you need to install DPDK. Briefly describ here how to
+install and setup DPDK. Please refer to SPP's
 [Getting Started](https://doc.dpdk.org/spp/setup/getting_started.html) guide
 for more details. For DPDK, refer to
 [Getting Started Guide for Linux](https://doc.dpdk.org/guides/linux_gsg/index.html).
 
-### Install DPDK
-
-It is required to install Python and libnuma-devel library before.
+It is required to install Python3 and libnuma-devel library before.
+SPP does not support Python2 anymore.
 
 ```sh
-$ sudo apt install libnuma-dev
-
-# Python2
-$ sudo apt install python python-pip
-
-# Python3
 $ sudo apt install python3 python3-pip
+$ sudo apt install libnuma-dev
 ```
 
+### DPDK
+
 Clone repository and compile DPDK in any directory.
 
 ```
@@ -76,7 +73,7 @@ $ export RTE_TARGET=x86_64-native-linuxapp-gcc  # depends on your env
 $ make install T=$RTE_TARGET
 ```
 
-### Install SPP
+### SPP
 
 Clone repository and compile SPP in any directory.
 
@@ -89,12 +86,13 @@ $ make  # Confirm that $RTE_SDK and $RTE_TARGET are set
 
 ### Binding Network Ports to DPDK
 
-Network ports must be bound to DPDK with a UIO (Userspace IO) driver. UIO driver
-is for mapping device memory to userspace and registering interrupts.
+Network ports must be bound to DPDK with a UIO (Userspace IO) driver.
+UIO driver is for mapping device memory to userspace and registering
+interrupts.
 
-You usually use the standard `uio_pci_generic` for many use cases or `vfio-pci`
-for more robust and secure cases. Both of drivers are included by default in
-modern Linux kernel.
+You usually use the standard `uio_pci_generic` for many use cases or
+`vfio-pci` for more robust and secure cases. Both of drivers are
+included by default in modern Linux kernel.
 
 ```sh
 # Activate uio_pci_generic
@@ -104,8 +102,9 @@ $ sudo modprobe uio_pci_generic
 $ sudo modprobe vfio-pci
 ```
 
-Once UIO driver is activated, bind network ports with the driver. DPDK provides
-`usertools/dpdk-devbind.py` for managing devices.
+Once UIO driver is activated, bind network ports with the driver.
+DPDK provides `usertools/dpdk-devbind.py` for managing devices.
+Here are some examples.
 
 ```
 # Bind a port with 2a:00.0 (PCI address)
@@ -115,8 +114,8 @@ $ ./usertools/dpdk-devbind.py --bind=uio_pci_generic 2a:00.0
 $ ./usertools/dpdk-devbind.py --bind=uio_pci_generic eth0
 ```
 
-After binding two ports, you can find it is under the DPDK driver, and cannot
-find it by using `ifconfig` or `ip`.
+After binding a port, you can find it is under the DPDK driver,
+and cannot find it by using `ifconfig` or `ip`.
 
 ```sh
 $ $RTE_SDK/usertools/dpdk-devbind.py -s
@@ -129,43 +128,154 @@ Network devices using DPDK-compatible driver
 
 ## How to Use
 
-You should keep in mind the order of launching processes. Primary process must
-be launched before secondary processes. `spp-ctl` need to be launched before
-`spp.py`, but no need to be launched before other processes.
-In general, `spp-ctl` should be launched first, then `spp.py` and `spp_primary`
-in each of terminals without running as background process.
+You can use SPP from `bin/start.sh` script or launching each of
+processes manually. This startup script is provided for skipping to
+input many options for multiple DPDK applications.
+
+### Quick Start
+
+Start with `bin/start.sh` with configuration file `bin/config.sh`.
+First time you run the startup script, it generates the config file
+and asks to edit the config without launchin processes.
+
+Here is a part of config parameters. You do not need to change most of
+params.
+If you do not have physical NICs on your server, activate
+`PRI_VHOST_IDS` which is for setting up vhost interfaces instead of
+physical.
+
+```sh
+SPP_HOST_IP=127.0.0.1
+SPP_HUGEPAGES=/dev/hugepages
+
+# spp_primary options
+LOGLEVEL=7  # change to 8 if you refer debug messages.
+PRI_CORE_LIST=0  # required one lcore usually.
+PRI_MEM=1024
+PRI_MEMCHAN=4  # change for your memory channels.
+NUM_RINGS=8
+PRI_PORTMASK=0x03  # total num of ports of spp_primary.
+#PRI_VHOST_IDS=(11 12)  # you use if you have no phy ports.
+```
+
+After you edit configuration, you can launch `spp-ctl`,
+`spp_primary` and `SPP CLI` from startup script.
+
+```sh
+$ ./bin/start.sh
+Start spp-ctl
+Start spp_primary
+Waiting for spp-ctl is ready ...
+Welcome to the SPP CLI. Type `help` or `?` to list commands.
+
+spp >
+```
+
+Check status of `spp_primary` because it takes several seconds to be
+ready. Confirm that the status is `running`.
+
+```sh
+spp > status
+- spp-ctl:
+  - address: 127.0.0.1:7777
+- primary:
+  - status: running
+- secondary:
+  - processes:
+```
+
+Now you are ready to launch secondary processes from `pri; launch`
+command, or another terminal.
+Here is an example for launching `spp_nfv` with options from
+`pri; launch`. Log file of this process is created as
+`log/spp_nfv1.log`.
+
+```sh
+spp > pri; launch nfv 1 -l 1,2 -m 512 -- -n 1 -s 127.0.0.1:6666
+```
 
-It has a option -b for binding address explicitly to be accessed from other
-than default, `127.0.0.1` or `localhost`.
+This `launch` command supports TAB completion. Parameters for `spp_nfv`
+are completed after secondary ID `1`.
 
+```sh
+spp > pri; launch nfv 1
 
-### SPP Controller
+# Press TAB
+spp > pri; launch nfv 1 -l 1,2 -m 512 -- -n 1 -s 127.0.0.1:6666
+```
+
+It is same as following options launching from terminal.
+
+```sh
+$ sudo ./src/nfv/x86_64-native-linuxapp-gcc/spp_nfv \
+    -l 1,2 -n 4 -m 512 \
+    --proc-type secondary \
+    -- \
+    -n 1 \
+    -s 127.0.0.1:6666
+```
+
+Parameters for completion are defined in `SPP CLI`, and you can find
+parameters with `config` command.
+
+```sh
+spp > config
+- max_secondary: "16"   # The maximum number of secondary processes
+- prompt: "spp > "  # Command prompt
+- topo_size: "60%"  # Percentage or ratio of topo
+- sec_mem: "-m 512" # Mem size
+...
+```
+
+You can launch consequence secondary processes from CLI.
+
+```sh
+spp > pri; launch nfv 2 -l 1,3 -m 512 -- -n 2 -s 127.0.0.1:6666
+spp > pri; launch vf 3 -l 1,4,5,6 -m 512 -- -n 3 -s 127.0.0.1:6666
+...
+```
+
+### Startup Manually
+
+You should keep in mind the order of launching processes if you launch
+processes without using startup script.
+`spp-ctl` should be launched before all of other processes. Then,
+primary process must be launched before secondary processes.
+On the other hand, you can launch SPP CLI `spp.py` in any time
+after `spp-ctl`. In general, `spp-ctl` is launched first,
+then `spp.py`, `spp_primary` and secondary processes.
+
+It has a option -b for binding address explicitly to be accessed from
+other than default, `127.0.0.1` or `localhost`.
+
+In the following example, processes are launched in different terminals
+for describing options, although you can launch them with
+`pri; launch` command.
+
+#### SPP Controller
 
 SPP controller consists of `spp-ctl` and SPP CLI.
 `spp-ctl` is a HTTP server for REST APIs for managing SPP processes.
 
 ```sh
 # terminal 1
-$ cd /path/to/spp
 $ python3 src/spp-ctl/spp-ctl -b 192.168.1.100
 ```
 
-SPP CLI is a client of `spp-ctl` for providing simple user interface without
-using REST APIs.
+SPP CLI is a client of `spp-ctl` for providing simple user interface
+without using REST APIs.
 
 ```sh
 # terminal 2
-$ cd /path/to/spp
 $ python3 src/spp.py -b 192.168.1.100
 ```
 
-
-### SPP Primary
+#### SPP Processes
 
 Launch SPP primary and secondary processes.
-SPP primary is a resource manager and initializing EAL for secondary processes.
-Secondary process behaves as a client of primary process and a worker for doing
-tasks.
+SPP primary is a resource manager and initializing EAL for secondary
+processes. Secondary process behaves as a client of primary process
+and a worker for doing tasks.
 
 ```sh
 # terminal 3
@@ -185,7 +295,6 @@ one.
 
 ```sh
 # terminal 4
-$ cd /path/to/spp
 $ sudo ./src/nfv/x86_64-native-linuxapp-gcc/spp_nfv \
     -l 2-3 -n 4 \
     --proc-type=secondary \
-- 
2.17.1



------------------------------

Message: 3
Date: Mon,  1 Jul 2019 13:12:42 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 0/2] Update recipe scripts
Message-ID: <20190701041244.34176-1-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Recipe scripts for spp_nfv and spp_vf are not maintained and failed to
run because command syntax is too old. This series of patches is to
update them to the latest syntax as described in documents.

Yasufumi Ogawa (2):
  recipes: update old rcps for spp_nfv
  recipes: update old rcps for spp_vf

 recipes/usecases/spp_nfv/dual_bidir.rcps      | 10 ++++-----
 recipes/usecases/spp_nfv/dual_loopback.rcps   |  9 ++++----
 recipes/usecases/spp_nfv/ring_dual_bidir.rcps | 22 +++++++++----------
 .../usecases/spp_nfv/ring_dual_unidir.rcps    | 16 ++++++--------
 recipes/usecases/spp_nfv/single_bidir.rcps    |  8 +++----
 recipes/usecases/spp_nfv/single_loopback.rcps |  4 ++++
 recipes/usecases/spp_nfv/vhost_unidir.rcps    | 11 +++++-----
 .../ssh_login/setup/1-start_components.rcps   |  7 ------
 .../ssh_login/setup/1_start_components.rcps   |  7 ++++++
 .../ssh_login/setup/2-add_ports_path1.rcps    | 20 -----------------
 .../ssh_login/setup/2_add_ports_path1.rcps    | 18 +++++++++++++++
 .../ssh_login/setup/3-reg_mac_path1.rcps      |  3 ---
 .../ssh_login/setup/3_reg_mac_path1.rcps      |  3 +++
 .../ssh_login/setup/4-start_components.rcps   |  7 ------
 .../ssh_login/setup/4_start_components.rcps   |  7 ++++++
 .../ssh_login/setup/5-add_ports_path2.rcps    | 20 -----------------
 .../ssh_login/setup/5_add_ports_path2.rcps    | 19 ++++++++++++++++
 .../ssh_login/setup/6-reg_mac_path2.rcps      |  3 ---
 .../ssh_login/setup/6_reg_mac_path2.rcps      |  3 +++
 .../spp_vf/ssh_login/setup/7-flush.rcps       |  1 -
 20 files changed, 97 insertions(+), 101 deletions(-)
 create mode 100644 recipes/usecases/spp_nfv/single_loopback.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/1-start_components.rcps
 create mode 100644 recipes/usecases/spp_vf/ssh_login/setup/1_start_components.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/2-add_ports_path1.rcps
 create mode 100644 recipes/usecases/spp_vf/ssh_login/setup/2_add_ports_path1.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/3-reg_mac_path1.rcps
 create mode 100644 recipes/usecases/spp_vf/ssh_login/setup/3_reg_mac_path1.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/4-start_components.rcps
 create mode 100644 recipes/usecases/spp_vf/ssh_login/setup/4_start_components.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/5-add_ports_path2.rcps
 create mode 100644 recipes/usecases/spp_vf/ssh_login/setup/5_add_ports_path2.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/6-reg_mac_path2.rcps
 create mode 100644 recipes/usecases/spp_vf/ssh_login/setup/6_reg_mac_path2.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/7-flush.rcps

-- 
2.17.1



------------------------------

Message: 4
Date: Mon,  1 Jul 2019 13:12:43 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 1/2] recipes: update old rcps for spp_nfv
Message-ID: <20190701041244.34176-2-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Recipe scripts for spp_nfv are not maintained and failed to run because
command syntax is too old. This patch is to update them to the latest
syntax as described in documents.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 recipes/usecases/spp_nfv/dual_bidir.rcps      | 10 ++++-----
 recipes/usecases/spp_nfv/dual_loopback.rcps   |  9 ++++----
 recipes/usecases/spp_nfv/ring_dual_bidir.rcps | 22 +++++++++----------
 .../usecases/spp_nfv/ring_dual_unidir.rcps    | 16 ++++++--------
 recipes/usecases/spp_nfv/single_bidir.rcps    |  8 +++----
 recipes/usecases/spp_nfv/single_loopback.rcps |  4 ++++
 recipes/usecases/spp_nfv/vhost_unidir.rcps    | 11 +++++-----
 7 files changed, 40 insertions(+), 40 deletions(-)
 create mode 100644 recipes/usecases/spp_nfv/single_loopback.rcps

diff --git a/recipes/usecases/spp_nfv/dual_bidir.rcps b/recipes/usecases/spp_nfv/dual_bidir.rcps
index f3d186b..ae60beb 100644
--- a/recipes/usecases/spp_nfv/dual_bidir.rcps
+++ b/recipes/usecases/spp_nfv/dual_bidir.rcps
@@ -1,5 +1,5 @@
-# Patch port 0 and 1 as bi-directioonal
-sec 1;patch phy:0 phy:1
-sec 2;patch phy:1 phy:0
-sec 1;forward
-sec 2;forward
+# Configure Two spp_nfv as L2fwd
+nfv 1; patch phy:0 phy:1
+nfv 2; patch phy:1 phy:0
+nfv 1; forward
+nfv 2; forward
diff --git a/recipes/usecases/spp_nfv/dual_loopback.rcps b/recipes/usecases/spp_nfv/dual_loopback.rcps
index 8d3350d..5b00de7 100644
--- a/recipes/usecases/spp_nfv/dual_loopback.rcps
+++ b/recipes/usecases/spp_nfv/dual_loopback.rcps
@@ -1,4 +1,5 @@
-sec 1;patch phy:0 phy:0
-sec 2;patch phy:1 phy:1
-sec 1;forward
-sec 2;forward
+#Configure two spp_nfv for Loopback
+nfv 1; patch phy:0 phy:0
+nfv 2; patch phy:1 phy:1
+nfv 1; forward
+nfv 2; forward
diff --git a/recipes/usecases/spp_nfv/ring_dual_bidir.rcps b/recipes/usecases/spp_nfv/ring_dual_bidir.rcps
index 167c90f..2fff7b3 100644
--- a/recipes/usecases/spp_nfv/ring_dual_bidir.rcps
+++ b/recipes/usecases/spp_nfv/ring_dual_bidir.rcps
@@ -1,14 +1,12 @@
 # Bi-directional with two rings
+nfv 1; add ring:0
+nfv 1; add ring:1
+nfv 2; add ring:0
+nfv 2; add ring:1
 
-sec 1;add ring 0
-sec 1;add ring 1
-sec 2;add ring 0
-sec 2;add ring 1
-
-sec 1;patch phy:0 ring:0
-sec 1;patch ring:1 phy:0
-sec 2;patch phy:1 ring:1
-sec 2;patch ring:0 phy:1
-
-sec 1;forward
-sec 2;forward
+nfv 1; patch phy:0 ring:0
+nfv 1; patch ring:1 phy:0
+nfv 2; patch phy:1 ring:1
+nfv 2; patch ring:0 phy:1
+nfv 1; forward
+nfv 2; forward
diff --git a/recipes/usecases/spp_nfv/ring_dual_unidir.rcps b/recipes/usecases/spp_nfv/ring_dual_unidir.rcps
index eb6377e..a9fd883 100644
--- a/recipes/usecases/spp_nfv/ring_dual_unidir.rcps
+++ b/recipes/usecases/spp_nfv/ring_dual_unidir.rcps
@@ -1,9 +1,7 @@
-# Uni-directional with ring
-sec 1;add ring 0
-sec 2;add ring 0
-
-sec 1;patch phy:0 ring:0
-sec 2;patch ring:0 phy:1
-
-sec 1;forward
-sec 2;forward
+# Uni-Directional L2fwd with ring
+nfv 1; add ring:0
+nfv 2; add ring:0
+nfv 1; patch phy:0 ring:0
+nfv 2; patch ring:0 phy:1
+nfv 1; forward
+nfv 2; forward
diff --git a/recipes/usecases/spp_nfv/single_bidir.rcps b/recipes/usecases/spp_nfv/single_bidir.rcps
index e56e29e..22905a7 100644
--- a/recipes/usecases/spp_nfv/single_bidir.rcps
+++ b/recipes/usecases/spp_nfv/single_bidir.rcps
@@ -1,4 +1,4 @@
-# Patch ports as bi-directional
-sec 1;patch phy:0 phy:1
-sec 1;patch phy:1 phy:0
-sec 1;forward
+# Configure spp_nfv as L2fwd
+nfv 1; patch phy:0 phy:1
+nfv 1; patch phy:1 phy:0
+nfv 1; forward
diff --git a/recipes/usecases/spp_nfv/single_loopback.rcps b/recipes/usecases/spp_nfv/single_loopback.rcps
new file mode 100644
index 0000000..7c70b23
--- /dev/null
+++ b/recipes/usecases/spp_nfv/single_loopback.rcps
@@ -0,0 +1,4 @@
+# Configure spp_nfv for Loopback
+nfv 1; patch phy:0 phy:0
+nfv 1; patch phy:1 phy:1
+nfv 1; forward
diff --git a/recipes/usecases/spp_nfv/vhost_unidir.rcps b/recipes/usecases/spp_nfv/vhost_unidir.rcps
index d835719..eaca4e9 100644
--- a/recipes/usecases/spp_nfv/vhost_unidir.rcps
+++ b/recipes/usecases/spp_nfv/vhost_unidir.rcps
@@ -1,6 +1,5 @@
-# Uni-directional with vhost
-sec 1;patch phy:0 vhost:0
-sec 1;patch vhost:0 phy:1
-sec 2;patch phy:0 phy:0
-sec 1;forward
-sec 2;forward
+# Single spp_nfv with Vhost PMD
+nfv 1; add vhost:0
+nfv 1; patch phy:0 vhost:0
+nfv 1; patch vhost:1 phy:1
+nfv 1; forward
-- 
2.17.1



End of spp Digest, Vol 32, Issue 4
**********************************


From yasufum.o@gmail.com Mon Jul 01 13:12:43 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd106.ddreams.local
 (zssg-mailmd106.ddreams.local [10.160.123.101])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTY00X363PS1U20@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 01 Jul 2019 13:13:04 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd106.ddreams.local by
 zssg-mailmd106.ddreams.local (dDREAMS) id <0PTY00M1G3PS6B00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:13:04 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd106.ddreams.local
 (dDREAMS) with ESMTP id <0PTY001SJ3PSVYB0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:13:04 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf105.ddreams.local (Postfix) with ESMTP id 1385E7E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:13:04 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 102618E6052	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:13:04 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 04CBB8E6058	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:13:04 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 0B7628E6062	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:13:03 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf105.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:13:03 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614D2K3015872;	Mon,
 1 Jul 2019 13:13:02 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x614D2AI015871;	Mon, 1 Jul 2019 13:13:02 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x614D2He015863	for unknown; Mon,
 1 Jul 2019 13:13:02 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614D2SK030411 for
 unknown; Mon, 1 Jul 2019 13:13:02 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614D2Tg030408; Mon,
 1 Jul 2019 13:13:02 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614D2J0019874;	Mon,
 1 Jul 2019 13:13:02 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x614D2QK019870	for unknown; Mon, 1 Jul 2019 13:13:02 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614D1Nb025708 for
 unknown; Mon, 1 Jul 2019 13:13:01 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614D1V1025701 for
 unknown; Mon, 1 Jul 2019 13:13:01 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x614Ctkm007114	for unknown; Mon,
 1 Jul 2019 13:13:00 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id BFA0B3195;	Mon,  1 Jul 2019 06:12:54 +0200 (CEST)
Received: from mail-pl1-f194.google.com
 (mail-pl1-f194.google.com [209.85.214.194]) by dpdk.org (Postfix)
 with ESMTP id 8F2FC3195 for <spp@dpdk.org>; Mon,
 1 Jul 2019 06:12:52 +0200 (CEST)
Received: by mail-pl1-f194.google.com with SMTP id t7so6592621plr.11 for
 <spp@dpdk.org>; Sun, 30 Jun 2019 21:12:52 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id cx22sm9305604pjb.25.2019.06.30.21.12.50
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 30 Jun 2019 21:12:51 -0700 (PDT)
Date: Mon, 01 Jul 2019 13:12:43 +0900
From: yasufum.o@gmail.com
Subject: [spp 04467] [spp] [PATCH 1/2] recipes: update old rcps for spp_nfv
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190701041244.34176-2-yasufum.o@gmail.com>
In-reply-to: <20190701041244.34176-1-yasufum.o@gmail.com>
References: <20190701041244.34176-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04467
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=GgwGclDqA3/5lPuzs8zOT0cku7lzQaCPW6yo2toRyaM=;
 b=RmRHzJG27jevhfH6xkIn0GfA2clwKlzpOcwg/FqRMyhlk1QNfIVL+rBQoqHnaJcqFj
 GfHQ8QMI//BjjfFlmUa61XXK0Hs3s80PQVyjRD45j7LIElTSqrCRgu7WrF+pxMu7qGgi
 R7McOf90+1DIgCBYsp7/NyB1KPgh2QqFn7KhG0Iku6Wle1bMCaC76FmMdd5eCVM1KDBG
 EomaV1tIuJfg/sweKXMYZCGq49Wd/FFw6W+f7m2o9jWuiiZwnfgxBgFi11Xvdd6/8JKG
 GQdNUhzOj8oySJNbvpkovy5jJ87jio+W7KVxjC/5w2oW7BSktcbTfczcoCxnYpTsfuIt IHvA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=GgwGclDqA3/5lPuzs8zOT0cku7lzQaCPW6yo2toRyaM=;
 b=WnTs4xI6HrEhlLkxfAub89IDrBXqCqdSWtS7w/n5vSKiQ+iNsMmvJW+h4QJ3L8eeN1
 lS6QFPOHylt5mdARfUlqiEmVTEmGalahi3+xLuD5pdBSHJaQUTNQZ12Xqo68Sr0dZUD0
 gmGPdlZ7iXYx2gdJRBbB3d3FM6wJ1EuB7+7fXydbK6BvIMOVZAo4/81WlcY9Nm+GWhpS
 09zSypoi6BXGk7Kag4mhjRZkQOc6i5lLs3emq3MMQIWc7+dhheZs+Tg/NpBoAzJxPKr7
 ZxBrKbl3hBjCv2Mjn8to7QqVeE1U8Z8rry9J0XbXtzGmManbjxWWpv1HxdXBdbLkyNXi GimQ==
X-Gm-Message-State: APjAAAU4eIUSXdKuHUoR9851Bect9gsYUEbzP3lq4iByGv7ZriTln4ab
 X5BxcrAjFwrIwej2yQ3Km7NS/ows
X-Google-Smtp-Source:
 APXvYqxwClh6ESgLobKDwxY8jK3Xw4BHhjGeFc4p/Flv8As6nti8ubS+7d3GJZwUj2bQzlCWwSFF2A==
X-Received: by 2002:a17:902:24a2:: with SMTP id
 w31mr27196461pla.324.1561954371771; Sun, 30 Jun 2019 21:12:51 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 139
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

Recipe scripts for spp_nfv are not maintained and failed to run because
command syntax is too old. This patch is to update them to the latest
syntax as described in documents.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 recipes/usecases/spp_nfv/dual_bidir.rcps      | 10 ++++-----
 recipes/usecases/spp_nfv/dual_loopback.rcps   |  9 ++++----
 recipes/usecases/spp_nfv/ring_dual_bidir.rcps | 22 +++++++++----------
 .../usecases/spp_nfv/ring_dual_unidir.rcps    | 16 ++++++--------
 recipes/usecases/spp_nfv/single_bidir.rcps    |  8 +++----
 recipes/usecases/spp_nfv/single_loopback.rcps |  4 ++++
 recipes/usecases/spp_nfv/vhost_unidir.rcps    | 11 +++++-----
 7 files changed, 40 insertions(+), 40 deletions(-)
 create mode 100644 recipes/usecases/spp_nfv/single_loopback.rcps

diff --git a/recipes/usecases/spp_nfv/dual_bidir.rcps b/recipes/usecases/spp_nfv/dual_bidir.rcps
index f3d186b..ae60beb 100644
--- a/recipes/usecases/spp_nfv/dual_bidir.rcps
+++ b/recipes/usecases/spp_nfv/dual_bidir.rcps
@@ -1,5 +1,5 @@
-# Patch port 0 and 1 as bi-directioonal
-sec 1;patch phy:0 phy:1
-sec 2;patch phy:1 phy:0
-sec 1;forward
-sec 2;forward
+# Configure Two spp_nfv as L2fwd
+nfv 1; patch phy:0 phy:1
+nfv 2; patch phy:1 phy:0
+nfv 1; forward
+nfv 2; forward
diff --git a/recipes/usecases/spp_nfv/dual_loopback.rcps b/recipes/usecases/spp_nfv/dual_loopback.rcps
index 8d3350d..5b00de7 100644
--- a/recipes/usecases/spp_nfv/dual_loopback.rcps
+++ b/recipes/usecases/spp_nfv/dual_loopback.rcps
@@ -1,4 +1,5 @@
-sec 1;patch phy:0 phy:0
-sec 2;patch phy:1 phy:1
-sec 1;forward
-sec 2;forward
+#Configure two spp_nfv for Loopback
+nfv 1; patch phy:0 phy:0
+nfv 2; patch phy:1 phy:1
+nfv 1; forward
+nfv 2; forward
diff --git a/recipes/usecases/spp_nfv/ring_dual_bidir.rcps b/recipes/usecases/spp_nfv/ring_dual_bidir.rcps
index 167c90f..2fff7b3 100644
--- a/recipes/usecases/spp_nfv/ring_dual_bidir.rcps
+++ b/recipes/usecases/spp_nfv/ring_dual_bidir.rcps
@@ -1,14 +1,12 @@
 # Bi-directional with two rings
+nfv 1; add ring:0
+nfv 1; add ring:1
+nfv 2; add ring:0
+nfv 2; add ring:1
 
-sec 1;add ring 0
-sec 1;add ring 1
-sec 2;add ring 0
-sec 2;add ring 1
-
-sec 1;patch phy:0 ring:0
-sec 1;patch ring:1 phy:0
-sec 2;patch phy:1 ring:1
-sec 2;patch ring:0 phy:1
-
-sec 1;forward
-sec 2;forward
+nfv 1; patch phy:0 ring:0
+nfv 1; patch ring:1 phy:0
+nfv 2; patch phy:1 ring:1
+nfv 2; patch ring:0 phy:1
+nfv 1; forward
+nfv 2; forward
diff --git a/recipes/usecases/spp_nfv/ring_dual_unidir.rcps b/recipes/usecases/spp_nfv/ring_dual_unidir.rcps
index eb6377e..a9fd883 100644
--- a/recipes/usecases/spp_nfv/ring_dual_unidir.rcps
+++ b/recipes/usecases/spp_nfv/ring_dual_unidir.rcps
@@ -1,9 +1,7 @@
-# Uni-directional with ring
-sec 1;add ring 0
-sec 2;add ring 0
-
-sec 1;patch phy:0 ring:0
-sec 2;patch ring:0 phy:1
-
-sec 1;forward
-sec 2;forward
+# Uni-Directional L2fwd with ring
+nfv 1; add ring:0
+nfv 2; add ring:0
+nfv 1; patch phy:0 ring:0
+nfv 2; patch ring:0 phy:1
+nfv 1; forward
+nfv 2; forward
diff --git a/recipes/usecases/spp_nfv/single_bidir.rcps b/recipes/usecases/spp_nfv/single_bidir.rcps
index e56e29e..22905a7 100644
--- a/recipes/usecases/spp_nfv/single_bidir.rcps
+++ b/recipes/usecases/spp_nfv/single_bidir.rcps
@@ -1,4 +1,4 @@
-# Patch ports as bi-directional
-sec 1;patch phy:0 phy:1
-sec 1;patch phy:1 phy:0
-sec 1;forward
+# Configure spp_nfv as L2fwd
+nfv 1; patch phy:0 phy:1
+nfv 1; patch phy:1 phy:0
+nfv 1; forward
diff --git a/recipes/usecases/spp_nfv/single_loopback.rcps b/recipes/usecases/spp_nfv/single_loopback.rcps
new file mode 100644
index 0000000..7c70b23
--- /dev/null
+++ b/recipes/usecases/spp_nfv/single_loopback.rcps
@@ -0,0 +1,4 @@
+# Configure spp_nfv for Loopback
+nfv 1; patch phy:0 phy:0
+nfv 1; patch phy:1 phy:1
+nfv 1; forward
diff --git a/recipes/usecases/spp_nfv/vhost_unidir.rcps b/recipes/usecases/spp_nfv/vhost_unidir.rcps
index d835719..eaca4e9 100644
--- a/recipes/usecases/spp_nfv/vhost_unidir.rcps
+++ b/recipes/usecases/spp_nfv/vhost_unidir.rcps
@@ -1,6 +1,5 @@
-# Uni-directional with vhost
-sec 1;patch phy:0 vhost:0
-sec 1;patch vhost:0 phy:1
-sec 2;patch phy:0 phy:0
-sec 1;forward
-sec 2;forward
+# Single spp_nfv with Vhost PMD
+nfv 1; add vhost:0
+nfv 1; patch phy:0 vhost:0
+nfv 1; patch vhost:1 phy:1
+nfv 1; forward
-- 
2.17.1



From yasufum.o@gmail.com Mon Jul 01 13:12:44 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd106.ddreams.local
 (zssg-mailmd106.ddreams.local [10.160.123.101])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTY00X3K3PT1U20@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 01 Jul 2019 13:13:05 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd106.ddreams.local by
 zssg-mailmd106.ddreams.local (dDREAMS) id <0PTY00M243PT3W00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:13:05 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd106.ddreams.local
 (dDREAMS) with ESMTP id <0PTY001T53PTVYB0@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 13:13:05 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf105.ddreams.local (Postfix) with ESMTP id 2399F7E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:13:05 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 200688E6066	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:13:05 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 1243E8E6060	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:13:05 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 21C128E6052	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 13:13:04 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf105.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 13:13:04 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614D3SF015881;	Mon,
 1 Jul 2019 13:13:03 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x614D3Us015880;	Mon, 1 Jul 2019 13:13:03 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x614D3fY015877	for unknown; Mon,
 1 Jul 2019 13:13:03 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614D3pd030437 for
 unknown; Mon, 1 Jul 2019 13:13:03 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x614D3J6030434; Mon,
 1 Jul 2019 13:13:03 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x614D3hi019881;	Mon,
 1 Jul 2019 13:13:03 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x614D3GA019877	for unknown; Mon, 1 Jul 2019 13:13:03 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614D2qX025737 for
 unknown; Mon, 1 Jul 2019 13:13:03 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x614D28I025731 for
 unknown; Mon, 1 Jul 2019 13:13:02 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x614CuRL007131	for unknown; Mon,
 1 Jul 2019 13:13:02 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id DCACF5587;	Mon,  1 Jul 2019 06:12:55 +0200 (CEST)
Received: from mail-pg1-f195.google.com
 (mail-pg1-f195.google.com [209.85.215.195]) by dpdk.org (Postfix)
 with ESMTP id 40C2A3195 for <spp@dpdk.org>; Mon,
 1 Jul 2019 06:12:54 +0200 (CEST)
Received: by mail-pg1-f195.google.com with SMTP id f25so5337483pgv.10 for
 <spp@dpdk.org>; Sun, 30 Jun 2019 21:12:54 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id cx22sm9305604pjb.25.2019.06.30.21.12.51
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 30 Jun 2019 21:12:52 -0700 (PDT)
Date: Mon, 01 Jul 2019 13:12:44 +0900
From: yasufum.o@gmail.com
Subject: [spp 04468] [spp] [PATCH 2/2] recipes: update old rcps for spp_vf
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190701041244.34176-3-yasufum.o@gmail.com>
In-reply-to: <20190701041244.34176-1-yasufum.o@gmail.com>
References: <20190701041244.34176-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04468
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=1tjS1H0k1Y3Dqwshh2DauA3wjw1NVZ9ON46ij9kALu0=;
 b=LTygaOCjTfpvFfu810X22aYG4BqB/uL0UKtNo0LmH13OOfPmRJ0V+l45LvJfvFXX0b
 GY56uaED93rL8kuxDbVDqk4eReZApCCKl4neEshweeO8Nw9VCbqVsKDoekpxA723fMXz
 RODn21crDSbZAyHb5R/w43dAnmw1KYWYadqpa5XVTA9GN1JYM+Pc2kK+NwIz2rZVpWgA
 xaQKqCn27acfxozaiy1MXym8pAituPczcn4I0dr1Zd/Zo7+TS1MChuHywCizFR5zngtW
 Vov596EkSrqs8o9nh3Q9R8VTuxw9LPc9viMS8Mmm45BiA0GCICZgZlqn1lomX64Svhvk KnlA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=1tjS1H0k1Y3Dqwshh2DauA3wjw1NVZ9ON46ij9kALu0=;
 b=mlP3I7bdtap0uiPN6hV+gA7Xd9Px6VQAweOvHt2cyT5Zxr5eQQrwxptdl6SZwBn9P2
 r2dICweehhSbJMyAnZRWUNqp4v4qOsbyJwolku521SAnxPVSO+oKhrJc7IRGB+WB9IjS
 QzxZn79FSNtDTBoypVAV2YGeCTz86qdQw+qdizqH9zhd6C+eKdEdJzK1hb/jOHkY75N7
 6Bg8p413BlVP/yxOGrFO5j1LuNEI1ImXgQsmyNnQPhxw0hteymeXs6AefuTKNBRr6DpI
 7enbQdbH2faKiX75E+SI921eG3Docjq7Kp01PIf+lk9vhc+KwFXFO7xfCWE4M6jV0DCp hdGg==
X-Gm-Message-State: APjAAAVYfwJFVidCHtJJc1PBbLJ1F//DmeX0g9NuPXNu5dyL/aMFuEv0
 RRSAylfM9pj1evqirek8Pz6x8Yxw
X-Google-Smtp-Source:
 APXvYqwxzLKXiXAx03eQ6MSec4M/gzOHWgIXolGfaugBn/4+q5aCV6CyWePWahV9zaYkY8MFgEgJhg==
X-Received: by 2002:a63:460c:: with SMTP id t12mr19485781pga.69.1561954373185;
 Sun, 30 Jun 2019 21:12:53 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 234
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This patch is to update rcps for spp_vf for the latest documents as
previous patch.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../ssh_login/setup/1-start_components.rcps   |  7 -------
 .../ssh_login/setup/1_start_components.rcps   |  7 +++++++
 .../ssh_login/setup/2-add_ports_path1.rcps    | 20 -------------------
 .../ssh_login/setup/2_add_ports_path1.rcps    | 18 +++++++++++++++++
 .../ssh_login/setup/3-reg_mac_path1.rcps      |  3 ---
 .../ssh_login/setup/3_reg_mac_path1.rcps      |  3 +++
 .../ssh_login/setup/4-start_components.rcps   |  7 -------
 .../ssh_login/setup/4_start_components.rcps   |  7 +++++++
 .../ssh_login/setup/5-add_ports_path2.rcps    | 20 -------------------
 .../ssh_login/setup/5_add_ports_path2.rcps    | 19 ++++++++++++++++++
 .../ssh_login/setup/6-reg_mac_path2.rcps      |  3 ---
 .../ssh_login/setup/6_reg_mac_path2.rcps      |  3 +++
 .../spp_vf/ssh_login/setup/7-flush.rcps       |  1 -
 13 files changed, 57 insertions(+), 61 deletions(-)
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/1-start_components.rcps
 create mode 100644 recipes/usecases/spp_vf/ssh_login/setup/1_start_components.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/2-add_ports_path1.rcps
 create mode 100644 recipes/usecases/spp_vf/ssh_login/setup/2_add_ports_path1.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/3-reg_mac_path1.rcps
 create mode 100644 recipes/usecases/spp_vf/ssh_login/setup/3_reg_mac_path1.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/4-start_components.rcps
 create mode 100644 recipes/usecases/spp_vf/ssh_login/setup/4_start_components.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/5-add_ports_path2.rcps
 create mode 100644 recipes/usecases/spp_vf/ssh_login/setup/5_add_ports_path2.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/6-reg_mac_path2.rcps
 create mode 100644 recipes/usecases/spp_vf/ssh_login/setup/6_reg_mac_path2.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/7-flush.rcps

diff --git a/recipes/usecases/spp_vf/ssh_login/setup/1-start_components.rcps b/recipes/usecases/spp_vf/ssh_login/setup/1-start_components.rcps
deleted file mode 100644
index 52e2bba..0000000
--- a/recipes/usecases/spp_vf/ssh_login/setup/1-start_components.rcps
+++ /dev/null
@@ -1,7 +0,0 @@
-# Start component for path1
-sec 1;component start classifier1 2 classifier_mac
-sec 1;component start forwarder1 3 forward
-sec 1;component start forwarder2 4 forward
-sec 1;component start forwarder3 5 forward
-sec 1;component start forwarder4 6 forward
-sec 1;component start merger1 7 merge
diff --git a/recipes/usecases/spp_vf/ssh_login/setup/1_start_components.rcps b/recipes/usecases/spp_vf/ssh_login/setup/1_start_components.rcps
new file mode 100644
index 0000000..e864628
--- /dev/null
+++ b/recipes/usecases/spp_vf/ssh_login/setup/1_start_components.rcps
@@ -0,0 +1,7 @@
+# Start component for path1
+vf 1; component start cls1 2 classifier_mac
+vf 1; component start fwd1 3 forward
+vf 1; component start fwd2 4 forward
+vf 1; component start fwd3 5 forward
+vf 1; component start fwd4 6 forward
+vf 1; component start mgr1 7 merge
diff --git a/recipes/usecases/spp_vf/ssh_login/setup/2-add_ports_path1.rcps b/recipes/usecases/spp_vf/ssh_login/setup/2-add_ports_path1.rcps
deleted file mode 100644
index bfb59ba..0000000
--- a/recipes/usecases/spp_vf/ssh_login/setup/2-add_ports_path1.rcps
+++ /dev/null
@@ -1,20 +0,0 @@
-# classifier1
-sec 1;port add phy:0 rx classifier1
-sec 1;port add ring:0 tx classifier1
-sec 1;port add ring:1 tx classifier1
-# forwarder1
-sec 1;port add ring:0 rx forwarder1
-sec 1;port add vhost:0 tx forwarder1
-# forwarder2
-sec 1;port add ring:1 rx forwarder2
-sec 1;port add vhost:2 tx forwarder2
-# forwarder3
-sec 1;port add vhost:0 rx forwarder3
-sec 1;port add ring:2 tx forwarder3
-# forwarder4
-sec 1;port add vhost:2 rx forwarder4
-sec 1;port add ring:3 tx forwarder4
-# merger1
-sec 1;port add ring:2 rx merger1
-sec 1;port add ring:3 rx merger1
-sec 1;port add phy:0 tx merger1
diff --git a/recipes/usecases/spp_vf/ssh_login/setup/2_add_ports_path1.rcps b/recipes/usecases/spp_vf/ssh_login/setup/2_add_ports_path1.rcps
new file mode 100644
index 0000000..8c116c9
--- /dev/null
+++ b/recipes/usecases/spp_vf/ssh_login/setup/2_add_ports_path1.rcps
@@ -0,0 +1,18 @@
+# Add ports of path1
+# classifier1
+vf 1; port add phy:0 rx cls1
+vf 1; port add ring:0 tx cls1
+vf 1; port add ring:1 tx cls1
+# forwarders
+vf 1; port add ring:0 rx fwd1
+vf 1; port add vhost:0 tx fwd1
+vf 1; port add ring:1 rx fwd2
+vf 1; port add vhost:2 tx fwd2
+vf 1; port add vhost:0 rx fwd3
+vf 1; port add ring:2 tx fwd3
+vf 1; port add vhost:2 rx fwd4
+vf 1; port add ring:3 tx fwd4
+# merger
+vf 1; port add ring:2 rx mgr1
+vf 1; port add ring:3 rx mgr1
+vf 1; port add phy:0 tx mgr1
diff --git a/recipes/usecases/spp_vf/ssh_login/setup/3-reg_mac_path1.rcps b/recipes/usecases/spp_vf/ssh_login/setup/3-reg_mac_path1.rcps
deleted file mode 100644
index 3365291..0000000
--- a/recipes/usecases/spp_vf/ssh_login/setup/3-reg_mac_path1.rcps
+++ /dev/null
@@ -1,3 +0,0 @@
-# Register MAC address to classifier
-sec 1;classifier_table add mac 52:54:00:12:34:56 ring:0
-sec 1;classifier_table add mac 52:54:00:12:34:58 ring:1
diff --git a/recipes/usecases/spp_vf/ssh_login/setup/3_reg_mac_path1.rcps b/recipes/usecases/spp_vf/ssh_login/setup/3_reg_mac_path1.rcps
new file mode 100644
index 0000000..f98f1bd
--- /dev/null
+++ b/recipes/usecases/spp_vf/ssh_login/setup/3_reg_mac_path1.rcps
@@ -0,0 +1,3 @@
+# Register MAC addresses to mgr1
+vf 1; classifier_table add mac 52:54:00:12:34:56 ring:0
+vf 1; classifier_table add mac 52:54:00:12:34:58 ring:1
diff --git a/recipes/usecases/spp_vf/ssh_login/setup/4-start_components.rcps b/recipes/usecases/spp_vf/ssh_login/setup/4-start_components.rcps
deleted file mode 100644
index 2adc721..0000000
--- a/recipes/usecases/spp_vf/ssh_login/setup/4-start_components.rcps
+++ /dev/null
@@ -1,7 +0,0 @@
-# Start component for path2
-sec 1;component start classifier2 8 classifier_mac
-sec 1;component start forwarder5 9 forward
-sec 1;component start forwarder6 10 forward
-sec 1;component start forwarder7 11 forward
-sec 1;component start forwarder8 12 forward
-sec 1;component start merger2 13 merge
diff --git a/recipes/usecases/spp_vf/ssh_login/setup/4_start_components.rcps b/recipes/usecases/spp_vf/ssh_login/setup/4_start_components.rcps
new file mode 100644
index 0000000..7ce2c0d
--- /dev/null
+++ b/recipes/usecases/spp_vf/ssh_login/setup/4_start_components.rcps
@@ -0,0 +1,7 @@
+# Start component for path2
+vf 1; component start cls2 8 classifier_mac
+vf 1; component start fwd5 9 forward
+vf 1; component start fwd6 10 forward
+vf 1; component start fwd7 11 forward
+vf 1; component start fwd8 12 forward
+vf 1; component start mgr2 13 merge
diff --git a/recipes/usecases/spp_vf/ssh_login/setup/5-add_ports_path2.rcps b/recipes/usecases/spp_vf/ssh_login/setup/5-add_ports_path2.rcps
deleted file mode 100644
index d5334a5..0000000
--- a/recipes/usecases/spp_vf/ssh_login/setup/5-add_ports_path2.rcps
+++ /dev/null
@@ -1,20 +0,0 @@
-# classifier2
-sec 1;port add phy:1 rx classifier2
-sec 1;port add ring:4 tx classifier2
-sec 1;port add ring:5 tx classifier2
-# forwarder5
-sec 1;port add ring:4 rx forwarder5
-sec 1;port add vhost:1 tx forwarder5
-# forwarder6
-sec 1;port add ring:5 rx forwarder6
-sec 1;port add vhost:3 tx forwarder6
-# forwarder7
-sec 1;port add vhost:1 rx forwarder7
-sec 1;port add ring:6 tx forwarder7
-# forwarder8
-sec 1;port add vhost:3 rx forwarder8
-sec 1;port add ring:7 tx forwarder8
-# merger2
-sec 1;port add ring:6 rx merger2
-sec 1;port add ring:7 rx merger2
-sec 1;port add phy:1 tx merger2
diff --git a/recipes/usecases/spp_vf/ssh_login/setup/5_add_ports_path2.rcps b/recipes/usecases/spp_vf/ssh_login/setup/5_add_ports_path2.rcps
new file mode 100644
index 0000000..581bf72
--- /dev/null
+++ b/recipes/usecases/spp_vf/ssh_login/setup/5_add_ports_path2.rcps
@@ -0,0 +1,19 @@
+# classifier
+vf 1; port add phy:1 rx cls2
+vf 1; port add ring:4 tx cls2
+vf 1; port add ring:5 tx cls2
+
+# forwarders
+vf 1; port add ring:4 rx fwd5
+vf 1; port add vhost:1 tx fwd5
+vf 1; port add ring:5 rx fwd6
+vf 1; port add vhost:3 tx fwd6
+vf 1; port add vhost:1 rx fwd7
+vf 1; port add ring:6 tx fwd7
+vf 1; port add vhost:3 rx fwd8
+vf 1; port add ring:7 tx fwd8
+
+# merger
+vf 1; port add ring:6 rx mgr2
+vf 1; port add ring:7 rx mgr2
+vf 1; port add phy:1 tx mgr2
diff --git a/recipes/usecases/spp_vf/ssh_login/setup/6-reg_mac_path2.rcps b/recipes/usecases/spp_vf/ssh_login/setup/6-reg_mac_path2.rcps
deleted file mode 100644
index 9cab6b4..0000000
--- a/recipes/usecases/spp_vf/ssh_login/setup/6-reg_mac_path2.rcps
+++ /dev/null
@@ -1,3 +0,0 @@
-# Register MAC address to classifier
-sec 1;classifier_table add mac 52:54:00:12:34:57 ring:4
-sec 1;classifier_table add mac 52:54:00:12:34:59 ring:5
diff --git a/recipes/usecases/spp_vf/ssh_login/setup/6_reg_mac_path2.rcps b/recipes/usecases/spp_vf/ssh_login/setup/6_reg_mac_path2.rcps
new file mode 100644
index 0000000..e812b79
--- /dev/null
+++ b/recipes/usecases/spp_vf/ssh_login/setup/6_reg_mac_path2.rcps
@@ -0,0 +1,3 @@
+# Register MAC address to classifier
+spp > vf 1; classifier_table add mac 52:54:00:12:34:57 ring:4
+spp > vf 1; classifier_table add mac 52:54:00:12:34:59 ring:5
diff --git a/recipes/usecases/spp_vf/ssh_login/setup/7-flush.rcps b/recipes/usecases/spp_vf/ssh_login/setup/7-flush.rcps
deleted file mode 100644
index 9ea2237..0000000
--- a/recipes/usecases/spp_vf/ssh_login/setup/7-flush.rcps
+++ /dev/null
@@ -1 +0,0 @@
-sec 1;flush
-- 
2.17.1



From spp-request@dpdk.org Mon Jul 01 19:00:01 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd105.ddreams.local
 (zssg-mailmd105.ddreams.local [10.160.123.100])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PTY0153LJSAXR90@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 01 Jul 2019 19:00:10 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd105.ddreams.local by
 zssg-mailmd105.ddreams.local (dDREAMS) id <0PTY00R0GJSABK00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 19:00:10 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd105.ddreams.local
 (dDREAMS) with ESMTP id <0PTY00OXEJSAW300@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 01 Jul 2019 19:00:10 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf104.ddreams.local (Postfix) with ESMTP id AF1507E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 19:00:10 +0900 (JST)
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id ADB828E605A	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 19:00:10 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id A0EB18E6050	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 19:00:10 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf104.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id D03D38E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon,  1 Jul 2019 19:00:09 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf104.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 1 Jul 2019 19:00:09 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x61A09GG022383;	Mon,
 1 Jul 2019 19:00:09 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x61A09IC022382;	Mon, 1 Jul 2019 19:00:09 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x61A098u022379	for unknown; Mon,
 1 Jul 2019 19:00:09 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x61A094O013070 for
 unknown; Mon, 1 Jul 2019 19:00:09 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x61A09N5013067 for
 unknown; Mon, 1 Jul 2019 19:00:09 +0900
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x61A027E008477	for unknown; Mon,
 1 Jul 2019 19:00:08 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 4164B2C38	for <yamashita.hideyuki@po.ntt-tx.co.jp>; Mon,
 1 Jul 2019 12:00:02 +0200 (CEST)
From: spp-request@dpdk.org
Subject: spp Digest, Vol 32, Issue 5
To: spp@dpdk.org
Reply-to: spp@dpdk.org
Date: Mon, 01 Jul 2019 12:00:01 +0200
Message-id: <mailman.1.1561975201.20748.spp@dpdk.org>
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
Content-transfer-encoding: 7bit
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
Precedence: list
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
Errors-to: spp-bounces@dpdk.org
Sender: spp <spp-bounces@dpdk.org>
X-TM-AS-MML: No
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

Send spp mailing list submissions to
	spp@dpdk.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://mails.dpdk.org/listinfo/spp
or, via email, send a message with subject or body 'help' to
	spp-request@dpdk.org

You can reach the person managing the list at
	spp-owner@dpdk.org

When replying, please edit your Subject line so it is more specific
than "Re: Contents of spp digest..."


Today's Topics:

   1. [PATCH 2/2] recipes: update old rcps for spp_vf
      (yasufum.o@gmail.com)


----------------------------------------------------------------------

Message: 1
Date: Mon,  1 Jul 2019 13:12:44 +0900
From: yasufum.o@gmail.com
To: spp@dpdk.org,	ferruh.yigit@intel.com,	yasufum.o@gmail.com
Subject: [spp] [PATCH 2/2] recipes: update old rcps for spp_vf
Message-ID: <20190701041244.34176-3-yasufum.o@gmail.com>

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This patch is to update rcps for spp_vf for the latest documents as
previous patch.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../ssh_login/setup/1-start_components.rcps   |  7 -------
 .../ssh_login/setup/1_start_components.rcps   |  7 +++++++
 .../ssh_login/setup/2-add_ports_path1.rcps    | 20 -------------------
 .../ssh_login/setup/2_add_ports_path1.rcps    | 18 +++++++++++++++++
 .../ssh_login/setup/3-reg_mac_path1.rcps      |  3 ---
 .../ssh_login/setup/3_reg_mac_path1.rcps      |  3 +++
 .../ssh_login/setup/4-start_components.rcps   |  7 -------
 .../ssh_login/setup/4_start_components.rcps   |  7 +++++++
 .../ssh_login/setup/5-add_ports_path2.rcps    | 20 -------------------
 .../ssh_login/setup/5_add_ports_path2.rcps    | 19 ++++++++++++++++++
 .../ssh_login/setup/6-reg_mac_path2.rcps      |  3 ---
 .../ssh_login/setup/6_reg_mac_path2.rcps      |  3 +++
 .../spp_vf/ssh_login/setup/7-flush.rcps       |  1 -
 13 files changed, 57 insertions(+), 61 deletions(-)
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/1-start_components.rcps
 create mode 100644 recipes/usecases/spp_vf/ssh_login/setup/1_start_components.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/2-add_ports_path1.rcps
 create mode 100644 recipes/usecases/spp_vf/ssh_login/setup/2_add_ports_path1.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/3-reg_mac_path1.rcps
 create mode 100644 recipes/usecases/spp_vf/ssh_login/setup/3_reg_mac_path1.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/4-start_components.rcps
 create mode 100644 recipes/usecases/spp_vf/ssh_login/setup/4_start_components.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/5-add_ports_path2.rcps
 create mode 100644 recipes/usecases/spp_vf/ssh_login/setup/5_add_ports_path2.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/6-reg_mac_path2.rcps
 create mode 100644 recipes/usecases/spp_vf/ssh_login/setup/6_reg_mac_path2.rcps
 delete mode 100644 recipes/usecases/spp_vf/ssh_login/setup/7-flush.rcps

diff --git a/recipes/usecases/spp_vf/ssh_login/setup/1-start_components.rcps b/recipes/usecases/spp_vf/ssh_login/setup/1-start_components.rcps
deleted file mode 100644
index 52e2bba..0000000
--- a/recipes/usecases/spp_vf/ssh_login/setup/1-start_components.rcps
+++ /dev/null
@@ -1,7 +0,0 @@
-# Start component for path1
-sec 1;component start classifier1 2 classifier_mac
-sec 1;component start forwarder1 3 forward
-sec 1;component start forwarder2 4 forward
-sec 1;component start forwarder3 5 forward
-sec 1;component start forwarder4 6 forward
-sec 1;component start merger1 7 merge
diff --git a/recipes/usecases/spp_vf/ssh_login/setup/1_start_components.rcps b/recipes/usecases/spp_vf/ssh_login/setup/1_start_components.rcps
new file mode 100644
index 0000000..e864628
--- /dev/null
+++ b/recipes/usecases/spp_vf/ssh_login/setup/1_start_components.rcps
@@ -0,0 +1,7 @@
+# Start component for path1
+vf 1; component start cls1 2 classifier_mac
+vf 1; component start fwd1 3 forward
+vf 1; component start fwd2 4 forward
+vf 1; component start fwd3 5 forward
+vf 1; component start fwd4 6 forward
+vf 1; component start mgr1 7 merge
diff --git a/recipes/usecases/spp_vf/ssh_login/setup/2-add_ports_path1.rcps b/recipes/usecases/spp_vf/ssh_login/setup/2-add_ports_path1.rcps
deleted file mode 100644
index bfb59ba..0000000
--- a/recipes/usecases/spp_vf/ssh_login/setup/2-add_ports_path1.rcps
+++ /dev/null
@@ -1,20 +0,0 @@
-# classifier1
-sec 1;port add phy:0 rx classifier1
-sec 1;port add ring:0 tx classifier1
-sec 1;port add ring:1 tx classifier1
-# forwarder1
-sec 1;port add ring:0 rx forwarder1
-sec 1;port add vhost:0 tx forwarder1
-# forwarder2
-sec 1;port add ring:1 rx forwarder2
-sec 1;port add vhost:2 tx forwarder2
-# forwarder3
-sec 1;port add vhost:0 rx forwarder3
-sec 1;port add ring:2 tx forwarder3
-# forwarder4
-sec 1;port add vhost:2 rx forwarder4
-sec 1;port add ring:3 tx forwarder4
-# merger1
-sec 1;port add ring:2 rx merger1
-sec 1;port add ring:3 rx merger1
-sec 1;port add phy:0 tx merger1
diff --git a/recipes/usecases/spp_vf/ssh_login/setup/2_add_ports_path1.rcps b/recipes/usecases/spp_vf/ssh_login/setup/2_add_ports_path1.rcps
new file mode 100644
index 0000000..8c116c9
--- /dev/null
+++ b/recipes/usecases/spp_vf/ssh_login/setup/2_add_ports_path1.rcps
@@ -0,0 +1,18 @@
+# Add ports of path1
+# classifier1
+vf 1; port add phy:0 rx cls1
+vf 1; port add ring:0 tx cls1
+vf 1; port add ring:1 tx cls1
+# forwarders
+vf 1; port add ring:0 rx fwd1
+vf 1; port add vhost:0 tx fwd1
+vf 1; port add ring:1 rx fwd2
+vf 1; port add vhost:2 tx fwd2
+vf 1; port add vhost:0 rx fwd3
+vf 1; port add ring:2 tx fwd3
+vf 1; port add vhost:2 rx fwd4
+vf 1; port add ring:3 tx fwd4
+# merger
+vf 1; port add ring:2 rx mgr1
+vf 1; port add ring:3 rx mgr1
+vf 1; port add phy:0 tx mgr1
diff --git a/recipes/usecases/spp_vf/ssh_login/setup/3-reg_mac_path1.rcps b/recipes/usecases/spp_vf/ssh_login/setup/3-reg_mac_path1.rcps
deleted file mode 100644
index 3365291..0000000
--- a/recipes/usecases/spp_vf/ssh_login/setup/3-reg_mac_path1.rcps
+++ /dev/null
@@ -1,3 +0,0 @@
-# Register MAC address to classifier
-sec 1;classifier_table add mac 52:54:00:12:34:56 ring:0
-sec 1;classifier_table add mac 52:54:00:12:34:58 ring:1
diff --git a/recipes/usecases/spp_vf/ssh_login/setup/3_reg_mac_path1.rcps b/recipes/usecases/spp_vf/ssh_login/setup/3_reg_mac_path1.rcps
new file mode 100644
index 0000000..f98f1bd
--- /dev/null
+++ b/recipes/usecases/spp_vf/ssh_login/setup/3_reg_mac_path1.rcps
@@ -0,0 +1,3 @@
+# Register MAC addresses to mgr1
+vf 1; classifier_table add mac 52:54:00:12:34:56 ring:0
+vf 1; classifier_table add mac 52:54:00:12:34:58 ring:1
diff --git a/recipes/usecases/spp_vf/ssh_login/setup/4-start_components.rcps b/recipes/usecases/spp_vf/ssh_login/setup/4-start_components.rcps
deleted file mode 100644
index 2adc721..0000000
--- a/recipes/usecases/spp_vf/ssh_login/setup/4-start_components.rcps
+++ /dev/null
@@ -1,7 +0,0 @@
-# Start component for path2
-sec 1;component start classifier2 8 classifier_mac
-sec 1;component start forwarder5 9 forward
-sec 1;component start forwarder6 10 forward
-sec 1;component start forwarder7 11 forward
-sec 1;component start forwarder8 12 forward
-sec 1;component start merger2 13 merge
diff --git a/recipes/usecases/spp_vf/ssh_login/setup/4_start_components.rcps b/recipes/usecases/spp_vf/ssh_login/setup/4_start_components.rcps
new file mode 100644
index 0000000..7ce2c0d
--- /dev/null
+++ b/recipes/usecases/spp_vf/ssh_login/setup/4_start_components.rcps
@@ -0,0 +1,7 @@
+# Start component for path2
+vf 1; component start cls2 8 classifier_mac
+vf 1; component start fwd5 9 forward
+vf 1; component start fwd6 10 forward
+vf 1; component start fwd7 11 forward
+vf 1; component start fwd8 12 forward
+vf 1; component start mgr2 13 merge
diff --git a/recipes/usecases/spp_vf/ssh_login/setup/5-add_ports_path2.rcps b/recipes/usecases/spp_vf/ssh_login/setup/5-add_ports_path2.rcps
deleted file mode 100644
index d5334a5..0000000
--- a/recipes/usecases/spp_vf/ssh_login/setup/5-add_ports_path2.rcps
+++ /dev/null
@@ -1,20 +0,0 @@
-# classifier2
-sec 1;port add phy:1 rx classifier2
-sec 1;port add ring:4 tx classifier2
-sec 1;port add ring:5 tx classifier2
-# forwarder5
-sec 1;port add ring:4 rx forwarder5
-sec 1;port add vhost:1 tx forwarder5
-# forwarder6
-sec 1;port add ring:5 rx forwarder6
-sec 1;port add vhost:3 tx forwarder6
-# forwarder7
-sec 1;port add vhost:1 rx forwarder7
-sec 1;port add ring:6 tx forwarder7
-# forwarder8
-sec 1;port add vhost:3 rx forwarder8
-sec 1;port add ring:7 tx forwarder8
-# merger2
-sec 1;port add ring:6 rx merger2
-sec 1;port add ring:7 rx merger2
-sec 1;port add phy:1 tx merger2
diff --git a/recipes/usecases/spp_vf/ssh_login/setup/5_add_ports_path2.rcps b/recipes/usecases/spp_vf/ssh_login/setup/5_add_ports_path2.rcps
new file mode 100644
index 0000000..581bf72
--- /dev/null
+++ b/recipes/usecases/spp_vf/ssh_login/setup/5_add_ports_path2.rcps
@@ -0,0 +1,19 @@
+# classifier
+vf 1; port add phy:1 rx cls2
+vf 1; port add ring:4 tx cls2
+vf 1; port add ring:5 tx cls2
+
+# forwarders
+vf 1; port add ring:4 rx fwd5
+vf 1; port add vhost:1 tx fwd5
+vf 1; port add ring:5 rx fwd6
+vf 1; port add vhost:3 tx fwd6
+vf 1; port add vhost:1 rx fwd7
+vf 1; port add ring:6 tx fwd7
+vf 1; port add vhost:3 rx fwd8
+vf 1; port add ring:7 tx fwd8
+
+# merger
+vf 1; port add ring:6 rx mgr2
+vf 1; port add ring:7 rx mgr2
+vf 1; port add phy:1 tx mgr2
diff --git a/recipes/usecases/spp_vf/ssh_login/setup/6-reg_mac_path2.rcps b/recipes/usecases/spp_vf/ssh_login/setup/6-reg_mac_path2.rcps
deleted file mode 100644
index 9cab6b4..0000000
--- a/recipes/usecases/spp_vf/ssh_login/setup/6-reg_mac_path2.rcps
+++ /dev/null
@@ -1,3 +0,0 @@
-# Register MAC address to classifier
-sec 1;classifier_table add mac 52:54:00:12:34:57 ring:4
-sec 1;classifier_table add mac 52:54:00:12:34:59 ring:5
diff --git a/recipes/usecases/spp_vf/ssh_login/setup/6_reg_mac_path2.rcps b/recipes/usecases/spp_vf/ssh_login/setup/6_reg_mac_path2.rcps
new file mode 100644
index 0000000..e812b79
--- /dev/null
+++ b/recipes/usecases/spp_vf/ssh_login/setup/6_reg_mac_path2.rcps
@@ -0,0 +1,3 @@
+# Register MAC address to classifier
+spp > vf 1; classifier_table add mac 52:54:00:12:34:57 ring:4
+spp > vf 1; classifier_table add mac 52:54:00:12:34:59 ring:5
diff --git a/recipes/usecases/spp_vf/ssh_login/setup/7-flush.rcps b/recipes/usecases/spp_vf/ssh_login/setup/7-flush.rcps
deleted file mode 100644
index 9ea2237..0000000
--- a/recipes/usecases/spp_vf/ssh_login/setup/7-flush.rcps
+++ /dev/null
@@ -1 +0,0 @@
-sec 1;flush
-- 
2.17.1



End of spp Digest, Vol 32, Issue 5
**********************************


From yasufum.o@gmail.com Wed Jul 03 11:24:58 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd106.ddreams.local
 (zssg-mailmd106.ddreams.local [10.160.123.101])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PU1002MOO29Q790@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Wed, 03 Jul 2019 11:25:21 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd106.ddreams.local by
 zssg-mailmd106.ddreams.local (dDREAMS) id <0PU101036O291700@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 03 Jul 2019 11:25:21 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd106.ddreams.local
 (dDREAMS) with ESMTP id <0PU100L75O298Y90@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 03 Jul 2019 11:25:21 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf102.ddreams.local (Postfix) with ESMTP id 7BDE27E603B	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed,  3 Jul 2019 11:25:21 +0900 (JST)
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 7ACA58E6050	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed,  3 Jul 2019 11:25:21 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 793EA8E6058	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 3 Jul 2019 11:25:21 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf102.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 62CCE8E6052	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed,  3 Jul 2019 11:25:20 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf102.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 3 Jul 2019 11:25:20 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x632PKvI025429;	Wed,
 3 Jul 2019 11:25:20 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x632PKhd025428;	Wed, 3 Jul 2019 11:25:20 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x632PKpU025425	for unknown; Wed,
 3 Jul 2019 11:25:20 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x632PJ11019548 for
 unknown; Wed, 3 Jul 2019 11:25:19 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x632PJHQ019541; Wed,
 3 Jul 2019 11:25:19 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x632PJ9E008868;	Wed,
 3 Jul 2019 11:25:19 +0900
Received: from imss01.silk.ntt-tx.co.jp
 (imss01.silk.ntt-tx.co.jp [10.107.0.126])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x632PJtR008864	for unknown; Wed, 3 Jul 2019 11:25:19 +0900
Received: from imss01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x632PJo3015550 for
 unknown; Wed, 3 Jul 2019 11:25:19 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x632PJfo015544 for
 unknown; Wed, 3 Jul 2019 11:25:19 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x632PC9j012186	for unknown; Wed,
 3 Jul 2019 11:25:18 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id 8E2961B970;	Wed,  3 Jul 2019 04:25:11 +0200 (CEST)
Received: from mail-pg1-f170.google.com
 (mail-pg1-f170.google.com [209.85.215.170]) by dpdk.org (Postfix)
 with ESMTP id 9CC4F1B94F for <spp@dpdk.org>; Wed,
 3 Jul 2019 04:25:10 +0200 (CEST)
Received: by mail-pg1-f170.google.com with SMTP id 196so357872pgc.6 for
 <spp@dpdk.org>; Tue, 02 Jul 2019 19:25:10 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id o130sm416096pfg.171.2019.07.02.19.25.07
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Tue,
 02 Jul 2019 19:25:08 -0700 (PDT)
Date: Wed, 03 Jul 2019 11:24:58 +0900
From: yasufum.o@gmail.com
Subject: [spp 04470] [spp] [PATCH 0/3] Update docs of implementation of SPP
 secondaries
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190703022501.23738-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04470
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id;
 bh=7hkpy/+jUVRJ4otvxkpHHUx+u1OH9t11Wozsue7jX8Q=;
 b=kmbPurm2MfPI48MR3vpvs2cNclbcIdcWENyDZ6FzBQedH/+JpxMGWx9ZprdRiUx5wd
 l8Cdb2nXp2lBqrZvsTUqSg8yY4A0957uO7bLM8iMKZZBdeVyJUQlkEXn3itmW7+zTlNQ
 8cqIJoqmdD8AawjzuOJcfnZg3ZR5oNZ9EII0sokJSWFoKLgtt2hWSOtH7rYwDKGwqRUr
 7tWRxjgTcVAVhBR5xWqw5z+PDwVZWtqTEVx4xHl2MkljYkGrdiD7GrK3CDwylx4S+RYF
 YMIBJB0AiKame9f6pGuwC5NBvJDqVFxo2lsUMNKP/Jsa83fRuPUlC1kr1IIQJT0SY+ln XhdQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id;
 bh=7hkpy/+jUVRJ4otvxkpHHUx+u1OH9t11Wozsue7jX8Q=;
 b=W0c85LxBocCSNWw6mSg/A3PVUIyHYl1O1sMFfeAw7fglzrOuPtfH96i7JyWUQeNAK8
 mx/otNHGq8Zw14KQNhpvwdSvVh2w0eFMEy3a8d17bmPQ/1WMEDr4dO1lPvpY/49maq21
 CgjLuIAvIiruixIz2tTNdqFqbbWU6tLqBV8IWd9Fy3gOeztSNZnAxo1A+NUsqG+njsZ5
 lguW+adljERN+zZVMo7GdcJrVOUa++UiYAn2V7uGvJedIpxEwZLDZ9lofyH08Q+fAJRa
 iDHxlExcVqcl4SNVc+FlfqFsNjHJDyJWpHce3IYAl2rHOLbNzk+9y9OjkU8CLbQiB0z8 H+SA==
X-Gm-Message-State: APjAAAXSmKW3CacOyRIbZfSvuRoi7MvZvy1HZecVMZmsU9N7VfVieCi+
 4YVE3C0jkU4p7vDDSV8znhHnxutv
X-Google-Smtp-Source:
 APXvYqwOf5UN7gA0RcTbVFihwn2PJvg5kHDAts6/bVvnPZIjusu12hyqSf8pm00W0dcCkWIIoeG9Dw==
X-Received: by 2002:a63:5463:: with SMTP id e35mr9923930pgm.451.1562120709415;
 Tue, 02 Jul 2019 19:25:09 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 21
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

For refactoring of SPP worker processes in previous patches, source
code examples in implementation section should also be updated.
This series of patches is for updating the examples and revising
descriptions for topics.

Yasufumi Ogawa (3):
  docs: update implementation of spp_vf
  docs: update implementation of spp_mirror
  docs: update implementation of spp_pcap

 docs/guides/api_ref/proc_independ.rst  |  11 +-
 docs/guides/design/impl/spp_mirror.rst |  85 ++---
 docs/guides/design/impl/spp_pcap.rst   | 156 +++------
 docs/guides/design/impl/spp_vf.rst     | 438 ++++++++-----------------
 4 files changed, 212 insertions(+), 478 deletions(-)

-- 
2.17.1



From yasufum.o@gmail.com Wed Jul 03 11:24:59 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd106.ddreams.local
 (zssg-mailmd106.ddreams.local [10.160.123.101])
 by zssg-mailms320.ddreams.local (NTT DoCoMo Mail System)
 with ESMTP id <0PU1002NWO2BQ790@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Wed, 03 Jul 2019 11:25:23 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd106.ddreams.local by
 zssg-mailmd106.ddreams.local (dDREAMS) id <0PU10101EO2BBQ00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 03 Jul 2019 11:25:23 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd106.ddreams.local
 (dDREAMS) with ESMTP id <0PU100L9BO2B8Y90@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 03 Jul 2019 11:25:23 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf105.ddreams.local (Postfix) with ESMTP id 38B127E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed,  3 Jul 2019 11:25:23 +0900 (JST)
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 3704B8E6060	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed,  3 Jul 2019 11:25:23 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 2B1398E605A	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 3 Jul 2019 11:25:23 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf105.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 108A88E605D	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed,  3 Jul 2019 11:25:22 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf105.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 3 Jul 2019 11:25:22 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x632PL6f025484;	Wed,
 3 Jul 2019 11:25:21 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x632PLiT025483;	Wed, 3 Jul 2019 11:25:21 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x632PLXK025477	for unknown; Wed,
 3 Jul 2019 11:25:21 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x632PLaN019591 for
 unknown; Wed, 3 Jul 2019 11:25:21 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x632PLR0019587; Wed,
 3 Jul 2019 11:25:21 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x632PLeO008882;	Wed,
 3 Jul 2019 11:25:21 +0900
Received: from imss01.silk.ntt-tx.co.jp
 (imss01.silk.ntt-tx.co.jp [10.107.0.126])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x632PLoq008878	for unknown; Wed, 3 Jul 2019 11:25:21 +0900
Received: from imss01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x632PK7V015570 for
 unknown; Wed, 3 Jul 2019 11:25:20 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x632PKGl015567 for
 unknown; Wed, 3 Jul 2019 11:25:20 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x632PENo012196	for unknown; Wed,
 3 Jul 2019 11:25:20 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id A67EA1B9E7;	Wed,  3 Jul 2019 04:25:13 +0200 (CEST)
Received: from mail-pl1-f193.google.com
 (mail-pl1-f193.google.com [209.85.214.193]) by dpdk.org (Postfix)
 with ESMTP id 25AA41B994 for <spp@dpdk.org>; Wed,
 3 Jul 2019 04:25:12 +0200 (CEST)
Received: by mail-pl1-f193.google.com with SMTP id bh12so330846plb.4 for
 <spp@dpdk.org>; Tue, 02 Jul 2019 19:25:12 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id o130sm416096pfg.171.2019.07.02.19.25.09
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Tue,
 02 Jul 2019 19:25:10 -0700 (PDT)
Date: Wed, 03 Jul 2019 11:24:59 +0900
From: yasufum.o@gmail.com
Subject: [spp 04471] [spp] [PATCH 1/3] docs: update implementation of spp_vf
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190703022501.23738-2-yasufum.o@gmail.com>
In-reply-to: <20190703022501.23738-1-yasufum.o@gmail.com>
References: <20190703022501.23738-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04471
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=pmr+3SAo4iTe81WNpwoAoImURmHWNqx2Xx0KYv4f930=;
 b=Lb7YOlbOByW10mhTB4jLOmKAWptH7ml+M0UM7NK1YIQqjH4GtMn1BB74BATcvRaTJx
 myPIEva3Sbj+BRSjenIQb2HlUrox+DdUYWV3VyQSrOonWjDleQFTwdz8SNciP81BEsKo
 RSJaVuSRhEmun9fNE8PeoZ3SiTvkJ4cmCduJP1VOBLuPCUNkML4gb9E123XsXV2gZPHf
 K0dw1Sq2CR3dAczz/A2u5rl4sIClgyQFZu+Scxvs2n9xET8oeRK8nj6QcwCDOlGX/NL5
 Qgme4cS9V4NFgatd7NFTjyXo7yUdMRmELabapK+eN4b5wO3nqwZggGa8+aLtJDqsb7zn c1ZQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=pmr+3SAo4iTe81WNpwoAoImURmHWNqx2Xx0KYv4f930=;
 b=AxdXCKpvP68bLX2rvUORyjCrF9VhJC6InvN/qCjPZq4Z140FPi00IWELGGAB6ZM3fl
 8JntRtwBj8QtOsXY3yM3llb5Gd9c6aIxSc7zVfma1mDRjYFfxrBLDE/5A8aZLbfqfzAM
 XmKA1kma+wj1xDvKybnWxoyIQjRdefFF2TlT/UqbZv6FCT96dij2AN+auX0gTt9QcnkV
 Mibzy75gRIiqJczRNpf4e5GGyZxHxn1fDOdNir9cPpqkIGjYDhH+rKPPLvy2/KLa+PVD
 hXt9jJxq6GhGTAnGeh1arUZT2Sh/+54pMIxAPMdEDTyj1AAECZnr0G6EaTPQolQT5xAu GmyA==
X-Gm-Message-State: APjAAAVJCnIa8bEtByqu8oOSNFigVFo7MI05IsyXyIme5WqJRSZOsLGZ
 usoKLHHyVzOML0wh5egCWSAqHFRs
X-Google-Smtp-Source:
 APXvYqx5KuPnJ7NAWPuNJgRaL5jQ4Bi9kJtDlhud6TN8k15FPD8iFMOfss343ybewPS6LBDzQw3zdg==
X-Received: by 2002:a17:902:2889:: with SMTP id
 f9mr36984848plb.230.1562120711073; Tue, 02 Jul 2019 19:25:11 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 597
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to update description and examples of spp_vf because
of previous updates for.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 docs/guides/api_ref/proc_independ.rst |  11 +-
 docs/guides/design/impl/spp_vf.rst    | 438 ++++++++------------------
 2 files changed, 140 insertions(+), 309 deletions(-)

diff --git a/docs/guides/api_ref/proc_independ.rst b/docs/guides/api_ref/proc_independ.rst
index c6180fa..8d4b830 100644
--- a/docs/guides/api_ref/proc_independ.rst
+++ b/docs/guides/api_ref/proc_independ.rst
@@ -100,7 +100,7 @@ logical cores if hyper threading is enabled.
     +-------+-----------------------+
 
 
-.. _table_spp_ctl_cpu_layout:
+.. _table_spp_ctl_cpu_layout_params:
 
 .. table:: Response params of getting CPU layout.
 
@@ -144,11 +144,14 @@ Response
             "core_id": 0,
             "lcores": [0, 1]
           },
-          ...
           {
             "core_id": 2,
             "lcores": [4, 5]
           }
+          {
+            "core_id": 3,
+            "lcores": [6, 7]
+          }
         ],
         "socket_id": 0
       }
@@ -167,7 +170,7 @@ Response
 An array of CPU usage of each of SPP processes. This usage consists of
 two params, master lcore and lcore set including master and slaves.
 
-.. _table_spp_ctl_cpu_layout_codes:
+.. _table_spp_ctl_cpu_usage_codes:
 
 .. table:: Response code of CPU layout.
 
@@ -179,7 +182,7 @@ two params, master lcore and lcore set including master and slaves.
     +-------+-----------------------+
 
 
-.. _table_spp_ctl_cpu_layout:
+.. _table_spp_ctl_cpu_usage_params:
 
 .. table:: Response params of getting CPU layout.
 
diff --git a/docs/guides/design/impl/spp_vf.rst b/docs/guides/design/impl/spp_vf.rst
index 76e4a4c..ed5dc27 100644
--- a/docs/guides/design/impl/spp_vf.rst
+++ b/docs/guides/design/impl/spp_vf.rst
@@ -6,21 +6,34 @@
 spp_vf
 ======
 
-The following sections provide some explanation of the code.
+This section describes implementation of key features of ``spp_vf``.
 
-Initializing
-------------
+``spp_vf`` consists of master thread and several worker threads,
+``forwarder``, ``classifier`` or ``merger``, as slaves.
+For classifying packets, ``spp_vf`` has a worker thread named ``classifier``
+and a table for registering MAC address entries.
 
-A manager thread of ``spp_vf`` initialize eal by ``rte_eal_init()``.
-Then each of component threads are launched by
-``rte_eal_remote_launch()``.
 
+Initialization
+--------------
+
+In master thread, data of classifier and VLAN features are initialized
+after ``rte_eal_init()`` is called.
+Port capability is a set of data for describing VLAN features.
+Then, each of worker threads are launched with ``rte_eal_remote_launch()``
+on assigned lcores..
 
 .. code-block:: c
 
     /* spp_vf.c */
+
     int ret_dpdk = rte_eal_init(argc, argv);
 
+    int ret_classifier_mac_init = spp_classifier_mac_init();
+
+    init_forwarder();
+    sppwk_port_capability_init();
+
     /* Start worker threads of classifier and forwarder */
     unsigned int lcore_id = 0;
     RTE_LCORE_FOREACH_SLAVE(lcore_id) {
@@ -28,260 +41,118 @@ Then each of component threads are launched by
     }
 
 
-Main function of slave thread
------------------------------
+Slave Main
+----------
 
-``slave_main()`` is called from ``rte_eal_remote_launch()``.
-It call ``spp_classifier_mac_do()`` or ``spp_forward()`` depending
-on the component command setting.
-``spp_classifier_mac_do()`` provides function for classifier,
-and ``spp_forward()`` provides forwarder and merger.
+Main function of worker thread is defined as ``slave_main()`` which is called
+from ``rte_eal_remote_launch()``.
+Behavior of worker thread is decided in while loop in this function.
+If lcore status is not ``SPPWK_LCORE_RUNNING``, worker thread does nothing.
+On the other hand, it does packet forwarding with or without classifying.
+It classifies incoming packets if component type is ``SPPWK_TYPE_CLS``,
+or simply forwards packets.
 
 .. code-block:: c
 
     /* spp_vf.c */
-    RTE_LOG(INFO, APP, "Core[%d] Start.\n", lcore_id);
-    set_core_status(lcore_id, SPP_CORE_IDLE);
 
     while ((status = spp_get_core_status(lcore_id)) !=
-            SPP_CORE_STOP_REQUEST) {
-            if (status != SPP_CORE_FORWARD)
-                    continue;
-
-            if (spp_check_core_index(lcore_id)) {
-                    /* Setting with the flush command trigger. */
-                    info->ref_index = (info->upd_index+1) %
-                            SPP_INFO_AREA_MAX;
-                    core = get_core_info(lcore_id);
-            }
-
-            for (cnt = 0; cnt < core->num; cnt++) {
-                    if (spp_get_component_type(lcore_id) ==
-                                    SPP_COMPONENT_CLASSIFIER_MAC) {
-                            /* Classifier loops inside the function. */
-                            ret = spp_classifier_mac_do(core->id[cnt]);
-                            break;
-                    }
-
-                    /*
-                     * Forward / Merge returns at once.
-                     * It is for processing multiple components.
-                     */
-                    ret = spp_forward(core->id[cnt]);
-                    if (unlikely(ret != 0))
-                            break;
-            }
-            if (unlikely(ret != 0)) {
-                    RTE_LOG(ERR, APP,
-                            "Core[%d] Component Error. (id = %d)\n",
-                            lcore_id, core->id[cnt]);
+        SPPWK_LCORE_REQ_STOP) {
+    	if (status != SPPWK_LCORE_RUNNING)
+    	    continue;
+
+        // skipping lines ...
+
+        /* It is for processing multiple components. */
+        for (cnt = 0; cnt < core->num; cnt++) {
+        /* Component classification to call a function. */
+        if (spp_get_component_type(core->id[cnt]) ==
+            SPPWK_TYPE_CLS) {
+           	/* Component type for classifier. */
+           	ret = spp_classifier_mac_do(core->id[cnt]);
+           	if (unlikely(ret != 0))
+            break;
+        } else {
+            /* Component type for forward or merge. */
+                ret = forward_packets(core->id[cnt]);
+                if (unlikely(ret != 0))
                     break;
             }
-    }
-
-    set_core_status(lcore_id, SPP_CORE_STOP);
-    RTE_LOG(INFO, APP, "Core[%d] End.\n", lcore_id);
-
-Data structure of classifier table
-----------------------------------
-
-``spp_classifier_mac_do()`` lookup following data defined in
-``classifier_mac.c``,
-when it process the packets.
-Configuration of classifier is stored in the structure of
-``classified_data``, ``classifier_mac_info`` and
-``classifier_mac_mng_info``.
-The ``classified_data`` has member variables for expressing the port
-to be classified, ``classifier_mac_info`` has member variables
-for determining the direction of packets such as hash tables.
-Classifier manages two ``classifier_mac_info``, one is for updating by
-commands, the other is for looking up to process packets.
-Then the ``classifier_mac_mng_info`` has
-two(``NUM_CLASSIFIER_MAC_INFO``) ``classifier_mac_info``
-and index number for updating or reference.
-
-.. code-block:: c
+        }
 
-    /* classifier_mac.c */
-    /* classified data (destination port, target packets, etc) */
-    struct classified_data {
-            /* interface type (see "enum port_type") */
-            enum port_type  iface_type;
 
-            /* index of ports handled by classifier */
-            int             iface_no;
+Data structure of classifier
+----------------------------
 
-            /* id for interface generated by spp_vf */
-            int             iface_no_global;
+Classifier has a set of attributes for classification as
+struct ``mac_classifier``, which consists of a table of MAC addresses,
+number of classifying ports, indices of ports
+and default index of port.
+Clasifier table is implemented as hash of struct ``rte_hash``.
 
-            /* port id generated by DPDK */
-            uint16_t        port;
+.. code-block:: c
 
-            /* the number of packets in pkts[] */
-            uint16_t        num_pkt;
+    /* shared/secondary/spp_worker_th/vf_deps.h */
 
-            /* packet array to be classified */
-            struct rte_mbuf *pkts[MAX_PKT_BURST];
+    /* Classifier for MAC addresses. */
+    struct mac_classifier {
+        struct rte_hash *cls_tbl;  /* Hash table for MAC classification. */
+        int nof_cls_ports;  /* Num of ports classified validly. */
+        int cls_ports[RTE_MAX_ETHPORTS];  /* Ports for classification. */
+        int default_cls_idx;  /* Default index for classification. */
     };
 
-    /* classifier information */
-    struct classifier_mac_info {
-            /* component name */
-            char name[SPP_NAME_STR_LEN];
-
-            /* hash table keeps classifier_table */
-            struct rte_hash *classifier_table;
-
-            /* number of valid classification */
-            int num_active_classified;
-
-            /* index of valid classification */
-            int active_classifieds[RTE_MAX_ETHPORTS];
+Classifier itself is defined as a struct ``cls_comp_info``.
+There are several attributes in this struct including ``mac_classifier``
+or ``cls_port_info`` or so.
+``cls_port_info`` is for defining a set of attributes of ports, such as
+interface type, device ID or packet data.
 
-            /* index of default classification */
-            int default_classified;
-
-            /* number of transmission ports */
-            int n_classified_data_tx;
-
-            /* receive port handled by classifier */
-            struct classified_data classified_data_rx;
+.. code-block:: c
 
-            /* transmission ports handled by classifier */
-            struct classified_data classified_data_tx[RTE_MAX_ETHPORTS];
+    /* shared/secondary/spp_worker_th/vf_deps.h */
+
+    /* classifier component information */
+    struct cls_comp_info {
+        char name[STR_LEN_NAME];  /* component name */
+        int mac_addr_entry;  /* mac address entry flag */
+        struct mac_classifier *mac_clfs[NOF_VLAN];  /* classifiers per VLAN. */
+        int nof_tx_ports;  /* Number of TX ports info entries. */
+        /* Classifier has one RX port and several TX ports. */
+        struct cls_port_info rx_port_i;  /* RX port info classified. */
+        struct cls_port_info tx_ports_i[RTE_MAX_ETHPORTS];  /* TX info. */
     };
 
-    /* classifier management information */
-    struct classifier_mac_mng_info {
-            /* classifier information */
-            struct classifier_mac_info info[NUM_CLASSIFIER_MAC_INFO];
-
-            /* Reference index number for classifier information */
-            volatile int ref_index;
-
-            /* Update index number for classifier information */
-            volatile int upd_index;
+    /* Attirbutes of port for classification. */
+    struct cls_port_info {
+        enum port_type iface_type;
+        int iface_no;   /* Index of ports handled by classifier. */
+        int iface_no_global;  /* ID for interface generated by spp_vf */
+        uint16_t ethdev_port_id;  /* Ethdev port ID. */
+        uint16_t nof_pkts;  /* Number of packets in pkts[]. */
+        struct rte_mbuf *pkts[MAX_PKT_BURST];  /* packets to be classified. */
     };
 
 
-Packet processing in classifier
--------------------------------
+Classifying the packet
+----------------------
 
-In ``spp_classifier_mac_do()``, it receives packets from rx port and
-send them to destinations with ``classify_packet()``.
-``classifier_info`` is an argument of ``classify_packet()`` and is used
-to decide the destinations.
+If component type is ``SPPWK_TYPE_CLS``, worker thread behaves as a classifier,
+so component calls ``spp_classifier_mac_do()``. In this function, packets
+from RX port are received with ``sppwk_eth_vlan_rx_burst()`` which is derived
+from ``rte_eth_rx_burst()`` for adding or deleting VLAN tags.
+Received packets are classified with ``classify_packet()``.
 
 .. code-block:: c
 
     /* classifier_mac.c */
-        while (likely(spp_get_core_status(lcore_id) == SPP_CORE_FORWARD) &&
-                        likely(spp_check_core_index(lcore_id) == 0)) {
-                /* change index of update side */
-                change_update_index(classifier_mng_info, id);
-
-                /* decide classifier information of the current cycle */
-                classifier_info = classifier_mng_info->info +
-                                classifier_mng_info->ref_index;
-                classified_data_rx = &classifier_info->classified_data_rx;
-                classified_data_tx = classifier_info->classified_data_tx;
-
-                /* drain tx packets, if buffer is not filled for interval */
-                cur_tsc = rte_rdtsc();
-                if (unlikely(cur_tsc - prev_tsc > drain_tsc)) {
-                        for (i = 0; i < classifier_info->n_classified_data_tx;
-                                        i++) {
-                                if (likely(classified_data_tx[i].num_pkt == 0))
-                                        continue;
-
-                                RTE_LOG(DEBUG, SPP_CLASSIFIER_MAC,
-                                                "transmit packets (drain). "
-                                                "index=%d, "
-                                                "num_pkt=%hu, "
-                                                "interval=%lu\n",
-                                                i,
-                                                classified_data_tx[i].num_pkt,
-                                                cur_tsc - prev_tsc);
-                                transmit_packet(&classified_data_tx[i]);
-                        }
-                        prev_tsc = cur_tsc;
-                }
-
-                if (classified_data_rx->iface_type == UNDEF)
-                        continue;
-
-                /* retrieve packets */
-                n_rx = rte_eth_rx_burst(classified_data_rx->port, 0,
-                                rx_pkts, MAX_PKT_BURST);
-                if (unlikely(n_rx == 0))
-                        continue;
-
-    #ifdef SPP_RINGLATENCYSTATS_ENABLE
-                    if (classified_data_rx->iface_type == RING)
-                            spp_ringlatencystats_calculate_latency(
-                                            classified_data_rx->iface_no,
-                                            rx_pkts, n_rx);
-    #endif
-
-                /* classify and transmit (filled) */
-                classify_packet(rx_pkts, n_rx, classifier_info,
-                                classified_data_tx);
-        }
-
-Classifying the packets
------------------------
 
-``classify_packet()`` uses hash function of DPDK to determine
-destination.
-Hash has MAC address as Key, it retrieves destination information
-from destination MAC address in the packet.
+    n_rx = sppwk_eth_vlan_rx_burst(clsd_data_rx->ethdev_port_id, 0,
+        rx_pkts, MAX_PKT_BURST);
 
-.. code-block:: c
+    // skipping lines ...
 
-    for (i = 0; i < n_rx; i++) {
-            eth = rte_pktmbuf_mtod(rx_pkts[i], struct ether_hdr *);
-
-            /* find in table (by destination mac address)*/
-            ret = rte_hash_lookup_data(classifier_info->classifier_table,
-                            (const void *)&eth->d_addr, &lookup_data);
-            if (ret < 0) {
-                    /* L2 multicast(include broadcast) ? */
-                    if (unlikely(is_multicast_ether_addr(&eth->d_addr))) {
-                            RTE_LOG(DEBUG, SPP_CLASSIFIER_MAC,
-                                            "multicast mac address.\n");
-                            handle_l2multicast_packet(rx_pkts[i],
-                                            classifier_info,
-                                            classified_data);
-                            continue;
-                    }
-
-                    /* if no default, drop packet */
-                    if (unlikely(classifier_info->default_classified ==
-                                    -1)) {
-                            ether_format_addr(mac_addr_str,
-                                            sizeof(mac_addr_str),
-                                            &eth->d_addr);
-                            RTE_LOG(ERR, SPP_CLASSIFIER_MAC,
-                                            "unknown mac address. "
-                                            "ret=%d, mac_addr=%s\n",
-                                            ret, mac_addr_str);
-                            rte_pktmbuf_free(rx_pkts[i]);
-                            continue;
-                    }
-
-                    /* to default classified */
-                    RTE_LOG(DEBUG, SPP_CLASSIFIER_MAC,
-                                    "to default classified.\n");
-                    lookup_data = (void *)(long)classifier_info->
-                                    default_classified;
-            }
-
-            /*
-             * set mbuf pointer to tx buffer
-             * and transmit packet, if buffer is filled
-             */
-            push_packet(rx_pkts[i], classified_data + (long)lookup_data);
-    }
+    classify_packet(rx_pkts, n_rx, cmp_info, clsd_data_tx);
 
 
 Packet processing in forwarder and merger
@@ -325,78 +196,34 @@ packets.
     };
 
 
-Forward and merge the packets
------------------------------
-
-``spp_forward()`` defined in ``spp_forward.c`` is a main function
-for both forwarder and merger.
-``spp_forward()`` simply passes packet received from rx port to
-tx port of the pair.
-
-.. code-block:: c
-
-    /* spp_forward.c */
-            for (cnt = 0; cnt < num; cnt++) {
-                    rx = &path->ports[cnt].rx;
-                    tx = &path->ports[cnt].tx;
-
-                    /* Receive packets */
-                    nb_rx = rte_eth_rx_burst(
-                            rx->dpdk_port, 0, bufs, MAX_PKT_BURST);
-                    if (unlikely(nb_rx == 0))
-                            continue;
-
-    #ifdef SPP_RINGLATENCYSTATS_ENABLE
-                    if (rx->iface_type == RING)
-                            spp_ringlatencystats_calculate_latency(
-                                            rx->iface_no,
-                                            bufs, nb_rx);
-
-                    if (tx->iface_type == RING)
-                            spp_ringlatencystats_add_time_stamp(
-                                            tx->iface_no,
-                                            bufs, nb_rx);
-    #endif /* SPP_RINGLATENCYSTATS_ENABLE */
-
-                    /* Send packets */
-                    if (tx->dpdk_port >= 0)
-                            nb_tx = rte_eth_tx_burst(
-                                    tx->dpdk_port, 0, bufs, nb_rx);
-
-                    /* Discard remained packets to release mbuf */
-                    if (unlikely(nb_tx < nb_rx)) {
-                            for (buf = nb_tx; buf < nb_rx; buf++)
-                                    rte_pktmbuf_free(bufs[buf]);
-                    }
-            }
-
-
 L2 Multicast Support
 --------------------
 
-SPP_VF also supports multicast for resolving ARP requests.
+``spp_vf`` supports multicast for resolving ARP requests.
 It is implemented as ``handle_l2multicast_packet()`` and called from
 ``classify_packet()`` for incoming multicast packets.
 
 .. code-block:: c
 
-  /* classify_packet() in classifier_mac.c */
-               /* L2 multicast(include broadcast) ? */
-               if (unlikely(is_multicast_ether_addr(&eth->d_addr))) {
-                       RTE_LOG(DEBUG, SPP_CLASSIFIER_MAC,
-                                       "multicast mac address.\n");
-                       handle_l2multicast_packet(rx_pkts[i],
-                                       classifier_info,
-                                       classified_data);
-                       continue;
-               }
+    /* classify_packet() in classifier_mac.c */
+
+    /* L2 multicast(include broadcast) ? */
+    if (unlikely(is_multicast_ether_addr(&eth->d_addr))) {
+            RTE_LOG(DEBUG, SPP_CLASSIFIER_MAC,
+                            "multicast mac address.\n");
+            handle_l2multicast_packet(rx_pkts[i],
+                            classifier_info,
+                            classified_data);
+            continue;
+    }
 
-For distributing multicast packet, it is cloned with
-``rte_mbuf_refcnt_update()``.
+Packets are cloned with ``rte_mbuf_refcnt_update()`` for distributing
+multicast packets.
 
 .. code-block:: c
 
     /* classifier_mac.c */
+
     /* handle L2 multicast(include broadcast) packet */
     static inline void
     handle_l2multicast_packet(struct rte_mbuf *pkt,
@@ -422,10 +249,11 @@ For distributing multicast packet, it is cloned with
             }
     }
 
+
 Two phase update for forwarding
 -------------------------------
 
-Updating netowrk configuration in ``spp_vf`` is done in a short period of
+Update of netowrk configuration in ``spp_vf`` is done in a short period of
 time, but not so short considering the time scale of packet forwarding.
 It might forward packets before the updating is completed possibly.
 To avoid such kind of situation, ``spp_vf`` has two phase update mechanism.
@@ -433,25 +261,25 @@ Status info is referred from forwarding process after the update is completed.
 
 .. code-block:: c
 
-        spp_flush(void)
-        {
-                int ret = SPP_RET_NG;
-                struct cancel_backup_info *backup_info = NULL;
+    int
+    flush_cmd(void)
+    {
+        int ret;
+        int *p_change_comp;
+        struct sppwk_comp_info *p_comp_info;
+        struct cancel_backup_info *backup_info;
 
-                spp_get_mng_data_addr(NULL, NULL, NULL,
-                                        NULL, NULL, NULL, &backup_info);
+        sppwk_get_mng_data(NULL, &p_comp_info, NULL, NULL, &p_change_comp,
+                &backup_info);
 
-                /* Initial setting of each interface. */
-                ret = flush_port();
-                        if (ret < SPP_RET_OK)
-                        return ret;
+        ret = update_port_info();
+        if (ret < SPP_RET_OK)
+            return ret;
 
-                /* Flush of core index. */
-                flush_core();
+        update_lcore_info();
 
-                /* Flush of component */
-                ret = flush_component();
+        ret = update_comp_info(p_comp_info, p_change_comp);
 
-                backup_mng_info(backup_info);
-                return ret;
-        }
+        backup_mng_info(backup_info);
+        return ret;
+    }
-- 
2.17.1



From yasufum.o@gmail.com Wed Jul 03 11:25:00 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PU1002OAO2CQ790@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Wed, 03 Jul 2019 11:25:24 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PU101212O2CUA00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 03 Jul 2019 11:25:24 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PU100UA1O2C6S50@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 03 Jul 2019 11:25:24 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf106.ddreams.local (Postfix) with ESMTP id A45237E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed,  3 Jul 2019 11:25:24 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id A22828E6063	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed,  3 Jul 2019 11:25:24 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 9FD818E6061	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 3 Jul 2019 11:25:24 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 33F128E6055	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed,  3 Jul 2019 11:25:23 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf106.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 3 Jul 2019 11:25:23 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x632PNqM025492;	Wed,
 3 Jul 2019 11:25:23 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x632PNaN025491;	Wed, 3 Jul 2019 11:25:23 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x632PMV7025487	for unknown; Wed,
 3 Jul 2019 11:25:22 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x632PMbL019645 for
 unknown; Wed, 3 Jul 2019 11:25:22 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x632PMR0019642; Wed,
 3 Jul 2019 11:25:22 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x632PMYx008889;	Wed,
 3 Jul 2019 11:25:22 +0900
Received: from imss01.silk.ntt-tx.co.jp
 (imss01.silk.ntt-tx.co.jp [10.107.0.126])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x632PMvW008885	for unknown; Wed, 3 Jul 2019 11:25:22 +0900
Received: from imss01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x632PMXY015590 for
 unknown; Wed, 3 Jul 2019 11:25:22 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x632PL1n015587 for
 unknown; Wed, 3 Jul 2019 11:25:21 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x632PFM0012214	for unknown; Wed,
 3 Jul 2019 11:25:21 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id B9CDA1BDF3;	Wed,  3 Jul 2019 04:25:14 +0200 (CEST)
Received: from mail-pf1-f181.google.com
 (mail-pf1-f181.google.com [209.85.210.181]) by dpdk.org (Postfix)
 with ESMTP id 6DC691B994 for <spp@dpdk.org>; Wed,
 3 Jul 2019 04:25:13 +0200 (CEST)
Received: by mail-pf1-f181.google.com with SMTP id 81so386854pfy.13 for
 <spp@dpdk.org>; Tue, 02 Jul 2019 19:25:13 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id o130sm416096pfg.171.2019.07.02.19.25.11
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Tue,
 02 Jul 2019 19:25:12 -0700 (PDT)
Date: Wed, 03 Jul 2019 11:25:00 +0900
From: yasufum.o@gmail.com
Subject: [spp 04472] [spp] [PATCH 2/3] docs: update implementation of spp_mirror
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190703022501.23738-3-yasufum.o@gmail.com>
In-reply-to: <20190703022501.23738-1-yasufum.o@gmail.com>
References: <20190703022501.23738-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04472
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=/+dqe3RJelfMicyCoMb1LBelhCFPw8goyxs5oE0tkEc=;
 b=BJWhVTd0apQPQONpZGqGrUlH4Cqe7OKXPS3P9CQNH6of+SWin1Kkeqj96xvLpX40ze
 s4kmAPMR4hN6X6jFHqLcEQgYA4TJdV3xQezzUpbv9DcxRV22d4lowwYv2uXlpCDOe+eN
 kCN2k8hW5+aC/AStDXvEiIDvUb25yPmokhRQHND0lXr7/56QLPUkKvipfwwzNDX3MmFI
 x6RlwB7tQz03l6MLSsWXyVi7iBq1VGmpKXuoprAZ1R8Z7iFmaQ++BKSmUM6E4r5gPqzv
 IJEUMyiKDz7Q7aC3Hi6QyxrTBD1FqvUbfWZl5BIqt7GAvMK9jkg11e4pJkmxRxDUudNh LxIg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=/+dqe3RJelfMicyCoMb1LBelhCFPw8goyxs5oE0tkEc=;
 b=U0NiXFtWT0ZKFkXRpEvQymFpzCpkcsmkcWDiP+TnPEuMY2Sbvk5nWpRda+5YPF8i+Q
 0fdex3t186I+0LNOJD28r5MZpWEO9P9teAxIqLAK9Zax9QiKCov9lX6Bh5nH8XhBuEHC
 LD51Bmfj3LOEbnzpHZK4rjSmwlY/XJ3VWl19I8TmalESn49OEpcbkgQm+067ggbYT/IO
 GWxkL89XNFknuFQ3EjVIIpRZvO7dKRoFuzubmQZbosDd9u9HkYLtowoATzJ/BYtmC2rV
 E/2+qg24OZhYFz/3LPmtcJWh8+JdqQfDdkwhBPioIVG8FiyfQACp7mKHugA9/m//ZhEq 7XJQ==
X-Gm-Message-State: APjAAAXWh4b1GcHHbVZZXJLOOx74Q+O13uvZU9xcBRhoYS5rwbZ0v204
 XEZuORLddaC14SQ7JWDVzu6cWCVO
X-Google-Smtp-Source:
 APXvYqxq3cxuflFBWOrzeiURsrJPZtgGfb0fjnMRLQh7zpGRHfcLadyfOZ0dfWrdmd0DNvabIOWFww==
X-Received: by 2002:a63:480e:: with SMTP id v14mr33204501pga.182.1562120712454;
 Tue, 02 Jul 2019 19:25:12 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 125
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This patch is to update description and examples of spp_mirror.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 docs/guides/design/impl/spp_mirror.rst | 85 ++++++++------------------
 1 file changed, 27 insertions(+), 58 deletions(-)

diff --git a/docs/guides/design/impl/spp_mirror.rst b/docs/guides/design/impl/spp_mirror.rst
index bb4548e..6233de9 100644
--- a/docs/guides/design/impl/spp_mirror.rst
+++ b/docs/guides/design/impl/spp_mirror.rst
@@ -6,81 +6,50 @@
 spp_mirror
 ==========
 
-Initializing
-------------
+This section describes implementation of ``spp_mirror``.
+It consists of master thread and several worker threads for duplicating
+packets.
 
-A main thread of ``spp_mirror`` initialize eal by ``rte_eal_init()``.
-Then each of worker threads is launched from ``rte_eal_remote_launch()``
-by giving a function ``slave_main()`` for forwarding.
-
-.. code-block:: c
-
-    /* spp_mirror.c */
-    int ret_dpdk = rte_eal_init(argc, argv);
-
-    /* Start worker threads of classifier and forwarder */
-    unsigned int lcore_id = 0;
-    RTE_LCORE_FOREACH_SLAVE(lcore_id) {
-            rte_eal_remote_launch(slave_main, NULL, lcore_id);
-    }
 
+Slave Main
+----------
 
-Main function of slave thread
------------------------------
-
-In ``slave_main()``, it calls ``mirror_proc()`` in which packet processing for
-duplicating is defined after finding a core on which running the duplicating.
+Main function of worker thread is defined as ``slave_main()`` in which
+for duplicating packets is ``mirror_proc()`` on each of lcores.
 
 .. code-block:: c
 
-	RTE_LOG(INFO, MIRROR, "Core[%d] Start.\n", lcore_id);
-	set_core_status(lcore_id, SPP_CORE_IDLE);
-
-	while ((status = spp_get_core_status(lcore_id)) !=
-			SPP_CORE_STOP_REQUEST) {
-		if (status != SPP_CORE_FORWARD)
-			continue;
-
-		if (spp_check_core_index(lcore_id)) {
-			/* Setting with the flush command trigger. */
-			info->ref_index = (info->upd_index+1) %
-					SPP_INFO_AREA_MAX;
-			core = get_core_info(lcore_id);
-		}
-
 		for (cnt = 0; cnt < core->num; cnt++) {
-			/*
-			 * mirror returns at once.
-			 * It is for processing multiple components.
-			 */
+
 			ret = mirror_proc(core->id[cnt]);
 			if (unlikely(ret != 0))
 				break;
 		}
-		if (unlikely(ret != 0)) {
-			RTE_LOG(ERR, MIRROR,
-				"Core[%d] Component Error. (id = %d)\n",
-					lcore_id, core->id[cnt]);
-			break;
-		}
-	}
 
-	set_core_status(lcore_id, SPP_CORE_STOP);
-	RTE_LOG(INFO, MIRROR, "Core[%d] End.\n", lcore_id);
 
-Packet mirroring
-----------------
+Mirroring Packets
+-----------------
 
-In ``mirror_proc()``, it receives packets from rx port.
+Worker thread receives and duplicate packets. There are two modes of copying
+packets, ``shallowcopy`` and ``deepcopy``.
+Deep copy is for duplicating whole of packet data, but less performance than
+shallow copy. Shallow copy duplicates only packet header and body is not shared
+among original packet and duplicated packet. So, changing packet data affects
+both of original and copied packet.
 
-.. code-block:: c
+You can configure using which of modes in Makefile. Default mode is
+``shallowcopy``. If you change the mode to ``deepcopy``, comment out this
+line of CFLAGS.
+
+.. code-block:: makefile
 
-        /* Receive packets */
-        nb_rx = spp_eth_rx_burst(rx->dpdk_port, 0, bufs, MAX_PKT_BURST);
+    # Default mode is shallow copy.
+    CFLAGS += -DSPP_MIRROR_SHALLOWCOPY
 
-Each of received packet is copied with ``rte_pktmbuf_clone()`` if you use
-``shallowcopy`` defined as default in Makefile.
-If you use ``deepcopy``, several mbuf objects are allocated for copying.
+This code is a part of ``mirror_proc()``. In this function,
+``rte_pktmbuf_clone()`` is just called if in shallow copy
+mode, or create a new packet with ``rte_pktmbuf_alloc()`` for duplicated
+packet if in deep copy mode.
 
 .. code-block:: c
 
-- 
2.17.1



From yasufum.o@gmail.com Wed Jul 03 11:25:01 2019
Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd104.ddreams.local
 (zssg-mailmd104.ddreams.local [10.160.123.99]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PU1002OYO2DQ790@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Wed, 03 Jul 2019 11:25:25 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd104.ddreams.local by
 zssg-mailmd104.ddreams.local (dDREAMS) id <0PU101236O2DM600@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 03 Jul 2019 11:25:25 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd104.ddreams.local
 (dDREAMS) with ESMTP id <0PU100UAVO2D6S50@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Wed,
 03 Jul 2019 11:25:25 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf101.ddreams.local (Postfix) with ESMTP id A1A857E6034	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed,  3 Jul 2019 11:25:25 +0900 (JST)
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 9D7E88E6056	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed,  3 Jul 2019 11:25:25 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 801758E605B	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 3 Jul 2019 11:25:25 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf101.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 43DA38E6054	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Wed,  3 Jul 2019 11:25:24 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf101.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Wed,
 3 Jul 2019 11:25:24 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x632POOV025510;	Wed,
 3 Jul 2019 11:25:24 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x632POSQ025509;	Wed, 3 Jul 2019 11:25:24 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x632PNrv025502	for unknown; Wed,
 3 Jul 2019 11:25:23 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x632PNsJ019685 for
 unknown; Wed, 3 Jul 2019 11:25:23 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x632PNkV019680; Wed,
 3 Jul 2019 11:25:23 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x632PNJG008922;	Wed,
 3 Jul 2019 11:25:23 +0900
Received: from imss01.silk.ntt-tx.co.jp
 (imss01.silk.ntt-tx.co.jp [10.107.0.126])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x632PNRn008917	for unknown; Wed, 3 Jul 2019 11:25:23 +0900
Received: from imss01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x632PNXQ015623 for
 unknown; Wed, 3 Jul 2019 11:25:23 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss01.silk.ntt-tx.co.jp (unknown) with ESMTP id x632PNYV015617 for
 unknown; Wed, 3 Jul 2019 11:25:23 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x632PGUq012228	for unknown; Wed,
 3 Jul 2019 11:25:22 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id D28791BDFB;	Wed,  3 Jul 2019 04:25:15 +0200 (CEST)
Received: from mail-pf1-f194.google.com
 (mail-pf1-f194.google.com [209.85.210.194]) by dpdk.org (Postfix)
 with ESMTP id D5EBC1BDF4 for <spp@dpdk.org>; Wed,
 3 Jul 2019 04:25:14 +0200 (CEST)
Received: by mail-pf1-f194.google.com with SMTP id q10so397788pff.9 for
 <spp@dpdk.org>; Tue, 02 Jul 2019 19:25:14 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id o130sm416096pfg.171.2019.07.02.19.25.12
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Tue,
 02 Jul 2019 19:25:13 -0700 (PDT)
Date: Wed, 03 Jul 2019 11:25:01 +0900
From: yasufum.o@gmail.com
Subject: [spp 04473] [spp] [PATCH 3/3] docs: update implementation of spp_pcap
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190703022501.23738-4-yasufum.o@gmail.com>
In-reply-to: <20190703022501.23738-1-yasufum.o@gmail.com>
References: <20190703022501.23738-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04473
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=/GBNxOfvp5FYAmTvAywWzGZFMxlLRtBi6WKEeu6ODN4=;
 b=szLwladrmUqfqFO2jLM+3AzrdiNgC1ltERhMBGeN9V7wi5ymRrf5yE2es7b6wQlNbR
 OZo7nuewZvylrRxkgfdkuWnsjFjenJXgfcpGV441mhvv42wokwxU6Ruj347jMDTRuPDH
 2bICoeFcQHEOEZ1f/PLDzi68Q24k1vBYEFmQxLdukPYG2JhKsksZ4yM/7GURPi3HjcTT
 ioNwTL40gGvCJ1qivaGGA6BUziDbcm+FACXq1veAdAGlXqZG8bTg1B8pSHxLLctU8nSj
 LnT2Y0RymSUj5X/g3+cCl0dalzKRr0UuFPpnUgZCTM20rUWQ9aky+0o2tNvU5GWAnrFB I7Sw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=/GBNxOfvp5FYAmTvAywWzGZFMxlLRtBi6WKEeu6ODN4=;
 b=E4ngNte0pumON+/ykqp7ssnjZDDpUleRg8/OHSj59TqsHcJWb7Dp3tyiHdtqra+3AH
 rsuSkYaBCSZ7EYu6jDMwCfW17VEFETxNrgEniUVbWERZTqOcmRlMeRafhOoNxKeo+Thl
 f2JXcO/bjn6o+uUG+i07KxV1Ma5iEox94GUs7bFOl7c8Pgb0+2W/0lHOEAud0mme6wLR
 Q5i4+mL6WKDy0G2KgeKmg8kIL07MK8jTsiwdj/0VwgNl4iczMUl7x3Dwhbrv1Vbzm5jw
 SdDy0wPGyJ7/HaQ/2ryPowLT+iHFnyKwfKcS4qbNfn//80bOiIpIxBJqg6ziMpir675R WIuA==
X-Gm-Message-State: APjAAAUPVxbU9QoqYLVPTPWfYzPlnyRQ0R+BagWp+B+CWjqr0A8OA5tq
 ba3Xfp3901uS1da6N2lQsqOB8Z2x
X-Google-Smtp-Source:
 APXvYqzQAr1Xb+c/oVfrrym9b3C5x1ldbsr5oJ97kjq7owJTrOANx1mLf2F/eApmVCZIPhQOmGRb2Q==
X-Received: by 2002:a17:90a:bb94:: with SMTP id
 v20mr9410866pjr.88.1562120713938; Tue, 02 Jul 2019 19:25:13 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 201
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This patch is to update description and examples of spp_pcap.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 docs/guides/design/impl/spp_pcap.rst | 156 ++++++++-------------------
 1 file changed, 45 insertions(+), 111 deletions(-)

diff --git a/docs/guides/design/impl/spp_pcap.rst b/docs/guides/design/impl/spp_pcap.rst
index 8c3f624..1f93d41 100644
--- a/docs/guides/design/impl/spp_pcap.rst
+++ b/docs/guides/design/impl/spp_pcap.rst
@@ -6,139 +6,73 @@
 spp_pcap
 ========
 
-The following sections provide some explanation of the code.
+This section describes implementation of ``spp_pcap``.
 
-Initializing
-------------
 
-A manager thread of ``spp_pcap`` initialize eal by ``rte_eal_init()``.
-Then each of component threads are launched by
-``rte_eal_remote_launch()``.
+Slave Main
+----------
 
+In ``slave_main()``, it calls ``pcap_proc_receive()`` if thread type is
+receiver, or ``pcap_proc_write()`` if the type is writer.
 
 .. code-block:: c
 
     /* spp_pcap.c */
-    int ret_dpdk = rte_eal_init(argc, argv);
 
-    /* Start worker threads of classifier and forwarder */
-    RTE_LCORE_FOREACH_SLAVE(lcore_id) {
-        g_core_info[lcore_id].core[0].num = 1;
-        g_pcap_info[lcore_id].thread_no = thread_no++;
-        rte_eal_remote_launch(slave_main, NULL, lcore_id);
-    }
+    while ((status = spp_get_core_status(lcore_id)) !=
+                    SPP_CORE_STOP_REQUEST) {
 
+            if (pcap_info->type == TYPE_RECIVE)
+                    ret = pcap_proc_receive(lcore_id);
+            else
+                    ret = pcap_proc_write(lcore_id);
+            }
+    }
 
-Main function of slave thread
------------------------------
+Receiving Pakcets
+-----------------
 
-``slave_main()`` is called from ``rte_eal_remote_launch()``.
-It call ``pcap_proc_receive()`` or ``pcap_proc_write()``
-depending on the core assignment.
-``pcap_proc_write();`` provides function for ``receive``,
-and ``pcap_proc_write();`` provides function for ``write``.
+``pcap_proc_receive()`` is for receiving packets with ``rte_eth_rx_burst``
+and sending the packets to the writer thread via ring memory by using
+``rte_ring_enqueue_bulk()``.
 
 .. code-block:: c
 
     /* spp_pcap.c */
-        int ret = SPP_RET_OK;
-        unsigned int lcore_id = rte_lcore_id();
-        enum spp_core_status status = SPP_CORE_STOP;
-        struct pcap_mng_info *pcap_info = &g_pcap_info[lcore_id];
-
-        if (pcap_info->thread_no == 0) {
-                RTE_LOG(INFO, PCAP, "Core[%d] Start recive.\n", lcore_id);
-                pcap_info->type = TYPE_RECIVE;
-        } else {
-                RTE_LOG(INFO, PCAP, "Core[%d] Start write(%d).\n",
-                                        lcore_id, pcap_info->thread_no);
-                pcap_info->type = TYPE_WRITE;
-        }
-        RTE_LOG(INFO, PCAP, "Core[%d] Start.\n", lcore_id);
-        set_core_status(lcore_id, SPP_CORE_IDLE);
-
-        while ((status = spp_get_core_status(lcore_id)) !=
-                        SPP_CORE_STOP_REQUEST) {
-
-                if (pcap_info->type == TYPE_RECIVE)
-                        ret = pcap_proc_receive(lcore_id);
-                else
-                        ret = pcap_proc_write(lcore_id);
-                if (unlikely(ret != SPP_RET_OK)) {
-                        RTE_LOG(ERR, PCAP, "Core[%d] Thread Error.\n",
-                                                                lcore_id);
-                        break;
-                }
-        }
-
-Receive Pakcet
---------------
-
-``pcap_proc_receive()`` is the function to realize
-receiving incoming packets. This function is called in the while loop and
-receive packets. Everytime it receves packet via ``spp_eth_rx_burst()``, then
-it enqueue those packet into the ring using ``rte_ring_enqueue_bulk()``.
-Those packets are trnsfered to ``write`` cores via the ring.
-
-
-.. code-block:: c
 
-        /* spp_pcap.c */
-        /* Receive packets */
-        rx = &g_pcap_option.port_cap;
+    rx = &g_pcap_option.port_cap;
+	nb_rx = rte_eth_rx_burst(rx->ethdev_port_id, 0, bufs, MAX_PCAP_BURST);
 
-        nb_rx = spp_eth_rx_burst(rx->dpdk_port, 0, bufs, MAX_PKT_BURST);
-        if (unlikely(nb_rx == 0))
-                return SPP_RET_OK;
+	/* Forward to ring for writer thread */
+	nb_tx = rte_ring_enqueue_burst(write_ring, (void *)bufs, nb_rx, NULL);
 
-        /* Write ring packets */
 
-        nb_tx = rte_ring_enqueue_bulk(write_ring, (void *)bufs, nb_rx, NULL);
-
-        /* Discard remained packets to release mbuf */
-
-        if (unlikely(nb_tx < nb_rx)) {
-                for (buf = nb_tx; buf < nb_rx; buf++)
-                        rte_pktmbuf_free(bufs[buf]);
-        }
-
-        return SPP_RET_OK;
-
-
-Write Packet
-------------
+Writing Packet
+--------------
 
-In ``pcap_proc_write()``, it dequeue packets from ring.Then it writes to
-storage after data compression using LZ4 libraries. ``compress_file_packet``
-is the function to write packet with LZ4. LZ4 is lossless compression
-algorithm, providing compression speed > 500 MB/s per core, scalable with
-multi-cores CPU. It features an extremely fast decoder, with speed in multiple
-GB/s per core, typically reaching RAM speed limits on multi-core systems.
-Please see details in
+``pcap_proc_write()`` is for capturing packets to a file. The captured file
+is compressed with
 `LZ4
 <https://github.com/lz4/lz4>`_
+which is a lossless compression algorithm and providing compression
+speed > 500 MB/s per core.
 
 .. code-block:: c
 
-        /* Read packets */
-        nb_rx =  rte_ring_dequeue_bulk(read_ring, (void *)bufs, MAX_PKT_BURST,
-                                                                        NULL);
-        if (unlikely(nb_rx == 0))
-                return SPP_RET_OK;
-
-        for (buf = 0; buf < nb_rx; buf++) {
-                mbuf = bufs[buf];
-                rte_prefetch0(rte_pktmbuf_mtod(mbuf, void *));
-                if (compress_file_packet(&g_pcap_info[lcore_id], mbuf)
-                                                        != SPP_RET_OK) {
-                        RTE_LOG(ERR, PCAP, "capture file write error: "
-                                "%d (%s)\n", errno, strerror(errno));
-                        ret = SPP_RET_NG;
-                        info->status = SPP_CAPTURE_IDLE;
-                        compress_file_operation(info, CLOSE_MODE);
-                        break;
-                }
-        }
-        for (buf = nb_rx; buf < nb_rx; buf++)
-                rte_pktmbuf_free(bufs[buf]);
-        return ret;
+    nb_rx =  rte_ring_dequeue_bulk(read_ring, (void *)bufs, MAX_PKT_BURST,
+                                                                    NULL);
+    for (buf = 0; buf < nb_rx; buf++) {
+            mbuf = bufs[buf];
+            rte_prefetch0(rte_pktmbuf_mtod(mbuf, void *));
+            if (compress_file_packet(&g_pcap_info[lcore_id], mbuf)
+                                                    != SPP_RET_OK) {
+                    RTE_LOG(ERR, PCAP, "capture file write error: "
+                            "%d (%s)\n", errno, strerror(errno));
+                    ret = SPP_RET_NG;
+                    info->status = SPP_CAPTURE_IDLE;
+                    compress_file_operation(info, CLOSE_MODE);
+                    break;
+            }
+    }
+    for (buf = nb_rx; buf < nb_rx; buf++)
+            rte_pktmbuf_free(bufs[buf]);
-- 
2.17.1




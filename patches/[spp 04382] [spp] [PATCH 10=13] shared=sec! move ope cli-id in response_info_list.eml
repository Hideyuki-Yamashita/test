Return-path: <fw-yama-hd@pomail01.silk.ntt-tx.co.jp>
Received: from zssg-mailmd101.ddreams.local
 (zssg-mailmd101.ddreams.local [10.160.123.96]) by zssg-mailms320.ddreams.local
 (NTT DoCoMo Mail System) with ESMTP id <0PTL00DAQ65USMD0@NTTDoCoMo.co.jp> for
 yamashita.hideyuki@ntt-tx.co.jp; Mon, 24 Jun 2019 13:37:06 +0900 (JST)
Original-recipient: rfc822;yamashita.hideyuki@ntt-tx.co.jp
Received: from smtp_saver-daemon.zssg-mailmd101.ddreams.local by
 zssg-mailmd101.ddreams.local (dDREAMS) id <0PTL00Z0E65UTJ00@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:37:06 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local
 (zssg-mailmf900.ddreams.local [10.160.172.84]) by zssg-mailmd101.ddreams.local
 (dDREAMS) with ESMTP id <0PTL00KFY65UA380@dDREAMS> for
 yamashita.hideyuki@ntt-tx.co.jp (ORCPT yamashita.hideyuki@ntt-tx.co.jp); Mon,
 24 Jun 2019 13:37:06 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by zssg-mailmf106.ddreams.local (Postfix) with ESMTP id 66C527E6032	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:37:06 +0900 (JST)
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id 6368B8E605F	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:37:06 +0900 (JST)
Received: from localhost (unknown [127.0.0.1])	by IMSVA (Postfix)
 with SMTP id 56ACA8E6042	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:37:06 +0900 (JST)
X-IMSS-HAND-OFF-DIRECTIVE: localhost:10026
Received: from zssg-mailmf106.ddreams.local (unknown [127.0.0.1])
	by IMSVA (Postfix) with ESMTP id E2E7C8E6057	for
 <yamashita.hideyuki@ntt-tx.co.jp>; Mon, 24 Jun 2019 13:37:04 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (unknown [10.160.183.139])
	by zssg-mailmf106.ddreams.local (Postfix)
 with ESMTPS	for <yamashita.hideyuki@ntt-tx.co.jp>; Mon,
 24 Jun 2019 13:37:04 +0900 (JST)
Received: from pomail01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by pomail01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b4E0008314;	Mon,
 24 Jun 2019 13:37:04 +0900
Received: (from yama-hd@localhost)	by pomail01.silk.ntt-tx.co.jp (unknown)
 id x5O4b4VZ008313;	Mon, 24 Jun 2019 13:37:04 +0900
X-Authentication-warning: pomail01.silk.ntt-tx.co.jp: yama-hd set sender to
 fw-yama-hd@pomail01.silk.ntt-tx.co.jp using -f
Received: from imss04.silk.ntt-tx.co.jp
 (imss04.silk.ntt-tx.co.jp [10.107.0.39])	by pomail01.silk.ntt-tx.co.jp
 (unknown) with ESMTP id x5O4b4j1008310	for unknown; Mon,
 24 Jun 2019 13:37:04 +0900
Received: from imss04.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b4Rh016668 for
 unknown; Mon, 24 Jun 2019 13:37:04 +0900
Received: from ml01.silk.ntt-tx.co.jp (ml01.silk.ntt-tx.co.jp [10.107.0.230])
 by imss04.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b4Ml016665; Mon,
 24 Jun 2019 13:37:04 +0900
Received: from ml01.silk.ntt-tx.co.jp (localhost [127.0.0.1])
	by ml01.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b4xC030582;	Mon,
 24 Jun 2019 13:37:04 +0900
Received: from imss02.silk.ntt-tx.co.jp
 (imss02.silk.ntt-tx.co.jp [10.107.0.127])	by ml01.silk.ntt-tx.co.jp (unknown)
 with ESMTP id x5O4b3X5030578	for unknown; Mon, 24 Jun 2019 13:37:03 +0900
Received: from imss02.silk.ntt-tx.co.jp (localhost [127.0.0.1])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b3oj013649 for
 unknown; Mon, 24 Jun 2019 13:37:03 +0900
Received: from mail01.ics.ntt-tx.co.jp (mail01.ics.ntt-tx.co.jp [10.254.2.67])
 by imss02.silk.ntt-tx.co.jp (unknown) with ESMTP id x5O4b3hV013642 for
 unknown; Mon, 24 Jun 2019 13:37:03 +0900
Received: from dpdk.org (dpdk.org [92.243.14.124])	by mail01.ics.ntt-tx.co.jp
 (unknown) with SMTP id x5O4avDN027668	for unknown; Mon,
 24 Jun 2019 13:37:02 +0900
Received: from [92.243.14.124] (localhost [127.0.0.1])	by dpdk.org (Postfix)
 with ESMTP id AC9431BF5A;	Mon, 24 Jun 2019 06:36:56 +0200 (CEST)
Received: from mail-pg1-f195.google.com
 (mail-pg1-f195.google.com [209.85.215.195]) by dpdk.org (Postfix)
 with ESMTP id 4CE311BF2C for <spp@dpdk.org>; Mon,
 24 Jun 2019 06:36:55 +0200 (CEST)
Received: by mail-pg1-f195.google.com with SMTP id s27so6415629pgl.2 for
 <spp@dpdk.org>; Sun, 23 Jun 2019 21:36:55 -0700 (PDT)
Received: from localhost.localdomain ([192.47.164.146])
 by smtp.gmail.com with ESMTPSA id c10sm9005178pjq.14.2019.06.23.21.36.53
 (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128); Sun,
 23 Jun 2019 21:36:54 -0700 (PDT)
Date: Mon, 24 Jun 2019 13:36:10 +0900
From: yasufum.o@gmail.com
Subject: [spp 04382] [spp] [PATCH 10/13] shared/sec: move ope cli-id in
	response_info_list
Sender: spp <spp-bounces@dpdk.org>
To: spp@dpdk.org, ferruh.yigit@intel.com, yasufum.o@gmail.com
Message-id: <20190624043613.19271-11-yasufum.o@gmail.com>
In-reply-to: <20190624043613.19271-1-yasufum.o@gmail.com>
References: <20190624043613.19271-1-yasufum.o@gmail.com>
X-ML-Name: unknown
X-Mail-Count: 04382
X-MLServer: unknown
X-ML-Info: mailing list service
X-Mailer: git-send-email 2.17.1
Authentication-results: mail01.ics.ntt-tx.co.jp; spf=pass
 smtp.mailfrom=spp-bounces@dpdk.org
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20161025;
 h=from:to:subject:date:message-id:in-reply-to:references;
 bh=VGJNAWTkSfVsUKkc1g4mQumERqpnwm3FOeSnJwFbkdU=;
 b=JB5hnjDIVCm5ZSKTC0IPlmQjD5P7IIe7hBi0qCPLs/LjQvf5kspRd3KubsypAmqVDi
 o/oDtvn8wUvOPbDvtClTSZwTEH2BOOrHD1r9POA2Zps3rDVY3h58UjBCK20hMX5RIkYi
 wklrCdNN9ObJFCJCFLW2w/5vHOfr1zcv9tVXxNLqMwz3/Yka5+/FK9mdw8+IoNGjlLOc
 39/+f3YwlKy6Grb9DvBxeDzOtyD7pB41tvr67Wx5a7nD+g0a0z0EF1K92VUv2p7ILCGL
 WYEiWzoOqdGURIuHgJbUNwOTCE0GkqItzd6UNHczbxEJQJVEaIFfqSllEeIOXhdOd08p bNnQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=1e100.net;
 s=20161025; h=x-gm-message-state:from:to:subject:date:message-id:in-reply-to
 :references; bh=VGJNAWTkSfVsUKkc1g4mQumERqpnwm3FOeSnJwFbkdU=;
 b=pVTdOAaGZChiTGdSXIkTg4YEuujj6j+CJhsLro+0tpsyyJ5rj2mqglO+H0vnbIapMJ
 uLC3GvRfwNn2hZQRqWnghigsAFI/XnE16JC3AqyjfrwBCrNW9+8ioD5CMN5MaP5327dp
 V/25OS03/fzzBTtaZXAckdDfSBXeZZn3bLR1Vxkoli3SIoITWVFlmYxALYaeIQ1xor/q
 hXf97Lyw6sA7vZwDYgYH1GYKJCrHwKZAFwIcAUPkvDXBRRZw5B/hoh3BphfAnppaDMow
 6tXi9Sp0ShppwNwjpyqok2nDXpc1jM/uWOMIps5MZTUQOEY6cD1sWdX4bj0TmO80Os3i /B5w==
X-Gm-Message-State: APjAAAXshUeNnqaK82Fb0P3UyOHlvshPgqSNnhTQzIFdNvgDK6pN3AZz
 ZgYbZhRpaGnFW+483pIHd/pnAPUF
X-Google-Smtp-Source:
 APXvYqy0B9ihML5A/Pn7NQYLV7JGD0z56Wv9+OpSPYUMJW2mTy25KiEaQWqx071TK6EU19jKOfc4fA==
X-Received: by 2002:a17:90a:bf08:: with SMTP id
 c8mr22353410pjs.75.1561351014431; Sun, 23 Jun 2019 21:36:54 -0700 (PDT)
X-BeenThere: spp@dpdk.org
X-Mailman-Version: 2.1.15
List-Id: Soft Patch Panel <spp.dpdk.org>
List-Unsubscribe: <https://mails.dpdk.org/options/spp>,
 <mailto:spp-request@dpdk.org?subject=unsubscribe>
List-Archive: <http://mails.dpdk.org/archives/spp/>
List-Post: <mailto:spp@dpdk.org>
List-Help: <mailto:spp-request@dpdk.org?subject=help>
List-Subscribe: <https://mails.dpdk.org/listinfo/spp>,
 <mailto:spp-request@dpdk.org?subject=subscribe>
X-TM-AS-MML: No
Precedence: bulk
Lines: 176
X-TM-AS-GCONF: 00
X-MD-STAMP: ON

From: Yasufumi Ogawa <yasufum.o@gmail.com>

This update is to move operation functions `add_client_id` and
`add_interface` which is defined in `cmd_runner.c` to
`cmd_res_formatter.c`.

Signed-off-by: Yasufumi Ogawa <yasufum.o@gmail.com>
---
 .../spp_worker_th/cmd_res_formatter.c         | 57 +++++++++++++++++++
 .../spp_worker_th/cmd_res_formatter.h         | 11 ++++
 .../secondary/spp_worker_th/cmd_runner.c      | 52 -----------------
 3 files changed, 68 insertions(+), 52 deletions(-)

diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
index d838a18..3476580 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.c
@@ -597,6 +597,63 @@ spp_iterate_core_info(struct spp_iterate_core_params *params)
 	return SPP_RET_OK;
 }
 
+/* TODO(yasufum) move to another file for util funcs. */
+/* Get client ID from global command params. */
+static int
+wk_get_client_id(void)
+{
+	struct startup_param *params;
+	sppwk_get_mng_data(&params, NULL, NULL, NULL, NULL, NULL, NULL);
+	return params->client_id;
+}
+
+/**
+ * Operator functions start with prefix `add_` defined in `response_info_list`
+ * of struct `cmd_response` which are for making each of parts of command
+ * response.
+ */
+/* Add entry of client ID to a response in JSON. */
+int
+add_client_id(const char *name, char **output,
+		void *tmp __attribute__ ((unused)))
+{
+	return append_json_int_value(output, name, wk_get_client_id());
+}
+
+/* Add entry of port to a response in JSON such as "phy:0". */
+int
+add_interface(const char *name, char **output,
+		void *tmp __attribute__ ((unused)))
+{
+	int ret = SPP_RET_NG;
+	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
+	if (unlikely(tmp_buff == NULL)) {
+		RTE_LOG(ERR, WK_CMD_RES_FMT,
+				/* TODO(yasufum) refactor no meaning err msg */
+				"allocate error. (name = %s)\n",
+				name);
+		return SPP_RET_NG;
+	}
+
+	if (strcmp(name, SPP_IFTYPE_NIC_STR) == 0)
+		ret = append_interface_array(&tmp_buff, PHY);
+
+	else if (strcmp(name, SPP_IFTYPE_VHOST_STR) == 0)
+		ret = append_interface_array(&tmp_buff, VHOST);
+
+	else if (strcmp(name, SPP_IFTYPE_RING_STR) == 0)
+		ret = append_interface_array(&tmp_buff, RING);
+
+	if (unlikely(ret < SPP_RET_OK)) {
+		spp_strbuf_free(tmp_buff);
+		return SPP_RET_NG;
+	}
+
+	ret = append_json_array_brackets(output, name, tmp_buff);
+	spp_strbuf_free(tmp_buff);
+	return ret;
+}
+
 /* Add entry of master lcore to a response in JSON. */
 int
 add_master_lcore(const char *name, char **output,
diff --git a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
index 9c77763..bc0109c 100644
--- a/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
+++ b/src/shared/secondary/spp_worker_th/cmd_res_formatter.h
@@ -72,6 +72,17 @@ int append_response_list_value(char **output, struct cmd_response *responses,
 int append_command_results_value(const char *name, char **output,
 		int num, struct cmd_result *results);
 
+/**
+ * Operator functions start with prefix `add_` defined in `response_info_list`
+ * of struct `cmd_response` which are for making each of parts of command
+ * response.
+ */
+int add_client_id(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+
+int add_interface(const char *name, char **output,
+		void *tmp __attribute__ ((unused)));
+
 int add_master_lcore(const char *name, char **output,
 		void *tmp __attribute__ ((unused)));
 
diff --git a/src/shared/secondary/spp_worker_th/cmd_runner.c b/src/shared/secondary/spp_worker_th/cmd_runner.c
index a6894fc..007d62e 100644
--- a/src/shared/secondary/spp_worker_th/cmd_runner.c
+++ b/src/shared/secondary/spp_worker_th/cmd_runner.c
@@ -29,16 +29,6 @@ enum cmd_res_code {
 	CMD_INVALID,
 };
 
-/* TODO(yasufum) move to another file for util funcs. */
-/* Get client ID from global command params. */
-static int
-sppwk_get_client_id(void)
-{
-	struct startup_param *params;
-	sppwk_get_mng_data(&params, NULL, NULL, NULL, NULL, NULL, NULL);
-	return params->client_id;
-}
-
 /* Update classifier table with given action, add or del. */
 static int
 update_cls_table(enum sppwk_action wk_action,
@@ -582,48 +572,6 @@ prepare_parse_err_msg(struct cmd_result *results,
 	}
 }
 
-/* Add entry of client ID to a response in JSON. */
-static int
-add_client_id(const char *name, char **output,
-		void *tmp __attribute__ ((unused)))
-{
-	return append_json_int_value(output, name, sppwk_get_client_id());
-}
-
-/* Add entry of port to a response in JSON such as "phy:0". */
-static int
-add_interface(const char *name, char **output,
-		void *tmp __attribute__ ((unused)))
-{
-	int ret = SPP_RET_NG;
-	char *tmp_buff = spp_strbuf_allocate(CMD_RES_BUF_INIT_SIZE);
-	if (unlikely(tmp_buff == NULL)) {
-		RTE_LOG(ERR, WK_CMD_RUNNER,
-				/* TODO(yasufum) refactor no meaning err msg */
-				"allocate error. (name = %s)\n",
-				name);
-		return SPP_RET_NG;
-	}
-
-	if (strcmp(name, SPP_IFTYPE_NIC_STR) == 0)
-		ret = append_interface_array(&tmp_buff, PHY);
-
-	else if (strcmp(name, SPP_IFTYPE_VHOST_STR) == 0)
-		ret = append_interface_array(&tmp_buff, VHOST);
-
-	else if (strcmp(name, SPP_IFTYPE_RING_STR) == 0)
-		ret = append_interface_array(&tmp_buff, RING);
-
-	if (unlikely(ret < SPP_RET_OK)) {
-		spp_strbuf_free(tmp_buff);
-		return SPP_RET_NG;
-	}
-
-	ret = append_json_array_brackets(output, name, tmp_buff);
-	spp_strbuf_free(tmp_buff);
-	return ret;
-}
-
 #ifdef SPP_VF_MODULE
 /**
  * Add entries of classifier table in JSON. Before iterating the entries,
-- 
2.17.1


